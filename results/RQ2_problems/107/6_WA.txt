import java.io.PrintWriter;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc    = new Scanner(System.in);
        long a        = sc.nextLong();
        long b        = sc.nextLong();
        long lcm      = (a * b) / gcd(a, b); // calculate lcm
        int count     = 0;
        if (a != b) { // if a not equal to b
            if (a > b) { // if a is greater than b
                while (a > lcm && b > lcm) { // reduce a and b to less than lcm
                    a -= lcm;
                    b -= lcm;
                    count++;
                }
                count += (a + b) / lcm; // add the remaining steps to lcm
            } else { // if b is greater than a
                while (a > lcm && b > lcm) { // reduce a and b to less than lcm
                    a -= lcm;
                    b -= lcm;
                    count++;
                }
                count += (a + b) / lcm; // add the remaining steps to lcm
            }
        }
        System.out.println(count);
    }

    // recursive function to calculate gcd
    public static long gcd(long a, long b) {
        if (b == 0) {
            return a;
        }
        return gcd(b, a % b);
    }
}

input: 9 737738327422964222

expect: 81970925269218254

actual: 0

