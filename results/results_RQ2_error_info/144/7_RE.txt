import java.io.PrintWriter;
import java.util.HashSet;
import java.util.PriorityQueue;
import java.util.Scanner;
import java.util.Set;

public class Main {

	public static void main(String[] args) {
		
		try(Scanner sc = new Scanner(System.in)){
			
			PrintWriter out = new PrintWriter(System.out);
			StringBuilder sb = new StringBuilder();

			int n = sc.nextInt();
			int k = sc.nextInt();
			long[] a = new long[n];

			Set<Long> set = new HashSet<>();
			PriorityQueue<Long> que = new PriorityQueue<>();

			for(int i = 0; i < n; i++) {
				a[i] = sc.nextLong();
				set.add(a[i]);
				que.add(a[i]);
			}

			long ans = 0;
			for(int i = 0; i < k; i++) {
				ans = que.poll();
				
				for(int j = 0; j < n; j++) {
					if(ans + a[j] > Integer.MAX_VALUE) break; // check for overflow
					if(set.contains(ans + a[j])) continue;
					set.add(ans + a[j]);
					que.add(ans + a[j]);
				}
			}

			sb.append(ans);
			out.println(sb.toString());
			out.flush();
		}
	}
}

input: 10 200000
554711317 806584789 280018632 62735624 328505817 16801479 685959884 161803065 709816353 611785786

expect: 2271400318

