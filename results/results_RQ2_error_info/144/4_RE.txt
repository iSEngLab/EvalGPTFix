import java.io.PrintWriter;
import java.util.Arrays;
import java.util.HashSet;
import java.util.PriorityQueue;
import java.util.Scanner;
import java.util.Set;

public class Main {

	public static void main(String[] args) {

		try (Scanner sc = new Scanner(System.in);) {

			PrintWriter out = new PrintWriter(System.out);
			StringBuilder sb = new StringBuilder();

			int n = Integer.parseInt(sc.next());
			int k = Integer.parseInt(sc.next());
			long[] a = new long[n];

			Set<Long> set = new HashSet<Long>();
			PriorityQueue<Long> que = new PriorityQueue<Long>();

			for (int i = 0; i < n; i++) {
				a[i] = Long.parseLong(sc.next());
				set.add(a[i]);
				que.add(a[i]);
			}

			long ans = 0;
			Boolean[] used = new Boolean[n];
			Arrays.fill(used, false);
			for (int i = 0; i < k; i++) {
				ans = que.poll();

				for (int j = 0; j < n; j++) {
					if (!used[j]) {
						set.add(ans + a[j]);
						que.add(ans + a[j]);
						used[j] = true;
					}
					else {
						if (ans + a[j] > que.peek())
							break;
					}
				}
			}

			sb.append(ans);
			out.println(sb.toString());
			out.flush();

		}

	}

}

input: 10 200000
554711317 806584789 280018632 62735624 328505817 16801479 685959884 161803065 709816353 611785786

expect: 2271400318

