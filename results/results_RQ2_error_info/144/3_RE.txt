import java.io.PrintWriter;
import java.util.HashSet;
import java.util.PriorityQueue;
import java.util.Scanner;
import java.util.Set;

public class Main {

	public static void main(String[] args) {

		try (Scanner sc = new Scanner(System.in);) {

			PrintWriter out = new PrintWriter(System.out);
			StringBuilder sb = new StringBuilder();

			int n = sc.nextInt();
			int k = sc.nextInt();
			long[] a = new long[n];

			Set<Long> set = new HashSet<Long>();
			PriorityQueue<Long> que = new PriorityQueue<Long>();

			for (int i = 0; i < n; i++) {
				a[i] = sc.nextLong();
				if (i == 0) {
					que.add(a[i]);
					set.add(a[i]);
				} else {
					for (int j = 0; j < i; j++) {
						long sum = a[i] + a[j];
						if (set.contains(sum)) {
							continue;
						}
						set.add(sum);
						que.add(sum);
					}
				}
			}

			long ans = 0;
			for (int i = 0; i < k; i++) {
				ans = que.poll();
			}

			sb.append(ans);
			out.println(sb.toString());
			out.flush();

		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}

input: 10 200000
554711317 806584789 280018632 62735624 328505817 16801479 685959884 161803065 709816353 611785786

expect: 2271400318

