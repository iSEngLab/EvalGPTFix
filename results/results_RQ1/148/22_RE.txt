import java.util.Arrays;
import java.util.HashSet;
import java.util.PriorityQueue;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        PriorityQueue<Long> q = new PriorityQueue<>();
        HashSet<Long> hashSet = new HashSet<>();
        long[] a = new long[n];
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextLong();
            q.offer(a[i]);
            hashSet.add(a[i]);
        }

        long result = 0;

        if (k <= n) {
            for (int i = 0; i < k; i++) {
                if (q.isEmpty()) {
                    break;
                }
                result = q.poll();
                for (int j = 0; j < n; j++) {
                    long temp = result + a[j];
                    if (hashSet.contains(temp)) {
                        continue;
                    } else {
                        q.offer(temp);
                        hashSet.add(temp);
                    }
                }
            }
        } else {
            // Handle case when k > n
            Arrays.sort(a);
            for (int i = 0; i < n; i++) {
                for (int j = i + 1; j < n; j++) {
                    if (hashSet.contains(a[i] + a[j])) {
                        continue;
                    } else {
                        q.offer(a[i] + a[j]);
                        hashSet.add(a[i] + a[j]);
                    }
                }
            }
            for (int i = 0; i < k - n + 1; i++) {
                result = q.poll();
            }
        }
        System.out.println(result);

    }
}

input: 10 200000
554711317 806584789 280018632 62735624 328505817 16801479 685959884 161803065 709816353 611785786

expect: 2271400318

