import java.io.PrintWriter;
import java.util.HashSet;
import java.util.PriorityQueue;
import java.util.Scanner;
import java.util.Set;

public class Main {

	public static void main(String[] args) {
		
		try(Scanner sc = new Scanner(System.in);){
			
			PrintWriter out = new PrintWriter(System.out);
			StringBuilder sb = new StringBuilder();
			
			// Fix: Increased size of n and k from 1 to 100001
			int n = sc.nextInt(), k = sc.nextInt(), INF = 1000000000;
			int[] h = new int[n + 1];
			for(int i = 1; i <= n; i++)
				h[i] = sc.nextInt();
			
			// set first n f values as infinity
			int[] f = new int[100001];
			for(int i = 1; i <= 100000; i++)
				f[i] = INF;
			
			f[1] = 0;
			for(int i = 2; i <= n; i++) {
				for(int j = Math.max(1, i - k); j <= i - 1; j++) {
					// Fix: Converted long type to int
					f[i] = Math.min(f[i], f[j] + Math.abs(h[i] - h[j]));
				}
			}
			
			sb.append(f[n]);
			out.println(sb.toString());
			out.flush();
			
		}

	}

}

input: 10 200000
554711317 806584789 280018632 62735624 328505817 16801479 685959884 161803065 709816353 611785786

expect: 2271400318

actual: 57074469

