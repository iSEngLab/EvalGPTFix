import java.util.Arrays;
import java.util.HashSet;
import java.util.PriorityQueue;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        PriorityQueue<Long> q = new PriorityQueue<>();
        HashSet<Long> hashSet = new HashSet<>();
        long[] a = new long[n];
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextLong();
            q.offer(a[i]);
            hashSet.add(a[i]);
        }

        long result = 0;

        for (int i = 0; i < k; i++) {
            if (q.isEmpty()) {
                break;
            }
            result = q.poll();
            for (int j = 0; j < n; j++) {
                for (int l = j + 1; l < n; l++) { //fix
                    long temp = a[j] + a[l];
                    if (hashSet.contains(result + temp)) {
                        continue;
                    } else {
                        q.offer(result + temp);
                        hashSet.add(result + temp);
                    }
                }
            }
        }
        System.out.println(result);

    }
}

input: 10 200000
554711317 806584789 280018632 62735624 328505817 16801479 685959884 161803065 709816353 611785786

expect: 2271400318

actual: 3065294404

