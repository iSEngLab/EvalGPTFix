monk ,abc297/G,Java,"public class Main {
    public static void main(String[] args) {
        int n, l, r, p, xr = 0;
        Scanner scanner = new Scanner(System.in);
        n = scanner.nextInt();
        l = scanner.nextInt();
        r = scanner.nextInt();
        for (int i = 0; i < n; i++) {
            p = scanner.nextInt();
            xr ^= (p % (l + r)) / l;
        }
        System.out.println((xr > 0) ? ""First"" : ""Second"");
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        int n, l, r, p, xr = 0;
        Scanner scanner = new Scanner(System.in);
        n = scanner.nextInt();
        l = scanner.nextInt();
        r = scanner.nextInt();
        for (int i = 0; i < n; i++) {
            p = scanner.nextInt();
            xr ^= (p % (l + r)) / l;
        }
        System.out.println((xr > 0) ? ""First"" : ""Second"");
    }
}
",CE
hiromi_ayase ,abc297/G,Java,"import java.util.*;

@SuppressWarnings(""unused"")
public class Main {

  private static void solve() {
    int n = ni();
    int l = ni();
    int r = ni();
    int[] a = na(n);

    int g = 0;
    for (int v : a) {
      g ^= g(v, l, r);
    }
    if (g == 0) {
      System.out.println(""Second"");
    } else {
      System.out.println(""First"");
    }
  }


  private static int g(int v, int l, int r) {
    int x = v % (l + r);
    return Math.max(0, x - l + 1);
  }

  public static void main(String[] args) {
    new Thread(null, new Runnable() {
      @Override
      public void run() {
        long start = System.currentTimeMillis();
        String debug = args.length > 0 ? args[0] : null;
        if (debug != null) {
          try {
            is = java.nio.file.Files.newInputStream(java.nio.file.Paths.get(debug));
          } catch (Exception e) {
            throw new RuntimeException(e);
          }
        }
        reader = new java.io.BufferedReader(new java.io.InputStreamReader(is), 32768);
        solve();
        out.flush();
        tr((System.currentTimeMillis() - start) + ""ms"");
      }
    }, """", 64000000).start();
  }

  private static java.io.InputStream is = System.in;
  private static java.io.PrintWriter out = new java.io.PrintWriter(System.out);
  private static java.util.StringTokenizer tokenizer = null;
  private static java.io.BufferedReader reader;

  public static String next() {
    while (tokenizer == null || !tokenizer.hasMoreTokens()) {
      try {
        tokenizer = new java.util.StringTokenizer(reader.readLine());
      } catch (Exception e) {
        throw new RuntimeException(e);
      }
    }
    return tokenizer.nextToken();
  }

  private static double nd() {
    return Double.parseDouble(next());
  }

  private static long nl() {
    return Long.parseLong(next());
  }

  private static int[] na(int n) {
    int[] a = new int[n];
    for (int i = 0; i < n; i++)
      a[i] = ni();
    return a;
  }

  private static char[] ns() {
    return next().toCharArray();
  }

  private static long[] nal(int n) {
    long[] a = new long[n];
    for (int i = 0; i < n; i++)
      a[i] = nl();
    return a;
  }

  private static int[][] ntable(int n, int m) {
    int[][] table = new int[n][m];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < m; j++) {
        table[i][j] = ni();
      }
    }
    return table;
  }

  private static int[][] nlist(int n, int m) {
    int[][] table = new int[m][n];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < m; j++) {
        table[j][i] = ni();
      }
    }
    return table;
  }

  private static int ni() {
    return Integer.parseInt(next());
  }

  private static void tr(Object... o) {
    if (is != System.in)
      System.out.println(java.util.Arrays.deepToString(o));
  }
}
","import java.util.*;

@SuppressWarnings(""unused"")
public class Main {

  private static void solve() {
    int n = ni();
    int l = ni();
    int r = ni();
    int[] a = na(n);

    int g = 0;
    for (int v : a) {
      g ^= g(v, l, r);
    }
    if (g == 0) {
      System.out.println(""Second"");
    } else {
      System.out.println(""First"");
    }
  }

  private static int g(int v, int l, int r) {
    
    
    
    
    
    
    
    
    
    
    

    int x = v % (l + r);

    return x / l;
  }

  public static void main(String[] args) {
    new Thread(null, new Runnable() {
      @Override
      public void run() {
        long start = System.currentTimeMillis();
        String debug = args.length > 0 ? args[0] : null;
        if (debug != null) {
          try {
            is = java.nio.file.Files.newInputStream(java.nio.file.Paths.get(debug));
          } catch (Exception e) {
            throw new RuntimeException(e);
          }
        }
        reader = new java.io.BufferedReader(new java.io.InputStreamReader(is), 32768);
        solve();
        out.flush();
        tr((System.currentTimeMillis() - start) + ""ms"");
      }
    }, """", 64000000).start();
  }

  private static java.io.InputStream is = System.in;
  private static java.io.PrintWriter out = new java.io.PrintWriter(System.out);
  private static java.util.StringTokenizer tokenizer = null;
  private static java.io.BufferedReader reader;

  public static String next() {
    while (tokenizer == null || !tokenizer.hasMoreTokens()) {
      try {
        tokenizer = new java.util.StringTokenizer(reader.readLine());
      } catch (Exception e) {
        throw new RuntimeException(e);
      }
    }
    return tokenizer.nextToken();
  }

  private static double nd() {
    return Double.parseDouble(next());
  }

  private static long nl() {
    return Long.parseLong(next());
  }

  private static int[] na(int n) {
    int[] a = new int[n];
    for (int i = 0; i < n; i++)
      a[i] = ni();
    return a;
  }

  private static char[] ns() {
    return next().toCharArray();
  }

  private static long[] nal(int n) {
    long[] a = new long[n];
    for (int i = 0; i < n; i++)
      a[i] = nl();
    return a;
  }

  private static int[][] ntable(int n, int m) {
    int[][] table = new int[n][m];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < m; j++) {
        table[i][j] = ni();
      }
    }
    return table;
  }

  private static int[][] nlist(int n, int m) {
    int[][] table = new int[m][n];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < m; j++) {
        table[j][i] = ni();
      }
    }
    return table;
  }

  private static int ni() {
    return Integer.parseInt(next());
  }

  private static void tr(Object... o) {
    if (is != System.in)
      System.out.println(java.util.Arrays.deepToString(o));
  }
}
",WA
kero0331 ,abc296/C,Java,"import java.util.*;
import java.io.*;
public class Main {
    public static void main(String[] args)throws Exception{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] str = br.readLine().split("" "");
        int n = Integer.parseInt(str[0]);
        int x = Integer.parseInt(str[1]);
        str = br.readLine().split("" "");
        int[] a = new int[str.length];
        a[0] = Integer.parseInt(str[0]);
        for(int i = 1; i<str.length; i++){
            a[i] = Integer.parseInt(str[i]);
        }
        Arrays.sort(a);
        int b;
        for(int i = 0; i<n; i++){
            b = Arrays.binarySearch(a,a[i]+x);
            if(b>-1){
                System.out.println(""Yes"");
                break;
            }
        }
        System.out.println(""No"");
    }
}
","import java.util.*;
import java.io.*;
public class Main {
    public static void main(String[] args)throws Exception{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] str = br.readLine().split("" "");
        int n = Integer.parseInt(str[0]);
        int x = Integer.parseInt(str[1]);
        str = br.readLine().split("" "");
        int[] a = new int[str.length];
        for(int i = 0; i<str.length; i++){
            a[i] = Integer.parseInt(str[i]);
        }
        Arrays.sort(a);
        int b;
        for(int i = 0; i<n; i++){
            b = Arrays.binarySearch(a,a[i]+x);
            if(b>-1){
                System.out.println(""Yes"");
                return;
            }
        }
        System.out.println(""No"");
    }
}
",WA
FirstException ,abc296/C,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashSet;
import java.util.Random;
import java.util.StringTokenizer;
import java.util.*;

 
public class Main{
public static long gcd(long a, long b) {
      return b == 0 ? a : gcd(b, a % b); }
 public static long lcm(long u, long v)
    {
        return (u / gcd(u, v)) * v;
    }
 static final int mod=1_000_000_007;
 public static boolean areAllBitsSet(long n)
    {
        
        if (n == 0)
            return false;
     
        
        while (n > 0)
        {
            
            if ((n & 1) == 0)
                return false;
     
            
            n = n >> 1;
        }
     
            
            return true;
    }
    public static int Call(int[][] a,int n,int[] b,int j){
        int ans=0;
        for(int i=0;i<n;i++){
            b[a[i][j]]++;
            if(b[a[i][j]]==n-1){
                return a[i][j];
            }  
        }
        return 0;
    }
     public static int binarySearch(long[] a, long x)
    {
        int l = 0, r = a.length- 1;
        while (l <= r) {
            int m = l + (r - l) / 2;
 
            
            if (a[m] == x)
                return m;
 
            
            if (a[m]< x)
                l = m + 1;
 
            
            else
                r = m - 1;
        }
 
        
        
        return -1;
    }
 public static void main(String[] args) {
		FastScanner fs=new FastScanner();
		PrintWriter out=new PrintWriter(System.out);
		Scanner sc=new Scanner(System.in);
     
int T=1;
		for (int tt=1; tt<=T; tt++) {
		  int n=fs.nextInt();
		  long x=fs.nextLong();
		 long[] a=new long[n];
		 ArrayList<Long> og=new ArrayList<>();
		 for(int i=0;i<n;i++){
		     a[i]=fs.nextLong();
		 }
         for(int i=0;i<n;i++){
             og.add(a[i]+x);
         }
         boolean flag=false;
         Collections.sort(og);
         for(int i=0;i<og.size();i++){
             if(binarySearch(a,og.get(i))!=-1){
                 flag=true;
                 break;
             }
         }
      if(flag){
          out.println(""Yes"");
      }
      else{
          out.println(""No"");
      }
		}
		out.close();
		 
	}

	static int[] match(int[] a, int[] b) {
		int[] res=new int[a.length];
		for (int i=0; i<a.length; i++) res[i]=o(a[i], b[i]);
		return res;
	}
	static long toL(int[] a) {
		long ans=0;
		for (int i:a) ans=ans*3+i;
		return ans;
	}
	static int o(int a, int b) {
		if (a==b) return a;
		return a^b^3;
	}

	static final Random random=new Random();
	
	
	static void ruffleSort(int[] a) {
		int n=a.length;
		for (int i=0; i<n; i++) {
			int oi=random.nextInt(n), temp=a[oi];
			a[oi]=a[i]; a[i]=temp;
		
		Arrays.sort(a);
	} 
	}
	static long add(long a, long b) {
		return (a+b)%mod;
	}
	static long sub(long a, long b) {
		return ((a-b)%mod+mod)%mod;
	}
	static long mul(long a, long b) {
		return (a*b)%mod;
	}
	static long exp(long base, long exp) {
		if (exp==0) return 1;
		long half=exp(base, exp/2);
		if (exp%2==0) return mul(half, half);
		return mul(half, mul(half, base));
	}
	static long[] factorials=new long[2_000_001];
	static long[] invFactorials=new long[2_000_001];
	static void precompFacts() {
		factorials[0]=invFactorials[0]=1;
		for (int i=1; i<factorials.length; i++) factorials[i]=mul(factorials[i-1], i);
		invFactorials[factorials.length-1]=exp(factorials[factorials.length-1], mod-2);
		for (int i=invFactorials.length-2; i>=0; i--)
			invFactorials[i]=mul(invFactorials[i+1], i+1);
	}
	
	static long nCk(int n, int k) {
		return mul(factorials[n], mul(invFactorials[k], invFactorials[n-k]));
	}
	
	static void sort(int[] a) {
		ArrayList<Integer> l=new ArrayList<>();
		for (int i:a) l.add(i);
		Collections.sort(l);
		for (int i=0; i<a.length; i++) a[i]=l.get(i);
	}

	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("""");
		String next() {
			while (!st.hasMoreTokens())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
		long nextLong() {
			return Long.parseLong(next());
		}
	} 

}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashSet;
import java.util.Random;
import java.util.StringTokenizer;
import java.util.*;

 
public class Main{
public static long gcd(long a, long b) {
      return b == 0 ? a : gcd(b, a % b); }
 public static long lcm(long u, long v)
    {
        return (u / gcd(u, v)) * v;
    }
 static final int mod=1_000_000_007;
 public static boolean areAllBitsSet(long n)
    {
        
        if (n == 0)
            return false;
     
        
        while (n > 0)
        {
            
            if ((n & 1) == 0)
                return false;
     
            
            n = n >> 1;
        }
     
            
            return true;
    }
    public static int Call(int[][] a,int n,int[] b,int j){
        int ans=0;
        for(int i=0;i<n;i++){
            b[a[i][j]]++;
            if(b[a[i][j]]==n-1){
                return a[i][j];
            }  
        }
        return 0;
    }
     public static int binarySearch(long[] a, long x)
    {
        int l = 0, r = a.length- 1;
        while (l <= r) {
            int m = l + (r - l) / 2;
 
            
            if (a[m] == x)
                return m;
 
            
            if (a[m]< x)
                l = m + 1;
 
            
            else
                r = m - 1;
        }
 
        
        
        return -1;
    }
 public static void main(String[] args) {
		FastScanner fs=new FastScanner();
		PrintWriter out=new PrintWriter(System.out);
		Scanner sc=new Scanner(System.in);
     
int T=1;
		for (int tt=1; tt<=T; tt++) {
		  int n=fs.nextInt();
		  long x=fs.nextLong();
		 long[] a=new long[n];
		 ArrayList<Long> og=new ArrayList<>();
		 for(int i=0;i<n;i++){
		     a[i]=fs.nextLong();
		 }
         for(int i=0;i<n;i++){
             og.add(a[i]+x);
         }
         Arrays.sort(a);
         boolean flag=false;
         Collections.sort(og);
         for(int i=0;i<og.size();i++){
             if(binarySearch(a,og.get(i))!=-1){
                 flag=true;
                 break;
             }
         }
      if(flag){
          out.println(""Yes"");
      }
      else{
          out.println(""No"");
      }
		}
		out.close();
		 
	}

	static int[] match(int[] a, int[] b) {
		int[] res=new int[a.length];
		for (int i=0; i<a.length; i++) res[i]=o(a[i], b[i]);
		return res;
	}
	static long toL(int[] a) {
		long ans=0;
		for (int i:a) ans=ans*3+i;
		return ans;
	}
	static int o(int a, int b) {
		if (a==b) return a;
		return a^b^3;
	}

	static final Random random=new Random();
	
	
	static void ruffleSort(int[] a) {
		int n=a.length;
		for (int i=0; i<n; i++) {
			int oi=random.nextInt(n), temp=a[oi];
			a[oi]=a[i]; a[i]=temp;
		
		Arrays.sort(a);
	} 
	}
	static long add(long a, long b) {
		return (a+b)%mod;
	}
	static long sub(long a, long b) {
		return ((a-b)%mod+mod)%mod;
	}
	static long mul(long a, long b) {
		return (a*b)%mod;
	}
	static long exp(long base, long exp) {
		if (exp==0) return 1;
		long half=exp(base, exp/2);
		if (exp%2==0) return mul(half, half);
		return mul(half, mul(half, base));
	}
	static long[] factorials=new long[2_000_001];
	static long[] invFactorials=new long[2_000_001];
	static void precompFacts() {
		factorials[0]=invFactorials[0]=1;
		for (int i=1; i<factorials.length; i++) factorials[i]=mul(factorials[i-1], i);
		invFactorials[factorials.length-1]=exp(factorials[factorials.length-1], mod-2);
		for (int i=invFactorials.length-2; i>=0; i--)
			invFactorials[i]=mul(invFactorials[i+1], i+1);
	}
	
	static long nCk(int n, int k) {
		return mul(factorials[n], mul(invFactorials[k], invFactorials[n-k]));
	}
	
	static void sort(int[] a) {
		ArrayList<Integer> l=new ArrayList<>();
		for (int i:a) l.add(i);
		Collections.sort(l);
		for (int i=0; i<a.length; i++) a[i]=l.get(i);
	}

	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("""");
		String next() {
			while (!st.hasMoreTokens())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
		long nextLong() {
			return Long.parseLong(next());
		}
	} 

}
",WA
viral ,abc296/C,Java,"import java.util.Scanner;
import java.util.Arrays;
class Main{
  public static void main(String[] args){
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int X = sc.nextInt();
    int[] A = new int[N];
    Arrays.setAll(A,i->sc.nextInt());
    for(int a:A){
      if(Arrays.binarySearch(A,a-X)>=0){
        System.out.println(""Yes"");
        return;
      }
    }
    System.out.println(""No"");
  }
}
","import java.util.Scanner;
import java.util.Arrays;
class Main{
  public static void main(String[] args){
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int X = sc.nextInt();
    int[] A = new int[N];
    Arrays.setAll(A,i->sc.nextInt());
    Arrays.sort(A);
    for(int a:A){
      if(Arrays.binarySearch(A,a-X)>=0){
        System.out.println(""Yes"");
        return;
      }
    }
    System.out.println(""No"");
  }
}
",WA
viral ,abc296/C,Java,"import java.util.Scanner;
import java.util.Arrays;
class Main{
  public static void main(String[] args){
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int X = sc.nextInt();
    int[] A = new int[N];
    Arrays.setAll(A,i->sc.nextInt());
    for(int a:A){
      if(Arrays.binarySearch(A,X-a)>=0){
        System.out.println(""Yes"");
        return;
      }
    }
    System.out.println(""No"");
  }
}
","import java.util.Scanner;
import java.util.Arrays;
class Main{
  public static void main(String[] args){
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int X = sc.nextInt();
    int[] A = new int[N];
    Arrays.setAll(A,i->sc.nextInt());
    Arrays.sort(A);
    for(int a:A){
      if(Arrays.binarySearch(A,a-X)>=0){
        System.out.println(""Yes"");
        return;
      }
    }
    System.out.println(""No"");
  }
}
",WA
karabina1234 ,abc296/C,Java,"import java.util.*;
 
public class Main{
  public static void main(String[] args){
    Scanner in = new Scanner(System.in);
    int n = Integer.parseInt(in.next());
    int x = Integer.parseInt(in.next());
    int[] a = new int[n];
    for(int i = 0; i < n; i++) a[i] = Integer.parseInt(in.next());
    
    for(int i = 0; i < n; i++){
      int temp = a[i] - x;
      int ans = Arrays.binarySearch(a,temp);
      if(ans < 0) continue;
      else {
        System.out.println(""Yes"");
        return;
      }
    }
    System.out.println(""No"");
    in.close();
  }
}
","import java.util.*;
 
public class Main{
  public static void main(String[] args){
    Scanner in = new Scanner(System.in);
    int n = Integer.parseInt(in.next());
    int x = Integer.parseInt(in.next());
    int[] a = new int[n];
    for(int i = 0; i < n; i++) a[i] = Integer.parseInt(in.next());
    
    Arrays.sort(a);
    for(int i = 0; i < n; i++){
      int temp = a[i] - x;
      int ans = Arrays.binarySearch(a,temp);
      if(ans < 0) continue;
      else {
        System.out.println(""Yes"");
        return;
      }
    }
    System.out.println(""No"");
    in.close();
  }
}
",WA
ToshiChan ,abc296/C,Java,"import java.util.*;

class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int x = sc.nextInt();
        int[] a = new int[n];
        for(int i=0; i<n; i++) {
            a[i] = sc.nextInt();
        }

        System.out.println(solve(n, x, a));
    }

    static String solve(int n, int x, int[] a) {
        List<Integer> as = new ArrayList<>();
        for(int i: a) {
            as.add(i);
        }

        for(Integer i: as) {
            if(as.contains(i+x)) {
                return ""Yes"";
            }
        }

        return ""No"";
    }
}
","import java.util.*;

class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int x = sc.nextInt();
        int[] a = new int[n];
        for(int i=0; i<n; i++) {
            a[i] = sc.nextInt();
        }

        System.out.println(solve(n, x, a));
    }

    static String solve(int n, int x, int[] a) {
        Set<Integer> as = new HashSet<>();
        for(int i: a) {
            as.add(i);
        }

        for(Integer i: as) {
            if(as.contains(i+x)) {
                return ""Yes"";
            }
        }

        return ""No"";
    }
}
",TLE
seyjs ,abc296/C,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.stream.Stream;

import static java.util.stream.Collectors.toList;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll(""\\s+$"", """").split("" ""))
                .map(Integer::parseInt)
                .collect(toList());
        int N = arr.get(0);
        int X = arr.get(1);

        List<Integer> nums = Stream.of(bufferedReader.readLine().replaceAll(""\\s+$"", """").split("" ""))
                .map(Integer::parseInt)
                .collect(toList());
        Set<Integer> set = new HashSet<>();
        String res = ""No"";
        for(int num:nums){
            if (set.contains(num - X) || set.contains(num + X)){
                res = ""Yes"";
                break;
            }
            set.add(num);
        }
        System.out.println(res);
        bufferedReader.close();
    }
}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.stream.Stream;

import static java.util.stream.Collectors.toList;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll(""\\s+$"", """").split("" ""))
                .map(Integer::parseInt)
                .collect(toList());
        int N = arr.get(0);
        int X = arr.get(1);

        List<Integer> nums = Stream.of(bufferedReader.readLine().replaceAll(""\\s+$"", """").split("" ""))
                .map(Integer::parseInt)
                .collect(toList());
        Set<Integer> set = new HashSet<>();
        String res = ""No"";
        for(int num:nums){
            set.add(num);
            if (set.contains(num - X) || set.contains(num + X)) {
                res = ""Yes"";
                break;
            }
        }
        System.out.println(res);
        bufferedReader.close();
    }
}
",WA
numacci ,abc296/C,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.*;

public class Main {

    
    void solve() {
        int N = nextInt();
        long X = nextInt();
        long[] A = new long[N];
        Set<Long> set = new HashSet<>();
        for (int i = 0; i < N; i++) {
            A[i] = fr.nextLong();
            set.add(A[i]);
        }
        for (int i = 0; i < N; i++) {
            if (set.contains(A[i])) {
                println(""Yes"");
                return;
            }
        }
        println(""No"");
    }

    
    public static void main(String[] args) {
        Main main = new Main();
        main.solve();
        flush();
    }

    
    static FastReader fr = new FastReader();

    static String next() {
        return fr.next();
    }

    static int nextInt() {
        return fr.nextInt();
    }

    static class FastReader {

        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = """";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }

    
    static PrintWriter out = new PrintWriter(System.out);

    static void println(Object o) {
        out.println(o);
    }

    static void flush() {
        out.flush();
    }
}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.*;

public class Main {

    
    void solve() {
        int N = nextInt();
        long X = nextInt();
        long[] A = new long[N];
        Set<Long> set = new HashSet<>();
        for (int i = 0; i < N; i++) {
            A[i] = fr.nextLong();
            set.add(A[i]);
        }
        for (int i = 0; i < N; i++) {
            if (set.contains(A[i] - X)) {
                println(""Yes"");
                return;
            }
        }
        println(""No"");
    }

    
    public static void main(String[] args) {
        Main main = new Main();
        main.solve();
        flush();
    }

    
    static FastReader fr = new FastReader();

    static String next() {
        return fr.next();
    }

    static int nextInt() {
        return fr.nextInt();
    }

    static class FastReader {

        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = """";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }

    
    static PrintWriter out = new PrintWriter(System.out);

    static void println(Object o) {
        out.println(o);
    }

    static void flush() {
        out.flush();
    }
}
",WA
yfb1119 ,abc296/C,Java,"import java.util.*;
 
public class Main {
    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long X = sc.nextLong();
        long[] A = new long[N];
        for(int i = 0; i < N; i++) A[i] = sc.nextLong();
        for(int i = 0; i < N; i++){
            int pos = Arrays.binarySearch(A, A[i] - X);
            if(pos >= 0){
                System.out.println(""Yes"");
                System.exit(0);
            }
        }
        System.out.println(""No"");
    }
}
","import java.util.*;
 
public class Main {
    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long X = sc.nextLong();
        long[] A = new long[N];
        for(int i = 0; i < N; i++) A[i] = sc.nextLong();
        Arrays.sort(A);
        for(int i = 0; i < N; i++){
            int pos = Arrays.binarySearch(A, A[i] - X);
            if(pos >= 0){
                System.out.println(""Yes"");
                System.exit(0);
            }
        }
        System.out.println(""No"");
    }
}
",WA
yfb1119 ,abc296/C,Java,"import java.util.*;
 
public class Main {
    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long X = sc.nextInt();
        long[] A = new long[N];
        for(int i = 0; i < N; i++) A[i] = sc.nextInt();
        for(int i = 0; i < N; i++){
            int pos = Arrays.binarySearch(A, A[i] - X);
            if(pos >= 0){
                System.out.println(""Yes"");
                System.exit(0);
            }
        }
        System.out.println(""No"");
    }
}
","import java.util.*;
 
public class Main {
    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long X = sc.nextLong();
        long[] A = new long[N];
        for(int i = 0; i < N; i++) A[i] = sc.nextLong();
        Arrays.sort(A);
        for(int i = 0; i < N; i++){
            int pos = Arrays.binarySearch(A, A[i] - X);
            if(pos >= 0){
                System.out.println(""Yes"");
                System.exit(0);
            }
        }
        System.out.println(""No"");
    }
}
",WA
klno ,abc296/C,Java,"import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;

public class Main {

	public static void printArray(int[]a) {
		for(int i=0;i<a.length-1;i++) {
			System.out.print(a[i]+"" "");
		}
		System.out.println(a[a.length-1]);
	}
	public static long lmax(long a,long b) {
		if(a<b)return b;
		else return a;
	}
	public static long lmin(long a,long b) {
		if(a>b)return b;
		else return a;
	}
	public static int max(int a,int b) {
		if(a<b)return b;
		else return a;
	}
	public static int min(int a,int b) {
		if(a>b)return b;
		else return a;
	}
	public static int[] setArray(int n) {
		int a[]=new int[n];
		for(int i=0;i<n;i++)a[i]=scan.nextInt();
		return a;
	}
	static Scanner scan=new Scanner(System.in);
	public static void main(String[] args) {
		int n=scan.nextInt();
		int x=scan.nextInt();
		int a[]=setArray(n);
		Arrays.sort(a);
		for(int i=0;i<n;i++) {
			int target=x+a[i];
			int ng=-1;
			int ok=n;
			while(ok-ng!=1) {
				int mid=(ok+ng)/2;
				if(target<=a[mid]) {
					ok=mid;
				}
				else {
					ng=mid;
				}
			}
			if(a[ok]==target) {
				System.out.println(""Yes"");
				return;
			}
		}
		System.out.println(""No"");
	}
}
","import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;

public class Main {

	public static void printArray(int[]a) {
		for(int i=0;i<a.length-1;i++) {
			System.out.print(a[i]+"" "");
		}
		System.out.println(a[a.length-1]);
	}
	public static long lmax(long a,long b) {
		if(a<b)return b;
		else return a;
	}
	public static long lmin(long a,long b) {
		if(a>b)return b;
		else return a;
	}
	public static int max(int a,int b) {
		if(a<b)return b;
		else return a;
	}
	public static int min(int a,int b) {
		if(a>b)return b;
		else return a;
	}
	public static int[] setArray(int n) {
		int a[]=new int[n];
		for(int i=0;i<n;i++)a[i]=scan.nextInt();
		return a;
	}
	static Scanner scan=new Scanner(System.in);
	public static void main(String[] args) {
		int n=scan.nextInt();
		int x=scan.nextInt();
		int a[]=setArray(n);
		Arrays.sort(a);
		for(int i=0;i<n;i++) {
			int target=x+a[i];
			int ng=-1;
			int ok=n;
			while(ok-ng!=1) {
				int mid=(ok+ng)/2;
				if(target<=a[mid]) {
					ok=mid;
				}
				else {
					ng=mid;
				}
			}
			if(ok==n) {
				continue;
			}
			if(a[ok]==target) {
				System.out.println(""Yes"");
				return;
			}
		}
		System.out.println(""No"");
	}
}
",RE
Masa19212 ,abc296/C,Java,"import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt(); 
        int x = sc.nextInt(); 
        int[] a = new int[n];
        for(int i = 0; i < n; i++) {
        	a[i] = sc.nextInt();
        }
        Arrays.sort(a);
        for(int i = 0; i < n; i++) {
        	if(Arrays.binarySearch(a,a[i] + x) != -1) {
        		System.out.println(""Yes"");
        		System.exit(0);
        	}
        }     
        System.out.println(""No"");
    }
}
","import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt(); 
        int x = sc.nextInt(); 
        int[] a = new int[n];
        for(int i = 0; i < n; i++) {
        	a[i] = sc.nextInt();
        }
        Arrays.sort(a);
        for(int i = 0; i < n; i++) {
        	if(Arrays.binarySearch(a,a[i] + x) > -1) {
        		System.out.println(""Yes"");
        		System.exit(0);
        	}
        }     
        System.out.println(""No"");
    }
}
",WA
eitatsuro ,abc296/C,Java,"import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
	public static void main(String[] args) {
		try (Scanner sc = new Scanner(System.in)) {
			int N = sc.nextInt();
			int X = sc.nextInt();
			Set<Integer> A = new HashSet<Integer>();

			for(int i=0; i<N; i++) {
				A.add(sc.nextInt());
			}


			for(Integer a: A) {
				if(  A.contains( Integer.valueOf(a+X) )) {
					System.out.println(""Yes"");
					System.exit(0);
				}

				System.out.println(""No"");

			}
		}
	}
}
","import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
	public static void main(String[] args) {
		try (Scanner sc = new Scanner(System.in)) {
			int N = sc.nextInt();
			int X = sc.nextInt();
			Set<Integer> A = new HashSet<Integer>();

			for(int i=0; i<N; i++) {
				A.add(sc.nextInt());
			}


			for(Integer a: A) {
				if(  A.contains( Integer.valueOf(a+X) )) {
					System.out.println(""Yes"");
					System.exit(0);
				}
			}
			System.out.println(""No"");
		}
	}
}
",WA
eitatsuro ,abc296/C,Java,"import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
	public static void main(String[] args) {
		try (Scanner sc = new Scanner(System.in)) {
			int N = sc.nextInt();
			int X = sc.nextInt();
			Set<Integer> A = new HashSet<Integer>();

			for(int i=0; i<N; i++) {
				A.add(sc.nextInt());
			}


			for(Integer a: A) {
				if( A.contains(a+X)) {
					System.out.println(""Yes"");
					System.exit(0);
				}

				System.out.println(""No"");

			}
		}
	}
}
","import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
	public static void main(String[] args) {
		try (Scanner sc = new Scanner(System.in)) {
			int N = sc.nextInt();
			int X = sc.nextInt();
			Set<Integer> A = new HashSet<Integer>();

			for(int i=0; i<N; i++) {
				A.add(sc.nextInt());
			}


			for(Integer a: A) {
				if(  A.contains( Integer.valueOf(a+X) )) {
					System.out.println(""Yes"");
					System.exit(0);
				}
			}
			System.out.println(""No"");
		}
	}
}
",WA
asupara18 ,abc296/C,Java,"import java.util.*;
import java.io.*;
public class Main {
  public static void main(String[] args) throws IOException{
    BufferedReader buff = new BufferedReader(new InputStreamReader(System.in));
    StringTokenizer st;
    st = new StringTokenizer(buff.readLine());
    int N = Integer.parseInt(st.nextToken());
    int X = Integer.parseInt(st.nextToken());
    Set<Integer> A = new HashSet<Integer>();
    st = new StringTokenizer(buff.readLine());
    for(int i=0;i<N;i++){
      A.add(Integer.valueOf(st.nextToken()));
    }
    PrintWriter pw = new PrintWriter(System.out);    
    for(Integer a : A){
      if(A.contains(a-X)|| A.contains(a+X)){
        pw.println(""No"");
        pw.flush();
        return;
      }
    }
    pw.println(""No"");
    pw.flush();
    return;
  }
}
","import java.util.*;
import java.io.*;
public class Main {
  public static void main(String[] args) throws IOException{
    BufferedReader buff = new BufferedReader(new InputStreamReader(System.in));
    StringTokenizer st;
    st = new StringTokenizer(buff.readLine());
    int N = Integer.parseInt(st.nextToken());
    int X = Integer.parseInt(st.nextToken());
    Set<Integer> A = new HashSet<Integer>();
    st = new StringTokenizer(buff.readLine());
    for(int i=0;i<N;i++){
      A.add(Integer.valueOf(st.nextToken()));
    }
    PrintWriter pw = new PrintWriter(System.out);    
    for(Integer a : A){
      if(A.contains(a-X)|| A.contains(a+X)){
        pw.println(""Yes"");
        pw.flush();
        return;
      }
    }
    pw.println(""No"");
    pw.flush();
    return;
  }
}
",WA
kunaisn ,abc296/C,Java,"import java.util.Arrays;
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		
		Scanner scan = new Scanner(System.in);
		int N = scan.nextInt();
		int X = scan.nextInt();
		int[] A = new int[N];
		for(int i=0; i<N; i++) {
			A[i] = scan.nextInt();
		}
		String ans = ""No"";
		Arrays.sort(A);
		for(int i=0; i<N-1; i++) {
			int searchResult = Arrays.binarySearch(A, A[i] + X);
			if(searchResult > -1) {
				ans = ""Yes"";
				break;
			}
		}
		
		System.out.println(ans);
		scan.close();
		
	}

}

","import java.util.Arrays;
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		
		Scanner scan = new Scanner(System.in);
		int N = scan.nextInt();
		int X = scan.nextInt();
		int[] A = new int[N];
		for(int i=0; i<N; i++) {
			A[i] = scan.nextInt();
		}
		String ans = ""No"";
		Arrays.sort(A);
		for(int i=0; i<N; i++) {
			int searchResult = Arrays.binarySearch(A, A[i] + X);
			if(searchResult > -1) {
				ans = ""Yes"";
				break;
			}
		}
		
		System.out.println(ans);
		scan.close();
		
	}

}

",WA
neo82 ,abc296/C,Java,"import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int N = scanner.nextInt();
        int X = scanner.nextInt();

        long[] nums = new long[N];

        for (int i = 0; i < N; i++) {
            nums[i] = scanner.nextLong();
        }

        Set<Long> seen = new HashSet<>();

        for (int i = 0; i < N; i++) {
            seen.add(nums[i]);

            if (seen.contains(nums[i] - X)) {
                System.out.println(""Yes"");
                return;
            }
        }

        System.out.println(""No"");
    }
}
","import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int N = scanner.nextInt();
        int X = scanner.nextInt();

        long[] nums = new long[N];

        for (int i = 0; i < N; i++) {
            nums[i] = scanner.nextLong();
        }

        Set<Long> seen = new HashSet<>();

        for (int i = 0; i < N; i++) {
            seen.add(nums[i]);

            if (seen.contains(nums[i] - X) || seen.contains(nums[i] + X)) {
                System.out.println(""Yes"");
                return;
            }
        }

        System.out.println(""No"");
    }
}
",WA
banurr ,abc296/C,Java,"import java.io.*;
import java.util.*;

public class Main
{
    static FastReader sc = new FastReader(System.in);
    static PrintWriter out = new PrintWriter(System.out);

    public static void main(String[] args) throws IOException
    {
        int n = sc.nextInt();
        long x = sc.nextLong();
        long[] arr = sc.nextArrLong(n);
        if(x==0) out.println(""YES"");
        else
        {
            boolean is = false;
            HashSet<Long> set = new HashSet<>();
            for(long i : arr) set.add(i);
            for(long i : arr)
            {
                if(set.contains(i+x))
                {
                    is = true;
                    break;
                }
            }
            out.println(is ? ""Yes"" : ""No"");
        }
        out.flush();
    }

    static class FastReader
    {
        byte[] buf = new byte[2048];
        int index, total;
        InputStream in;

        FastReader(InputStream is)
        {
            in = is;
        }

        int scan() throws IOException
        {
            if (index >= total)
            {
                index = 0;
                total = in.read(buf);
                if (total <= 0)
                {
                    return -1;
                }
            }
            return buf[index++];
        }

        String next() throws IOException
        {
            int c;
            for (c = scan(); c <= 32; c = scan()) ;
            StringBuilder sb = new StringBuilder();
            for (; c > 32; c = scan())
            {
                sb.append((char) c);
            }
            return sb.toString();
        }

        int nextInt() throws IOException
        {
            int c, val = 0;
            for (c = scan(); c <= 32; c = scan()) ;
            boolean neg = c == '-';
            if (c == '-' || c == '+')
            {
                c = scan();
            }
            for (; c >= '0' && c <= '9'; c = scan())
            {
                val = (val << 3) + (val << 1) + (c & 15);
            }
            return neg ? -val : val;
        }

        long nextLong() throws IOException
        {
            int c;
            long val = 0;
            for (c = scan(); c <= 32; c = scan()) ;
            boolean neg = c == '-';
            if (c == '-' || c == '+')
            {
                c = scan();
            }
            for (; c >= '0' && c <= '9'; c = scan())
            {
                val = (val << 3) + (val << 1) + (c & 15);
            }
            return neg ? -val : val;
        }

        int[] nextArrInt(int n) throws IOException
        {
            int[] a = new int[n];
            for (int i = 0; i < n; i++)
                a[i] = nextInt();
            return a;
        }

        long[] nextArrLong(int n) throws IOException
        {
            long[] a = new long[n];
            for (int i = 0; i < n; i++)
                a[i] = nextLong();
            return a;
        }
    }
}
","import java.io.*;
import java.util.*;

public class Main
{
    static FastReader sc = new FastReader(System.in);
    static PrintWriter out = new PrintWriter(System.out);

    public static void main(String[] args) throws IOException
    {
        int n = sc.nextInt();
        long x = sc.nextLong();
        long[] arr = sc.nextArrLong(n);
        if(x==0) out.println(""Yes"");
        else
        {
            boolean is = false;
            HashSet<Long> set = new HashSet<>();
            for(long i : arr) set.add(i);
            for(long i : arr)
            {
                if(set.contains(i+x))
                {
                    is = true;
                    break;
                }
            }
            out.println(is ? ""Yes"" : ""No"");
        }
        out.flush();
    }

    static class FastReader
    {
        byte[] buf = new byte[2048];
        int index, total;
        InputStream in;

        FastReader(InputStream is)
        {
            in = is;
        }

        int scan() throws IOException
        {
            if (index >= total)
            {
                index = 0;
                total = in.read(buf);
                if (total <= 0)
                {
                    return -1;
                }
            }
            return buf[index++];
        }

        String next() throws IOException
        {
            int c;
            for (c = scan(); c <= 32; c = scan()) ;
            StringBuilder sb = new StringBuilder();
            for (; c > 32; c = scan())
            {
                sb.append((char) c);
            }
            return sb.toString();
        }

        int nextInt() throws IOException
        {
            int c, val = 0;
            for (c = scan(); c <= 32; c = scan()) ;
            boolean neg = c == '-';
            if (c == '-' || c == '+')
            {
                c = scan();
            }
            for (; c >= '0' && c <= '9'; c = scan())
            {
                val = (val << 3) + (val << 1) + (c & 15);
            }
            return neg ? -val : val;
        }

        long nextLong() throws IOException
        {
            int c;
            long val = 0;
            for (c = scan(); c <= 32; c = scan()) ;
            boolean neg = c == '-';
            if (c == '-' || c == '+')
            {
                c = scan();
            }
            for (; c >= '0' && c <= '9'; c = scan())
            {
                val = (val << 3) + (val << 1) + (c & 15);
            }
            return neg ? -val : val;
        }

        int[] nextArrInt(int n) throws IOException
        {
            int[] a = new int[n];
            for (int i = 0; i < n; i++)
                a[i] = nextInt();
            return a;
        }

        long[] nextArrLong(int n) throws IOException
        {
            long[] a = new long[n];
            for (int i = 0; i < n; i++)
                a[i] = nextLong();
            return a;
        }
    }
}
",WA
Moldir ,abc296/C,Java,"import java.util.HashSet;
import java.util.Scanner;

public class Main {
    public static boolean findPair(int[] arr, int x) {
        HashSet<Integer> set = new HashSet<Integer>();
        for (int i = 0; i < arr.length; i++) {
            if (set.contains(arr[i] + x) || set.contains(arr[i] - x)) {
                return true;
            }
            set.add(arr[i]);
        }
        return false;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int x = sc.nextInt();
        if(x == 0){
            System.out.println(""No"");
            return;
        }
        int[] arr = new int[n];
        for(int i = 0; i < n; i++){
            arr[i] = sc.nextInt();
        }
        if (findPair(arr, x)) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}
","import java.util.HashSet;
import java.util.Scanner;

public class Main {
    public static boolean findPair(int[] arr, int x) {
        HashSet<Integer> set = new HashSet<Integer>();
        for (int i = 0; i < arr.length; i++) {
            if (set.contains(arr[i] + x) || set.contains(arr[i] - x)) {
                return true;
            }
            set.add(arr[i]);
        }
        return false;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int x = sc.nextInt();
        if(x == 0){
            System.out.println(""Yes"");
            return;
        }
        int[] arr = new int[n];
        for(int i = 0; i < n; i++){
            arr[i] = sc.nextInt();
        }
        if (findPair(arr, x)) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}
",WA
Moldir ,abc296/C,Java,"import java.util.HashSet;
import java.util.Scanner;

public class Main {
    public static boolean findPair(int[] arr, int x) {
        HashSet<Integer> set = new HashSet<Integer>();
        for (int i = 0; i < arr.length; i++) {
            if (set.contains(arr[i] + x) || set.contains(arr[i] - x)) {
                return true;
            }
            set.add(arr[i]);
        }
        return false;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int x = sc.nextInt();
        int[] arr = new int[n];
        for(int i = 0; i < n; i++){
            arr[i] = sc.nextInt();
        }
        if (findPair(arr, x)) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}
","import java.util.HashSet;
import java.util.Scanner;

public class Main {
    public static boolean findPair(int[] arr, int x) {
        HashSet<Integer> set = new HashSet<Integer>();
        for (int i = 0; i < arr.length; i++) {
            if (set.contains(arr[i] + x) || set.contains(arr[i] - x)) {
                return true;
            }
            set.add(arr[i]);
        }
        return false;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int x = sc.nextInt();
        if(x == 0){
            System.out.println(""Yes"");
            return;
        }
        int[] arr = new int[n];
        for(int i = 0; i < n; i++){
            arr[i] = sc.nextInt();
        }
        if (findPair(arr, x)) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}
",WA
vjudge3 ,abc296/C,Java,"import java.util.HashMap;
import java.util.Scanner;
public class MainE
{
    public static void main(String args[]){
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long X = sc.nextLong();
        boolean res = false;
        HashMap<Long,Long> hm = new HashMap();
        for(int i=0; i<N; i++){
            long l = sc.nextLong();
            long comp = l-X;
            hm.put(l,comp);
        }

        for(long c : hm.values()){
            if(hm.containsKey(c)){
                res = true;
                break;
            }
        }    

        System.out.println(res ? ""Yes"": ""No"");
    }
}
","import java.util.HashMap;
import java.util.Scanner;
public class Main
{
    public static void main(String args[]){
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long X = sc.nextLong();
        boolean res = false;
        HashMap<Long,Long> hm = new HashMap();
        for(int i=0; i<N; i++){
            long l = sc.nextLong();
            long comp = l-X;
            hm.put(l,comp);
        }

        for(long c : hm.values()){
            if(hm.containsKey(c)){
                res = true;
                break;
            }
        }    

        System.out.println(res ? ""Yes"": ""No"");
    }
}
",CE
liewn ,abc296/C,Java,"import java.util.*;


 
public class Main {
    
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        
        
        List<Integer> set = new ArrayList<>();
        int n = in.nextInt();
        int k = in.nextInt();
        
        while(n-->0) set.add(in.nextInt());
        
        for(Integer x:set) 
          if(set.contains(x+k)){
            System.out.println(""Yes"");
          	return ;
        } 
		System.out.println(""No"");
        
        in.close();
    }
}
","import java.util.*;


 
public class Main {
    
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        
        
        Set<Integer> set = new HashSet<>();
        int n = in.nextInt();
        int k = in.nextInt();
        
        while(n-->0) set.add(in.nextInt());
        
        for(Integer x:set) 
          if(set.contains(x+k)){
            System.out.println(""Yes"");
          	return ;
        } 
		System.out.println(""No"");
        
        in.close();
    }
}
",TLE
liewn ,abc296/C,Java,"import java.util.*;


 
public class Main {
    
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        
        
        Set<Integer> set = new HashSet<>();
        int n = in.nextInt();
        int k = in.nextInt();
        
        while(n-->0) set.append(in.nextInt());
        
        for(Integer x:set) 
          if(list.contains(x+k)){
            System.out.println(""Yes"");
          	return ;
        } 
		System.out.println(""No"");
        
        in.close();
    }
}
","import java.util.*;


 
public class Main {
    
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        
        
        Set<Integer> set = new HashSet<>();
        int n = in.nextInt();
        int k = in.nextInt();
        
        while(n-->0) set.add(in.nextInt());
        
        for(Integer x:set) 
          if(set.contains(x+k)){
            System.out.println(""Yes"");
          	return ;
        } 
		System.out.println(""No"");
        
        in.close();
    }
}
",CE
Satsuki15 ,abc296/C,Java,"import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int size=sc.nextInt();
        int kai=sc.nextInt();

        if(kai==0){
            System.out.println(""Yes"");
            return;
        }
        List<Integer> list = new ArrayList<>();
        for(int i=0;i<size;i++){
            list.add(sc.nextInt());
        }
        for (Integer integer : list) {
            final Integer X = integer - kai;
            if(list.contains(X)) {
                System.out.println(""Yes"");
                return;
            }
        }
        System.out.println(""No"");
    }
}
","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int size=sc.nextInt();
        int kai=sc.nextInt();

        if(kai==0){
            System.out.println(""Yes"");
            return;
        }
        Set<Integer> list = new HashSet<>();
        for(int i=0;i<size;i++){
            list.add(sc.nextInt());
        }
        for (Integer integer : list) {
            final Integer X = integer - kai;
            if(list.contains(X)) {
                System.out.println(""Yes"");
                return;
            }
        }
        System.out.println(""No"");
    }
}
",TLE
Java_Programmer ,abc293/G,Java,"


import java.io.*;
import java.util.*;

public class Main {
    private static final FastReader fr = new FastReader();
    private static int mo_right = -1,mo_left = 0;
    private static long answer = 0L;
    private static final int[] freq = new int[11];
    private static int[] arr;
    public static void main(String[] args) throws IOException {
        BufferedWriter output = new BufferedWriter(new OutputStreamWriter(System.out));
        StringBuilder sb = new StringBuilder();
        int n = fr.nextInt();
        int qs = fr.nextInt();
        arr = new int[n];
        int block_size = (int)Math.sqrt(n);
        for(int i=0;i<n;i++) arr[i] = fr.nextInt();
        Queue<Query> queries = new PriorityQueue<>((q1,q2)->{
            if(q1.left/q1.block_size == q2.left/q1.block_size) return q2.right - q1.right;
            return q1.left/q1.block_size - q2.left/q1.block_size;
        });

        for(int i=0;i<qs;i++){
            queries.offer(new Query(i,fr.nextInt()-1,fr.nextInt()-1,block_size));
        }
        long[] res = new long[qs];
        while(!queries.isEmpty()){
            Query query = queries.remove();
            int left = query.left;
            int right = query.right;
            while(right>mo_right) mo_right_increment();
            while(right<mo_right) mo_right_decrease();
            while(left>mo_left) mo_left_increase();
            while(left<mo_left) mo_left_decrease();
 
            res[query.index] = answer;
        }
        for(long a: res) sb.append(a).append(""\n"");
        output.write(sb.toString());
        output.flush();

    }
    private static long count(int num){
        long f = freq[num];
        if(f<=2) return 0L;
        return (f*(f-1)*(f-2))/6;
    }
    private static void mo_right_increment(){
        mo_right++;
        answer -= count(arr[mo_right]);
        freq[arr[mo_right]]++;
        answer += count(arr[mo_right]);
    }
    private static void mo_right_decrease(){
        answer -= count(arr[mo_right]);
        freq[arr[mo_right]]--;
        answer += count(arr[mo_right]);
        mo_right--;
    }
    private static void mo_left_increase(){
        answer -= count(arr[mo_left]);
        freq[arr[mo_left]]--;
        answer += count(arr[mo_left]);
        mo_left++;
    }
    private static void mo_left_decrease(){
        mo_left--;
        answer -= count(arr[mo_left]);
        freq[arr[mo_left]]++;
        answer += count(arr[mo_left]);
    }
}
class Query{
    int index;
    int left;
    int right;
    int block_size;

    public Query(int index, int left, int right,int block_size) {
        this.index = index;
        this.left = left;
        this.right = right;
        this.block_size = block_size;
    }
}
class FastReader {
    BufferedReader br;
    StringTokenizer st;

    public FastReader()
    {
        br = new BufferedReader(new InputStreamReader(System.in));
    }

    String next() {
        while (st == null || !st.hasMoreElements()) {
            try {
                st = new StringTokenizer(br.readLine());
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }
        return st.nextToken();
    }

    int nextInt() { return Integer.parseInt(next()); }

    long nextLong() { return Long.parseLong(next()); }

    double nextDouble()
    {
        return Double.parseDouble(next());
    }

    String nextLine()
    {
        String str = """";
        try {
            if(st.hasMoreTokens()){
                str = st.nextToken(""\n"");
            }
            else{
                str = br.readLine();
            }
        }
        catch (IOException e) {
            e.printStackTrace();
        }
        return str;
    }
}

","


import java.io.*;
import java.util.*;

public class Main {
    private static final FastReader fr = new FastReader();
    private static int mo_right = -1,mo_left = 0;
    private static long answer = 0L;
    private static final int[] freq = new int[2_000_01];
    private static int[] arr;
    public static void main(String[] args) throws IOException {
        BufferedWriter output = new BufferedWriter(new OutputStreamWriter(System.out));
        StringBuilder sb = new StringBuilder();
        int n = fr.nextInt();
        int qs = fr.nextInt();
        arr = new int[n];
        int block_size = (int)Math.sqrt(n);
        for(int i=0;i<n;i++) arr[i] = fr.nextInt();
        Queue<Query> queries = new PriorityQueue<>((q1,q2)->{
            if(q1.left/q1.block_size == q2.left/q1.block_size) return q2.right - q1.right;
            return q1.left/q1.block_size - q2.left/q1.block_size;
        });

        for(int i=0;i<qs;i++){
            queries.offer(new Query(i,fr.nextInt()-1,fr.nextInt()-1,block_size));
        }
        long[] res = new long[qs];
        while(!queries.isEmpty()){
            Query query = queries.remove();
            int left = query.left;
            int right = query.right;
            while(right>mo_right) mo_right_increment();
            while(right<mo_right) mo_right_decrease();
            while(left>mo_left) mo_left_increase();
            while(left<mo_left) mo_left_decrease();
 
            res[query.index] = answer;
        }
        for(long a: res) sb.append(a).append(""\n"");
        output.write(sb.toString());
        output.flush();

    }
    private static long count(int num){
        long f = freq[num];
        if(f<=2) return 0L;
        return (f*(f-1)*(f-2))/6;
    }
    private static void mo_right_increment(){
        mo_right++;
        answer -= count(arr[mo_right]);
        freq[arr[mo_right]]++;
        answer += count(arr[mo_right]);
    }
    private static void mo_right_decrease(){
        answer -= count(arr[mo_right]);
        freq[arr[mo_right]]--;
        answer += count(arr[mo_right]);
        mo_right--;
    }
    private static void mo_left_increase(){
        answer -= count(arr[mo_left]);
        freq[arr[mo_left]]--;
        answer += count(arr[mo_left]);
        mo_left++;
    }
    private static void mo_left_decrease(){
        mo_left--;
        answer -= count(arr[mo_left]);
        freq[arr[mo_left]]++;
        answer += count(arr[mo_left]);
    }
}
class Query{
    int index;
    int left;
    int right;
    int block_size;

    public Query(int index, int left, int right,int block_size) {
        this.index = index;
        this.left = left;
        this.right = right;
        this.block_size = block_size;
    }
}
class FastReader {
    BufferedReader br;
    StringTokenizer st;

    public FastReader()
    {
        br = new BufferedReader(new InputStreamReader(System.in));
    }

    String next() {
        while (st == null || !st.hasMoreElements()) {
            try {
                st = new StringTokenizer(br.readLine());
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }
        return st.nextToken();
    }

    int nextInt() { return Integer.parseInt(next()); }

    long nextLong() { return Long.parseLong(next()); }

    double nextDouble()
    {
        return Double.parseDouble(next());
    }

    String nextLine()
    {
        String str = """";
        try {
            if(st.hasMoreTokens()){
                str = st.nextToken(""\n"");
            }
            else{
                str = br.readLine();
            }
        }
        catch (IOException e) {
            e.printStackTrace();
        }
        return str;
    }
}

",RE
wdjuruo ,abc293/G,Java,"

import java.io.*;
import java.util.Arrays;
import java.util.Scanner;
import java.util.StringTokenizer;


public class Main {

    private static class Kattio extends PrintWriter {
        private BufferedReader r;
        private StringTokenizer st;
        
        public Kattio() { this(System.in, System.out); }
        public Kattio(InputStream i, OutputStream o) {
            super(o);
            r = new BufferedReader(new InputStreamReader(i));
        }
        
        public Kattio(String intput, String output) throws IOException {
            super(output);
            r = new BufferedReader(new FileReader(intput));
        }
        
        public String next() {
            try {
                while (st == null || !st.hasMoreTokens())
                    st = new StringTokenizer(r.readLine());
                return st.nextToken();
            } catch (Exception e) {}
            return null;
        }
        public int nextInt() { return Integer.parseInt(next()); }
        public double nextDouble() { return Double.parseDouble(next()); }
        public long nextLong() { return Long.parseLong(next()); }
    }

    private static Kattio scanner = new Kattio();
    private static long res;
    private static int n;
    private static int q;
    private static int[] a;
    private static int[] numbers;
    public static void main(String[] args) {
        n = scanner.nextInt();
        q = scanner.nextInt();
        a = new int[n + 1];
        int max = 0;
        int size = n / (int) Math.sqrt(n);
        for (int i = 1; i <= n; i++) {
            a[i] = scanner.nextInt();
            max = Math.max(max, a[i]);
        }
        int[][] queries = new int[q][2];
        Integer[] idxs = new Integer[q];
        int[] pos = new int[n + 1];
        for (int i = 1; i <= n; i++) {
            pos[i] = i / size;
        }
        for (int i = 0; i < q; i++) {
            idxs[i] = i;
        }
        for (int i = 0; i < q; i++) {
            queries[i][0] = scanner.nextInt();
            queries[i][1] = scanner.nextInt();
        }
        res = 0;
        long[] ans = new long[q];
        numbers = new int[max + 1];
        Arrays.sort(idxs, (id1, id2) -> {
            if (pos[queries[id1][0]] == pos[queries[id2][0]]) {
                return queries[id1][1] - queries[id2][1];
            }
            return pos[queries[id1][0]] - pos[queries[id2][0]];
        });
        int l = 1, r = 0;
        for (int i = 0; i < q; i++) {
            int curIdx = idxs[i];
            while (queries[curIdx][0] < l) add(--l);
            while (queries[curIdx][1] > r) add(++r);
            while (queries[curIdx][0] > l) sub(l++);
            while (queries[curIdx][1] < r) sub(r--);
            ans[curIdx] = res;
        }
        for (int i = 0; i < q; i++) {
            scanner.println(ans[i]);
        }
        scanner.flush();
    }

    private static void add(int idx) {
        res = res + combination(numbers[a[idx]], 2);
        numbers[a[idx]]++;
    }

    private static void sub(int idx) {
        numbers[a[idx]]--;
        res = res - combination(numbers[a[idx]], 2);
    }

    private static int combination(int a, int b) {
        if (b > a) return 0;
        return a * (a - 1) / 2;
    }

}
","

import java.io.*;
import java.util.Arrays;
import java.util.Scanner;
import java.util.StringTokenizer;


public class Main {

    private static class Kattio extends PrintWriter {
        private BufferedReader r;
        private StringTokenizer st;
        
        public Kattio() { this(System.in, System.out); }
        public Kattio(InputStream i, OutputStream o) {
            super(o);
            r = new BufferedReader(new InputStreamReader(i));
        }
        
        public Kattio(String intput, String output) throws IOException {
            super(output);
            r = new BufferedReader(new FileReader(intput));
        }
        
        public String next() {
            try {
                while (st == null || !st.hasMoreTokens())
                    st = new StringTokenizer(r.readLine());
                return st.nextToken();
            } catch (Exception e) {}
            return null;
        }
        public int nextInt() { return Integer.parseInt(next()); }
        public double nextDouble() { return Double.parseDouble(next()); }
        public long nextLong() { return Long.parseLong(next()); }
    }

    private static Kattio scanner = new Kattio();
    private static long res;
    private static int n;
    private static int q;
    private static int[] a;
    private static int[] numbers;
    public static void main(String[] args) {
        n = scanner.nextInt();
        q = scanner.nextInt();
        a = new int[n + 1];
        int max = 0;
        int size = n / (int) Math.sqrt(n);
        for (int i = 1; i <= n; i++) {
            a[i] = scanner.nextInt();
            max = Math.max(max, a[i]);
        }
        int[][] queries = new int[q][2];
        Integer[] idxs = new Integer[q];
        int[] pos = new int[n + 1];
        for (int i = 1; i <= n; i++) {
            pos[i] = i / size;
        }
        for (int i = 0; i < q; i++) {
            idxs[i] = i;
        }
        for (int i = 0; i < q; i++) {
            queries[i][0] = scanner.nextInt();
            queries[i][1] = scanner.nextInt();
        }
        res = 0;
        long[] ans = new long[q];
        numbers = new int[max + 1];
        Arrays.sort(idxs, (id1, id2) -> {
            if (pos[queries[id1][0]] == pos[queries[id2][0]]) {
                return queries[id1][1] - queries[id2][1];
            }
            return pos[queries[id1][0]] - pos[queries[id2][0]];
        });
        int l = 1, r = 0;
        for (int i = 0; i < q; i++) {
            int curIdx = idxs[i];
            while (queries[curIdx][0] < l) add(--l);
            while (queries[curIdx][1] > r) add(++r);
            while (queries[curIdx][0] > l) sub(l++);
            while (queries[curIdx][1] < r) sub(r--);
            ans[curIdx] = res;
        }
        for (int i = 0; i < q; i++) {
            scanner.println(ans[i]);
        }
        scanner.flush();
    }

    private static void add(int idx) {
        res = res + combination(numbers[a[idx]], 2);
        numbers[a[idx]]++;
    }

    private static void sub(int idx) {
        numbers[a[idx]]--;
        res = res - combination(numbers[a[idx]], 2);
    }

    private static long combination(int a, int b) {
        if (b > a) return 0;
        return a * 1l * (a - 1) / 2;
    }

}
",WA
wdjuruo ,abc293/G,Java,"

import java.io.*;
import java.util.Arrays;
import java.util.Scanner;
import java.util.StringTokenizer;


public class Main {

    private static class Kattio extends PrintWriter {
        private BufferedReader r;
        private StringTokenizer st;
        
        public Kattio() { this(System.in, System.out); }
        public Kattio(InputStream i, OutputStream o) {
            super(o);
            r = new BufferedReader(new InputStreamReader(i));
        }
        
        public Kattio(String intput, String output) throws IOException {
            super(output);
            r = new BufferedReader(new FileReader(intput));
        }
        
        public String next() {
            try {
                while (st == null || !st.hasMoreTokens())
                    st = new StringTokenizer(r.readLine());
                return st.nextToken();
            } catch (Exception e) {}
            return null;
        }
        public int nextInt() { return Integer.parseInt(next()); }
        public double nextDouble() { return Double.parseDouble(next()); }
        public long nextLong() { return Long.parseLong(next()); }
    }

    private static Kattio scanner = new Kattio();
    private static int res;
    private static int n;
    private static int q;
    private static int[] a;
    private static int[] numbers;
    public static void main(String[] args) {
        n = scanner.nextInt();
        q = scanner.nextInt();
        a = new int[n + 1];
        int max = 0;
        int size = n / (int) Math.sqrt(n);
        for (int i = 1; i <= n; i++) {
            a[i] = scanner.nextInt();
            max = Math.max(max, a[i]);
        }
        int[][] queries = new int[q][2];
        Integer[] idxs = new Integer[q];
        int[] pos = new int[n + 1];
        for (int i = 1; i <= n; i++) {
            pos[i] = i / size;
        }
        for (int i = 0; i < q; i++) {
            idxs[i] = i;
        }
        for (int i = 0; i < q; i++) {
            queries[i][0] = scanner.nextInt();
            queries[i][1] = scanner.nextInt();
        }
        res = 0;
        int[] ans = new int[q];
        numbers = new int[max + 1];
        Arrays.sort(idxs, (id1, id2) -> {
            if (pos[queries[id1][0]] == pos[queries[id2][0]]) {
                return queries[id1][1] - queries[id2][1];
            }
            return pos[queries[id1][0]] - pos[queries[id2][0]];
        });
        int l = 1, r = 0;
        for (int i = 0; i < q; i++) {
            int curIdx = idxs[i];
            while (queries[curIdx][0] < l) add(--l);
            while (queries[curIdx][1] > r) add(++r);
            while (queries[curIdx][0] > l) sub(l++);
            while (queries[curIdx][1] < r) sub(r--);
            ans[curIdx] = res;
        }
        for (int i = 0; i < q; i++) {
            scanner.println(ans[i]);
        }
        scanner.flush();
    }

    private static void add(int idx) {
        res = res + combination(numbers[a[idx]], 2);
        numbers[a[idx]]++;
    }

    private static void sub(int idx) {
        numbers[a[idx]]--;
        res = res - combination(numbers[a[idx]], 2);
    }

    private static int combination(int a, int b) {
        if (b > a) return 0;
        return a * (a - 1) / 2;
    }

}
","

import java.io.*;
import java.util.Arrays;
import java.util.Scanner;
import java.util.StringTokenizer;


public class Main {

    private static class Kattio extends PrintWriter {
        private BufferedReader r;
        private StringTokenizer st;
        
        public Kattio() { this(System.in, System.out); }
        public Kattio(InputStream i, OutputStream o) {
            super(o);
            r = new BufferedReader(new InputStreamReader(i));
        }
        
        public Kattio(String intput, String output) throws IOException {
            super(output);
            r = new BufferedReader(new FileReader(intput));
        }
        
        public String next() {
            try {
                while (st == null || !st.hasMoreTokens())
                    st = new StringTokenizer(r.readLine());
                return st.nextToken();
            } catch (Exception e) {}
            return null;
        }
        public int nextInt() { return Integer.parseInt(next()); }
        public double nextDouble() { return Double.parseDouble(next()); }
        public long nextLong() { return Long.parseLong(next()); }
    }

    private static Kattio scanner = new Kattio();
    private static long res;
    private static int n;
    private static int q;
    private static int[] a;
    private static int[] numbers;
    public static void main(String[] args) {
        n = scanner.nextInt();
        q = scanner.nextInt();
        a = new int[n + 1];
        int max = 0;
        int size = n / (int) Math.sqrt(n);
        for (int i = 1; i <= n; i++) {
            a[i] = scanner.nextInt();
            max = Math.max(max, a[i]);
        }
        int[][] queries = new int[q][2];
        Integer[] idxs = new Integer[q];
        int[] pos = new int[n + 1];
        for (int i = 1; i <= n; i++) {
            pos[i] = i / size;
        }
        for (int i = 0; i < q; i++) {
            idxs[i] = i;
        }
        for (int i = 0; i < q; i++) {
            queries[i][0] = scanner.nextInt();
            queries[i][1] = scanner.nextInt();
        }
        res = 0;
        long[] ans = new long[q];
        numbers = new int[max + 1];
        Arrays.sort(idxs, (id1, id2) -> {
            if (pos[queries[id1][0]] == pos[queries[id2][0]]) {
                return queries[id1][1] - queries[id2][1];
            }
            return pos[queries[id1][0]] - pos[queries[id2][0]];
        });
        int l = 1, r = 0;
        for (int i = 0; i < q; i++) {
            int curIdx = idxs[i];
            while (queries[curIdx][0] < l) add(--l);
            while (queries[curIdx][1] > r) add(++r);
            while (queries[curIdx][0] > l) sub(l++);
            while (queries[curIdx][1] < r) sub(r--);
            ans[curIdx] = res;
        }
        for (int i = 0; i < q; i++) {
            scanner.println(ans[i]);
        }
        scanner.flush();
    }

    private static void add(int idx) {
        res = res + combination(numbers[a[idx]], 2);
        numbers[a[idx]]++;
    }

    private static void sub(int idx) {
        numbers[a[idx]]--;
        res = res - combination(numbers[a[idx]], 2);
    }

    private static long combination(int a, int b) {
        if (b > a) return 0;
        return a * 1l * (a - 1) / 2;
    }

}
",WA
Hoshikira ,abc296/D,Java,"import java.util.*;
import java.math.*;
import java.lang.*;

public class Main {
    static Scanner scanner=new Scanner(System.in);
    public static void main(String[] args) {
        int t=1;
        
        while(t!=0){
            t--;
            sol();
        }
    }

    static void sol(){
        long n=scanner.nextLong();
        long m=scanner.nextLong();
        BigInteger bn=new BigInteger(String.valueOf(n));
        BigInteger bm=new BigInteger(String.valueOf(m));
        BigInteger ans=bn.multiply(bn);
        BigInteger anstmp;
        if(ans.compareTo(bm)==-1){
            System.out.println(-1);
        }else{
            for(long i=1;i<=n;i++){
                long tmp=m/i;
                if(tmp*i<m){
                	tmp++;
                }
                if(tmp>n){
                	continue;
                }
                anstmp=new BigInteger(String.valueOf(tmp*i));
                if(anstmp.compareTo(ans)==-1) ans=anstmp;
            }
            System.out.println(ans);
        }
    }
}
","import java.util.*;
import java.math.*;
import java.lang.*;

public class Main {
    static Scanner scanner=new Scanner(System.in);
    public static void main(String[] args) {
        int t=1;
        
        while(t!=0){
            t--;
            sol();
        }
    }

    static void sol(){
        long n=scanner.nextLong();
        long m=scanner.nextLong();
        BigInteger bn=new BigInteger(String.valueOf(n));
        BigInteger bm=new BigInteger(String.valueOf(m));
        BigInteger ans=bn.multiply(bn);
        BigInteger anstmp;
        if(ans.compareTo(bm)==-1){
            System.out.println(-1);
        }else{
            for(long i=1;i<=n;i++){
                long tmp=m/i;
                if(tmp*i<m){
                    tmp++;
                }
                if(tmp>n){
                    continue;
                }
                if(tmp<i){
                    break;
                }
                anstmp=new BigInteger(String.valueOf(tmp*i));
                if(anstmp.compareTo(ans)==-1) ans=anstmp;
            }
            System.out.println(ans);
        }
    }
}
",TLE
Nacre ,abc296/D,Java,"import java.io.PrintWriter;
import java.util.Scanner;

public class Main {
	
	public static void main(String[] args) {
		
		try(Scanner sc = new Scanner(System.in);){
			
			PrintWriter out = new PrintWriter(System.out);
			StringBuilder sb = new StringBuilder();
			
			long n = Long.parseLong(sc.next());
			long m = Long.parseLong(sc.next());
			
			long ans = Long.MAX_VALUE;
			
			for(long i = 1; i < 1000000 && i <= n; i++) {
				long x = (m + i - 1) / i;
				if(i <= n && x <= n) ans = Math.min(ans, i * x);
			}
			
			sb.append(ans == Long.MAX_VALUE ? -1 : ans);
			
			out.println(sb.toString());
			out.flush();
			
		}
		
	}
	
}
","import java.io.PrintWriter;
import java.util.Scanner;

public class Main {
	
	public static void main(String[] args) {
		
		try(Scanner sc = new Scanner(System.in);){
			
			PrintWriter out = new PrintWriter(System.out);
			StringBuilder sb = new StringBuilder();
			
			long n = Long.parseLong(sc.next());
			long m = Long.parseLong(sc.next());
			
			long ans = Long.MAX_VALUE;
			
			for(long i = 1; i <= 1000000 && i <= n; i++) {
				long x = (m + i - 1) / i;
				if(i <= n && x <= n) ans = Math.min(ans, i * x);
			}
			
			sb.append(ans == Long.MAX_VALUE ? -1 : ans);
			
			out.println(sb.toString());
			out.flush();
			
		}
		
	}
	
}
",WA
Nacre ,abc296/D,Java,"import java.io.PrintWriter;
import java.util.Scanner;

public class Main {
	
	public static void main(String[] args) {
		
		try(Scanner sc = new Scanner(System.in);){
			
			PrintWriter out = new PrintWriter(System.out);
			StringBuilder sb = new StringBuilder();
			
			long n = Long.parseLong(sc.next());
			long m = Long.parseLong(sc.next());
			
			long ans = Long.MAX_VALUE;
			
			for(long i = 1; i < 1000000 && i <= n; i++) {
				long x = (m + i - 1) / i;
				if(i <= n && x <= n) ans = Math.min(ans, i * x);
			}
			
			sb.append(ans == Long.MAX_VALUE ? -1 : ans);
			
			out.println(sb.toString());
			out.flush();
			
		}
		
	}
	
}
","import java.io.PrintWriter;
import java.util.Scanner;

public class Main {
	
	public static void main(String[] args) {
		
		try(Scanner sc = new Scanner(System.in);){
			
			PrintWriter out = new PrintWriter(System.out);
			StringBuilder sb = new StringBuilder();
			
			long n = Long.parseLong(sc.next());
			long m = Long.parseLong(sc.next());
			
			long ans = Long.MAX_VALUE;
			
			for(long i = 1; i <= 1000000 && i <= n; i++) {
				long x = (m + i - 1) / i;
				if(i <= n && x <= n) ans = Math.min(ans, i * x);
				if(i > x) break;
			}
			
			sb.append(ans == Long.MAX_VALUE ? -1 : ans);
			
			out.println(sb.toString());
			out.flush();
			
		}
		
	}
	
}
",WA
orangefly ,abc296/D,Java,"import java.util.*;
class Main{
    public static void main(String[] args){
        Scanner in=new Scanner (System.in);
        long a=in.nextLong();
        long b=in.nextLong();
        double B=b,A=a;

        if(B/A>a){
            System.out.println(-1);
            return;
        }

        for(long i=b;;i++){
            for(long j=(long)Math.sqrt(i);j<=a;j++){
                if(i%j==0&&i/j<=a){
                    System.out.println(i);
                    return;
                }
            }
        }
    }
}
","import java.util.*;
class Main{
    public static void main(String[] args){
        Scanner in=new Scanner (System.in);
        long a=in.nextLong();
        long b=in.nextLong();
        double B=b,A=a;

        if(B/A>a){
            System.out.println(-1);
            return;
        }

        for(long i=b;;i++){
            for(long j=Math.max(1,i/a);j<=Math.sqrt(i);j++){
                if(i%j==0&&i/j<=a){
                    System.out.println(i);
                    return;
                }
            }
        }
    }
}
",TLE
orangefly ,abc296/D,Java,"import java.util.*;
class Main{
    public static void main(String[] args){
        Scanner in=new Scanner (System.in);
        long a=in.nextLong();
        long b=in.nextLong();
        double B=b,A=a;

        if(B/A>a){
            System.out.println(-1);
            return;
        }

        for(long i=b;;i++){
            for(long j=Math.max(1,i/a);j<=Math.sqrt(b);j++){
                if(i%j==0&&i/j<=a){
                    System.out.println(i);
                    return;
                }
            }
        }
    }
}
","import java.util.*;
class Main{
    public static void main(String[] args){
        Scanner in=new Scanner (System.in);
        long a=in.nextLong();
        long b=in.nextLong();
        double B=b,A=a;

        if(B/A>a){
            System.out.println(-1);
            return;
        }

        for(long i=b;;i++){
            for(long j=Math.max(1,i/a);j<=Math.sqrt(i);j++){
                if(i%j==0&&i/j<=a){
                    System.out.println(i);
                    return;
                }
            }
        }
    }
}
",TLE
orangefly ,abc296/D,Java,"import java.util.*;
class Main{
    public static void main(String[] args){
        Scanner in=new Scanner (System.in);
        long a=in.nextLong();
        long b=in.nextLong();
        double B=b,A=a;

        if(B/A>a){
            System.out.println(-1);
            return;
        }

        for(long i=b;;i++){
            for(long j=(long)Math.sqrt(b);j<=a;j++){
                if(i%j==0&&i/j<=a){
                    System.out.println(i);
                    return;
                }
            }
        }
    }
}
","import java.util.*;
class Main{
    public static void main(String[] args){
        Scanner in=new Scanner (System.in);
        long a=in.nextLong();
        long b=in.nextLong();
        double B=b,A=a;

        if(B/A>a){
            System.out.println(-1);
            return;
        }

        for(long i=b;;i++){
            for(long j=Math.max(1,i/a);j<=Math.sqrt(i);j++){
                if(i%j==0&&i/j<=a){
                    System.out.println(i);
                    return;
                }
            }
        }
    }
}
",TLE
orangefly ,abc296/D,Java,"import java.util.*;
class Main{
    public static void main(String[] args){
        Scanner in=new Scanner (System.in);
        long a=in.nextLong();
        long b=in.nextLong();
        double B=b,A=a;

        if(B/A>a){
            System.out.println(-1);
            return;
        }

        for(long i=b;;i++){
            for(long j=(int)Math.sqrt(b);j<=a;j++){
                if(i%j==0&&i/j<=a){
                    System.out.println(i);
                    return;
                }
            }
        }
    }
}
","import java.util.*;
class Main{
    public static void main(String[] args){
        Scanner in=new Scanner (System.in);
        long a=in.nextLong();
        long b=in.nextLong();
        double B=b,A=a;

        if(B/A>a){
            System.out.println(-1);
            return;
        }

        for(long i=b;;i++){
            for(long j=Math.max(1,i/a);j<=Math.sqrt(i);j++){
                if(i%j==0&&i/j<=a){
                    System.out.println(i);
                    return;
                }
            }
        }
    }
}
",TLE
amem ,abc296/D,Java,"import java.util.*;
import java.io.*;

public class Main{
  public static void main(String[] args){
    FastScanner sc = new FastScanner();
    long n = sc.nextLong();
    long m = sc.nextLong();
    if(n < Math.sqrt((double)m)){
      System.out.println(-1);
      return;
    }
    long tmp = m;
    long max = (long)Math.sqrt((double)m);
    while(true){
      long min = Math.max(1,tmp/n);
      for(long i = min;i<= max;i++){
        if(tmp%i ==0&& tmp/i <= n){
          System.out.println(tmp);
          return;
        }
      }
      tmp++;
    }
  }
}

class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        }else{
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while(true){
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            }else if(b == -1 || !isPrintableChar(b)){
                return minus ? -n : n;
            }else{
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
","import java.util.*;
import java.io.*;

public class Main{
  public static void main(String[] args){
    FastScanner sc = new FastScanner();
    long n = sc.nextLong();
    long m = sc.nextLong();
    if(n < Math.sqrt((double)m)){
      System.out.println(-1);
      return;
    }
    long tmp = m;
    long max = (long)Math.ceil(Math.sqrt(m));
    while(true){
      long min = Math.max(1,tmp/n);
      for(long i = min;i<= max;i++){
        if(tmp%i ==0&& tmp/i <= n){
          System.out.println(tmp);
          return;
        }
      }
      tmp++;
    }
  }
}

class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        }else{
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while(true){
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            }else if(b == -1 || !isPrintableChar(b)){
                return minus ? -n : n;
            }else{
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
",TLE
amem ,abc296/D,Java,"import java.util.*;
import java.io.*;

public class Main{
  public static void main(String[] args){
    FastScanner sc = new FastScanner();
    long n = sc.nextLong();
    long m = sc.nextLong();
    if(n < Math.sqrt((double)m)){
      System.out.println(-1);
      return;
    }
    long tmp = m;
    long max = (long)Math.sqrt(Math.min(m,n));
    while(true){
      long min = Math.max(1,(tmp/n));
      for(long i = min;i<= max;i++){
        if(tmp%i ==0 && tmp/i <= n){
          System.out.println(tmp);
          return;
        }
      }
      tmp++;
    }
  }
}

class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        }else{
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while(true){
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            }else if(b == -1 || !isPrintableChar(b)){
                return minus ? -n : n;
            }else{
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
","import java.util.*;
import java.io.*;

public class Main{
  public static void main(String[] args){
    FastScanner sc = new FastScanner();
    long n = sc.nextLong();
    long m = sc.nextLong();
    if(n < Math.sqrt((double)m)){
      System.out.println(-1);
      return;
    }
    long tmp = m;
    long max = (long)Math.ceil(Math.sqrt(m));
    
    while(true){
      long min = Math.max(1,(tmp/n));
      
      for(long i = min;i<= max;i++){
        if(tmp%i ==0 && tmp/i <= n){
          System.out.println(tmp);
          return;
        }
      }
      tmp++;
    }
  }
}

class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        }else{
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while(true){
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            }else if(b == -1 || !isPrintableChar(b)){
                return minus ? -n : n;
            }else{
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
",TLE
amem ,abc296/D,Java,"import java.util.*;
import java.io.*;

public class Main{
  public static void main(String[] args){
    FastScanner sc = new FastScanner();
    long n = sc.nextLong();
    long m = sc.nextLong();
    if(n < Math.sqrt((double)m)){
      System.out.println(-1);
      return;
    }
    long tmp = m;
    long max = (long)Math.ceil(Math.sqrt((double)m));
    while(true){
      for(long i = Math.max(1,(tmp/n));i*i<= (m+1);i++){
        if(tmp%i ==0 && tmp/i <= n){
          System.out.println(tmp);
          return;
        }
      }
      tmp++;
    }
  }
}

class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        }else{
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while(true){
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            }else if(b == -1 || !isPrintableChar(b)){
                return minus ? -n : n;
            }else{
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
","import java.util.*;
import java.io.*;

public class Main{
  public static void main(String[] args){
    FastScanner sc = new FastScanner();
    long n = sc.nextLong();
    long m = sc.nextLong();
    if(n < Math.sqrt((double)m)){
      System.out.println(-1);
      return;
    }
    long tmp = m;
    long max = (long)Math.ceil(Math.sqrt((double)m));
    while(true){
      for(long i = Math.max(1,(tmp/n));i<= max;i++){
        if(tmp%i ==0 && tmp/i <= n){
          System.out.println(tmp);
          return;
        }
      }
      tmp++;
    }
  }
}

class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        }else{
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while(true){
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            }else if(b == -1 || !isPrintableChar(b)){
                return minus ? -n : n;
            }else{
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
",TLE
amem ,abc296/D,Java,"import java.util.*;
import java.io.*;

public class Main{
  public static void main(String[] args){
    FastScanner sc = new FastScanner();
    long n = sc.nextLong();
    long m = sc.nextLong();
    if(n < Math.sqrt((double)m)){
      System.out.println(-1);
      return;
    }
    long tmp = m;
    while(true){
      
      for(long i = Math.max(1,(tmp/n));i*i<= Math.min(m,n);i++){
        if(tmp%i ==0 && tmp/i <= n){
          System.out.println(tmp);
          return;
        }
      }
      tmp++;
    }
  }
}

class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        }else{
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while(true){
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            }else if(b == -1 || !isPrintableChar(b)){
                return minus ? -n : n;
            }else{
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
","import java.util.*;
import java.io.*;

public class Main{
  public static void main(String[] args){
    FastScanner sc = new FastScanner();
    long n = sc.nextLong();
    long m = sc.nextLong();
    if(n < Math.sqrt((double)m)){
      System.out.println(-1);
      return;
    }
    long tmp = m;
    while(true){
      for(long i = Math.max(1,(tmp/n));(i-1)*i<= m;i++){
        if(tmp%i ==0 && tmp/i <= n){
          System.out.println(tmp);
          return;
        }
      }
      tmp++;
    }
  }
}

class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        }else{
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while(true){
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            }else if(b == -1 || !isPrintableChar(b)){
                return minus ? -n : n;
            }else{
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
",TLE
amem ,abc296/D,Java,"import java.util.*;
import java.io.*;

public class Main{
  public static void main(String[] args){
    FastScanner sc = new FastScanner();
    long n = sc.nextLong();
    long m = sc.nextLong();
    if(n < Math.sqrt((double)m)){
      System.out.println(-1);
      return;
    }
    long tmp = m;
    long max = (long)Math.sqrt((double)m);
    while(true){
      long min = Math.max(1,tmp/n);
      for(long i = min;i<= max;i++){
        if(tmp%i ==0&& tmp/i <= n){
          System.out.println(tmp);
          return;
        }
      }
      tmp++;
    }
  }
}

class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        }else{
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while(true){
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            }else if(b == -1 || !isPrintableChar(b)){
                return minus ? -n : n;
            }else{
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
","import java.util.*;
import java.io.*;

public class Main{
  public static void main(String[] args){
    FastScanner sc = new FastScanner();
    long n = sc.nextLong();
    long m = sc.nextLong();
    if(n < Math.sqrt((double)m)){
      System.out.println(-1);
      return;
    }
    long tmp = m;
    long max = (long)Math.ceil(Math.sqrt(m));
    
    while(true){
      long min = Math.max(1,(tmp/n));
      
      for(long i = min;i<= max;i++){
        if(tmp%i ==0 && tmp/i <= n){
          System.out.println(tmp);
          return;
        }
      }
      tmp++;
    }
  }
}

class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        }else{
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while(true){
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            }else if(b == -1 || !isPrintableChar(b)){
                return minus ? -n : n;
            }else{
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
",TLE
amem ,abc296/D,Java,"import java.util.*;
import java.io.*;

public class Main{
  public static void main(String[] args){
    FastScanner sc = new FastScanner();
    long n = sc.nextLong();
    long m = sc.nextLong();
    if(n < Math.sqrt((double)m)){
      System.out.println(-1);
      return;
    }
    long tmp = m;
    long max = (long)Math.sqrt(Math.min(m,n));
    while(true){
      long min = Math.max(1,(tmp/n));
      for(long i = min;i<= max;i++){
        if(tmp%i ==0 && tmp/i <= n){
          System.out.println(tmp);
          return;
        }
      }
      tmp++;
    }
  }
}

class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        }else{
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while(true){
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            }else if(b == -1 || !isPrintableChar(b)){
                return minus ? -n : n;
            }else{
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
","import java.util.*;
import java.io.*;

public class Main{
  public static void main(String[] args){
    FastScanner sc = new FastScanner();
    long n = sc.nextLong();
    long m = sc.nextLong();
    if(n < Math.sqrt((double)m)){
      System.out.println(-1);
      return;
    }
    long tmp = m;
    long max = (long)Math.ceil(Math.sqrt(m));
    while(true){
      long min = Math.max(1,tmp/n);
      for(long i = min;i<= max;i++){
        if(tmp%i ==0&& tmp/i <= n){
          System.out.println(tmp);
          return;
        }
      }
      tmp++;
    }
  }
}

class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        }else{
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while(true){
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            }else if(b == -1 || !isPrintableChar(b)){
                return minus ? -n : n;
            }else{
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
",TLE
amem ,abc296/D,Java,"import java.util.*;
import java.io.*;

public class Main{
  public static void main(String[] args){
    FastScanner sc = new FastScanner();
    long n = sc.nextLong();
    long m = sc.nextLong();
    if(n < Math.sqrt((double)m)){
      System.out.println(-1);
      return;
    }
    long tmp = m;
    long max = (long)Math.ceil(Math.sqrt((double)m));
    while(true){
      for(long i = Math.max(1,(tmp/n));i*i<= (m+1);i++){
        if(tmp%i ==0 && tmp/i <= n){
          System.out.println(tmp);
          return;
        }
      }
      tmp++;
    }
  }
}

class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        }else{
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while(true){
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            }else if(b == -1 || !isPrintableChar(b)){
                return minus ? -n : n;
            }else{
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
","import java.util.*;
import java.io.*;

public class Main{
  public static void main(String[] args){
    FastScanner sc = new FastScanner();
    long n = sc.nextLong();
    long m = sc.nextLong();
    if(n < Math.sqrt((double)m)){
      System.out.println(-1);
      return;
    }
    long tmp = m;
    while(true){
      for(long i = Math.max(1,(tmp/n));(i-1)*i<= m;i++){
        if(tmp%i ==0 && tmp/i <= n){
          System.out.println(tmp);
          return;
        }
      }
      tmp++;
    }
  }
}

class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        }else{
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while(true){
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            }else if(b == -1 || !isPrintableChar(b)){
                return minus ? -n : n;
            }else{
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
",TLE
amem ,abc296/D,Java,"import java.util.*;
import java.io.*;

public class Main{
  public static void main(String[] args){
    FastScanner sc = new FastScanner();
    long n = sc.nextLong();
    long m = sc.nextLong();
    if(n < Math.sqrt((double)m)){
      System.out.println(-1);
      return;
    }
    long tmp = m;
    long max = (long)Math.sqrt((double)m);
    while(true){
      long min = Math.max(1,(long)Math.ceil((double)((double)tmp/n)));
      for(long i = min;i<= max;i++){
        if(tmp%i ==0){
          System.out.println(tmp);
          return;
        }
      }
      tmp++;
    }
  }
}

class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        }else{
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while(true){
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            }else if(b == -1 || !isPrintableChar(b)){
                return minus ? -n : n;
            }else{
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
","import java.util.*;
import java.io.*;

public class Main{
  public static void main(String[] args){
    FastScanner sc = new FastScanner();
    long n = sc.nextLong();
    long m = sc.nextLong();
    if(n < Math.sqrt((double)m)){
      System.out.println(-1);
      return;
    }
    long tmp = m;
    long max = (long)Math.ceil(Math.sqrt(m));
    while(true){
      long min = Math.max(1,tmp/n);
      for(long i = min;i<= max;i++){
        if(tmp%i ==0&& tmp/i <= n){
          System.out.println(tmp);
          return;
        }
      }
      tmp++;
    }
  }
}

class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        }else{
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while(true){
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            }else if(b == -1 || !isPrintableChar(b)){
                return minus ? -n : n;
            }else{
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
",TLE
amem ,abc296/D,Java,"import java.util.*;
import java.io.*;

public class Main{
  public static void main(String[] args){
    FastScanner sc = new FastScanner();
    long n = sc.nextLong();
    long m = sc.nextLong();
    if(n < Math.sqrt((double)m)){
      System.out.println(-1);
      return;
    }
    long tmp = m;
    long max = (long)Math.sqrt(Math.min(m,n));
    while(true){
      long min = Math.max(1,(tmp/n));
      for(long i = min;i<= max;i++){
        if(tmp%i ==0 && tmp/i <= n){
          System.out.println(tmp);
          return;
        }
      }
      tmp++;
    }
  }
}

class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        }else{
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while(true){
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            }else if(b == -1 || !isPrintableChar(b)){
                return minus ? -n : n;
            }else{
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
","import java.util.*;
import java.io.*;

public class Main{
  public static void main(String[] args){
    FastScanner sc = new FastScanner();
    long n = sc.nextLong();
    long m = sc.nextLong();
    if(n < Math.sqrt((double)m)){
      System.out.println(-1);
      return;
    }
    long tmp = m;
    long max = (long)Math.ceil(Math.sqrt((double)m));
    while(true){
      for(long i = Math.max(1,(tmp/n));i<= max;i++){
        if(tmp%i ==0 && tmp/i <= n){
          System.out.println(tmp);
          return;
        }
      }
      tmp++;
    }
  }
}

class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        }else{
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while(true){
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            }else if(b == -1 || !isPrintableChar(b)){
                return minus ? -n : n;
            }else{
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
",TLE
amem ,abc296/D,Java,"import java.util.*;
import java.io.*;

public class Main{
  public static void main(String[] args){
    FastScanner sc = new FastScanner();
    long n = sc.nextLong();
    long m = sc.nextLong();
    if(n < Math.sqrt((double)m)){
      System.out.println(-1);
      return;
    }
    long tmp = m;
    while(true){
      
      for(long i = Math.max(1,(tmp/n));i*i<= Math.min(m,n);i++){
        if(tmp%i ==0 && tmp/i <= n){
          System.out.println(tmp);
          return;
        }
      }
      tmp++;
    }
  }
}

class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        }else{
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while(true){
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            }else if(b == -1 || !isPrintableChar(b)){
                return minus ? -n : n;
            }else{
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
","import java.util.*;
import java.io.*;

public class Main{
  public static void main(String[] args){
    FastScanner sc = new FastScanner();
    long n = sc.nextLong();
    long m = sc.nextLong();
    if(n < Math.sqrt((double)m)){
      System.out.println(-1);
      return;
    }
    long tmp = m;
    long max = (long)Math.ceil(Math.sqrt((double)m));
    while(true){
      for(long i = Math.max(1,(tmp/n));i<= max;i++){
        if(tmp%i ==0 && tmp/i <= n){
          System.out.println(tmp);
          return;
        }
      }
      tmp++;
    }
  }
}

class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        }else{
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while(true){
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            }else if(b == -1 || !isPrintableChar(b)){
                return minus ? -n : n;
            }else{
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
",TLE
guchi5 ,abc296/D,Java,"import java.util.Scanner;

public class Main {
    public static void main(String[] args){
        Scanner scan =  new Scanner(System.in);
        double N = scan.nextDouble();
        double M = scan.nextDouble();
        double X = -1;
        double ans =  (double)( Math.pow(10, 18));
        double lim = (double)( Math.pow(10, 18));
        for(double a=1;a<=N;a++){
            double b =Math.ceil(((M+a-1)/a));
            
            if(a > b){   
                break;
            }
            if(b<=N)ans=Math.min(ans,a*b);
        }

        if(ans==lim){
            System.out.println(-1);            
        }else{
            System.out.println((long)ans);
        }
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args){
        Scanner scan =  new Scanner(System.in);
        double N = scan.nextDouble();
        double M = scan.nextDouble();
        double X = -1;
        double ans = 2* (double)( Math.pow(10, 18));
        double lim = 2* (double)( Math.pow(10, 18));
        for(double a=1;a<=lim;a++){
            double b =Math.ceil(((M)/a));
            
            
            if(a > b){   
                break;
            }
            if(b<=N)ans=Math.min(ans,a*b);
            
        }

        if(ans>=lim){
            System.out.println(-1);            
        }else{
            System.out.println((long)ans);
        }
    }
}
",WA
kaman ,abc296/D,Java,"import java.util.*;
import java.io.*;
public class Main {
    static final long INF = 1l << 60;
    static final int inf = 1 << 30;
    static final int MOD = 998244353;
    static final double EPS = 1e-9;
    public static void main(String[] args) {
        FastScanner sc = new FastScanner();
        PrintWriter pw = new PrintWriter(System.out);
        long n = sc.nextLong(), m = sc.nextLong();
        long ans = INF;
        for (long a = 1; a*a <= m+1; a++) {
            long b = (m-1)/a + 1;
            if (check(a, n) && check(b, n)) {
                ans = Math.min(ans, a*b);
            }
        }
        pw.println(ans == INF ? -1 : ans);
        pw.close();
    }
    static boolean check(long x, long n) {
        return 1<=x && x<=n;
    }
}
class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        } else {
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while (true) {
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            } else if (b == -1 || !isPrintableChar(b)) {
                return minus ? -n : n;
            } else {
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
","import java.util.*;
import java.io.*;
public class Main {
    static final long INF = 1l << 60;
    static final int inf = 1 << 30;
    static final int MOD = 998244353;
    static final double EPS = 1e-9;
    public static void main(String[] args) {
        FastScanner sc = new FastScanner();
        PrintWriter pw = new PrintWriter(System.out);
        long n = sc.nextLong(), m = sc.nextLong();
        long ans = INF;
        for (long a = 1; a*a <= 2l*m; a++) {
            long b = (m-1)/a + 1;
            if (check(a, n) && check(b, n)) {
                ans = Math.min(ans, a*b);
            }
        }
        pw.println(ans == INF ? -1 : ans);
        pw.close();
    }
    static boolean check(long x, long n) {
        return 1<=x && x<=n;
    }
}
class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        } else {
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while (true) {
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            } else if (b == -1 || !isPrintableChar(b)) {
                return minus ? -n : n;
            } else {
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
",WA
kaman ,abc296/D,Java,"import java.util.*;
import java.io.*;
public class Main {
    static final long INF = 1l << 60;
    static final int inf = 1 << 30;
    static final int MOD = 998244353;
    static final double EPS = 1e-9;
    public static void main(String[] args) {
        FastScanner sc = new FastScanner();
        PrintWriter pw = new PrintWriter(System.out);
        long n = sc.nextLong(), m = sc.nextLong();
        long ans = INF;
        for (long a = 1; a*a <= m; a++) {
            long b = (m-1)/a + 1;
            if (check(a, n) && check(b, n)) {
                ans = Math.min(ans, a*b);
            }
        }
        pw.println(ans == INF ? -1 : ans);
        pw.close();
    }
    static boolean check(long x, long n) {
        return 1<=x && x<=n;
    }
}
class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        } else {
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while (true) {
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            } else if (b == -1 || !isPrintableChar(b)) {
                return minus ? -n : n;
            } else {
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
","import java.util.*;
import java.io.*;
public class Main {
    static final long INF = 1l << 60;
    static final int inf = 1 << 30;
    static final int MOD = 998244353;
    static final double EPS = 1e-9;
    public static void main(String[] args) {
        FastScanner sc = new FastScanner();
        PrintWriter pw = new PrintWriter(System.out);
        long n = sc.nextLong(), m = sc.nextLong();
        long ans = INF;
        for (long a = 1; a*a <= 2l*m; a++) {
            long b = (m-1)/a + 1;
            if (check(a, n) && check(b, n)) {
                ans = Math.min(ans, a*b);
            }
        }
        pw.println(ans == INF ? -1 : ans);
        pw.close();
    }
    static boolean check(long x, long n) {
        return 1<=x && x<=n;
    }
}
class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        } else {
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while (true) {
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            } else if (b == -1 || !isPrintableChar(b)) {
                return minus ? -n : n;
            } else {
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
",WA
T45K ,abc296/D,Java,"
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.Objects;
import java.util.StringTokenizer;
import java.util.stream.LongStream;

public class Main {
    public static void main(final String[] args) {
        final FastScanner scanner = new FastScanner(System.in);
        final long n = scanner.nextLong();
        final long m = scanner.nextLong();
        final long answer = LongStream.rangeClosed(1, Math.min(n, (long) Math.sqrt(m)))
            .map(l -> {
                final long div = (m + l - 1) / l;
                if (div <= n) {
                    return div * l;
                } else {
                    return -1;
                }
            })
            .filter(l -> l > 0)
            .min()
            .orElse(-1);
        System.out.println(answer);
    }

    private static class FastScanner {
        private final BufferedReader reader;
        private StringTokenizer tokenizer;

        FastScanner(final InputStream in) {
            reader = new BufferedReader(new InputStreamReader(in));
            try {
                tokenizer = new StringTokenizer(reader.readLine());
            } catch (IOException e) {
                throw new RuntimeException();
            }
        }

        String next() {
            if (!tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException();
                }
            }
            return tokenizer.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            if (!tokenizer.hasMoreTokens()) {
                try {
                    return reader.readLine();
                } catch (IOException e) {
                    throw new RuntimeException();
                }
            }
            return tokenizer.nextToken(""\n"");
        }
    }


    private static class Pair<T1, T2> {
        final T1 first;
        final T2 second;

        Pair(final T1 first, final T2 second) {
            this.first = first;
            this.second = second;
        }

        @Override
        public boolean equals(final Object o) {
            if (this == o) {
                return true;
            }
            if (o == null || getClass() != o.getClass()) {
                return false;
            }
            final Pair<?, ?> pair = (Pair<?, ?>) o;
            return Objects.equals(first, pair.first) && Objects.equals(second, pair.second);
        }

        @Override
        public int hashCode() {
            return Objects.hash(first, second);
        }
    }
}
","
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.Objects;
import java.util.StringTokenizer;
import java.util.stream.LongStream;

public class Main {
    public static void main(final String[] args) {
        final FastScanner scanner = new FastScanner(System.in);
        final long n = scanner.nextLong();
        final long m = scanner.nextLong();
        final long answer = LongStream.rangeClosed(1, Math.min(n, (long) Math.sqrt(m) + 1))
            .map(l -> {
                final long div = (m + l - 1) / l;
                if (div <= n) {
                    return div * l;
                } else {
                    return -1;
                }
            })
            .filter(l -> l > 0)
            .min()
            .orElse(-1);
        System.out.println(answer);
    }

    private static class FastScanner {
        private final BufferedReader reader;
        private StringTokenizer tokenizer;

        FastScanner(final InputStream in) {
            reader = new BufferedReader(new InputStreamReader(in));
            try {
                tokenizer = new StringTokenizer(reader.readLine());
            } catch (IOException e) {
                throw new RuntimeException();
            }
        }

        String next() {
            if (!tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException();
                }
            }
            return tokenizer.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            if (!tokenizer.hasMoreTokens()) {
                try {
                    return reader.readLine();
                } catch (IOException e) {
                    throw new RuntimeException();
                }
            }
            return tokenizer.nextToken(""\n"");
        }
    }


    private static class Pair<T1, T2> {
        final T1 first;
        final T2 second;

        Pair(final T1 first, final T2 second) {
            this.first = first;
            this.second = second;
        }

        @Override
        public boolean equals(final Object o) {
            if (this == o) {
                return true;
            }
            if (o == null || getClass() != o.getClass()) {
                return false;
            }
            final Pair<?, ?> pair = (Pair<?, ?>) o;
            return Objects.equals(first, pair.first) && Objects.equals(second, pair.second);
        }

        @Override
        public int hashCode() {
            return Objects.hash(first, second);
        }
    }
}
",WA
mahuateng ,abc296/D,Java,"import java.io.*;
import java.util.*;
public class Main {
	
	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
		StringTokenizer st = new StringTokenizer(br.readLine());
		long n = Long.parseLong(st.nextToken()), m = Long.parseLong(st.nextToken());
		if(n>=m) {
			pw.println(m);
		}else {
			long ans = Long.MAX_VALUE;
			for(long i = 1; i <= Math.ceil(100*Math.sqrt(m)); ++i) {
				long d = (m+i-1)/i;
				if(d<=n) ans = Math.min(ans, d*i);;
				if(i>d) break;
			}
			if(ans == Long.MAX_VALUE) pw.println(-1);
			else pw.println(ans);
		}
		pw.close();
	}
	
}
","import java.io.*;
import java.util.*;
public class Main {
	
	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
		StringTokenizer st = new StringTokenizer(br.readLine());
		long n = Long.parseLong(st.nextToken()), m = Long.parseLong(st.nextToken());
		if(n>=m) {
			pw.println(m);
		}else {
			long ans = Long.MAX_VALUE;
			for(long i = 1; i <= n; ++i) {
				long d = (m+i-1)/i;
				if(d<=n) ans = Math.min(ans, d*i);;
				if(i>d) break;
			}
			if(ans == Long.MAX_VALUE) pw.println(-1);
			else pw.println(ans);
		}
		pw.close();
	}
	
}
",WA
mahuateng ,abc296/D,Java,"import java.io.*;
import java.util.*;
public class Main {
	
	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
		StringTokenizer st = new StringTokenizer(br.readLine());
		long n = Long.parseLong(st.nextToken()), m = Long.parseLong(st.nextToken());
		if(n>=m) {
			pw.println(m);
		}else {
			long ans = Long.MAX_VALUE;
			for(long i = 1; i <= Math.ceil(10*Math.sqrt(m)); ++i) {
				long d = (m+i-1)/i;
				if(d<=n) ans = Math.min(ans, d*i);;
				if(i>d) break;
			}
			if(ans == Long.MAX_VALUE) pw.println(-1);
			else pw.println(ans);
		}
		pw.close();
	}
	
}
","import java.io.*;
import java.util.*;
public class Main {
	
	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
		StringTokenizer st = new StringTokenizer(br.readLine());
		long n = Long.parseLong(st.nextToken()), m = Long.parseLong(st.nextToken());
		if(n>=m) {
			pw.println(m);
		}else {
			long ans = Long.MAX_VALUE;
			for(long i = 1; i <= n; ++i) {
				long d = (m+i-1)/i;
				if(d<=n) ans = Math.min(ans, d*i);;
				if(i>d) break;
			}
			if(ans == Long.MAX_VALUE) pw.println(-1);
			else pw.println(ans);
		}
		pw.close();
	}
	
}
",WA
shivam010 ,abc296/D,Java,"import java.util.*;
class Main {
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);
        long n=sc.nextLong();
        long m=sc.nextLong();
        long sq=(long)Math.ceil(Math.sqrt((double)m));
        if(n<sq) System.out.println(-1);
        else if(n>=m) System.out.println(m);
        else {
          sq=(long)Math.sqrt(m);
          long q=0, lw=sq;
          long ans=Long.MAX_VALUE;
          do {
            if(lw!=sq) ans=Math.min(ans, (lw+1)*q);
            q=m/lw;
            if(m%lw!=0) q++;
            lw--;
          }while(q<=n);
          System.out.println(ans);
        }
    }
}
","import java.util.*;
class Main {
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);
        long n=sc.nextLong();
        long m=sc.nextLong();
        long sq=(long)Math.ceil(Math.sqrt((double)m));
        if(n<sq) System.out.println(-1);
        else if(n>=m) System.out.println(m);
        else {
          sq=(long)Math.sqrt(m);
          long q=0, lw=sq;
          long ans=sq*sq;
          if(sq*sq<m) ans=(sq+1)*(sq+1);
          do {
            if(lw!=sq) ans=Math.min(ans, (lw+1)*q);
            q=m/lw;
            if(m%lw!=0) q++;
            lw--;
          }while(q<=n);
          System.out.println(ans);
        }
    }
}
",WA
Daydreamer_ ,abc296/D,Java,"import java.math.BigInteger;
import java.util.Scanner;
public class Main {

    public static long min = -1;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        long n = scanner.nextLong();
        long m = scanner.nextLong();

        BigInteger bigInteger = BigInteger.valueOf(n*n);

        if(bigInteger.compareTo(BigInteger.valueOf(m))<0){
            System.out.println(-1);
            return;
        }





        for(long a = 1; a <= n; a++){

            long b = findB(a,n,m);


            if(min == -1 && b > -1){
                min = a * b;
            } else if (b > -1) {
                
                if(a*b < min){
                    min = a*b;


                }

            }

            if(a >= b && b > -1){
                break;
            }


        }



        System.out.println(min);

    }

    private static long findB(long a, long n, long m) {

        long b = m / a;
        if(m % a != 0){
            b++;
        }

        if( b <= n){
            return b;
        } else {
            return -1;
        }



    }
}
","import java.math.BigInteger;
import java.util.Scanner;
public class Main {

    public static long min = -1;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        long n = scanner.nextLong();
        long m = scanner.nextLong();

        BigInteger bigInteger = BigInteger.valueOf(n).multiply(BigInteger.valueOf(n));

        

        if(bigInteger.compareTo(BigInteger.valueOf(m))<0){
            System.out.println(-1);
            return;
        }






        for(long a = 1; a <= n; a++){

            long b = findB(a,n,m);


            if(min == -1 && b > -1){
                min = a * b;
            } else if (b > -1) {
                
                if(a*b < min){
                    min = a*b;


                }

            }

            if(a >= b && b > -1){
                break;
            }


        }



        System.out.println(min);

    }

    private static long findB(long a, long n, long m) {

        long b = m / a;
        if(m % a != 0){
            b++;
        }

        if( b <= n){
            return b;
        } else {
            return -1;
        }



    }
}
",WA
Daydreamer_ ,abc296/D,Java,"import java.util.Scanner;
public class Main {

    public static long min = -1;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        long n = scanner.nextLong();
        long m = scanner.nextLong();

        if(n*n < m){
            System.out.println(-1);
            return;
        }





        for(long a = 1; a <= n; a++){

            long b = findB(a,n,m);


            if(min == -1 && b > -1){
                min = a * b;
            } else if (b > -1) {
                
                if(a*b < min){
                    min = a*b;


                }

            }

            if(a >= b && b > -1){
                break;
            }


        }



        System.out.println(min);

    }

    private static long findB(long a, long n, long m) {

        long b = m / a;
        if(m % a != 0){
            b++;
        }

        if( b <= n){
            return b;
        } else {
            return -1;
        }



    }
}
","import java.util.Scanner;
public class Main {

    public static long min = -1;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        long n = scanner.nextLong();
        long m = scanner.nextLong();










        for(long a = 1; a <= n; a++){

            long b = findB(a,n,m);


            if(min == -1 && b > -1){
                min = a * b;
            } else if (b > -1) {
                
                if(a*b < min){
                    min = a*b;


                }

            }

            if(a >= b && b > -1){
                break;
            }


        }



        System.out.println(min);

    }

    private static long findB(long a, long n, long m) {

        long b = m / a;
        if(m % a != 0){
            b++;
        }

        if( b <= n){
            return b;
        } else {
            return -1;
        }



    }
}
",WA
Daigoro1 ,abc296/D,Java,"import java.util.*;
public class Main {
  public static void main(String[] args){
	Scanner sc = new Scanner(System.in);
    long n = sc.nextLong();
    long m = sc.nextLong();
    long ans = Long.MAX_VALUE;
    
    
    for(long i = 1;i<=n;i++){
      long b = (m+i-1)/i;
      if(b<=n) ans = Math.min(ans,i*b);
      if(i>b) break;
    }
    
    System.out.println(ans);
    
 }
}
","import java.util.*;
public class Main {
  public static void main(String[] args){
	Scanner sc = new Scanner(System.in);
    long n = sc.nextLong();
    long m = sc.nextLong();
    long ans = Long.MAX_VALUE;
    
    
    for(long i = 1;i<=n;i++){
      long b = (m+i-1)/i;
      if(b<=n) ans = Math.min(ans,i*b);
      if(i>b) break;
    }
    
    if(ans == Long.MAX_VALUE){
      System.out.println(-1);
    }else{
      System.out.println(ans);
    }

 }
}
",WA
yiyz ,abc295/E,Java,"import java.nio.charset.StandardCharsets;
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in, StandardCharsets.UTF_8);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        int k = scanner.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextInt();
        }
        System.out.println(solve(n, m, k, a));
    }

    private static final int MAX_N = 5010;
    private static final int MOD = 998244353;
    private static final long[][] binom = new long[MAX_N][MAX_N];

    static {
        for (int i = 0; i < MAX_N; i++) {
            binom[i][0] = 1;
            for (int j = 1; j <= i; j++) {
                binom[i][j] = (binom[i - 1][j - 1] + binom[i - 1][j]) % MOD;
            }
        }
    }

    private static String solve(int n, int m, int k, int[] a) {
        long ans = 0L;
        for (int i = 1; i <= m; i++) {
            int rem = n + 1 - k;
            int zero = 0;
            for (int j : a) {
                if (j >= i) rem--;
                if (j == 0) zero++;
            }
            if (rem < 0 || rem > zero) {
                ans += (rem < 0 ? 1 : 0);
                continue;
            }
            
            long p = (m + 1 - i) * quickPow(m, MOD - 2);
            long[] pPow = new long[zero + 1];
            long[] qPow = new long[zero + 1];
            Arrays.fill(pPow, 1);
            Arrays.fill(qPow, 1);
            for (int j = 0; j < zero; j++) {
                pPow[j + 1] = (pPow[j] * p % MOD + MOD) % MOD;
                qPow[j + 1] = (qPow[j] * (1 - p) % MOD + MOD) % MOD;
            }
            for (int j = rem; j <= zero; j++) {
                long x = binom[zero][j] * pPow[j] % MOD * qPow[zero - j] % MOD;
                ans = (ans + x) % MOD;
            }
        }
        return String.valueOf(ans);
    }

    
    private static long quickPow(long a, long b) {
        long res = 1L;
        while (b > 0) {
            if ((b & 1) == 1) {
                res = res * a % MOD;
            }
            a = a * a % MOD;
            b >>= 1;
        }
        return res;
    }
}

","import java.nio.charset.StandardCharsets;
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in, StandardCharsets.UTF_8);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        int k = scanner.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextInt();
        }
        System.out.println(solve(n, m, k, a));
    }

    private static final int MAX_N = 5010;
    private static final int MOD = 998244353;
    private static final long[][] binom = new long[MAX_N][MAX_N];

    static {
        for (int i = 0; i < MAX_N; i++) {
            binom[i][0] = 1;
            for (int j = 1; j <= i; j++) {
                binom[i][j] = (binom[i - 1][j - 1] + binom[i - 1][j]) % MOD;
            }
        }
    }

    private static String solve(int n, int m, int k, int[] a) {
        long ans = 0L;
        for (int i = 1; i <= m; i++) {
            int rem = n + 1 - k;
            int zero = 0;
            for (int j : a) {
                if (j >= i) rem--;
                if (j == 0) zero++;
            }
            if (rem < 0 || rem > zero) {
                ans += (rem < 0 ? 1 : 0);
                continue;
            }
            
            long p = (m + 1 - i) * quickPow(m, MOD - 2) % MOD;
            long[] pPow = new long[zero + 1];
            long[] qPow = new long[zero + 1];
            Arrays.fill(pPow, 1);
            Arrays.fill(qPow, 1);
            for (int j = 0; j < zero; j++) {
                pPow[j + 1] = (pPow[j] * p % MOD + MOD) % MOD;
                qPow[j + 1] = (qPow[j] * (1 - p) % MOD + MOD) % MOD;
            }
            for (int j = rem; j <= zero; j++) {
                long x = binom[zero][j] * pPow[j] % MOD * qPow[zero - j] % MOD;
                ans = (ans + x) % MOD;
            }
        }
        return String.valueOf(ans);
    }

    
    private static long quickPow(long a, long b) {
        long res = 1L;
        while (b > 0) {
            if ((b & 1) == 1) {
                res = res * a % MOD;
            }
            a = a * a % MOD;
            b >>= 1;
        }
        return res;
    }
}

",WA
yuuki_n ,abc296/F,Java,"import java.io.IOException;
import java.io.InputStream;
import java.util.Arrays;

class Main{
  public static void main(String[] args){
    var in = new MyReader(System.in);
    int N = in.it();
    int[] A = new int[N];
    int[] B = new int[N];
    int[] cntA = new int[N];
    int[] cntB = new int[N];
    boolean has2 = false;
    for (int i = 0;i < N;i++) {
      A[i] = in.it() -1;
      cntA[A[i]]++;
      if (cntA[A[i]] == 2)
        has2 = true;
    }
    for (int i = 0;i < N;i++) {
      B[i] = in.it() -1;
      cntB[B[i]]++;
    }
    if (!Arrays.equals(cntA,cntB)) {
      System.out.println(""No"");
      return;
    }

    if (has2) {
      System.out.println(""Yes"");
      return;
    }

    System.out.println(tento(A,N) == tento(B,N) ? ""Yes"" : ""No"");

  }

  static byte tento(int[] arr,int max){
    BIT bit = new BIT(max);
    byte ans = 0;
    for (var a:arr) {
      ans ^= bit.sum(a +1);
      bit.upd(a,(byte) 1);
    }
    return ans;
  }
}

class BIT{
  int n;
  byte[] bit;

  BIT(int n){
    this.n = n;
    bit = new byte[n +1];
  }

  void upd(int x,byte v){
    for (x++;x <= n;x += x &-x)
      bit[x] += v;
  }

  byte sum(int x){
    byte ret = 0;
    for (;x > 0;x -= x &-x)
      ret ^= bit[x];
    return ret;
  }

}

class MyReader{
  byte[] buf = new byte[1 <<16];
  int ptr = 0;
  int tail = 0;
  InputStream in;

  MyReader(InputStream in){ this.in = in; }

  byte read(){
    if (ptr == tail)
      try {
        tail = in.read(buf);
        ptr = 0;
      } catch (IOException e) {}
    return buf[ptr++];
  }

  boolean isPrintable(byte c){ return 32 < c && c < 127; }

  boolean isNum(byte c){ return 47 < c && c < 58; }

  byte nextPrintable(){
    byte ret = read();
    while (!isPrintable(ret))
      ret = read();
    return ret;
  }

  int it(){
    byte i = nextPrintable();
    boolean negative = i == 45;
    int n = negative ? 0 : i -'0';
    while (isPrintable(i = read()))
      n = 10 *n +i -'0';
    return negative ? -n : n;
  }

}
","import java.io.IOException;
import java.io.InputStream;
import java.util.Arrays;

class Main{
  public static void main(String[] args){
    var in = new MyReader(System.in);
    int N = in.it();
    int[] A = new int[N];
    int[] B = new int[N];
    int[] cntA = new int[N];
    int[] cntB = new int[N];
    boolean has2 = false;
    for (int i = 0;i < N;i++) {
      A[i] = in.it() -1;
      cntA[A[i]]++;
      if (cntA[A[i]] == 2)
        has2 = true;
    }
    for (int i = 0;i < N;i++) {
      B[i] = in.it() -1;
      cntB[B[i]]++;
    }
    if (!Arrays.equals(cntA,cntB)) {
      System.out.println(""No"");
      return;
    }

    if (has2) {
      System.out.println(""Yes"");
      return;
    }

    System.out.println(tento(A,N) == tento(B,N) ? ""Yes"" : ""No"");

  }

  static byte tento(int[] arr,int max){
    BIT bit = new BIT(max);
    byte ans = 0;
    for (var a:arr) {
      ans ^= bit.sum(a +1);
      bit.upd(a,(byte) 1);
    }
    return ans;
  }
}

class BIT{
  int n;
  byte[] bit;

  BIT(int n){
    this.n = n;
    bit = new byte[n +1];
  }

  void upd(int x,byte v){
    for (x++;x <= n;x += x &-x)
      bit[x] ^= v;
  }

  byte sum(int x){
    byte ret = 0;
    for (;x > 0;x -= x &-x)
      ret ^= bit[x];
    return ret;
  }

}

class MyReader{
  byte[] buf = new byte[1 <<16];
  int ptr = 0;
  int tail = 0;
  InputStream in;

  MyReader(InputStream in){ this.in = in; }

  byte read(){
    if (ptr == tail)
      try {
        tail = in.read(buf);
        ptr = 0;
      } catch (IOException e) {}
    return buf[ptr++];
  }

  boolean isPrintable(byte c){ return 32 < c && c < 127; }

  boolean isNum(byte c){ return 47 < c && c < 58; }

  byte nextPrintable(){
    byte ret = read();
    while (!isPrintable(ret))
      ret = read();
    return ret;
  }

  int it(){
    byte i = nextPrintable();
    boolean negative = i == 45;
    int n = negative ? 0 : i -'0';
    while (isPrintable(i = read()))
      n = 10 *n +i -'0';
    return negative ? -n : n;
  }

}
",WA
yuuki_n ,abc296/F,Java,"import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

class Main{
  public static void main(String[] args){
    MyReader in = new MyReader(System.in);
    MyWriter out = new MyWriter(System.out);
    char[] yes = {'Y', 'e', 's'};
    char[] no = {'N', 'o'};
    int N = in.it();
    int[] cnt = new int[N];
    boolean has2 = false;
    BIT bit = new BIT(N);
    byte sum = 0;
    for (int i = 0;i < N;i++) {
      int a = in.it() -1;
      cnt[a]++;
      if (cnt[a] == 2)
        has2 = true;
      sum ^= bit.sum(a +1);
      bit.upd(a,(byte) 1);
    }
    for (int i = 0;i < N;i++) {
      int b = in.it() -1;
      cnt[b]--;
      if (cnt[b] < 0) {
        out.println(no);
        return;
      }
      sum ^= bit.sum(b +1);
      bit.upd(b,(byte) 1);
    }

    if (has2) {
      out.println(yes);
      return;
    }

    out.println(sum == 0 ? yes : no);
  }

  static byte tento(int[] arr,int max){
    BIT bit = new BIT(max);
    byte ans = 0;
    for (var a:arr) {
      ans ^= bit.sum(a +1);
      bit.upd(a,(byte) 1);
    }
    return ans;
  }
}

class BIT{
  int n;
  byte[] bit;

  BIT(int n){
    this.n = n;
    bit = new byte[n +1];
  }

  void upd(int x,byte v){
    for (x++;x <= n;x += x &-x)
      bit[x] ^= v;
  }

  byte sum(int x){
    byte ret = 0;
    for (;x > 0;x -= x &-x)
      ret ^= bit[x];
    return ret;
  }

}

class MyReader{
  byte[] buf = new byte[1 <<16];
  int ptr = 0;
  int tail = 0;
  InputStream in;

  MyReader(InputStream in){ this.in = in; }

  byte read(){
    if (ptr == tail)
      try {
        tail = in.read(buf);
        ptr = 0;
      } catch (IOException e) {}
    return buf[ptr++];
  }

  boolean isPrintable(byte c){ return 32 < c && c < 127; }

  boolean isNum(byte c){ return 47 < c && c < 58; }

  byte nextPrintable(){
    byte ret = read();
    while (!isPrintable(ret))
      ret = read();
    return ret;
  }

  int it(){
    byte i = nextPrintable();
    boolean negative = i == 45;
    int n = negative ? 0 : i -'0';
    while (isPrintable(i = read()))
      n = 10 *n +i -'0';
    return negative ? -n : n;
  }

}

class MyWriter{
  OutputStream out;
  byte[] buf = new byte[1 <<16];
  byte[] ibuf = new byte[20];
  int tail = 0;

  MyWriter(OutputStream out){ this.out = out; }

  public void println(char[] cs){
    for (char b:cs)
      write((byte) b);
    ln();
    flush();
  }

  void flush(){
    try {
      out.write(buf,0,tail);
      tail = 0;
    } catch (IOException e) {
      e.printStackTrace();
    }
  }

  void sp(){ write((byte) ' '); }

  void ln(){ write((byte) '\n'); }

  void write(byte b){
    buf[tail++] = b;
    if (tail == buf.length)
      flush();
  }

}
","import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Arrays;

class Main{
  public static void main(String[] args){
    MyReader in = new MyReader(System.in);
    MyWriter out = new MyWriter(System.out);
    char[] yes = {'Y', 'e', 's'};
    char[] no = {'N', 'o'};
    int N = in.it();
    int[] cnt = new int[N];
    boolean has2 = false;
    BIT bit = new BIT(N);
    byte sum = 0;
    for (int i = 0;i < N;i++) {
      int a = in.it() -1;
      cnt[a]++;
      if (cnt[a] == 2)
        has2 = true;
      sum ^= bit.sum(a +1);
      bit.upd(a,(byte) 1);
    }
    Arrays.fill(bit.bit,(byte) 0);
    for (int i = 0;i < N;i++) {
      int b = in.it() -1;
      cnt[b]--;
      if (cnt[b] < 0) {
        out.println(no);
        return;
      }
      sum ^= bit.sum(b +1);
      bit.upd(b,(byte) 1);
    }

    if (has2) {
      out.println(yes);
      return;
    }

    out.println(sum == 0 ? yes : no);
  }

  static byte tento(int[] arr,int max){
    BIT bit = new BIT(max);
    byte ans = 0;
    for (var a:arr) {
      ans ^= bit.sum(a +1);
      bit.upd(a,(byte) 1);
    }
    return ans;
  }
}

class BIT{
  int n;
  byte[] bit;

  BIT(int n){
    this.n = n;
    bit = new byte[n +1];
  }

  void upd(int x,byte v){
    for (x++;x <= n;x += x &-x)
      bit[x] ^= v;
  }

  byte sum(int x){
    byte ret = 0;
    for (;x > 0;x -= x &-x)
      ret ^= bit[x];
    return ret;
  }

}

class MyReader{
  byte[] buf = new byte[1 <<16];
  int ptr = 0;
  int tail = 0;
  InputStream in;

  MyReader(InputStream in){ this.in = in; }

  byte read(){
    if (ptr == tail)
      try {
        tail = in.read(buf);
        ptr = 0;
      } catch (IOException e) {}
    return buf[ptr++];
  }

  boolean isPrintable(byte c){ return 32 < c && c < 127; }

  boolean isNum(byte c){ return 47 < c && c < 58; }

  byte nextPrintable(){
    byte ret = read();
    while (!isPrintable(ret))
      ret = read();
    return ret;
  }

  int it(){
    byte i = nextPrintable();
    boolean negative = i == 45;
    int n = negative ? 0 : i -'0';
    while (isPrintable(i = read()))
      n = 10 *n +i -'0';
    return negative ? -n : n;
  }

}

class MyWriter{
  OutputStream out;
  byte[] buf = new byte[1 <<16];
  byte[] ibuf = new byte[20];
  int tail = 0;

  MyWriter(OutputStream out){ this.out = out; }

  public void println(char[] cs){
    for (char b:cs)
      write((byte) b);
    ln();
    flush();
  }

  void flush(){
    try {
      out.write(buf,0,tail);
      tail = 0;
    } catch (IOException e) {
      e.printStackTrace();
    }
  }

  void sp(){ write((byte) ' '); }

  void ln(){ write((byte) '\n'); }

  void write(byte b){
    buf[tail++] = b;
    if (tail == buf.length)
      flush();
  }

}
",WA
BaS_HI_O2 ,abc296/B,Java,"import java.util.*;

public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        String str = """";
        char[] row = {'1','2','3','4','5','6','7','8'};
        char[] column = {'a','b','c','d','e','f','g','h'};
        for(int i=0; i<8; i++){
            str = sc.next();
            for(int j=0; j<8; j++){
                if(str.charAt(j) == '*'){
                    System.out.println(String.valueOf(column[j])+String.valueOf(row[i]));
                }
            }
        }
    }
}
","import java.util.*;

public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        String str = """";
        char[] row = {'1','2','3','4','5','6','7','8'};
        char[] column = {'a','b','c','d','e','f','g','h'};
        for(int i=0; i<8; i++){
            str = sc.next();
            for(int j=0; j<8; j++){
                if(str.charAt(j) == '*'){
                    System.out.println(String.valueOf(column[j])+String.valueOf(row[7-i]));
                }
            }
        }
    }
}
",WA
ahnguye ,abc296/B,Java,"
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        char[][] board = new char[8][8];

        String result = """";
        for (int i = 0; i < 8; ++i) {
            char[] charString = sc.next().toCharArray();
            for (int j = 0; j < 8; ++j) {
                if (charString[j] == '*') {
                    result += (char)('a' + (7-i));
                    result += (char)('1' + j);
                }
            }
        }
        System.out.println(result);
    }
}

","
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        char[][] board = new char[8][8];

        String result = """";
        for (int i = 0; i < 8; ++i) {
            char[] charString = sc.next().toCharArray();
            for (int j = 0; j < 8; ++j) {
                if (charString[j] == '*') {
                    result += (char)('a' + j);
                    result += (char)('1' + 7 - i);
                }
            }
        }
        System.out.println(result);
    }
}
",WA
azurite_ ,abc296/B,Java,"import java.util.Scanner;
public class chessboard {
	
	static char[] cols = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'};

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in).useDelimiter("""");
		
		for (int i = 0; i < 8; i++) {
			for (int j = 0; j < 8; j++) {
				if(sc.next().contains(""*"")) {
					System.out.print(cols[j]);
					System.out.println(8 - i);
				}
			}
			
			sc.nextLine();
		}
		
		sc.close();

	}

}
","import java.util.Scanner;
public class Main {
	
	static char[] cols = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'};

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in).useDelimiter("""");
		
		for (int i = 0; i < 8; i++) {
			for (int j = 0; j < 8; j++) {
				if(sc.next().contains(""*"")) {
					System.out.print(cols[j]);
					System.out.println(8 - i);
				}
			}
			
			sc.nextLine();
		}
		
		sc.close();

	}

}
",CE
MeraNaamShivam ,abc296/B,Java,"import java.util.*;
public class Main
{
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		String[] s=new String[8];
		for(int i=0;i<8;i++){
		    s[i]=sc.next();
		}
		for(int i=7;i>=0;i--){
		    for(int j=0;j<7;j++){
		        if(s[i].charAt(j)=='*'){
		            int mm=97+j;
		            char aa=(char)mm;
		            System.out.print(aa);
		            System.out.print(8-i);
		            break;
		        }
		    }
		}
	}
}
","import java.util.*;
public class Main
{
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		String[] s=new String[8];
		for(int i=0;i<8;i++){
		    s[i]=sc.next();
		}
		for(int i=7;i>=0;i--){
		    for(int j=0;j<=7;j++){
		        if(s[i].charAt(j)=='*'){
		            int mm=97+j;
		            char aa=(char)mm;
		            System.out.print(aa);
		            System.out.print(8-i);
		            break;
		        }
		    }
		}
	}
}
",WA
MeraNaamShivam ,abc296/B,Java,"public class Main
{
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		String[] s=new String[8];
		for(int i=0;i<8;i++){
		    s[i]=sc.next();
		}
		for(int i=7;i>=0;i--){
		    for(int j=0;j<=7;j++){
		        if(s[i].charAt(j)=='*'){
		            int mm=97+j;
		            char aa=(char)mm;
		            System.out.print(aa);
		            System.out.print(8-i);
		            break;
		        }
		    }
		}
	}
}
","import java.util.*;
public class Main
{
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		String[] s=new String[8];
		for(int i=0;i<8;i++){
		    s[i]=sc.next();
		}
		for(int i=7;i>=0;i--){
		    for(int j=0;j<=7;j++){
		        if(s[i].charAt(j)=='*'){
		            int mm=97+j;
		            char aa=(char)mm;
		            System.out.print(aa);
		            System.out.print(8-i);
		            break;
		        }
		    }
		}
	}
}
",CE
liuqiangdong ,abc296/B,Java,"import java.util.Scanner;

public class G
{
   public static void main(String[] args)
   {
       Scanner sc = new Scanner(System.in);
       String r1 = sc.nextLine();
       String r2 = sc.nextLine();
       String r3 = sc.nextLine();
       String r4 = sc.nextLine();
       String r5 = sc.nextLine();
       String r6 = sc.nextLine();
       String r7 = sc.nextLine();
        String r8 = sc.nextLine();
       String[] list =  {r1, r2, r3, r4, r5, r6, r7, r8 };
       
       System.out.println(ubicador(list));
   }
   
   public static String ubicador(String[] lista)
   {      
        
        int col = 0;
        int row= 0;
        int tamanio = lista.length;
        
        for(int i = 0; i < lista.length; i++){
            col = lista[i].indexOf(""*"");
            
            if(col != -1)
            {
                row = tamanio;
                break;
            }
            tamanio--;
        }
        String[] letras = {""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m"", ""n"", ""o""};
        
        return letras[col] + String.valueOf(row);
        
    }
}
","import java.util.Scanner;

public class Main
{
   public static void main(String[] args)
   {
       Scanner sc = new Scanner(System.in);
       String r1 = sc.nextLine();
       String r2 = sc.nextLine();
       String r3 = sc.nextLine();
       String r4 = sc.nextLine();
       String r5 = sc.nextLine();
       String r6 = sc.nextLine();
       String r7 = sc.nextLine();
        String r8 = sc.nextLine();
       String[] list =  {r1, r2, r3, r4, r5, r6, r7, r8 };
       
       System.out.println(ubicador(list));
   }
   
   public static String ubicador(String[] lista)
   {      
        
        int col = 0;
        int row= 0;
        int tamanio = lista.length;
        
        for(int i = 0; i < lista.length; i++){
            col = lista[i].indexOf(""*"");
            
            if(col != -1)
            {
                row = tamanio;
                break;
            }
            tamanio--;
        }
        String[] letras = {""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m"", ""n"", ""o""};
        
        return letras[col] + String.valueOf(row);
        
    }
}
",CE
Karlsooon ,abc296/B,Java,"package Prblm;

import java.util.HashMap;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        HashMap<Integer,Character> map = new HashMap<>();
        map.put(8,'h');
        map.put(7,'g');
        map.put(6,'f');
        map.put(5,'e');
        map.put(4,'d');
        map.put(3,'c');
        map.put(2,'b');
        map.put(1,'a');
        for (int i =8; i >0; i--) {
            String s = in.nextLine();
            for (int j = 0; j < s.length() ; j++) {
                char c = s.charAt(j);
                if(c=='*') {
                    System.out.print(map.get(j+1));
                    System.out.print(i);
                }
            }
        }
    }
}
","import java.util.HashMap;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        HashMap<Integer,Character> map = new HashMap<>();
        map.put(8,'h');
        map.put(7,'g');
        map.put(6,'f');
        map.put(5,'e');
        map.put(4,'d');
        map.put(3,'c');
        map.put(2,'b');
        map.put(1,'a');
        for (int i =8; i >0; i--) {
            String s = in.nextLine();
            for (int j = 0; j < s.length() ; j++) {
                char c = s.charAt(j);
                if(c=='*') {
                    System.out.print(map.get(j+1));
                    System.out.print(i);
                }
            }
        }
    }
}
",RE
yyyyMMddT ,abc296/B,Java,"import java.util.*;

public class Main {

    public static void main(String[] args) {
       Scanner sc = new Scanner(System.in);
        Map<Integer, String> map = Map.of(0, ""a"", 1, ""b"", 2, ""c"", 3, ""d"", 4, ""e"", 5, ""f"", 6, ""g"", 7, ""h"");
        for (int i = 0; i < 8; i++) {
            int a = Arrays.asList(sc.nextLine().split("""")).indexOf(""*"");
            if (a != -1) {
                System.out.println(map.get(a) + (9 % (i + 1)));
                break;
            }
        }
    }
}
","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Map<Integer, String> map = Map.of(0, ""a"", 1, ""b"", 2, ""c"", 3, ""d"", 4, ""e"", 5, ""f"", 6, ""g"", 7, ""h"");
        for (int i = 0; i < 8; i++) {
            int a = Arrays.asList(sc.nextLine().split("""")).indexOf(""*"");
            if (a != -1) {
                System.out.println(map.get(a) + (8 - (i) % 8));
                break;
            }
        }

    }
}
",WA
nattoun ,abc296/B,Java,"import java.util.*;

class Main
{
  public static void main(String[] args)
  {
    Scanner sc = new Scanner(System.in);
	var row = new String[8];
    char count;
    for(int i=0;i<8;i++)
    {
      row[i] = sc.next();
    }
    for(int i=0;i<8;i++)
    {
      count = 'a';
      var ch = new char[8];
      ch = row[i].toCharArray();
      for(int j=0;j<8;j++)
      {
        if(ch[j] == '*')
        {
          System.out.println(count + """"+ (i+1));
          break;
        }
        count++;
      }
    }
  }
}
","import java.util.*;

class Main
{
  public static void main(String[] args)
  {
    Scanner sc = new Scanner(System.in);
	var row = new String[8];
    char count;
    for(int i=0;i<8;i++)
    {
      row[i] = sc.next();
    }
    for(int i=0;i<8;i++)
    {
      count = 'a';
      var ch = new char[8];
      ch = row[i].toCharArray();
      for(int j=0;j<8;j++)
      {
        if(ch[j] == '*')
        {
          System.out.println(count + """"+ (8-i));
          break;
        }
        count++;
      }
    }
  }
}
",WA
nattoun ,abc296/B,Java,"import java.util.*;

class Main
{
  public static void main(String[] args)
  {
    Scanner sc = new Scanner(System.in);
	var row = new String[8];
    char count;
    for(int i=0;i<8;i++)
    {
      row[i] = sc.next();
    }
    for(int i=0;i<8;i++)
    {
      count = 'a';
      var ch = new char[8];
      ch = row[i].toCharArray();
      for(int i=0;i<8;i++)
      {
        if(ch[i] == '*')
        {
          System.out.println(count + """"+ (i+1));
          break;
        }
        count++;
      }
    }
  }
}
","import java.util.*;

class Main
{
  public static void main(String[] args)
  {
    Scanner sc = new Scanner(System.in);
	var row = new String[8];
    char count;
    for(int i=0;i<8;i++)
    {
      row[i] = sc.next();
    }
    for(int i=0;i<8;i++)
    {
      count = 'a';
      var ch = new char[8];
      ch = row[i].toCharArray();
      for(int j=0;j<8;j++)
      {
        if(ch[j] == '*')
        {
          System.out.println(count + """"+ (8-i));
          break;
        }
        count++;
      }
    }
  }
}
",CE
nattoun ,abc296/B,Java,"import java.util.*;

class Main
{
  public static void main(String[] args)
  {
    Scanner sc = new Scanner(System.in);
	var row = new String[8];
    char count;
    for(int i=0;i<8;i++)
    {
      row[i] = sc.next();
    }
    for(int i=0;i<8;i++)
    {
      count = 'a';
      var ch = new char[8];
      ch = row[i].toCharArray();
      for(var i=0;i<8;i++)
      {
        if(ch[i] == '*')
        {
          System.out.println(count + """"+ (i+1));
          break;
        }
        count++;
      }
    }
  }
}
","import java.util.*;

class Main
{
  public static void main(String[] args)
  {
    Scanner sc = new Scanner(System.in);
	var row = new String[8];
    char count;
    for(int i=0;i<8;i++)
    {
      row[i] = sc.next();
    }
    for(int i=0;i<8;i++)
    {
      count = 'a';
      var ch = new char[8];
      ch = row[i].toCharArray();
      for(int j=0;j<8;j++)
      {
        if(ch[j] == '*')
        {
          System.out.println(count + """"+ (8-i));
          break;
        }
        count++;
      }
    }
  }
}
",CE
nattoun ,abc296/B,Java,"import java.util.*;

class Main
{
  public static void main(String[] args)
  {
    Scanner sc = new Scanner(System.in);
	var row = new String[8];
    char count;
    for(int i=0;i<8;i++)
    {
      row[i] = sc.next();
    }
    for(int i=0;i<8;i++)
    {
      count = 'a';
      var ch = new char[8];
      ch = row[i].toCharArray();
      for(char b:ch)
      {
        if(b == '*')
        {
          System.out.println(count + """"+ i);
          break;
        }
        count++;
      }
    }
  }
}
","import java.util.*;

class Main
{
  public static void main(String[] args)
  {
    Scanner sc = new Scanner(System.in);
	var row = new String[8];
    char count;
    for(int i=0;i<8;i++)
    {
      row[i] = sc.next();
    }
    for(int i=0;i<8;i++)
    {
      count = 'a';
      var ch = new char[8];
      ch = row[i].toCharArray();
      for(int j=0;j<8;j++)
      {
        if(ch[j] == '*')
        {
          System.out.println(count + """"+ (8-i));
          break;
        }
        count++;
      }
    }
  }
}
",WA
nattoun ,abc296/B,Java,"import java.util.*;

class Main
{
  public static void main(String[] args)
  {
    Scanner sc = new Scanner(System.in);
	var row = new String[8];
    char count;
    for(int i=0;i<8;i++)
    {
      row[i] = sc.next();
    }
    for(int i=0;i<8;i++)
    {
      count = 'a';
      var ch = new char[8];
      ch = row[i].toCharArray();
      for(char b:ch)
      {
        if(b == '*')
        {
          System.out.println(count + """"+ i);
          break;
        }
        count++
      }
    }
  }
}
","import java.util.*;

class Main
{
  public static void main(String[] args)
  {
    Scanner sc = new Scanner(System.in);
	var row = new String[8];
    char count;
    for(int i=0;i<8;i++)
    {
      row[i] = sc.next();
    }
    for(int i=0;i<8;i++)
    {
      count = 'a';
      var ch = new char[8];
      ch = row[i].toCharArray();
      for(int j=0;j<8;j++)
      {
        if(ch[j] == '*')
        {
          System.out.println(count + """"+ (8-i));
          break;
        }
        count++;
      }
    }
  }
}
",CE
nyahonyahotm01 ,abc296/B,Java,"import java.util.ArrayList;
import java.util.Scanner;

public class Main {
    public static void main(String args[]) {
        String[] alpha = {""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h""};
        Scanner sc = new Scanner(System.in);
        int n = 8;
        ArrayList<String> list = new ArrayList<>();

        int ast = 0;

        for(int i = 0; i < n; i++) {
            String str = sc.nextLine();
            list.add(str);
            if(str.contains(""*"")) {
                ast = i;
            }
        }
        int ast1 = list.get(ast).indexOf(""*"");
        String place = alpha[ast1] + (8 - ast + 1);
        System.out.println(place);

        sc.close();
    } 
}
","import java.util.ArrayList;
import java.util.Scanner;

public class Main {
    public static void main(String args[]) {
        String[] alpha = {""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h""};
        Scanner sc = new Scanner(System.in);
        int n = 8;
        ArrayList<String> list = new ArrayList<>();

        int ast = 0;

        for(int i = 0; i < n; i++) {
            String str = sc.nextLine();
            list.add(str);
            if(str.contains(""*"")) {
                ast = i;
            }
        }
        int ast1 = list.get(ast).indexOf(""*"");
        String place = alpha[ast1] + (8 - ast);
        System.out.println(place);

        sc.close();
    } 
}
",WA
nyahonyahotm01 ,abc296/B,Java,"import java.util.Scanner;

public class Main {
    public static void main(String args[]) {
        String[] alpha = {""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h""};
        Scanner sc = new Scanner(System.in);
        int n = 8;
        ArrayList<String> list = new ArrayList<>();

        int ast = 0;

        for(int i = 0; i < n; i++) {
            String str = sc.nextLine();
            list.add(str);
            if(str.contains(""*"")) {
                ast = i;
            }
        }
        int ast1 = list.get(ast).indexOf(""*"");
        String place = alpha[ast] + (8 - ast1 + 1);
        System.out.println(place);

        sc.close();
    } 
}
","import java.util.ArrayList;
import java.util.Scanner;

public class Main {
    public static void main(String args[]) {
        String[] alpha = {""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h""};
        Scanner sc = new Scanner(System.in);
        int n = 8;
        ArrayList<String> list = new ArrayList<>();

        int ast = 0;

        for(int i = 0; i < n; i++) {
            String str = sc.nextLine();
            list.add(str);
            if(str.contains(""*"")) {
                ast = i;
            }
        }
        int ast1 = list.get(ast).indexOf(""*"");
        String place = alpha[ast1] + (8 - ast);
        System.out.println(place);

        sc.close();
    } 
}
",CE
Suvasish ,abc296/B,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));

        ArrayList<char[]> al = new ArrayList<>();

        for (int i = 0; i < 8; i++) {
            String s = in.readLine();
            al.add(s.toCharArray());
        }

        for (char[] itm: al)
            System.out.println(Arrays.toString(itm));

        Map<Integer, Character> col = new HashMap<Integer, Character>() {
            {
                put(0, 'a');
                put(1, 'b');
                put(2, 'c');
                put(3, 'd');
                put(4, 'e');
                put(5, 'f');
                put(6, 'g');
                put(7, 'h');
            }
        };

        Map<Integer, Integer> row = new HashMap<Integer, Integer>() {
            {
                put(0, 1);
                put(1, 2);
                put(2, 3);
                put(3, 4);
                put(4, 5);
                put(5, 6);
                put(6, 7);
                put(7, 8);
            }
        };

        String ans = """";
        boolean kl = false;
        for (int i = 0; i < al.size(); i++) {
            if (kl) break;
            char[] carr = al.get(i);
            for (int j = 0; j < carr.length; j++) {
                if (carr[j] == '*') {
                    ans += col.get(j) + Integer.toString(row.get(al.size() - (i+1)));
                    System.out.println(ans);
                    kl = true;
                    break;
                }
            }
        }

    }
}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));

        ArrayList<char[]> al = new ArrayList<>();

        for (int i = 0; i < 8; i++) {
            String s = in.readLine();
            al.add(s.toCharArray());
        }

        Map<Integer, Character> col = new HashMap<Integer, Character>() {
            {
                put(0, 'a');
                put(1, 'b');
                put(2, 'c');
                put(3, 'd');
                put(4, 'e');
                put(5, 'f');
                put(6, 'g');
                put(7, 'h');
            }
        };

        Map<Integer, Integer> row = new HashMap<Integer, Integer>() {
            {
                put(0, 1);
                put(1, 2);
                put(2, 3);
                put(3, 4);
                put(4, 5);
                put(5, 6);
                put(6, 7);
                put(7, 8);
            }
        };

        String ans = """";
        boolean kl = false;
        for (int i = 0; i < al.size(); i++) {
            if (kl) break;
            char[] carr = al.get(i);
            for (int j = 0; j < carr.length; j++) {
                if (carr[j] == '*') {
                    ans += col.get(j) + Integer.toString(row.get(al.size() - (i+1)));
                    System.out.println(ans);
                    kl = true;
                    break;
                }
            }
        }

    }
}
",WA
yoppy456 ,abc296/B,Java,"import java.util.*;

public class Main {
    public static void main(String[] args) throws Exception {
    Scanner s = new Scanner(System.in);
    char[] abc = new char[]{'a','b','c','d','e','f','g','h'};
    int[] num = new int[]{1,2,3,4,5,6,7,8};
    String array[] = new String[8];
    int a = -1;
    int b = -1;
    for(int i = 0; i < 8; i++){
        array[i] = s.next();     
    }

    for(int i = 0; i < 8; i++){
        if(array[i].lastIndexOf(""*"") != -1){
            a = array[i].lastIndexOf(""*"");
            b = i;
        }
    }
    System.out.println(abc[a]+num[b]);
    }   


}
","import java.util.*;

public class Main {
    public static void main(String[] args) throws Exception {
    Scanner s = new Scanner(System.in);
    char[] abc = new char[]{'a','b','c','d','e','f','g','h'};
    int[] num = new int[]{1,2,3,4,5,6,7,8};
    String array[] = new String[8];
    int a = -1;
    int b = -1;
    for(int i = 0; i < 8; i++){
        array[i] = s.next();     
    }

    for(int i = 0; i < 8; i++){
        if(array[i].lastIndexOf(""*"") != -1){
            a = array[i].lastIndexOf(""*"");
            b = i;
        }
    }
    System.out.print(abc[a]);
    System.out.println(8-b);
    }   


}
",WA
rhymes17 ,abc293/A,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.StringTokenizer;
import java.util.*;

public class a{
	
	public static void main(String[] args) throws Exception{
	 	FastScanner fs = new FastScanner();
	 	

		

		
		

		
		
		
		
		
		
	 	String s = fs.next();
	 	char[] temp = s.toCharArray();
	 	int n = s.length();

	 	for(int i=1; i<n; i += 2){
	 		char ch = temp[i];
	 		char tch = temp[i-1];

	 		char te = ch;
	 		ch = tch;
	 		tch = te;

	 		temp[i] = ch;
	 		temp[i-1] = tch;
	 		
	 	}
	 	String t = new String(temp);
	 	System.out.println(t);
	}

	
		

	
	public static void swap(int[] arr, int l, int r){
		int temp = arr[l];
		arr[l] = arr[r];
		arr[r] = temp;
	} 

	
	public static long sumArr(int[] arr){
		long sum = 0;
		int n = arr.length;
		for(int i=0; i<n; i++){
			sum += arr[i];
		}

		return sum;
	}

    
	public static void print(int[] arr)
	{
        
	    for(int x: arr)
	        System.out.print(x+"" "");
	        System.out.println();
	}

	
    static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("""");
		String next() {
			while (!st.hasMoreTokens())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}

		int[] readArr(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}

		long nextLong() {
			return Long.parseLong(next());
		}
	}
}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.StringTokenizer;
import java.util.*;

public class Main{
	
	public static void main(String[] args) throws Exception{
	 	FastScanner fs = new FastScanner();
	 	

		

		
		

		
		
		
		
		
		
	 	String s = fs.next();
	 	char[] temp = s.toCharArray();
	 	int n = s.length();

	 	for(int i=1; i<n; i += 2){
	 		char ch = temp[i];
	 		char tch = temp[i-1];

	 		char te = ch;
	 		ch = tch;
	 		tch = te;

	 		temp[i] = ch;
	 		temp[i-1] = tch;
	 		
	 	}
	 	String t = new String(temp);
	 	System.out.println(t);
	}

	
		

	
	public static void swap(int[] arr, int l, int r){
		int temp = arr[l];
		arr[l] = arr[r];
		arr[r] = temp;
	} 

	
	public static long sumArr(int[] arr){
		long sum = 0;
		int n = arr.length;
		for(int i=0; i<n; i++){
			sum += arr[i];
		}

		return sum;
	}

    
	public static void print(int[] arr)
	{
        
	    for(int x: arr)
	        System.out.print(x+"" "");
	        System.out.println();
	}

	
    static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("""");
		String next() {
			while (!st.hasMoreTokens())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}

		int[] readArr(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}

		long nextLong() {
			return Long.parseLong(next());
		}
	}
}
",CE
Harshit_3905 ,abc293/A,Java,"import java.io.*;
import java.util.*;

public class Sol {
    public static void main(String[] args) throws java.lang.Exception {
        FastReader in = new FastReader();
        String s = in.next();
        for (int i = 1; i < s.length(); i += 2) {
            System.out.print(s.charAt(i));
            System.out.print(s.charAt(i - 1));
        }

    }

    static void sort(int a[]) {
        List<Integer> list = new ArrayList<>();
        for (int i = 0; i < a.length; i++)
            list.add(a[i]);
        Collections.sort(list);
        for (int i = 0; i < a.length; i++)
            a[i] = list.get(i);
    }

    static int gcd(int a, int b) {
        if (a == 0)
            return b;
        return gcd(b % a, a);
    }

    static int lcm(int a, int b) {
        return (a / gcd(a, b)) * b;
    }
}

class FastReader {
    BufferedReader br;
    StringTokenizer st;

    public FastReader() {
        br = new BufferedReader(new InputStreamReader(System.in));
    }

    String next() {
        while (st == null || !st.hasMoreElements()) {
            try {
                st = new StringTokenizer(br.readLine());
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        return st.nextToken();
    }

    int nextInt() {
        return Integer.parseInt(next());
    }

    long nextLong() {
        return Long.parseLong(next());
    }

    double nextDouble() {
        return Double.parseDouble(next());
    }

    float nextFloat() {
        return Float.parseFloat(next());
    }

    boolean nextBoolean() {
        return Boolean.parseBoolean(next());
    }

    String nextLine() {
        String str = """";
        try {
            str = br.readLine();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return str;
    }
}
","import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) throws java.lang.Exception {
        FastReader in = new FastReader();
        String s = in.next();
        for (int i = 1; i < s.length(); i += 2) {
            System.out.print(s.charAt(i));
            System.out.print(s.charAt(i - 1));
        }

    }

    static void sort(int a[]) {
        List<Integer> list = new ArrayList<>();
        for (int i = 0; i < a.length; i++)
            list.add(a[i]);
        Collections.sort(list);
        for (int i = 0; i < a.length; i++)
            a[i] = list.get(i);
    }

    static int gcd(int a, int b) {
        if (a == 0)
            return b;
        return gcd(b % a, a);
    }

    static int lcm(int a, int b) {
        return (a / gcd(a, b)) * b;
    }
}

class FastReader {
    BufferedReader br;
    StringTokenizer st;

    public FastReader() {
        br = new BufferedReader(new InputStreamReader(System.in));
    }

    String next() {
        while (st == null || !st.hasMoreElements()) {
            try {
                st = new StringTokenizer(br.readLine());
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        return st.nextToken();
    }

    int nextInt() {
        return Integer.parseInt(next());
    }

    long nextLong() {
        return Long.parseLong(next());
    }

    double nextDouble() {
        return Double.parseDouble(next());
    }

    float nextFloat() {
        return Float.parseFloat(next());
    }

    boolean nextBoolean() {
        return Boolean.parseBoolean(next());
    }

    String nextLine() {
        String str = """";
        try {
            str = br.readLine();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return str;
    }
}
",CE
OverFIow ,abc293/A,Java,"import java.util.*;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String input = sc.nextLine();
        int n = input.length();
        char[] string = input.toCharArray();

        for(int i = 1; i <= n / 2; i++) {
            int l = 2 * i - 1 - 1;
            int r = 2 * i - 1;

            char swap = string[l];
            string[l] = string[r];
            string[r] = swap;
        }

        String output = String.valueOf(string);

        System.out.println(output);
    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String input = sc.nextLine();
        int n = input.length();
        char[] string = input.toCharArray();

        for(int i = 1; i <= n / 2; i++) {
            int l = 2 * i - 1 - 1;
            int r = 2 * i - 1;

            char swap = string[l];
            string[l] = string[r];
            string[r] = swap;
        }

        String output = String.valueOf(string);

        System.out.println(output);
    }
}
",CE
OverFIow ,abc293/A,Java,"import java.util.*;

public class contest293A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String input = sc.nextLine();
        int n = input.length();
        char[] string = input.toCharArray();

        for(int i = 1; i <= n / 2; i++) {
            int l = 2 * i - 1 - 1;
            int r = 2 * i - 1;

            char swap = string[l];
            string[l] = string[r];
            string[r] = swap;
        }

        String output = String.valueOf(string);

        System.out.println(output);
    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String input = sc.nextLine();
        int n = input.length();
        char[] string = input.toCharArray();

        for(int i = 1; i <= n / 2; i++) {
            int l = 2 * i - 1 - 1;
            int r = 2 * i - 1;

            char swap = string[l];
            string[l] = string[r];
            string[r] = swap;
        }

        String output = String.valueOf(string);

        System.out.println(output);
    }
}
",CE
Ashraf_Ali ,abc293/A,Java,"import java.util.*;
import java.io.*;

public class Main
    public static void main(String[] args) {
        try {
            BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
            String value = reader.readLine();
            StringBuffer buffer = new StringBuffer();
            for (int i = 0; i < value.length(); i = i + 2) {
                buffer.append(value.charAt(i + 1));
                buffer.append(value.charAt(i));
            }
            System.out.println(buffer.toString());
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
}
","import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) {
        try {
            BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
            String value = reader.readLine();
            StringBuffer buffer = new StringBuffer();
            for (int i = 0; i < value.length(); i = i + 2) {
                buffer.append(value.charAt(i + 1));
                buffer.append(value.charAt(i));
            }
            System.out.println(buffer.toString());
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
}
",CE
opa ,abc293/A,Java,"import java.util.Scanner;

public class SwapOddAndEven {
    public static void main(String[] args){
        Scanner s = new Scanner(System.in);
        String S = s.nextLine();
        char[] c = S.toCharArray();

        for (int i=0; i<(S.length())/2; i++){
            char temp = c[2*i];
            c[2*i] = c[2*i+1];
            c[2*i+1] = temp;
        }
        String Sorted = new String(c);
        System.out.println(Sorted);

        s.close();
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args){
        Scanner s = new Scanner(System.in);
        String S = s.nextLine();
        char[] c = S.toCharArray();

        for (int i=0; i<(S.length())/2; i++){
            char temp = c[2*i];
            c[2*i] = c[2*i+1];
            c[2*i+1] = temp;
        }
        String Sorted = new String(c);
        System.out.println(Sorted);

        s.close();
    }
}
",CE
proveus ,abc293/A,Java,"import java.util.Scanner;

public class test {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		String s = sc.next();
		int n = s.length();
		if(n % 2 != 0) n -= 1;
		for(int i = 0 ; i < n; i += 2){
			System.out.print(s.charAt((i + 1)));
			System.out.print(s.charAt((i)));
		}
		if(s.length() % 2 != 0){
			System.out.print(s.charAt(s.length() - 1));
		}
    }
}
","import java.util.Scanner;

class Main{
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		String s = sc.next();
		int n = s.length();
		if(n % 2 != 0) n -= 1;
		for(int i = 0 ; i < n; i += 2){
			System.out.print(s.charAt((i + 1)));
			System.out.print(s.charAt((i)));
		}
		if(s.length() % 2 != 0){
			System.out.print(s.charAt(s.length() - 1));
		}
    }
}
",CE
JokerCodes ,abc293/A,Java,"import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc= new Scanner(System.in);
		String x=sc.next();
		for(int i=0,j=1;i<=x.length()/2;i+=2,j+=2) {
			System.out.print(x.charAt(j));
			System.out.print(x.charAt(i));
		}
		if(x.length()%2!=0) System.out.print(x.charAt(x.length()-1));
	}

}
","import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc= new Scanner(System.in);
		String x=sc.next();
		for(int i=0,j=1;j<x.length();i+=2,j+=2) {
			System.out.print(x.charAt(j));
			System.out.print(x.charAt(i));
		}
		if(x.length()%2!=0) System.out.print(x.charAt(x.length()-1));
	}
}
",WA
JokerCodes ,abc293/A,Java,"import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc= new Scanner(System.in);
		String x=sc.next();
		for(int i=0,j=1;i<=x.length()/2;i+=2,j+=2) {
			System.out.print(x.charAt(j));
			System.out.print(x.charAt(i));
		}
		System.out.print(x.charAt(x.length()-1));
	}

}
","import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc= new Scanner(System.in);
		String x=sc.next();
		for(int i=0,j=1;j<x.length();i+=2,j+=2) {
			System.out.print(x.charAt(j));
			System.out.print(x.charAt(i));
		}
		if(x.length()%2!=0) System.out.print(x.charAt(x.length()-1));
	}
}
",WA
Anondai ,abc293/A,Java,"
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        
        
        
        
        

        String[] lines = getStdin();
        for (int i = 0, l = lines.size(); i < l; i++) {
            String str = lines[i];
            StringBuilder sb = new StringBuilder();
            for (int j = 1; j < str.length / 2 + 1; j++) {
                String reversTarget1 = str.substring(j * 2 - 2, j * 2 - 1);
                String reversTarget2 = str.substring(j * 2 - 1, j * 2);
                String afterReverse = reversTarget2 + reversTarget1;
                sb.append(afterReverse);
            }


            System.out.println(sb);
        }
    }

    private static String[] getStdin() {
        Scanner scanner = new Scanner(System.in);
        ArrayList<String> lines = new ArrayList<>();
        while (scanner.hasNext()) {
            lines.add(scanner.nextLine());
        }
        return lines.toArray(new String[lines.size()]);
    }
}
","import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
 
public class Main {
 
    public static void main(String[] args) {
        
        
        
        
        
 
        String[] lines = getStdin();
        for (int i = 0, l = lines.length; i < l; i++) {
            String str = lines[i];
            StringBuilder sb = new StringBuilder();
            for (int j = 1; j < str.length() / 2 + 1; j++) {
                String reversTarget1 = str.substring(j * 2 - 2, j * 2 - 1);
                String reversTarget2 = str.substring(j * 2 - 1, j * 2);
                String afterReverse = reversTarget2 + reversTarget1;
                sb.append(afterReverse);
            }
 

            System.out.println(sb);
        }
    }
 
    private static String[] getStdin() {
        Scanner scanner = new Scanner(System.in);
        ArrayList<String> lines = new ArrayList<>();
        while (scanner.hasNext()) {
            lines.add(scanner.nextLine());
        }
        return lines.toArray(new String[lines.size()]);
    }
}
",CE
esupaanya ,abc293/A,Java,"import java.util.Scanner;
public class swap {
    public static void main(String[] args){
        Scanner stdIn = new Scanner(System.in);
        String S = stdIn.nextLine();
        int N = S.length() / 2;
        String answer = """";
        for(int i = 0; i < N; i++){
            answer = answer + S.charAt(2*i + 1);
            answer = answer + S.charAt(2*i);
        }
        System.out.println(answer);
    }
}
","import java.util.Scanner;
public class Main {
    public static void main(String[] args){
        Scanner stdIn = new Scanner(System.in);
        String S = stdIn.nextLine();
        int N = S.length() / 2;
        String answer = """";
        for(int i = 0; i < N; i++){
            answer = answer + S.charAt(2*i + 1);
            answer = answer + S.charAt(2*i);
        }
        System.out.println(answer);
    }
}
",CE
esupaanya ,abc293/A,Java,"import java.util.Scanner;
public class main {
    public static void main(String[] args){
        Scanner stdIn = new Scanner(System.in);
        String S = stdIn.nextLine();
        int N = S.length() / 2;
        String answer = """";
        for(int i = 0; i < N; i++){
            answer = answer + S.charAt(2*i + 1);
            answer = answer + S.charAt(2*i);
        }
        System.out.println(answer);
    }
}
","import java.util.Scanner;
public class Main {
    public static void main(String[] args){
        Scanner stdIn = new Scanner(System.in);
        String S = stdIn.nextLine();
        int N = S.length() / 2;
        String answer = """";
        for(int i = 0; i < N; i++){
            answer = answer + S.charAt(2*i + 1);
            answer = answer + S.charAt(2*i);
        }
        System.out.println(answer);
    }
}
",CE
AndyS999 ,abc293/A,Java,"import java.util.Scanner;


public class Main{
    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        String S = scan.nextLine();
        char[] list = S.toCharArray();

        for(int i = 0; i <= list.length-2; i+=2){
            
            char temp = list[i]; 
            list[i] = list[i+1];
            list[i+1] = temp;
        }

        
        
        
    }
}
","import java.util.Scanner;


public class Main{
    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        String S = scan.nextLine();
        char[] list = S.toCharArray();

        for(int i = 0; i <= list.length-2; i+=2){
            
            char temp = list[i]; 
            list[i] = list[i+1];
            list[i+1] = temp;
            System.out.printf(""%s%s"",list[i],list[i+1]);
        }
    }
}
",WA
p1crin ,abc293/A,Java,"
package ABC293_A;

import java.util.Scanner;

public class ABC293_A {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		String S = sc.nextLine();
		sc.close();

		String[] sArray = S.split(""(?!^)"");
		String[] temp = new String[sArray.length];

		for (int i = 0; i < sArray.length - 1; i += 2) {
			temp[i] = sArray[i + 1];
			temp[i + 1] = sArray[i];
		}

		String ans = String.join("""", temp);

		System.out.println(ans);
	}

}
","import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		String S = sc.nextLine();
		sc.close();

		String[] sArray = S.split(""(?!^)"");
		String[] temp = new String[sArray.length];

		for (int i = 0; i < sArray.length - 1; i += 2) {
			temp[i] = sArray[i + 1];
			temp[i + 1] = sArray[i];
		}

		String ans = String.join("""", temp);

		System.out.println(ans);
	}

}
",CE
muxii ,abc293/A,Java,"import java.util.Scanner;

public class SwapOddandEven {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String line =  sc.nextLine();
        String[] arr = line.split("""");
        int i = 0;
        while(i < arr.length){
            swap(arr,i ,i+1);
            i = i+2;
        }
        for(int j = 0;j<arr.length;j++){
            System.out.printf(""%s"",arr[j]);
        }
    }
    public static void swap(String[] arr,int start,int end){
        String temp = arr[start];
        arr[start] = arr[end];
        arr[end] = temp;
    }
}
   
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String line =  sc.nextLine();
        String[] arr = line.split("""");
        int i = 0;
        while(i < arr.length){
            swap(arr,i ,i+1);
            i = i+2;
        }
        for(int j = 0;j<arr.length;j++){
            System.out.printf(""%s"",arr[j]);
        }
    }
    public static void swap(String[] arr,int start,int end){
        String temp = arr[start];
        arr[start] = arr[end];
        arr[end] = temp;
    }
}
   
",CE
maverick1729 ,abc293/A,Java,"import java.io.*;
import java.util.*;

public class AtBC2931 {
    static final boolean debug = false;

    public static void main(String[] args) {
        FastScanner fs = new FastScanner();
        PrintWriter out = new PrintWriter(System.out);
        String s=fs.next();
        int l=s.length();
        char ch[]=s.toCharArray();
        for(int i=1;i<=l/2;i++)
        {
            char a=s.charAt(2*i-2);
            char b=s.charAt(2*i-1);
            ch[2*i-2]=b;
            ch[2*i-1]=a;
        }
        StringBuilder ans=new StringBuilder();
        for(char c:ch)
            ans.append(c);
        System.out.println(ans.toString());
        out.close();
    }

    static boolean inRange(int lookingFor, int[] indexesOf, int curL, int curR) {
        int index = indexesOf[lookingFor];
        return index >= curL && index <= curR;
    }

    static long nC2(long n) {
        return n * (n + 1) / 2;
    }

    static final Random random = new Random();
    static final int mod = 1_000_000_007;

    static void ruffleSort(int[] a) {
        int n = a.length;
        for (int i = 0; i < n; i++) {
            int oi = random.nextInt(n), temp = a[oi];
            a[oi] = a[i];
            a[i] = temp;
        }
        Arrays.sort(a);
    }

    static long add(long a, long b) {
        return (a + b) % mod;
    }

    static long sub(long a, long b) {
        return ((a - b) % mod + mod) % mod;
    }

    static long mul(long a, long b) {
        return (a * b) % mod;
    }

    static long exp(long base, long exp) {
        if (exp == 0) return 1;
        long half = exp(base, exp / 2);
        if (exp % 2 == 0) return mul(half, half);
        return mul(half, mul(half, base));
    }

    static long[] factorials = new long[2_000_001];
    static long[] invFactorials = new long[2_000_001];

    static void precompFacts() {
        factorials[0] = invFactorials[0] = 1;
        for (int i = 1; i < factorials.length; i++) factorials[i] = mul(factorials[i - 1], i);
        invFactorials[factorials.length - 1] = exp(factorials[factorials.length - 1], mod - 2);
        for (int i = invFactorials.length - 2; i >= 0; i--)
            invFactorials[i] = mul(invFactorials[i + 1], i + 1);
    }

    static long nCk(int n, int k) {
        return mul(factorials[n], mul(invFactorials[k], invFactorials[n - k]));
    }

    static void sort(int[] a) {
        ArrayList<Integer> l = new ArrayList<>();
        for (int i : a) l.add(i);
        Collections.sort(l);
        for (int i = 0; i < a.length; i++) a[i] = l.get(i);
    }


    static class FastScanner {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer("""");

        public FastScanner() {
            try {
                br = new BufferedReader(new FileReader(new File(""data.in"")));
            } catch (Throwable e) {
                br = new BufferedReader(new InputStreamReader(System.in));
                st = new StringTokenizer("""");
            }
        }

        String next() {
            while (!st.hasMoreTokens())
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        int[] readArray(int n) {
            int[] a = new int[n];
            for (int i = 0; i < n; i++) a[i] = nextInt();
            return a;
        }

        long nextLong() {
            return Long.parseLong(next());
        }
    }


}

","import java.io.*;
import java.util.*;

class Main {
    static final boolean debug = false;

    public static void main(String[] args) {
        FastScanner fs = new FastScanner();
        PrintWriter out = new PrintWriter(System.out);
        String s=fs.next();
        int l=s.length();
        char ch[]=s.toCharArray();
        for(int i=1;i<=l/2;i++)
        {
            char a=s.charAt(2*i-2);
            char b=s.charAt(2*i-1);
            ch[2*i-2]=b;
            ch[2*i-1]=a;
        }
        StringBuilder ans=new StringBuilder();
        for(char c:ch)
            ans.append(c);
        System.out.println(ans.toString());
        out.close();
    }

    static boolean inRange(int lookingFor, int[] indexesOf, int curL, int curR) {
        int index = indexesOf[lookingFor];
        return index >= curL && index <= curR;
    }

    static long nC2(long n) {
        return n * (n + 1) / 2;
    }

    static final Random random = new Random();
    static final int mod = 1_000_000_007;

    static void ruffleSort(int[] a) {
        int n = a.length;
        for (int i = 0; i < n; i++) {
            int oi = random.nextInt(n), temp = a[oi];
            a[oi] = a[i];
            a[i] = temp;
        }
        Arrays.sort(a);
    }

    static long add(long a, long b) {
        return (a + b) % mod;
    }

    static long sub(long a, long b) {
        return ((a - b) % mod + mod) % mod;
    }

    static long mul(long a, long b) {
        return (a * b) % mod;
    }

    static long exp(long base, long exp) {
        if (exp == 0) return 1;
        long half = exp(base, exp / 2);
        if (exp % 2 == 0) return mul(half, half);
        return mul(half, mul(half, base));
    }

    static long[] factorials = new long[2_000_001];
    static long[] invFactorials = new long[2_000_001];

    static void precompFacts() {
        factorials[0] = invFactorials[0] = 1;
        for (int i = 1; i < factorials.length; i++) factorials[i] = mul(factorials[i - 1], i);
        invFactorials[factorials.length - 1] = exp(factorials[factorials.length - 1], mod - 2);
        for (int i = invFactorials.length - 2; i >= 0; i--)
            invFactorials[i] = mul(invFactorials[i + 1], i + 1);
    }

    static long nCk(int n, int k) {
        return mul(factorials[n], mul(invFactorials[k], invFactorials[n - k]));
    }

    static void sort(int[] a) {
        ArrayList<Integer> l = new ArrayList<>();
        for (int i : a) l.add(i);
        Collections.sort(l);
        for (int i = 0; i < a.length; i++) a[i] = l.get(i);
    }


    static class FastScanner {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer("""");

        public FastScanner() {
            try {
                br = new BufferedReader(new FileReader(new File(""data.in"")));
            } catch (Throwable e) {
                br = new BufferedReader(new InputStreamReader(System.in));
                st = new StringTokenizer("""");
            }
        }

        String next() {
            while (!st.hasMoreTokens())
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        int[] readArray(int n) {
            int[] a = new int[n];
            for (int i = 0; i < n; i++) a[i] = nextInt();
            return a;
        }

        long nextLong() {
            return Long.parseLong(next());
        }
    }


}

",CE
codingmaster008 ,abc293/A,Java,"

import java.util.*;
import java.io.*;

public class A {
public static void main(String args[]) {
Scanner s=new Scanner(System.in);
String t=s.nextLine();
char a[]=t.toCharArray();
for(int u=0;u<a.length;u+=2){
char x=a[u];
a[u]=a[u+1];
a[u+1]=x;
}
String y="""";
for(int i=0;i<a.length;i++){
	y+=a[i];
	}
	System.out.println(y);
}}
","

import java.util.*;
import java.io.*;

public class Main {
public static void main(String args[]) {
Scanner s=new Scanner(System.in);
String t=s.nextLine();
char a[]=t.toCharArray();
for(int u=0;u<a.length;u+=2){
char x=a[u];
a[u]=a[u+1];
a[u+1]=x;
}
String y="""";
for(int i=0;i<a.length;i++){
	y+=a[i];
	}
	System.out.println(y);
}}
",CE
xc1778719998 ,abc293/A,Java,"import java.util.*;


public class test {
	
	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		
		String s = sc.nextLine();
		char[] ch = s.toCharArray();
		
		for(int i = 0; i < ch.length - 1; i += 2) {
			char t = ch[i];
			ch[i] = ch[i + 1];
			ch[i + 1] = t;
		}
		
		System.out.println(ch);
		
	}

}
","import java.util.*;


public class Main {
	
	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		
		String s = sc.nextLine();
		char[] ch = s.toCharArray();
		
		for(int i = 0; i < ch.length - 1; i += 2) {
			char t = ch[i];
			ch[i] = ch[i + 1];
			ch[i + 1] = t;
		}
		
		System.out.println(ch);
		
	}

}
",CE
Secreto ,abc293/A,Java,"import java.util.*;

public  class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        swapPair(S);
    }
   
    static  void swapPair(String str)
	{

		
		
		if (str == null || str.isEmpty())
			System.out.println(str);

		
		
		char[] ch = str.toCharArray();

		
		for (int i = 0; i < ch.length - 1; i += 2) {

			
			char temp = ch[i];
			ch[i] = ch[i + 1];
			ch[i + 1] = temp;
		}

		
		
		System.out.print(ch);
	}
}


","import java.util.*;

public  class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        swapPair(S);
    }
   
    static  void swapPair(String str)
	{

		
		
		if (str == null || str.isEmpty())
			System.out.println(str);

		
		
		char[] ch = str.toCharArray();

		
		for (int i = 0; i < ch.length - 1; i += 2) {

			
			char temp = ch[i];
			ch[i] = ch[i + 1];
			ch[i + 1] = temp;
		}

		
		
		System.out.print(ch);
	}
}


",CE
Secreto ,abc293/A,Java,"import java.util.*;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        swapPair(S);
    }
   
    public static void swapPair(String str)
	{

		
		
		if (str == null || str.isEmpty())
			System.out.println(str);

		
		
		char[] ch = str.toCharArray();

		
		for (int i = 0; i < ch.length - 1; i += 2) {

			
			char temp = ch[i];
			ch[i] = ch[i + 1];
			ch[i + 1] = temp;
		}

		
		
		System.out.print(ch);
	}
}


","import java.util.*;

public  class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        swapPair(S);
    }
   
    static  void swapPair(String str)
	{

		
		
		if (str == null || str.isEmpty())
			System.out.println(str);

		
		
		char[] ch = str.toCharArray();

		
		for (int i = 0; i < ch.length - 1; i += 2) {

			
			char temp = ch[i];
			ch[i] = ch[i + 1];
			ch[i + 1] = temp;
		}

		
		
		System.out.print(ch);
	}
}


",CE
Secreto ,abc293/A,Java,"import java.util.*;

 class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        swapPair(S);
    }
   
    private void swapPair(String str)
	{

		
		
		if (str == null || str.isEmpty())
			System.out.println(str);

		
		
		char[] ch = str.toCharArray();

		
		for (int i = 0; i < ch.length - 1; i += 2) {

			
			char temp = ch[i];
			ch[i] = ch[i + 1];
			ch[i + 1] = temp;
		}

		
		
		System.out.print(ch);
	}
}


","import java.util.*;

public  class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        swapPair(S);
    }
   
    static  void swapPair(String str)
	{

		
		
		if (str == null || str.isEmpty())
			System.out.println(str);

		
		
		char[] ch = str.toCharArray();

		
		for (int i = 0; i < ch.length - 1; i += 2) {

			
			char temp = ch[i];
			ch[i] = ch[i + 1];
			ch[i + 1] = temp;
		}

		
		
		System.out.print(ch);
	}
}


",CE
CaitSithT ,abc293/A,Java,"public class Main {
 
	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		String S = sc.next();
		sc.close();
		

		String res = """";

		for (int i = 0; i < S.length() - 1; i += 2) {
						res += S.substring(i + 1, i + 2) +  S.substring(i, i + 1);
		}
		
		System.out.println(res);
	}
 
}
","import java.util.Scanner;

public class Main {
 
	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		String S = sc.next();
		sc.close();
		
		String res = """";
		for (int i = 0; i < S.length() - 1; i += 2) {
						res += S.substring(i + 1, i + 2) +  S.substring(i, i + 1);
		}
		
		System.out.println(res);
	}
 
}
",CE
nevergiveup ,abc293/A,Java,"import java.util.*;

public class Code {

    public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);
        while (scanner.hasNext()) {
            String string = scanner.next();
            StringBuilder builder = new StringBuilder();
            int i , len = string.length();
            for (i = 0;i < len;i += 2) {
                char odd = string.charAt(i) , even = string.charAt(i + 1);
                builder.append(even);
                builder.append(odd);
            }
            System.out.println(builder);
        }

    }

}
















","import java.util.*;

public class Main {

    public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);
        while (scanner.hasNext()) {
            String string = scanner.next();
            StringBuilder builder = new StringBuilder();
            int i , len = string.length();
            for (i = 0;i < len;i += 2) {
                char odd = string.charAt(i) , even = string.charAt(i + 1);
                builder.append(even);
                builder.append(odd);
            }
            System.out.println(builder);
        }

    }

}
















",CE
wdasddsa ,abc293/A,Java,"import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Scanner;
import java.util.Set;
import java.util.Stack;

 
 
 
 
 
 
public class Main {
	static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	private static StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static Scanner sc = new Scanner(System.in);
 
	private static int Int() {
		try {
			st.nextToken();
			
		} catch (IOException e) {
 
			e.printStackTrace();
		}
		return (int) st.nval;
	}
 
	private static long Long() {
		try {
			st.nextToken();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return (long) st.nval;
	}
 
	private static String str() {
		try {
			st.nextToken();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return (String) st.sval;
	}
 
	static long gcd(long a, long b) {
		return b == 0 ? a : gcd(b, a % b);
	}
 
	static int[][] tu;
	static int ans1,n,m,chen,jia;
	static int[]color,bj,arr,down,pr,c,du;
	static Map<Integer, List<int[]>>map,ziyinziweiz;
	static Map<Integer, Set<Integer>>fu;
	
	static long ans;
	static List<Long>list;
	static long []lul,dpl;
	static Set<Integer>set;
	public static void main(String[] args) {
		
		int t =1;
		long mod=(long) (998244353);
		
		while (t-->0) {
			char[]arr=str().toCharArray();
			for (int i = 1; i < arr.length; i+=2) {
				char g=arr[i];
				arr[i]=arr[i-1];arr[i-1]=g;
			}
			for (int i = 0; i < arr.length; i++) {
				out.print(arr[i]+"" "");
			}
		}
		out.close();
	}

}
","import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Scanner;
import java.util.Set;
import java.util.Stack;


 
 
 
 
 
 
public class Main {
	static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	private static StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static Scanner sc = new Scanner(System.in);
 
	private static int Int() {
		try {
			st.nextToken();
			
		} catch (IOException e) {
 
			e.printStackTrace();
		}
		return (int) st.nval;
	}
 
	private static long Long() {
		try {
			st.nextToken();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return (long) st.nval;
	}
 
	private static String str() {
		try {
			st.nextToken();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return (String) st.sval;
	}
 
	static long gcd(long a, long b) {
		return b == 0 ? a : gcd(b, a % b);
	}
 
	static int[][] tu;
	static int ans1,n,m,chen,jia;
	static int[]color,bj,arr,down,pr,c,du;
	static Map<Integer, List<int[]>>map,ziyinziweiz;
	static Map<Integer, Set<Integer>>fu;
	
	static long ans;
	static List<Long>list;
	static long []lul,dpl;
	static Set<Integer>set;
	public static void main(String[] args) {
		
		int t =1;
		long mod=(long) (998244353);
		
		while (t-->0) {
			char[]arr=str().toCharArray();
			for (int i = 1; i < arr.length; i+=2) {
				char g=arr[i];
				arr[i]=arr[i-1];arr[i-1]=g;
			}
			for (int i = 0; i < arr.length; i++) {
				out.print(arr[i]);
			}
		}
		out.close();
	}

}
",WA
wdasddsa ,abc293/A,Java,"import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Scanner;
import java.util.Set;
import java.util.Stack;

import ss.SegmentTree.Tree;
 
 
 
 
 
 
public class Main {
	static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	private static StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static Scanner sc = new Scanner(System.in);
 
	private static int Int() {
		try {
			st.nextToken();
			
		} catch (IOException e) {
 
			e.printStackTrace();
		}
		return (int) st.nval;
	}
 
	private static long Long() {
		try {
			st.nextToken();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return (long) st.nval;
	}
 
	private static String str() {
		try {
			st.nextToken();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return (String) st.sval;
	}
 
	static long gcd(long a, long b) {
		return b == 0 ? a : gcd(b, a % b);
	}
 
	static int[][] tu;
	static int ans1,n,m,chen,jia;
	static int[]color,bj,arr,down,pr,c,du;
	static Map<Integer, List<int[]>>map,ziyinziweiz;
	static Map<Integer, Set<Integer>>fu;
	
	static long ans;
	static List<Long>list;
	static long []lul,dpl;
	static Set<Integer>set;
	public static void main(String[] args) {
		
		int t =1;
		long mod=(long) (998244353);
		
		while (t-->0) {
			char[]arr=str().toCharArray();
			for (int i = 1; i < arr.length; i+=2) {
				char g=arr[i];
				arr[i]=arr[i-1];arr[i-1]=g;
			}
			for (int i = 0; i < arr.length; i++) {
				out.print(arr[i]+"" "");
			}
		}
		out.close();
	}

}
","import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Scanner;
import java.util.Set;
import java.util.Stack;


 
 
 
 
 
 
public class Main {
	static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	private static StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static Scanner sc = new Scanner(System.in);
 
	private static int Int() {
		try {
			st.nextToken();
			
		} catch (IOException e) {
 
			e.printStackTrace();
		}
		return (int) st.nval;
	}
 
	private static long Long() {
		try {
			st.nextToken();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return (long) st.nval;
	}
 
	private static String str() {
		try {
			st.nextToken();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return (String) st.sval;
	}
 
	static long gcd(long a, long b) {
		return b == 0 ? a : gcd(b, a % b);
	}
 
	static int[][] tu;
	static int ans1,n,m,chen,jia;
	static int[]color,bj,arr,down,pr,c,du;
	static Map<Integer, List<int[]>>map,ziyinziweiz;
	static Map<Integer, Set<Integer>>fu;
	
	static long ans;
	static List<Long>list;
	static long []lul,dpl;
	static Set<Integer>set;
	public static void main(String[] args) {
		
		int t =1;
		long mod=(long) (998244353);
		
		while (t-->0) {
			char[]arr=str().toCharArray();
			for (int i = 1; i < arr.length; i+=2) {
				char g=arr[i];
				arr[i]=arr[i-1];arr[i-1]=g;
			}
			for (int i = 0; i < arr.length; i++) {
				out.print(arr[i]);
			}
		}
		out.close();
	}

}
",CE
ruminos ,abc293/A,Java,"import java.util.Scanner;
public class Main{
  public static void main(String[] args){
    Scanner sc = new Scanner (System.in);
    String S = sc.next();
    char[] S_char = new char[S.length()];

    for(int i=0; i<S.length(); i++){
      S_char[i] = S.charAt(i);
    }
    for(int i=0;i<S.length()/2;i++){
      char a1 = S_char[2*i];
      char a2 = S_char[2*i+1];
      S_char[2*i+1] = a1;
      S_char[2*i] = a2;
    }
    for(int i = 0;i<S.length();i++){
    System.out.println(S_char[i]);
    }
  }
}
","import java.util.Scanner;
public class Main{
  public static void main(String[] args){
    Scanner sc = new Scanner (System.in);
    String S = sc.next();
    char[] S_char = new char[S.length()];

    for(int i=0; i<S.length(); i++){
      S_char[i] = S.charAt(i);
    }
    for(int i=0;i<S.length()/2;i++){
      char a1 = S_char[2*i];
      char a2 = S_char[2*i+1];
      S_char[2*i+1] = a1;
      S_char[2*i] = a2;
    }
    for(int i = 0;i<S.length();i++){
    System.out.print(S_char[i]);
    }
  }
}
",WA
thatsiddharth ,abc293/A,Java,"import java.util.*;


public class atcoder {


   
            public static void main(String[] args) {
                Scanner sc = new Scanner(System.in);
                String s = sc.next();

                char[] arr = s.toCharArray();
                for (int i = 0; i < arr.length / 2; i++) {
                    char temp = arr[i * 2];
                    arr[i * 2] = arr[i * 2 + 1];
                    arr[i * 2 + 1] = temp;
                }

                System.out.println(new String(arr));
            }
        }
","import java.util.*;


public class Main {


   
            public static void main(String[] args) {
                Scanner sc = new Scanner(System.in);
                String s = sc.next();

                char[] arr = s.toCharArray();
                for (int i = 0; i < arr.length / 2; i++) {
                    char temp = arr[i * 2];
                    arr[i * 2] = arr[i * 2 + 1];
                    arr[i * 2 + 1] = temp;
                }

                System.out.println(new String(arr));
            }
        }
",CE
flow_6852 ,abc293/A,Java,"import java.util.*;

class Main{
    public static void main(String args[]){
        Scanner sc = new Scanner(System.in);
        String bef = sc.nextLine();
        for (int i = 0; 2 * i <= bef.length(); i+=2){
            System.out.print(bef.charAt(i+1));
            System.out.print(bef.charAt(i));
        }
    }
}
","import java.util.*;

class Main{
    public static void main(String args[]){
        Scanner sc = new Scanner(System.in);
        String bef = sc.nextLine();
        for (int i = 0; i + 1 <= bef.length(); i+=2){
            System.out.print(bef.charAt(i+1));
            System.out.print(bef.charAt(i));
        }
    }
}
",WA
Humming_sango ,abc293/A,Java,"import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;
 
public class Main {
	
	public static void main(String[] args) {
		FastReader fr = new FastReader();
		char[] s = fr.nextCharArray();
		for(int i=0;i<s.length/2;i++) {
			System.out.print(s[2*i+1]);
			System.out.print(s[2*i]);
		}
		
	}
}

class FastReader {
	private final BufferedReader reader = new BufferedReader(new InputStreamReader(System.in), 0x10000);
	private StringTokenizer tokenizer;
	
	String next() {
		try{
			while(tokenizer==null || !tokenizer.hasMoreTokens()) {
				tokenizer = new StringTokenizer(reader.readLine());
			} 
		}catch(IOException e){
			e.printStackTrace();
		}
		return tokenizer.nextToken();
		
	}
	
	int nextInt() {
		return Integer.parseInt(next());
	}
	
	long nextLong() {
		return Long.parseLong(next());
	}
	
	double nextDouble(){
		return Double.parseDouble(next());
	}
	
	char[] nextCharArray() {
        return next().toCharArray();
    }
	
	char nextSingleChar() { 
		char[] c = next().toCharArray();
		if(c.length==1) {
			return c[0]; 
		}else {
			return ' ';
		}
	}
	
	String[] nextStringArray(int n) {
	        String[] s = new String[n];
	        for (int i = 0; i < n; i++) {
	            s[i] = next();
	        }
	        return s;
	    }

}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;
 
public class Main {
	
	public static void main(String[] args) {
		FastReader fr = new FastReader();
		char[] s = fr.nextCharArray();
		for(int i=0;i<s.length/2;i++) {
			System.out.print(s[2*i+1]);
			System.out.print(s[2*i]);
		}
		
	}
}

class FastReader {
	private final BufferedReader reader = new BufferedReader(new InputStreamReader(System.in), 0x10000);
	private StringTokenizer tokenizer;
	
	String next() {
		try{
			while(tokenizer==null || !tokenizer.hasMoreTokens()) {
				tokenizer = new StringTokenizer(reader.readLine());
			} 
		}catch(IOException e){
			e.printStackTrace();
		}
		return tokenizer.nextToken();
		
	}
	
	int nextInt() {
		return Integer.parseInt(next());
	}
	
	long nextLong() {
		return Long.parseLong(next());
	}
	
	double nextDouble(){
		return Double.parseDouble(next());
	}
	
	char[] nextCharArray() {
        return next().toCharArray();
    }
	
	char nextSingleChar() { 
		char[] c = next().toCharArray();
		if(c.length==1) {
			return c[0]; 
		}else {
			return ' ';
		}
	}
	
	String[] nextStringArray(int n) {
	        String[] s = new String[n];
	        for (int i = 0; i < n; i++) {
	            s[i] = next();
	        }
	        return s;
	    }

}
",CE
Ciallo ,abc293/A,Java,"
package com.itheima.OJ;


import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine();
        byte[] bytes = s.getBytes();
        for (int i = 0; i < bytes.length - 1; i += 2) {
            byte tmp = bytes[i];
            bytes[i] = bytes[i + 1];
            bytes[i + 1] = tmp;
        }
        s = new String(bytes);
        System.out.println(s);
    }

}
","

import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine();
        byte[] bytes = s.getBytes();
        for (int i = 0; i < bytes.length - 1; i += 2) {
            byte tmp = bytes[i];
            bytes[i] = bytes[i + 1];
            bytes[i + 1] = tmp;
        }
        s = new String(bytes);
        System.out.println(s);
    }

}
",RE
Ciallo ,abc293/A,Java,"
package com.itheima.OJ;


import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.next();
        byte[] bytes = s.getBytes();
        for (int i = 0; i < bytes.length - 1; i += 2) {
            byte tmp = bytes[i];
            bytes[i] = bytes[i + 1];
            bytes[i + 1] = tmp;
        }
        s = new String(bytes);
        System.out.println(s);
    }

}
","

import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine();
        byte[] bytes = s.getBytes();
        for (int i = 0; i < bytes.length - 1; i += 2) {
            byte tmp = bytes[i];
            bytes[i] = bytes[i + 1];
            bytes[i + 1] = tmp;
        }
        s = new String(bytes);
        System.out.println(s);
    }

}
",RE
Ciallo ,abc293/A,Java,"
package com.itheima.OJ;


import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine();
        byte[] bytes = s.getBytes();
        for (int i = 0; i < bytes.length; i += 2) {
            byte tmp = bytes[i];
            bytes[i] = bytes[i + 1];
            bytes[i + 1] = tmp;
        }
        s = new String(bytes);
        System.out.println(s);
    }

}
","

import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine();
        byte[] bytes = s.getBytes();
        for (int i = 0; i < bytes.length - 1; i += 2) {
            byte tmp = bytes[i];
            bytes[i] = bytes[i + 1];
            bytes[i + 1] = tmp;
        }
        s = new String(bytes);
        System.out.println(s);
    }

}
",RE
Ciallo ,abc293/A,Java,"
package com.itheima.OJ;


import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.next();
        byte[] bytes = s.getBytes();
        for (int i = 0; i < bytes.length; i += 2) {
            byte tmp = bytes[i];
            bytes[i] = bytes[i + 1];
            bytes[i + 1] = tmp;
        }
        s = new String(bytes);
        System.out.println(s);
    }

}
","

import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine();
        byte[] bytes = s.getBytes();
        for (int i = 0; i < bytes.length - 1; i += 2) {
            byte tmp = bytes[i];
            bytes[i] = bytes[i + 1];
            bytes[i + 1] = tmp;
        }
        s = new String(bytes);
        System.out.println(s);
    }

}
",RE
Ciallo ,abc293/A,Java,"
package com.itheima.OJ;


import java.util.Scanner;

public class MaxPointInLine {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine();
        byte[] bytes = s.getBytes();
        for (int i = 0; i < bytes.length; i += 2) {
            byte tmp = bytes[i];
            bytes[i] = bytes[i + 1];
            bytes[i + 1] = tmp;
        }
        s = new String(bytes);
        System.out.println(s);
    }

}
","

import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine();
        byte[] bytes = s.getBytes();
        for (int i = 0; i < bytes.length - 1; i += 2) {
            byte tmp = bytes[i];
            bytes[i] = bytes[i + 1];
            bytes[i + 1] = tmp;
        }
        s = new String(bytes);
        System.out.println(s);
    }

}
",CE
yashkakrecha ,abc293/A,Java,"import java.util.*;
public class Solution {
    private static final Scanner scanner = new Scanner(System.in);
 
    public static void main(String[] args) {
 



            solve();


    }
    private static void solve() {
        String s = scanner.next();
        StringBuilder stringBuilder = new StringBuilder(s);
        for(int i=0 ; i+1<s.length() ; i=i+2){
            char a = s.charAt(i);
            char b = s.charAt(i+1);
            stringBuilder.setCharAt(i,b);
            stringBuilder.setCharAt(i+1,a);
        }
        System.out.println(stringBuilder);
    }
}
","import java.util.*;
class Main {
    private static final Scanner scanner = new Scanner(System.in);
 
    public static void main(String[] args) {
 



            solve();


    }
    private static void solve() {
        String s = scanner.next();
        StringBuilder stringBuilder = new StringBuilder(s);
        for(int i=0 ; i+1<s.length() ; i=i+2){
            char a = s.charAt(i);
            char b = s.charAt(i+1);
            stringBuilder.setCharAt(i,b);
            stringBuilder.setCharAt(i+1,a);
        }
        System.out.println(stringBuilder);
    }
}
",CE
yashkakrecha ,abc293/A,Java,"public class Solution {
    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {




            solve();


    }
    private static void solve() {
        String s = scanner.next();
        StringBuilder stringBuilder = new StringBuilder(s);
        for(int i=0 ; i+1<s.length() ; i=i+2){
            char a = s.charAt(i);
            char b = s.charAt(i+1);
            stringBuilder.setCharAt(i,b);
            stringBuilder.setCharAt(i+1,a);
        }
        System.out.println(stringBuilder);
    }
}
","import java.util.*;
class Main {
    private static final Scanner scanner = new Scanner(System.in);
 
    public static void main(String[] args) {
 



            solve();


    }
    private static void solve() {
        String s = scanner.next();
        StringBuilder stringBuilder = new StringBuilder(s);
        for(int i=0 ; i+1<s.length() ; i=i+2){
            char a = s.charAt(i);
            char b = s.charAt(i+1);
            stringBuilder.setCharAt(i,b);
            stringBuilder.setCharAt(i+1,a);
        }
        System.out.println(stringBuilder);
    }
}
",CE
codeph_0bia ,abc293/A,Java,"import java.io.*;
import java.math.*;
import java.util.*;
import java.lang.*;
 
public final class A implements Runnable {

 


    private Scanner in;

    

    @Override
    public void run() {
        in = new Scanner(System.in);
        solve();
    }


    private void solve() {
        char[] c = in.next().toCharArray();
        int l = c.length;

        for (int i = 1; i <= l/2; i++) {
            char temp = c[2 * i - 1];
            c[2 * i - 1] = c[2 * i - 2];
            c[2 * i - 2] = temp;
        }
        System.out.println(new String(c));

    }
    

    public static void main(String args[] ) {
        new A().run();
   }
}
","import java.io.*;
import java.math.*;
import java.util.*;
import java.lang.*;
 
public final class Main implements Runnable {

 


    private Scanner in;

    

    @Override
    public void run() {
        in = new Scanner(System.in);
        solve();
    }


    private void solve() {
        char[] c = in.next().toCharArray();
        int l = c.length;

        for (int i = 1; i <= l/2; i++) {
            char temp = c[2 * i - 1];
            c[2 * i - 1] = c[2 * i - 2];
            c[2 * i - 2] = temp;
        }
        System.out.println(new String(c));

    }
    

    public static void main(String args[] ) {
        new Main().run();
   }
}
",CE
Oddmixel ,abc293/A,Java,"package atCoder;

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String str = scanner.next();
        char c = 'a';
        String result = """";

        char[] chars = new char[str.length()];
        for (int i = 0; i < str.length(); i++) {
            chars[i] = str.charAt(i);
        }

        for (int i = 0; i < str.length(); i += 2) {
            c = chars[i];
            chars[i] = chars[i + 1];
            chars[i + 1] = c;
        }

        for (int i = 0; i < chars.length; i++) {
            result += chars[i];
        }

        System.out.println(result);

    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String str = scanner.next();
        char c = 'a';
        String result = """";

        char[] chars = new char[str.length()];
        for (int i = 0; i < str.length(); i++) {
            chars[i] = str.charAt(i);
        }

        for (int i = 0; i < str.length(); i += 2) {
            c = chars[i];
            chars[i] = chars[i + 1];
            chars[i + 1] = c;
        }

        for (int i = 0; i < chars.length; i++) {
            result += chars[i];
        }

        System.out.println(result);

    }
}
",RE
shunkichi ,abc293/A,Java,"import java.util.Scanner;

class Main {
    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        String beforeS, reverseS;
        beforeS = sc.next();
        int l = beforeS.length();
        StringBuilder afterS = new StringBuilder();

        
        System.out.println(beforeS);
        for(int i = 0; i < l/2; i++){
        
        reverseS = beforeS.substring(0,2);
        beforeS = beforeS.substring(2);

        
        StringBuilder strb = new StringBuilder(reverseS);
		reverseS = strb.reverse().toString();

        
        afterS.append(reverseS);
        }

        
        System.out.println(afterS.toString());
        
        sc.close();
    }
}
","import java.util.Scanner;

class Main {
    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        String beforeS, reverseS;
        beforeS = sc.next();
        int l = beforeS.length();
        StringBuilder afterS = new StringBuilder();

        for(int i = 0; i < l/2; i++){
        
        reverseS = beforeS.substring(0,2);
        beforeS = beforeS.substring(2);

        
        StringBuilder strb = new StringBuilder(reverseS);
		reverseS = strb.reverse().toString();

        
        afterS.append(reverseS);
        }

        
        System.out.println(afterS.toString());
        
        sc.close();
    }
}
",WA
wdasddsa ,abc292/E,Java,"import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Scanner;
import java.util.Set;
import java.util.Stack;






public class Main {
	static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	private static StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static Scanner sc = new Scanner(System.in);

	private static int Int() {
		try {
			st.nextToken();
			
		} catch (IOException e) {

			e.printStackTrace();
		}
		return (int) st.nval;
	}

	private static long Long() {
		try {
			st.nextToken();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return (long) st.nval;
	}

	private static String str() {
		try {
			st.nextToken();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return (String) st.sval;
	}

	static long gcd(long a, long b) {
		return b == 0 ? a : gcd(b, a % b);
	}

	static int[][] tu;
	static int ans,n,m,b,chu;
	static int[]dp,color,bj,arr,down,pr,c,du;
	static Map<Integer, List<Integer>>map,ziyinziweiz;
	
	static int v1;
	static List<Long>list;
	static long []p;
	static Set<Integer>set;
	public static void main(String[] args) {
		
		int t =1;
		long mod=(long) (998244353);
		
		while (t-->0) {
			int n=Int();
			int m=Int();
			map=new HashMap<Integer, List<Integer>>();
			for (int i = 1; i <= n; i++) {
				map.put(i, new ArrayList<Integer>());
			}
			dp=new int[n+1];
			tu=new int[n+1][n+1];
			for (int i = 0; i <m; i++) {
				int a=Int();int b=Int();
				tu[a][b]=1;
				map.get(a).add(b);
			}
			ans=0;
			
			bj=new int[n+1];
			for (int i = 1; i < n+1; i++) {
				chu=i;
				for (int string : map.get(i)) {
					bfs(string);
				}
				bfs(i);
			}
			out.println(ans);
		}
		
		out.close();
	}
	static void bfs(int x) {
		bj[x]=chu;
		List<Integer>list=new ArrayList<Integer>();
		for (Integer integer : map.get(x)) {
			if (tu[chu][integer]!=1&&chu!=integer&&bj[integer]!=chu) {
				list.add(integer);
			}
		}
		ans+=list.size();
		
		if (list.size()!=0) {
			for (Integer integer : list) {
				bfs(integer);
			}
		}
	}

}
","import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Scanner;
import java.util.Set;
import java.util.Stack;






public class Main {
	static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	private static StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static Scanner sc = new Scanner(System.in);

	private static int Int() {
		try {
			st.nextToken();
			
		} catch (IOException e) {

			e.printStackTrace();
		}
		return (int) st.nval;
	}

	private static long Long() {
		try {
			st.nextToken();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return (long) st.nval;
	}

	private static String str() {
		try {
			st.nextToken();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return (String) st.sval;
	}

	static long gcd(long a, long b) {
		return b == 0 ? a : gcd(b, a % b);
	}

	static int[][] tu;
	static int ans,n,m,b,chu;
	static int[]dp,color,bj,arr,down,pr,c,du;
	static Map<Integer, List<Integer>>map,ziyinziweiz;
	
	static int v1;
	static List<Long>list;
	static long []p;
	static Set<Integer>set;
	public static void main(String[] args) {
		
		int t =1;
		long mod=(long) (998244353);
		
		while (t-->0) {
			int n=Int();
			int m=Int();
			map=new HashMap<Integer, List<Integer>>();
			for (int i = 1; i <= n; i++) {
				map.put(i, new ArrayList<Integer>());
			}
			dp=new int[n+1];
			tu=new int[n+1][n+1];
			for (int i = 0; i <m; i++) {
				int a=Int();int b=Int();
				tu[a][b]=1;
				map.get(a).add(b);
			}
			ans=0;
			
			bj=new int[n+1];
			for (int i = 1; i < n+1; i++) {
				chu=i;
				for (int string : map.get(i)) {
					bfs(string);
				}
				bfs(i);
			}
			out.println(ans);
		}
		
		out.close();
	}
	static void bfs(int x) {
		bj[x]=chu;
		List<Integer>list=new ArrayList<Integer>();
		for (Integer integer : map.get(x)) {
			if (tu[chu][integer]!=1&&chu!=integer&&bj[integer]!=chu) {
				tu[chu][integer]=1;
				list.add(integer);
			}
		}
		ans+=list.size();
		
		if (list.size()!=0) {
			for (Integer integer : list) {
				bfs(integer);
			}
		}
	}

}
",WA
badatcode ,abc292/E,Java,"import java.util.*;
import java.io.*;

public class Main {

    public static void main(String[] args) throws IOException {
        BufferedReader f = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(System.out);
        StringTokenizer st = new StringTokenizer(f.readLine());
        int n = Integer.parseInt(st.nextToken());
        int m = Integer.parseInt(st.nextToken());
        ArrayList<ArrayList<Integer>> arr = new ArrayList<>();
        HashSet<String> edge = new HashSet<>();
        for (int i = 0; i < n; i++) {
            arr.add(new ArrayList<>());
        }
        for (int i = 0; i < m; i++) {
            st = new StringTokenizer(f.readLine());
            int x = Integer.parseInt(st.nextToken()) - 1;
            int y = Integer.parseInt(st.nextToken()) - 1;
            arr.get(x).add(y);
            edge.add(x + "" "" + y);
        }
        int ans = 0;
        for (int i = 0; i < n; i++) {
            boolean[] visited = new boolean[n];
            Queue<Integer> q = new LinkedList<>();
            q.add(i);
            visited[i] = true;
            while (!q.isEmpty()){
                int x = q.poll();
                for (int j = 0; j < arr.get(x).size(); j++) {
                    int y = arr.get(x).get(j);
                    if (visited[y]) continue;
                    visited[y] = true;
                    q.add(y);
                    ans++;
                }
            }
        }
        out.println(ans);
        out.close();
        f.close();
    }
}
","import java.util.*;
import java.io.*;

public class Main {

    public static void main(String[] args) throws IOException {
        BufferedReader f = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(System.out);
        StringTokenizer st = new StringTokenizer(f.readLine());
        int n = Integer.parseInt(st.nextToken());
        int m = Integer.parseInt(st.nextToken());
        ArrayList<ArrayList<Integer>> arr = new ArrayList<>();
        HashSet<String> edge = new HashSet<>();
        for (int i = 0; i < n; i++) {
            arr.add(new ArrayList<>());
        }
        for (int i = 0; i < m; i++) {
            st = new StringTokenizer(f.readLine());
            int x = Integer.parseInt(st.nextToken()) - 1;
            int y = Integer.parseInt(st.nextToken()) - 1;
            arr.get(x).add(y);
            edge.add(x + "" "" + y);
        }
        int ans = 0;
        for (int i = 0; i < n; i++) {
            boolean[] visited = new boolean[n];
            Queue<Integer> q = new LinkedList<>();
            q.add(i);
            visited[i] = true;
            while (!q.isEmpty()){
                int x = q.poll();
                for (int j = 0; j < arr.get(x).size(); j++) {
                    int y = arr.get(x).get(j);
                    if (visited[y]) continue;
                    visited[y] = true;
                    q.add(y);
                    ans++;
                }
            }
        }
        out.println(ans - m);
        out.close();
        f.close();
    }
}
",WA
dlmasa ,abc292/E,Java,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) throws Throwable {
        Main main = new Main();
        main.solve();
    }
    public void solve() throws Throwable {
        FastScan scan = new FastScan(System.in);
        int N = scan.nextInt();
        int M = scan.nextInt();
        Set<Integer>[] edges = new Set[N];
        for (int i = 0; i < N; i++) {
            edges[i] = new HashSet<>();
            
        }
        for (int i = 0; i < M; i++) {
            int u = scan.nextInt() - 1;
            int v = scan.nextInt() - 1;
            edges[u].add(v);
        }
        for (int k = 0; k < N; k++) {
            for (int i = 0; i < N; i++) {
                if (edges[i].contains(k)) {
                    edges[i].addAll(edges[k]);
                }
            }
        }
        long ans = 0;
        for (int i = 0; i < N; i++) {
            ans += edges[i].size();
        }
        ans -= N + M;
        PrintWriter pw = new PrintWriter(System.out);
        pw.println(ans);
        pw.flush();
        pw.close();
    }
    class FastScan {
        BufferedReader br;
        StringTokenizer st;
        FastScan(InputStream is) {
            InputStreamReader isr = new InputStreamReader(is);
            this.br = new BufferedReader(isr);
        }
        String next() throws IOException {
            while (this.st == null || !this.st.hasMoreTokens()) {
                this.st = new StringTokenizer(br.readLine().trim());
            }
            return st.nextToken();
        }
        long nextLong() throws IOException {
            return Long.parseLong(this.next());
        }
        int nextInt() throws IOException {
            return Integer.parseInt(this.next());
        }
    }
}
","import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) throws Throwable {
        Main main = new Main();
        main.solve();
    }
    public void solve() throws Throwable {
        FastScan scan = new FastScan(System.in);
        int N = scan.nextInt();
        int M = scan.nextInt();
        Set<Integer>[] edges = new Set[N];
        for (int i = 0; i < N; i++) {
            edges[i] = new HashSet<>();
            edges[i].add(i);
        }
        for (int i = 0; i < M; i++) {
            int u = scan.nextInt() - 1;
            int v = scan.nextInt() - 1;
            edges[u].add(v);
        }
        for (int k = 0; k < N; k++) {
            for (int i = 0; i < N; i++) {
                if (edges[i].contains(k)) {
                    edges[i].addAll(edges[k]);
                }
            }
        }
        long ans = 0;
        for (int i = 0; i < N; i++) {
            ans += edges[i].size();
        }
        ans -= N + M;
        PrintWriter pw = new PrintWriter(System.out);
        pw.println(ans);
        pw.flush();
        pw.close();
    }
    class FastScan {
        BufferedReader br;
        StringTokenizer st;
        FastScan(InputStream is) {
            InputStreamReader isr = new InputStreamReader(is);
            this.br = new BufferedReader(isr);
        }
        String next() throws IOException {
            while (this.st == null || !this.st.hasMoreTokens()) {
                this.st = new StringTokenizer(br.readLine().trim());
            }
            return st.nextToken();
        }
        long nextLong() throws IOException {
            return Long.parseLong(this.next());
        }
        int nextInt() throws IOException {
            return Integer.parseInt(this.next());
        }
    }
}
",WA
YeMengLiChou ,abc296/E,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.Queue;

public class Main {
	static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter out = new PrintWriter(System.out);
	static int N = 200010, idx = 0;
	static int[] f = new int[N], ne = new int[N], e = new int[N];
	static int[] ind = new int[N], outd = new int[N];

	static void add(int a, int b) {
		e[idx] = b;
		ne[idx] = f[a];
		f[a] = idx++;
	}

	public static void main(String[] args) throws IOException {
		int n = Integer.parseInt(in.readLine());
		String[] s = in.readLine().split("" "");
		Arrays.fill(f, -1);
		for (int i = 1; i <= n; i++) {
			int t = Integer.parseInt(s[i - 1]);
			ind[t]++;
			outd[i]++;
			add(i, t);
		}
		int ans = 0;
		Queue<Integer> q = new LinkedList<>();
		for (int i = 1; i <= n; i++) {
			if (ind[i] == 0) {
				q.add(ind[i]);
			}
		}
		while (!q.isEmpty()) {
			int cur = q.poll();
			for (int i = f[cur]; i != -1; i = ne[i]) {
				int j = e[i];
				if (--ind[j] == 0) {
					q.add(j);
				}
			}
		}
		for (int i = 1; i <= n; i++)
			if (ind[i] > 0)
				ans++;

		out.println(ans);
		in.close();
		out.close();
	}
}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.Queue;

public class Main {
	static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter out = new PrintWriter(System.out);
	static int N = 200010, idx = 0;
	static int[] f = new int[N], ne = new int[N], e = new int[N];
	static int[] ind = new int[N];

	static void add(int a, int b) {
		e[idx] = b;
		ne[idx] = f[a];
		f[a] = idx++;
	}

	public static void main(String[] args) throws IOException {
		int n = Integer.parseInt(in.readLine());
		String[] s = in.readLine().split("" "");
		Arrays.fill(f, -1);
		for (int i = 1; i <= n; i++) {
			int t = Integer.parseInt(s[i - 1]);
			ind[t]++;
			add(i, t);
		}
		int ans = 0;
		Queue<Integer> q = new LinkedList<>();
		for (int i = 1; i <= n; i++) {
			if (ind[i] == 0) {
				q.add(i);
			}
		}
		while (!q.isEmpty()) {
			int cur = q.poll();
			for (int i = f[cur]; i != -1; i = ne[i]) {
				int j = e[i];
				if (--ind[j] == 0) {
					q.add(j);
				}
			}
		}
		for (int i = 1; i <= n; i++)
			if (ind[i] > 0)
				ans++;

		out.println(ans);
		in.close();
		out.close();
	}
}
",WA
daredsakura ,abc296/E,Java,"import java.io.*;
import java.util.*;

public class Main {

    static InputReader in;
    static OutputWriter out;

    public static void main(String[] args) throws Exception {
        in=new InputReader(System.in);
        out=new OutputWriter(System.out);

        int T=1;
        
        while(T-->0) {
            int n=in.nextInt();
            int[] a=new int[n+1];
            for(int i=1;i<=n;i++)
                a[i]=in.nextInt();

            boolean[] vis=new boolean[n+1];
            long[] dp=new long[n+1];
            for(int i=1;i<=n;i++) {
                if(vis[i])
                    continue;
                HashSet<Integer> val=new HashSet<>();
                int cur=a[i];
                while(!vis[cur]) {
                    vis[cur]=true;
                    val.add(cur);
                    cur=a[cur];
                }
                while(!val.contains(cur)) {
                    val.add(cur);
                    dp[cur]=Integer.MAX_VALUE;
                    cur=a[cur];
                }
            }

            int res=0;
            for(int i=1;i<=n;i++) {
                if(dp[i]<Integer.MAX_VALUE)
                    continue;
                res++;
            }
            out.println(res);
        }

        out.flush();
    }

    static class InputReader  {
        private final BufferedReader br;

        public InputReader(InputStream stream) {
            br = new BufferedReader(new InputStreamReader(stream));
        }

        public int nextInt() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            boolean negative = false;
            if (c == '-') {
                negative = true;
                c = br.read();
            }
            int x = 0;
            while (c > 32) {
                x = x * 10 + c - '0';
                c = br.read();
            }
            return negative ? -x : x;
        }

        public long nextLong() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            boolean negative = false;
            if (c == '-') {
                negative = true;
                c = br.read();
            }
            long x = 0;
            while (c > 32) {
                x = x * 10 + c - '0';
                c = br.read();
            }
            return negative ? -x : x;
        }

        public String next() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            StringBuilder sb = new StringBuilder();
            while (c > 32) {
                sb.append((char) c);
                c = br.read();
            }
            return sb.toString();
        }

        public double nextDouble() throws IOException {
            return Double.parseDouble(next());
        }
    }

    static class OutputWriter {

        private final BufferedWriter writer;

        public OutputWriter(OutputStream out) {
            writer=new BufferedWriter(new OutputStreamWriter(out));
        }

        public void print(String str) {
            try {
                writer.write(str);
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }

        public void print(Object obj) {
            print(String.valueOf(obj));
        }

        public void println(String str) {
            print(str+""\n"");
        }

        public void println() {
            print('\n');
        }

        public void println(Object obj) {
            println(String.valueOf(obj));
        }

        public void flush() {
            try {
                writer.flush();
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

}
","import java.io.*;
import java.util.*;

public class Main {

    static InputReader in;
    static OutputWriter out;

    public static void main(String[] args) throws Exception {
        in=new InputReader(System.in);
        out=new OutputWriter(System.out);

        int T=1;
        
        while(T-->0) {
            int n=in.nextInt();
            int[] a=new int[n+1];
            for(int i=1;i<=n;i++)
                a[i]=in.nextInt();

            boolean[] vis=new boolean[n+1];
            long[] dp=new long[n+1];
            for(int i=1;i<=n;i++) {
                if(vis[i])
                    continue;
                HashSet<Integer> val=new HashSet<>();
                int cur=i;
                while(!vis[cur]) {
                    vis[cur]=true;
                    val.add(cur);
                    cur=a[cur];
                }
                
                while(val.contains(cur)) {
                    dp[cur]=Integer.MAX_VALUE;
                    val.remove(cur);
                    cur=a[cur];
                }
            }

            int res=0;
            for(int i=1;i<=n;i++) {
                if(dp[i]<Integer.MAX_VALUE)
                    continue;
                res++;
            }
            out.println(res);
        }

        out.flush();
    }

    static class InputReader  {
        private final BufferedReader br;

        public InputReader(InputStream stream) {
            br = new BufferedReader(new InputStreamReader(stream));
        }

        public int nextInt() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            boolean negative = false;
            if (c == '-') {
                negative = true;
                c = br.read();
            }
            int x = 0;
            while (c > 32) {
                x = x * 10 + c - '0';
                c = br.read();
            }
            return negative ? -x : x;
        }

        public long nextLong() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            boolean negative = false;
            if (c == '-') {
                negative = true;
                c = br.read();
            }
            long x = 0;
            while (c > 32) {
                x = x * 10 + c - '0';
                c = br.read();
            }
            return negative ? -x : x;
        }

        public String next() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            StringBuilder sb = new StringBuilder();
            while (c > 32) {
                sb.append((char) c);
                c = br.read();
            }
            return sb.toString();
        }

        public double nextDouble() throws IOException {
            return Double.parseDouble(next());
        }
    }

    static class OutputWriter {

        private final BufferedWriter writer;

        public OutputWriter(OutputStream out) {
            writer=new BufferedWriter(new OutputStreamWriter(out));
        }

        public void print(String str) {
            try {
                writer.write(str);
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }

        public void print(Object obj) {
            print(String.valueOf(obj));
        }

        public void println(String str) {
            print(str+""\n"");
        }

        public void println() {
            print('\n');
        }

        public void println(Object obj) {
            println(String.valueOf(obj));
        }

        public void flush() {
            try {
                writer.flush();
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

}
",WA
vlad_os ,abc296/E,Java,"
import java.util.*;
import java.lang.*;
import java.io.*;

class Main {
	
	 	public static int psi(String n) {
	 		return Integer.parseInt(n);
	 	}

	    public static long psl(String n) {
	        return Long.parseLong(n);
	    }

	    public static String str_int(int n) {
	       return String.valueOf(n);
	    }

	   public static String str_lg(long n) {
	       return String.valueOf(n);
	   }

	    
	public static void main(String[] args) throws java.lang.Exception {
		BufferedReader rd = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(System.out);



            
            int n = psi(rd.readLine());
            
            String [] a1 = rd.readLine().split("" "");
                      
           int [] a = new int[n];
           for (int i = 0; i < n; i++) a[i] = psi(a1[i]);
      
          	int [] arr = new int[n];
          	
          	int cnt = 1;
          	int cnt_cycles = 0;
          	
        	for (int i = 0; i < n; i++) {
        		if (arr[i] != 0) continue;
        		
        		int ind = i;
        		boolean is_cycle = false;
        		
        		while (true) {
        			
        			if (arr[ind] == cnt) {
        				is_cycle = true;
        				break;
        			}
        			
        			if (arr[ind] != 0) break;
        			
        			arr[ind] = cnt;
        			
        			if (a[ind] - 1 == ind) break;
        		
        			ind = a[ind] - 1;
        		}
        		
        		
        		if (!is_cycle) {
        			cnt++;
        			continue;
        		}
        		
        		while (arr[ind] != -1) {
        			arr[ind] = -1;
        			ind = a[ind] - 1;
        		}
        		
        		cnt_cycles++;
        		cnt++;
        		
        	}
        	
        	
        	if (cnt_cycles > 0) {
        		
        		int ans = 0;		
        		for (int i = 0;  i< n; i++) {
        			if (arr[i] == -1) ans++;
        			if (i + 1 == a[i]) ans++;
        		}
        		
        		out.println(ans);
        		
        	} else {
        		
        		cnt = 1;
        		
        		int [] arr1 = new int[n];
        		
        		for (int i = 0; i < n; i++) {
        			if (arr1[i] != 0) continue;
        			
        			int ind = i;
        			
        			while (arr1[ind] == 0) {
        				arr1[ind] = cnt;
        				ind = a[ind] - 1;
        			}
        			
        			int color = arr1[ind];
        			
        			ind = i;
        			
        			while (arr1[ind] != color) {
        				arr1[ind] = color;
        				ind = a[ind] - 1;
        			}
        			
        			cnt++;
        		}
        		
        		Arrays.sort(arr1);
        		
        		int cnt_colors = 1;
        		
        		for (int i = 1; i < n; i++) {
        			cnt_colors += (arr1[i] != arr[i - 1]) ? 1 : 0;
        		}
        		out.println(cnt_colors);
        			       		
        	}
        	
        	

        

        out.flush();

	}

}
","import java.util.*;
import java.lang.*;
import java.io.*;

class Main {
	
	 	public static int psi(String n) {
	 		return Integer.parseInt(n);
	 	}

	    public static long psl(String n) {
	        return Long.parseLong(n);
	    }

	    public static String str_int(int n) {
	       return String.valueOf(n);
	    }

	   public static String str_lg(long n) {
	       return String.valueOf(n);
	   }

	    
	public static void main(String[] args) throws java.lang.Exception {
		BufferedReader rd = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(System.out);



            
            int n = psi(rd.readLine());
            
            String [] a1 = rd.readLine().split("" "");
                      
           int [] a = new int[n];
           for (int i = 0; i < n; i++) a[i] = psi(a1[i]);
      
          	int [] arr = new int[n];
          	
          	int cnt = 1;
          	int cnt_cycles = 0;
          	
        	for (int i = 0; i < n; i++) {
        		if (arr[i] != 0) continue;
        		
        		int ind = i;
        		boolean is_cycle = false;
        		
        		while (true) {
        			
        			if (arr[ind] == cnt) {
        				is_cycle = true;
        				break;
        			}
        			
        			if (arr[ind] != 0) break;
        			
        			arr[ind] = cnt;
        			
        			if (a[ind] - 1 == ind) break;
        		
        			ind = a[ind] - 1;
        		}
        		
        		
        		if (!is_cycle) {
        			cnt++;
        			continue;
        		}
        		
        		while (arr[ind] != -1) {
        			arr[ind] = -1;
        			ind = a[ind] - 1;
        		}
        		
        		cnt_cycles++;
        		cnt++;
        		
        	}
        	
        	
        	if (cnt_cycles > 0) {
        		
        		int ans = 0;		
        		for (int i = 0;  i< n; i++) {
        			if (arr[i] == -1) ans++;
        			if (i + 1 == a[i]) ans++;
        		}
        		
        		out.println(ans);
        		
        	} else {
        		
        		cnt = 1;
        		
        		int [] arr1 = new int[n];
        		
        		for (int i = 0; i < n; i++) {
        			if (arr1[i] != 0) continue;
        			
        			int ind = i;
        			
        			while (arr1[ind] == 0) {
        				arr1[ind] = cnt;
        				ind = a[ind] - 1;
        			}
        			
        			int color = arr1[ind];
        			
        			ind = i;
        			
        			while (arr1[ind] != color) {
        				arr1[ind] = color;
        				ind = a[ind] - 1;
        			}
        			
        			cnt++;
        		}
        		
        		Arrays.sort(arr1);
        		
        		int cnt_colors = 1;
        		
        		for (int i = 1; i < n; i++) {
        			cnt_colors += (arr1[i] != arr1[i - 1]) ? 1 : 0;
        		}
        		out.println(cnt_colors);
        			       		
        	}
        	
        	

        

        out.flush();

	}

}
",WA
yadayada ,abc296/E,Java,"import java.io.*;
import java.util.*;

public class Main {

    static InputReader in;
    static OutputWriter out;

    public static void main(String[] args) throws Exception {
        in=new InputReader(System.in);
        out=new OutputWriter(System.out);

        int T=1;
        
        while(T-->0) {
            int n=in.nextInt();
            int[] a=new int[n+1];
            for(int i=1;i<=n;i++)
                a[i]=in.nextInt();

            boolean[] vis=new boolean[n+1];
            long[] dp=new long[n+1];
            for(int i=1;i<=n;i++) {
                if(vis[i])
                    continue;
                HashSet<Integer> val=new HashSet<>();
                int cur=i;
                while(!vis[cur]) {
                    vis[cur]=true;
                    val.add(cur);
                    cur=a[cur];
                }
                val.clear();
                while(!val.contains(cur)) {
                    val.add(cur);
                    dp[cur]=Integer.MAX_VALUE;
                    cur=a[cur];
                }
            }

            int res=0;
            for(int i=1;i<=n;i++) {
                if(dp[i]<Integer.MAX_VALUE)
                    continue;
                res++;
            }
            out.println(res);
        }

        out.flush();
    }

    static class InputReader  {
        private final BufferedReader br;

        public InputReader(InputStream stream) {
            br = new BufferedReader(new InputStreamReader(stream));
        }

        public int nextInt() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            boolean negative = false;
            if (c == '-') {
                negative = true;
                c = br.read();
            }
            int x = 0;
            while (c > 32) {
                x = x * 10 + c - '0';
                c = br.read();
            }
            return negative ? -x : x;
        }

        public long nextLong() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            boolean negative = false;
            if (c == '-') {
                negative = true;
                c = br.read();
            }
            long x = 0;
            while (c > 32) {
                x = x * 10 + c - '0';
                c = br.read();
            }
            return negative ? -x : x;
        }

        public String next() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            StringBuilder sb = new StringBuilder();
            while (c > 32) {
                sb.append((char) c);
                c = br.read();
            }
            return sb.toString();
        }

        public double nextDouble() throws IOException {
            return Double.parseDouble(next());
        }
    }

    static class OutputWriter {

        private final BufferedWriter writer;

        public OutputWriter(OutputStream out) {
            writer=new BufferedWriter(new OutputStreamWriter(out));
        }

        public void print(String str) {
            try {
                writer.write(str);
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }

        public void print(Object obj) {
            print(String.valueOf(obj));
        }

        public void println(String str) {
            print(str+""\n"");
        }

        public void println() {
            print('\n');
        }

        public void println(Object obj) {
            println(String.valueOf(obj));
        }

        public void flush() {
            try {
                writer.flush();
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

}
","import java.io.*;
import java.util.*;

public class Main {

    static InputReader in;
    static OutputWriter out;

    public static void main(String[] args) throws Exception {
        in=new InputReader(System.in);
        out=new OutputWriter(System.out);

        int T=1;
        
        while(T-->0) {
            int n=in.nextInt();
            int[] a=new int[n+1];
            for(int i=1;i<=n;i++)
                a[i]=in.nextInt();

            boolean[] vis=new boolean[n+1];
            long[] dp=new long[n+1];
            for(int i=1;i<=n;i++) {
                if(vis[i])
                    continue;
                HashSet<Integer> val=new HashSet<>();
                int cur=i;
                while(!vis[cur]) {
                    vis[cur]=true;
                    val.add(cur);
                    cur=a[cur];
                }
                while(val.contains(cur)) {
                    val.remove(cur);
                    dp[cur]=Integer.MAX_VALUE;
                    cur=a[cur];
                }
            }

            int res=0;
            for(int i=1;i<=n;i++) {
                if(dp[i]<Integer.MAX_VALUE)
                    continue;
                res++;
            }
            out.println(res);
        }

        out.flush();
    }

    static class InputReader  {
        private final BufferedReader br;

        public InputReader(InputStream stream) {
            br = new BufferedReader(new InputStreamReader(stream));
        }

        public int nextInt() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            boolean negative = false;
            if (c == '-') {
                negative = true;
                c = br.read();
            }
            int x = 0;
            while (c > 32) {
                x = x * 10 + c - '0';
                c = br.read();
            }
            return negative ? -x : x;
        }

        public long nextLong() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            boolean negative = false;
            if (c == '-') {
                negative = true;
                c = br.read();
            }
            long x = 0;
            while (c > 32) {
                x = x * 10 + c - '0';
                c = br.read();
            }
            return negative ? -x : x;
        }

        public String next() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            StringBuilder sb = new StringBuilder();
            while (c > 32) {
                sb.append((char) c);
                c = br.read();
            }
            return sb.toString();
        }

        public double nextDouble() throws IOException {
            return Double.parseDouble(next());
        }
    }

    static class OutputWriter {

        private final BufferedWriter writer;

        public OutputWriter(OutputStream out) {
            writer=new BufferedWriter(new OutputStreamWriter(out));
        }

        public void print(String str) {
            try {
                writer.write(str);
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }

        public void print(Object obj) {
            print(String.valueOf(obj));
        }

        public void println(String str) {
            print(str+""\n"");
        }

        public void println() {
            print('\n');
        }

        public void println(Object obj) {
            println(String.valueOf(obj));
        }

        public void flush() {
            try {
                writer.flush();
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

}
",WA
yadayada ,abc296/E,Java,"import java.io.*;
import java.util.*;

public class Main {

    static InputReader in;
    static OutputWriter out;

    public static void main(String[] args) throws Exception {
        in=new InputReader(System.in);
        out=new OutputWriter(System.out);

        int T=1;
        
        while(T-->0) {
            int n=in.nextInt();
            int[] a=new int[n+1];
            for(int i=1;i<=n;i++)
                a[i]=in.nextInt();

            boolean[] vis=new boolean[n+1];
            long[] dp=new long[n+1];
            for(int i=1;i<=n;i++) {
                if(vis[i])
                    continue;
                HashSet<Integer> val=new HashSet<>();
                int cur=i;
                while(!vis[cur]) {
                    vis[cur]=true;
                    val.add(cur);
                    cur=a[cur];
                }
                val=new HashSet<>();
                while(!val.contains(cur)) {
                    val.add(cur);
                    dp[cur]=Integer.MAX_VALUE;
                    cur=a[cur];
                }
            }

            int res=0;
            for(int i=1;i<=n;i++) {
                if(dp[i]<Integer.MAX_VALUE)
                    continue;
                res++;
            }
            out.println(res);
        }

        out.flush();
    }

    static class InputReader  {
        private final BufferedReader br;

        public InputReader(InputStream stream) {
            br = new BufferedReader(new InputStreamReader(stream));
        }

        public int nextInt() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            boolean negative = false;
            if (c == '-') {
                negative = true;
                c = br.read();
            }
            int x = 0;
            while (c > 32) {
                x = x * 10 + c - '0';
                c = br.read();
            }
            return negative ? -x : x;
        }

        public long nextLong() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            boolean negative = false;
            if (c == '-') {
                negative = true;
                c = br.read();
            }
            long x = 0;
            while (c > 32) {
                x = x * 10 + c - '0';
                c = br.read();
            }
            return negative ? -x : x;
        }

        public String next() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            StringBuilder sb = new StringBuilder();
            while (c > 32) {
                sb.append((char) c);
                c = br.read();
            }
            return sb.toString();
        }

        public double nextDouble() throws IOException {
            return Double.parseDouble(next());
        }
    }

    static class OutputWriter {

        private final BufferedWriter writer;

        public OutputWriter(OutputStream out) {
            writer=new BufferedWriter(new OutputStreamWriter(out));
        }

        public void print(String str) {
            try {
                writer.write(str);
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }

        public void print(Object obj) {
            print(String.valueOf(obj));
        }

        public void println(String str) {
            print(str+""\n"");
        }

        public void println() {
            print('\n');
        }

        public void println(Object obj) {
            println(String.valueOf(obj));
        }

        public void flush() {
            try {
                writer.flush();
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

}
","import java.io.*;
import java.util.*;

public class Main {

    static InputReader in;
    static OutputWriter out;

    public static void main(String[] args) throws Exception {
        in=new InputReader(System.in);
        out=new OutputWriter(System.out);

        int T=1;
        
        while(T-->0) {
            int n=in.nextInt();
            int[] a=new int[n+1];
            for(int i=1;i<=n;i++)
                a[i]=in.nextInt();

            boolean[] vis=new boolean[n+1];
            long[] dp=new long[n+1];
            for(int i=1;i<=n;i++) {
                if(vis[i])
                    continue;
                HashSet<Integer> val=new HashSet<>();
                int cur=i;
                while(!vis[cur]) {
                    vis[cur]=true;
                    val.add(cur);
                    cur=a[cur];
                }
                while(val.contains(cur)) {
                    val.remove(cur);
                    dp[cur]=Integer.MAX_VALUE;
                    cur=a[cur];
                }
            }

            int res=0;
            for(int i=1;i<=n;i++) {
                if(dp[i]<Integer.MAX_VALUE)
                    continue;
                res++;
            }
            out.println(res);
        }

        out.flush();
    }

    static class InputReader  {
        private final BufferedReader br;

        public InputReader(InputStream stream) {
            br = new BufferedReader(new InputStreamReader(stream));
        }

        public int nextInt() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            boolean negative = false;
            if (c == '-') {
                negative = true;
                c = br.read();
            }
            int x = 0;
            while (c > 32) {
                x = x * 10 + c - '0';
                c = br.read();
            }
            return negative ? -x : x;
        }

        public long nextLong() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            boolean negative = false;
            if (c == '-') {
                negative = true;
                c = br.read();
            }
            long x = 0;
            while (c > 32) {
                x = x * 10 + c - '0';
                c = br.read();
            }
            return negative ? -x : x;
        }

        public String next() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            StringBuilder sb = new StringBuilder();
            while (c > 32) {
                sb.append((char) c);
                c = br.read();
            }
            return sb.toString();
        }

        public double nextDouble() throws IOException {
            return Double.parseDouble(next());
        }
    }

    static class OutputWriter {

        private final BufferedWriter writer;

        public OutputWriter(OutputStream out) {
            writer=new BufferedWriter(new OutputStreamWriter(out));
        }

        public void print(String str) {
            try {
                writer.write(str);
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }

        public void print(Object obj) {
            print(String.valueOf(obj));
        }

        public void println(String str) {
            print(str+""\n"");
        }

        public void println() {
            print('\n');
        }

        public void println(Object obj) {
            println(String.valueOf(obj));
        }

        public void flush() {
            try {
                writer.flush();
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

}
",WA
yadayada ,abc296/E,Java,"import java.io.*;
import java.util.*;

public class Main {

    static InputReader in;
    static OutputWriter out;

    public static void main(String[] args) throws Exception {
        in=new InputReader(System.in);
        out=new OutputWriter(System.out);

        int T=1;
        
        while(T-->0) {
            int n=in.nextInt();
            int[] a=new int[n+1];
            for(int i=1;i<=n;i++)
                a[i]=in.nextInt();

            boolean[] vis=new boolean[n+1];
            long[] dp=new long[n+1];
            for(int i=1;i<=n;i++) {
                if(vis[i])
                    continue;
                HashSet<Integer> val=new HashSet<>();
                int cur=a[i];
                while(!vis[cur]) {
                    vis[cur]=true;
                    val.add(cur);
                    cur=a[cur];
                }
                val.clear();
                while(!val.contains(cur)) {
                    val.add(cur);
                    dp[cur]=Integer.MAX_VALUE;
                    cur=a[cur];
                }
            }

            int res=0;
            for(int i=1;i<=n;i++) {
                if(dp[i]<Integer.MAX_VALUE)
                    continue;
                res++;
            }
            out.println(res);
        }

        out.flush();
    }

    static class InputReader  {
        private final BufferedReader br;

        public InputReader(InputStream stream) {
            br = new BufferedReader(new InputStreamReader(stream));
        }

        public int nextInt() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            boolean negative = false;
            if (c == '-') {
                negative = true;
                c = br.read();
            }
            int x = 0;
            while (c > 32) {
                x = x * 10 + c - '0';
                c = br.read();
            }
            return negative ? -x : x;
        }

        public long nextLong() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            boolean negative = false;
            if (c == '-') {
                negative = true;
                c = br.read();
            }
            long x = 0;
            while (c > 32) {
                x = x * 10 + c - '0';
                c = br.read();
            }
            return negative ? -x : x;
        }

        public String next() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            StringBuilder sb = new StringBuilder();
            while (c > 32) {
                sb.append((char) c);
                c = br.read();
            }
            return sb.toString();
        }

        public double nextDouble() throws IOException {
            return Double.parseDouble(next());
        }
    }

    static class OutputWriter {

        private final BufferedWriter writer;

        public OutputWriter(OutputStream out) {
            writer=new BufferedWriter(new OutputStreamWriter(out));
        }

        public void print(String str) {
            try {
                writer.write(str);
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }

        public void print(Object obj) {
            print(String.valueOf(obj));
        }

        public void println(String str) {
            print(str+""\n"");
        }

        public void println() {
            print('\n');
        }

        public void println(Object obj) {
            println(String.valueOf(obj));
        }

        public void flush() {
            try {
                writer.flush();
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

}
","import java.io.*;
import java.util.*;

public class Main {

    static InputReader in;
    static OutputWriter out;

    public static void main(String[] args) throws Exception {
        in=new InputReader(System.in);
        out=new OutputWriter(System.out);

        int T=1;
        
        while(T-->0) {
            int n=in.nextInt();
            int[] a=new int[n+1];
            for(int i=1;i<=n;i++)
                a[i]=in.nextInt();

            boolean[] vis=new boolean[n+1];
            long[] dp=new long[n+1];
            for(int i=1;i<=n;i++) {
                if(vis[i])
                    continue;
                HashSet<Integer> val=new HashSet<>();
                int cur=i;
                while(!vis[cur]) {
                    vis[cur]=true;
                    val.add(cur);
                    cur=a[cur];
                }
                while(val.contains(cur)) {
                    val.remove(cur);
                    dp[cur]=Integer.MAX_VALUE;
                    cur=a[cur];
                }
            }

            int res=0;
            for(int i=1;i<=n;i++) {
                if(dp[i]<Integer.MAX_VALUE)
                    continue;
                res++;
            }
            out.println(res);
        }

        out.flush();
    }

    static class InputReader  {
        private final BufferedReader br;

        public InputReader(InputStream stream) {
            br = new BufferedReader(new InputStreamReader(stream));
        }

        public int nextInt() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            boolean negative = false;
            if (c == '-') {
                negative = true;
                c = br.read();
            }
            int x = 0;
            while (c > 32) {
                x = x * 10 + c - '0';
                c = br.read();
            }
            return negative ? -x : x;
        }

        public long nextLong() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            boolean negative = false;
            if (c == '-') {
                negative = true;
                c = br.read();
            }
            long x = 0;
            while (c > 32) {
                x = x * 10 + c - '0';
                c = br.read();
            }
            return negative ? -x : x;
        }

        public String next() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            StringBuilder sb = new StringBuilder();
            while (c > 32) {
                sb.append((char) c);
                c = br.read();
            }
            return sb.toString();
        }

        public double nextDouble() throws IOException {
            return Double.parseDouble(next());
        }
    }

    static class OutputWriter {

        private final BufferedWriter writer;

        public OutputWriter(OutputStream out) {
            writer=new BufferedWriter(new OutputStreamWriter(out));
        }

        public void print(String str) {
            try {
                writer.write(str);
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }

        public void print(Object obj) {
            print(String.valueOf(obj));
        }

        public void println(String str) {
            print(str+""\n"");
        }

        public void println() {
            print('\n');
        }

        public void println(Object obj) {
            println(String.valueOf(obj));
        }

        public void flush() {
            try {
                writer.flush();
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

}
",WA
yadayada ,abc296/E,Java,"import java.io.*;
import java.util.*;

public class Main {

    static InputReader in;
    static OutputWriter out;

    public static void main(String[] args) throws Exception {
        in=new InputReader(System.in);
        out=new OutputWriter(System.out);

        int T=1;
        
        while(T-->0) {
            int n=in.nextInt();
            int[] a=new int[n+1];
            for(int i=1;i<=n;i++)
                a[i]=in.nextInt();

            boolean[] vis=new boolean[n+1];
            long[] dp=new long[n+1];
            for(int i=1;i<=n;i++) {
                if(vis[i])
                    continue;
                HashSet<Integer> val=new HashSet<>();
                int cur=a[i];
                while(!val.contains(cur)) {
                    vis[cur]=true;
                    val.add(cur);
                    cur=a[cur];
                }
                val.clear();
                while(!val.contains(cur)) {
                    val.add(cur);
                    dp[cur]=Integer.MAX_VALUE;
                    cur=a[cur];
                }
            }

            int res=0;
            for(int i=1;i<=n;i++) {
                if(dp[i]<Integer.MAX_VALUE)
                    continue;
                res++;
            }
            out.println(res);
        }

        out.flush();
    }

    static class InputReader  {
        private final BufferedReader br;

        public InputReader(InputStream stream) {
            br = new BufferedReader(new InputStreamReader(stream));
        }

        public int nextInt() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            boolean negative = false;
            if (c == '-') {
                negative = true;
                c = br.read();
            }
            int x = 0;
            while (c > 32) {
                x = x * 10 + c - '0';
                c = br.read();
            }
            return negative ? -x : x;
        }

        public long nextLong() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            boolean negative = false;
            if (c == '-') {
                negative = true;
                c = br.read();
            }
            long x = 0;
            while (c > 32) {
                x = x * 10 + c - '0';
                c = br.read();
            }
            return negative ? -x : x;
        }

        public String next() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            StringBuilder sb = new StringBuilder();
            while (c > 32) {
                sb.append((char) c);
                c = br.read();
            }
            return sb.toString();
        }

        public double nextDouble() throws IOException {
            return Double.parseDouble(next());
        }
    }

    static class OutputWriter {

        private final BufferedWriter writer;

        public OutputWriter(OutputStream out) {
            writer=new BufferedWriter(new OutputStreamWriter(out));
        }

        public void print(String str) {
            try {
                writer.write(str);
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }

        public void print(Object obj) {
            print(String.valueOf(obj));
        }

        public void println(String str) {
            print(str+""\n"");
        }

        public void println() {
            print('\n');
        }

        public void println(Object obj) {
            println(String.valueOf(obj));
        }

        public void flush() {
            try {
                writer.flush();
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

}
","import java.io.*;
import java.util.*;

public class Main {

    static InputReader in;
    static OutputWriter out;

    public static void main(String[] args) throws Exception {
        in=new InputReader(System.in);
        out=new OutputWriter(System.out);

        int T=1;
        
        while(T-->0) {
            int n=in.nextInt();
            int[] a=new int[n+1];
            for(int i=1;i<=n;i++)
                a[i]=in.nextInt();

            boolean[] vis=new boolean[n+1];
            long[] dp=new long[n+1];
            for(int i=1;i<=n;i++) {
                if(vis[i])
                    continue;
                HashSet<Integer> val=new HashSet<>();
                int cur=i;
                while(!vis[cur]) {
                    vis[cur]=true;
                    val.add(cur);
                    cur=a[cur];
                }
                while(val.contains(cur)) {
                    val.remove(cur);
                    dp[cur]=Integer.MAX_VALUE;
                    cur=a[cur];
                }
            }

            int res=0;
            for(int i=1;i<=n;i++) {
                if(dp[i]<Integer.MAX_VALUE)
                    continue;
                res++;
            }
            out.println(res);
        }

        out.flush();
    }

    static class InputReader  {
        private final BufferedReader br;

        public InputReader(InputStream stream) {
            br = new BufferedReader(new InputStreamReader(stream));
        }

        public int nextInt() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            boolean negative = false;
            if (c == '-') {
                negative = true;
                c = br.read();
            }
            int x = 0;
            while (c > 32) {
                x = x * 10 + c - '0';
                c = br.read();
            }
            return negative ? -x : x;
        }

        public long nextLong() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            boolean negative = false;
            if (c == '-') {
                negative = true;
                c = br.read();
            }
            long x = 0;
            while (c > 32) {
                x = x * 10 + c - '0';
                c = br.read();
            }
            return negative ? -x : x;
        }

        public String next() throws IOException {
            int c = br.read();
            while (c <= 32) {
                c = br.read();
            }
            StringBuilder sb = new StringBuilder();
            while (c > 32) {
                sb.append((char) c);
                c = br.read();
            }
            return sb.toString();
        }

        public double nextDouble() throws IOException {
            return Double.parseDouble(next());
        }
    }

    static class OutputWriter {

        private final BufferedWriter writer;

        public OutputWriter(OutputStream out) {
            writer=new BufferedWriter(new OutputStreamWriter(out));
        }

        public void print(String str) {
            try {
                writer.write(str);
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }

        public void print(Object obj) {
            print(String.valueOf(obj));
        }

        public void println(String str) {
            print(str+""\n"");
        }

        public void println() {
            print('\n');
        }

        public void println(Object obj) {
            println(String.valueOf(obj));
        }

        public void flush() {
            try {
                writer.flush();
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

}
",TLE
sanopi ,abc293/E,Java,"import java.io.PrintWriter;
import java.math.BigInteger;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        long a = nextInt();
        long x = nextLong();
        long m = nextInt();
        long ans = solve1(a, x, m);
        out.println(ans);
        out.flush();
    }

    private static Map<Long, Long> memo = new HashMap<>();

    private static long solve1(long a, long x, long m) {
        if (x==1) {
            return 1;
        }
        if (x % 2 == 0) {
            long halfX = x / 2;
            long tmp = solve1(a, halfX, m);
            Long mul = memo.computeIfAbsent(halfX, h -> modPow(a, h, m));
            return ((tmp*mul)%m+tmp)%m;
        } else {
            long tmp = solve1(a, x - 1, m);
            return ((tmp*a)%m+1)%m;
        }
    }

    private static long modPow(long a, long n, long mod) {
        long x = a % mod;
        if (x == 0) {
            return x;
        }
        long res = 1;
        int i = 0;
        while (1L << i <= n) {
            if ((n & 1L << i) != 0) {
                res = (res * x) % mod;
            }
            x = (x * x) % mod;
            i += 1;
        }

        return res;
    }


    static PrintWriter out = new PrintWriter(System.out);
    static Scanner scanner = new Scanner(System.in);
    static String next() { return scanner.next(); }
    static int nextInt() {
        int res = 0;
        char[] chars = next().toCharArray();
        boolean minus = chars[0] == '-';
        int start = minus?1:0;
        for (int i = start; i < chars.length; i++) {
            res = res*10 + (chars[i]-'0');
        }
        return minus?-res:res;
    }
    static long nextLong() {
        long res = 0;
        char[] chars = next().toCharArray();
        boolean minus = chars[0] == '-';
        int start = minus?1:0;
        for (int i = start; i < chars.length; i++) {
            res = res*10 + (chars[i]-'0');
        }
        return minus?-res:res;
    }
    static double nextDouble() { return Double.parseDouble(next()); }
    static int[] nextIntArray(int n) {
        int[] array = new int[n];
        for (int i = 0; i < n; i++) { array[i] = nextInt(); }
        return array;
    }
    static long[] nextLongArray(int n) {
        long[] array = new long[n];
        for (int i = 0; i < n; i++) { array[i] = nextLong(); }
        return array;
    }

}
","import java.io.PrintWriter;
import java.math.BigInteger;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        long a = nextInt();
        long x = nextLong();
        long m = nextInt();
        long ans = solve1(a, x, m);
        out.println(ans);
        out.flush();
    }

    private static Map<Long, Long> memo = new HashMap<>();

    private static long solve1(long a, long x, long m) {
        if (x==1) {
            return 1%m;
        }
        if (x % 2 == 0) {
            long halfX = x / 2;
            long tmp = solve1(a, halfX, m);
            Long mul = memo.computeIfAbsent(halfX, h -> modPow(a, h, m));
            return ((tmp*mul)%m+tmp)%m;
        } else {
            long tmp = solve1(a, x - 1, m);
            return ((tmp*a)%m+1)%m;
        }
    }

    private static long modPow(long a, long n, long mod) {
        long x = a % mod;
        if (x == 0) {
            return x;
        }
        long res = 1;
        int i = 0;
        while (1L << i <= n) {
            if ((n & 1L << i) != 0) {
                res = (res * x) % mod;
            }
            x = (x * x) % mod;
            i += 1;
        }

        return res;
    }


    static PrintWriter out = new PrintWriter(System.out);
    static Scanner scanner = new Scanner(System.in);
    static String next() { return scanner.next(); }
    static int nextInt() {
        int res = 0;
        char[] chars = next().toCharArray();
        boolean minus = chars[0] == '-';
        int start = minus?1:0;
        for (int i = start; i < chars.length; i++) {
            res = res*10 + (chars[i]-'0');
        }
        return minus?-res:res;
    }
    static long nextLong() {
        long res = 0;
        char[] chars = next().toCharArray();
        boolean minus = chars[0] == '-';
        int start = minus?1:0;
        for (int i = start; i < chars.length; i++) {
            res = res*10 + (chars[i]-'0');
        }
        return minus?-res:res;
    }
    static double nextDouble() { return Double.parseDouble(next()); }
    static int[] nextIntArray(int n) {
        int[] array = new int[n];
        for (int i = 0; i < n; i++) { array[i] = nextInt(); }
        return array;
    }
    static long[] nextLongArray(int n) {
        long[] array = new long[n];
        for (int i = 0; i < n; i++) { array[i] = nextLong(); }
        return array;
    }

}
",WA
sanopi ,abc293/E,Java,"import java.io.PrintWriter;
import java.math.BigInteger;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        long a = nextInt();
        long x = nextLong();
        long m = nextInt();
        long ans = solve1(a, x, m);
        out.println(ans);
        out.flush();
    }

    private static Map<Long, Long> memo = new HashMap<>();

    private static long solve1(long a, long x, long m) {
        if (x==1) {
            return 1;
        }
        if (x % 2 == 0) {
            long halfX = x / 2;
            long tmp = solve1(a, halfX, m);
            Long mul = memo.computeIfAbsent(halfX, h -> modPow(a, h, m));
            return (tmp*mul%m+tmp)%m;
        } else {
            long tmp = solve1(a, x - 1, m);
            return (tmp*a%m+1)%m;
        }
    }

    private static long modPow(long a, long n, long mod) {
        long x = a % mod;
        if (x == 0) {
            return x;
        }
        long res = 1;
        int i = 0;
        while (1L << i <= n) {
            if ((n & 1L << i) != 0) {
                res = (res * x) % mod;
            }
            x = (x * x) % mod;
            i += 1;
        }

        return res;
    }


    static PrintWriter out = new PrintWriter(System.out);
    static Scanner scanner = new Scanner(System.in);
    static String next() { return scanner.next(); }
    static int nextInt() {
        int res = 0;
        char[] chars = next().toCharArray();
        boolean minus = chars[0] == '-';
        int start = minus?1:0;
        for (int i = start; i < chars.length; i++) {
            res = res*10 + (chars[i]-'0');
        }
        return minus?-res:res;
    }
    static long nextLong() {
        long res = 0;
        char[] chars = next().toCharArray();
        boolean minus = chars[0] == '-';
        int start = minus?1:0;
        for (int i = start; i < chars.length; i++) {
            res = res*10 + (chars[i]-'0');
        }
        return minus?-res:res;
    }
    static double nextDouble() { return Double.parseDouble(next()); }
    static int[] nextIntArray(int n) {
        int[] array = new int[n];
        for (int i = 0; i < n; i++) { array[i] = nextInt(); }
        return array;
    }
    static long[] nextLongArray(int n) {
        long[] array = new long[n];
        for (int i = 0; i < n; i++) { array[i] = nextLong(); }
        return array;
    }

}
","import java.io.PrintWriter;
import java.math.BigInteger;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        long a = nextInt();
        long x = nextLong();
        long m = nextInt();
        long ans = solve1(a, x, m);
        out.println(ans);
        out.flush();
    }

    private static Map<Long, Long> memo = new HashMap<>();

    private static long solve1(long a, long x, long m) {
        if (x==1) {
            return 1%m;
        }
        if (x % 2 == 0) {
            long halfX = x / 2;
            long tmp = solve1(a, halfX, m);
            Long mul = memo.computeIfAbsent(halfX, h -> modPow(a, h, m));
            return ((tmp*mul)%m+tmp)%m;
        } else {
            long tmp = solve1(a, x - 1, m);
            return ((tmp*a)%m+1)%m;
        }
    }

    private static long modPow(long a, long n, long mod) {
        long x = a % mod;
        if (x == 0) {
            return x;
        }
        long res = 1;
        int i = 0;
        while (1L << i <= n) {
            if ((n & 1L << i) != 0) {
                res = (res * x) % mod;
            }
            x = (x * x) % mod;
            i += 1;
        }

        return res;
    }


    static PrintWriter out = new PrintWriter(System.out);
    static Scanner scanner = new Scanner(System.in);
    static String next() { return scanner.next(); }
    static int nextInt() {
        int res = 0;
        char[] chars = next().toCharArray();
        boolean minus = chars[0] == '-';
        int start = minus?1:0;
        for (int i = start; i < chars.length; i++) {
            res = res*10 + (chars[i]-'0');
        }
        return minus?-res:res;
    }
    static long nextLong() {
        long res = 0;
        char[] chars = next().toCharArray();
        boolean minus = chars[0] == '-';
        int start = minus?1:0;
        for (int i = start; i < chars.length; i++) {
            res = res*10 + (chars[i]-'0');
        }
        return minus?-res:res;
    }
    static double nextDouble() { return Double.parseDouble(next()); }
    static int[] nextIntArray(int n) {
        int[] array = new int[n];
        for (int i = 0; i < n; i++) { array[i] = nextInt(); }
        return array;
    }
    static long[] nextLongArray(int n) {
        long[] array = new long[n];
        for (int i = 0; i < n; i++) { array[i] = nextLong(); }
        return array;
    }

}
",WA
Tiempo ,abc293/E,Java,"import java.io.*;
import java.lang.reflect.Array;
import java.math.BigInteger;
import java.util.*;
import java.util.stream.Stream;

public class Main {

    public static void main(String[] args) throws IOException {
        sc = new MScanner(System.in);
        pw = new PrintWriter(System.out);
        
        for (int i = 0; i < 1; i++) {
            solver();
        }
    }

    public static void solver() throws IOException {
        long a = sc.nextLong();
        long x = sc.nextLong();
        long m = sc.nextLong();
        pw.println(getNum(a%m,x,m));
        pw.flush();
    }

    private static long getNum(long a, long x, long m) {
        if(x==0) return 0;
        if(x==1) return 1;
        long uu=0;
        if(x%2==0){
            uu= ((((fastM(a%m,x/2,m)+1)%m)*(getNum(a%m,x/2,m)))%m);
            uu%=m;
        }else{
            uu= ((((fastM(a%m,(x)/2,m)+1)%m)*(getNum(a%m,x/2,m)))%m);
            uu=((uu+fastM(a%m,x-1,m))%m);
        }
        return uu%m;
    }

    private static long fastM(long n, long m,long MOD) {
        long res = 1;
        long base = n;
        while (m != 0) {
            if ((m & 1) == 1) {
                res = res * base;
                res%=MOD;
            }
            base = base * base;
            base%=MOD;
            m = m >> 1;
        }
        return res%MOD;
    }
    public static int gcd(int a, int b) {
        return b == 0 ? a : gcd(b, a % b);
    }

    public static BigInteger gcd(BigInteger a, BigInteger b) {
        return b.compareTo(BigInteger.ZERO) == 0 ? a : gcd(b, a.mod(b));
    }

    static int curt;
    static PrintWriter pw;
    static MScanner sc;

    static class MScanner {
        StringTokenizer st;
        BufferedReader br;

        public MScanner(InputStream system) {
            br = new BufferedReader(new InputStreamReader(system));
        }

        public MScanner(String file) throws Exception {
            br = new BufferedReader(new FileReader(file));
        }

        public String next() throws IOException {
            while (st == null || !st.hasMoreTokens())
                st = new StringTokenizer(br.readLine());
            return st.nextToken();
        }

        public String nextLine() throws IOException {
            return br.readLine();
        }

        public int nextInt() throws IOException {
            return Integer.parseInt(next());
        }

        public double nextDouble() throws IOException {
            return Double.parseDouble(next());
        }

        public char nextChar() throws IOException {
            return next().charAt(0);
        }

        public long nextLong() throws IOException {
            return Long.parseLong(next());
        }
    }
}
","import java.io.*;
import java.lang.reflect.Array;
import java.math.BigInteger;
import java.util.*;
import java.util.stream.Stream;

public class Main {

    public static void main(String[] args) throws IOException {
        sc = new MScanner(System.in);
        pw = new PrintWriter(System.out);
        
        for (int i = 0; i < 1; i++) {
            solver();
        }
    }

    public static void solver() throws IOException {
        long a = sc.nextLong();
        long x = sc.nextLong();
        long m = sc.nextLong();
        if(m==1){
            pw.println(0);
        }else pw.println(getNum(a%m,x,m));
        pw.flush();
    }

    private static long getNum(long a, long x, long m) {
        if(x==0) return 0;
        if(x==1) return 1;
        long uu=0;
        if(x%2==0){
            uu= ((((fastM(a%m,x/2,m)+1)%m)*(getNum(a%m,x/2,m)))%m);
            uu%=m;
        }else{
            uu= ((((fastM(a%m,(x)/2,m)+1)%m)*(getNum(a%m,x/2,m)))%m);
            uu=((uu+fastM(a%m,x-1,m))%m);
        }
        return uu%m;
    }

    private static long fastM(long n, long m,long MOD) {
        long res = 1;
        long base = n;
        while (m != 0) {
            if ((m & 1) == 1) {
                res = res * base;
                res%=MOD;
            }
            base = base * base;
            base%=MOD;
            m = m >> 1;
        }
        return res%MOD;
    }
    public static int gcd(int a, int b) {
        return b == 0 ? a : gcd(b, a % b);
    }

    public static BigInteger gcd(BigInteger a, BigInteger b) {
        return b.compareTo(BigInteger.ZERO) == 0 ? a : gcd(b, a.mod(b));
    }

    static int curt;
    static PrintWriter pw;
    static MScanner sc;

    static class MScanner {
        StringTokenizer st;
        BufferedReader br;

        public MScanner(InputStream system) {
            br = new BufferedReader(new InputStreamReader(system));
        }

        public MScanner(String file) throws Exception {
            br = new BufferedReader(new FileReader(file));
        }

        public String next() throws IOException {
            while (st == null || !st.hasMoreTokens())
                st = new StringTokenizer(br.readLine());
            return st.nextToken();
        }

        public String nextLine() throws IOException {
            return br.readLine();
        }

        public int nextInt() throws IOException {
            return Integer.parseInt(next());
        }

        public double nextDouble() throws IOException {
            return Double.parseDouble(next());
        }

        public char nextChar() throws IOException {
            return next().charAt(0);
        }

        public long nextLong() throws IOException {
            return Long.parseLong(next());
        }
    }
}
",WA
Tiempo ,abc293/E,Java,"import java.io.*;
import java.lang.reflect.Array;
import java.math.BigInteger;
import java.util.*;
import java.util.stream.Stream;

public class Main {

    public static void main(String[] args) throws IOException {
        sc = new MScanner(System.in);
        pw = new PrintWriter(System.out);
        
        for (int i = 0; i < 1; i++) {
            solver();
        }
    }

    public static void solver() throws IOException {
        long a = sc.nextLong();
        long x = sc.nextLong();
        long m = sc.nextLong();
        pw.println(getNum(a%m,x,m));
        pw.flush();
    }

    private static long getNum(long a, long x, long m) {
        if(x==0) return 0;
        if(x==1) return 1;
        long uu=0;
        if(x%2==0){
            uu= ((((fastM(a%m,x/2,m)+1)%m)*(getNum(a%m,x/2,m)))%m);
            uu%=m;
        }else{
            uu= ((((fastM(a%m,(x)/2,m)+1)%m)*(getNum(a%m,x/2,m)))%m);
            uu=((uu+fastM(a%m,x-1,m))%m);
        }
        System.out.println(uu);
        return uu%m;
    }

    private static long fastM(long n, long m,long MOD) {
        long res = 1;
        long base = n;
        while (m != 0) {
            if ((m & 1) == 1) {
                res = res * base;
                res%=MOD;
            }
            base = base * base;
            base%=MOD;
            m = m >> 1;
        }
        System.out.println(res);
        return res%MOD;
    }
    public static int gcd(int a, int b) {
        return b == 0 ? a : gcd(b, a % b);
    }

    public static BigInteger gcd(BigInteger a, BigInteger b) {
        return b.compareTo(BigInteger.ZERO) == 0 ? a : gcd(b, a.mod(b));
    }

    static int curt;
    static PrintWriter pw;
    static MScanner sc;

    static class MScanner {
        StringTokenizer st;
        BufferedReader br;

        public MScanner(InputStream system) {
            br = new BufferedReader(new InputStreamReader(system));
        }

        public MScanner(String file) throws Exception {
            br = new BufferedReader(new FileReader(file));
        }

        public String next() throws IOException {
            while (st == null || !st.hasMoreTokens())
                st = new StringTokenizer(br.readLine());
            return st.nextToken();
        }

        public String nextLine() throws IOException {
            return br.readLine();
        }

        public int nextInt() throws IOException {
            return Integer.parseInt(next());
        }

        public double nextDouble() throws IOException {
            return Double.parseDouble(next());
        }

        public char nextChar() throws IOException {
            return next().charAt(0);
        }

        public long nextLong() throws IOException {
            return Long.parseLong(next());
        }
    }
}
","import java.io.*;
import java.lang.reflect.Array;
import java.math.BigInteger;
import java.util.*;
import java.util.stream.Stream;

public class Main {

    public static void main(String[] args) throws IOException {
        sc = new MScanner(System.in);
        pw = new PrintWriter(System.out);
        
        for (int i = 0; i < 1; i++) {
            solver();
        }
    }

    public static void solver() throws IOException {
        long a = sc.nextLong();
        long x = sc.nextLong();
        long m = sc.nextLong();
        if(m==1){
            pw.println(0);
        }else pw.println(getNum(a%m,x,m));
        pw.flush();
    }

    private static long getNum(long a, long x, long m) {
        if(x==0) return 0;
        if(x==1) return 1;
        long uu=0;
        if(x%2==0){
            uu= ((((fastM(a%m,x/2,m)+1)%m)*(getNum(a%m,x/2,m)))%m);
            uu%=m;
        }else{
            uu= ((((fastM(a%m,(x)/2,m)+1)%m)*(getNum(a%m,x/2,m)))%m);
            uu=((uu+fastM(a%m,x-1,m))%m);
        }
        return uu%m;
    }

    private static long fastM(long n, long m,long MOD) {
        long res = 1;
        long base = n;
        while (m != 0) {
            if ((m & 1) == 1) {
                res = res * base;
                res%=MOD;
            }
            base = base * base;
            base%=MOD;
            m = m >> 1;
        }
        return res%MOD;
    }
    public static int gcd(int a, int b) {
        return b == 0 ? a : gcd(b, a % b);
    }

    public static BigInteger gcd(BigInteger a, BigInteger b) {
        return b.compareTo(BigInteger.ZERO) == 0 ? a : gcd(b, a.mod(b));
    }

    static int curt;
    static PrintWriter pw;
    static MScanner sc;

    static class MScanner {
        StringTokenizer st;
        BufferedReader br;

        public MScanner(InputStream system) {
            br = new BufferedReader(new InputStreamReader(system));
        }

        public MScanner(String file) throws Exception {
            br = new BufferedReader(new FileReader(file));
        }

        public String next() throws IOException {
            while (st == null || !st.hasMoreTokens())
                st = new StringTokenizer(br.readLine());
            return st.nextToken();
        }

        public String nextLine() throws IOException {
            return br.readLine();
        }

        public int nextInt() throws IOException {
            return Integer.parseInt(next());
        }

        public double nextDouble() throws IOException {
            return Double.parseDouble(next());
        }

        public char nextChar() throws IOException {
            return next().charAt(0);
        }

        public long nextLong() throws IOException {
            return Long.parseLong(next());
        }
    }
}
",WA
Tiempo ,abc293/E,Java,"
import java.io.*;
import java.lang.reflect.Array;
import java.math.BigInteger;
import java.util.*;
import java.util.stream.Stream;

public class Main {

    public static void main(String[] args) throws IOException {
        sc = new MScanner(System.in);
        pw = new PrintWriter(System.out);
        
        for (int i = 0; i < 1; i++) {
            solver();
        }
    }

    public static void solver() throws IOException {
        long a = sc.nextLong();
        long x = sc.nextLong();
        long m = sc.nextLong();
        pw.println(getNum(a%m,x,m));
        pw.flush();
    }

    private static long getNum(long a, long x, long m) {
        if(x==0) return 0;
        if(x==1) return 1;
        long uu=0;
        if(x%2==0){
            uu= ((((fastM(a,x/2,m)+1)%m)*(getNum(a,x/2,m)))%m);
            uu%=m;
        }else{
            uu= ((((fastM(a,(x)/2,m)+1)%m)*(getNum(a,x/2,m)))%m);
            uu=((uu+fastM(a,x-1,m))%m);
        }
        return uu%m;
    }

    private static long fastM(long n, long m,long MOD) {
        long res = 1;
        long base = n;
        while (m != 0) {
            if ((m & 1) == 1) {
                res = res * base;
                res%=MOD;
            }
            base = base * base;
            base%=MOD;
            m = m >> 1;
        }
        return res%MOD;
    }
    public static int gcd(int a, int b) {
        return b == 0 ? a : gcd(b, a % b);
    }

    public static BigInteger gcd(BigInteger a, BigInteger b) {
        return b.compareTo(BigInteger.ZERO) == 0 ? a : gcd(b, a.mod(b));
    }

    static int curt;
    static PrintWriter pw;
    static MScanner sc;

    static class MScanner {
        StringTokenizer st;
        BufferedReader br;

        public MScanner(InputStream system) {
            br = new BufferedReader(new InputStreamReader(system));
        }

        public MScanner(String file) throws Exception {
            br = new BufferedReader(new FileReader(file));
        }

        public String next() throws IOException {
            while (st == null || !st.hasMoreTokens())
                st = new StringTokenizer(br.readLine());
            return st.nextToken();
        }

        public String nextLine() throws IOException {
            return br.readLine();
        }

        public int nextInt() throws IOException {
            return Integer.parseInt(next());
        }

        public double nextDouble() throws IOException {
            return Double.parseDouble(next());
        }

        public char nextChar() throws IOException {
            return next().charAt(0);
        }

        public long nextLong() throws IOException {
            return Long.parseLong(next());
        }
    }
}
","import java.io.*;
import java.lang.reflect.Array;
import java.math.BigInteger;
import java.util.*;
import java.util.stream.Stream;

public class Main {

    public static void main(String[] args) throws IOException {
        sc = new MScanner(System.in);
        pw = new PrintWriter(System.out);
        
        for (int i = 0; i < 1; i++) {
            solver();
        }
    }

    public static void solver() throws IOException {
        long a = sc.nextLong();
        long x = sc.nextLong();
        long m = sc.nextLong();
        if(m==1){
            pw.println(0);
        }else pw.println(getNum(a%m,x,m));
        pw.flush();
    }

    private static long getNum(long a, long x, long m) {
        if(x==0) return 0;
        if(x==1) return 1;
        long uu=0;
        if(x%2==0){
            uu= ((((fastM(a%m,x/2,m)+1)%m)*(getNum(a%m,x/2,m)))%m);
            uu%=m;
        }else{
            uu= ((((fastM(a%m,(x)/2,m)+1)%m)*(getNum(a%m,x/2,m)))%m);
            uu=((uu+fastM(a%m,x-1,m))%m);
        }
        return uu%m;
    }

    private static long fastM(long n, long m,long MOD) {
        long res = 1;
        long base = n;
        while (m != 0) {
            if ((m & 1) == 1) {
                res = res * base;
                res%=MOD;
            }
            base = base * base;
            base%=MOD;
            m = m >> 1;
        }
        return res%MOD;
    }
    public static int gcd(int a, int b) {
        return b == 0 ? a : gcd(b, a % b);
    }

    public static BigInteger gcd(BigInteger a, BigInteger b) {
        return b.compareTo(BigInteger.ZERO) == 0 ? a : gcd(b, a.mod(b));
    }

    static int curt;
    static PrintWriter pw;
    static MScanner sc;

    static class MScanner {
        StringTokenizer st;
        BufferedReader br;

        public MScanner(InputStream system) {
            br = new BufferedReader(new InputStreamReader(system));
        }

        public MScanner(String file) throws Exception {
            br = new BufferedReader(new FileReader(file));
        }

        public String next() throws IOException {
            while (st == null || !st.hasMoreTokens())
                st = new StringTokenizer(br.readLine());
            return st.nextToken();
        }

        public String nextLine() throws IOException {
            return br.readLine();
        }

        public int nextInt() throws IOException {
            return Integer.parseInt(next());
        }

        public double nextDouble() throws IOException {
            return Double.parseDouble(next());
        }

        public char nextChar() throws IOException {
            return next().charAt(0);
        }

        public long nextLong() throws IOException {
            return Long.parseLong(next());
        }
    }
}
",WA
monk ,abc293/E,Java,"public class Main {
    static long a, x, m;

    private static long pwr(long b, long e) {
        long ans = 1;
        while (e > 0) {
            if ((e & 1) == 1) {
                ans = (ans * b) % m;
            }
            e >>= 1;
            b = (b * b) % m;
        }
        return ans;
    }

    private static long f(long n) {
        if (n == 0) {
            return 0;
        }
        else {
            long half = f(n >> 1);
            if ((n & 1) == 0) {
                return (half + (half * pwr(a, n / 2)) % m) % m;
            }
            else {
                return (1 + (a * half) % m + (pwr(a, (n >> 1) + 1) * half) % m) % m;
            }
        }
    }
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        a = scanner.nextLong();
        x = scanner.nextLong();
        m = scanner.nextLong();
        System.out.println(f(x));
    }
}
","import java.util.*;

public class Main {
    static long a, x, m;

    private static long pwr(long b, long e) {
        long ans = 1;
        while (e > 0) {
            if ((e & 1) == 1) {
                ans = (ans * b) % m;
            }
            e >>= 1;
            b = (b * b) % m;
        }
        return ans;
    }

    private static long f(long n) {
        if (n == 0) {
            return 0;
        }
        else {
            long half = f(n >> 1);
            if ((n & 1) == 0) {
                return (half + (half * pwr(a, n / 2)) % m) % m;
            }
            else {
                return (1 + (a * half) % m + (pwr(a, (n >> 1) + 1) * half) % m) % m;
            }
        }
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        a = scanner.nextLong();
        x = scanner.nextLong();
        m = scanner.nextLong();
        System.out.println(f(x));
    }
}
",CE
azidantuiren ,abc293/E,Java,"import java.util.HashMap;
import java.util.Scanner;


public class E_Geometric_Progression {
    static long a, x, m;
    static HashMap<Long, Long> hm = new HashMap<>();
    static long fastMul(long n) {
        if (hm.containsKey(n)) return hm.get(n);
        long tmp, sum, base;
        tmp = n;
        sum = 1;
        base = a;
        while (tmp > 0) {
            if (tmp % 2 == 1) {
                sum *= base;
                sum %= m;
            }
            base *= base;
            base %= m;
            tmp /= 2;
        }
        hm.put(n, sum);
        return sum;
    }
    static long cal(long n) {
        if (n == 0) return 1;
        if (n == 1) return a + 1;
        
        
        
        
        
        
        
        if (n % 2 == 0) {
            
            return (1 + a * (cal(n - 1) % m)) % m;
        }
        return ((1 + fastMul(n / 2 + 1)) % m * (cal(n / 2) % m)) % m;
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        a = sc.nextLong();
        x = sc.nextLong();
        m = sc.nextLong();
        if (a == 1) {
            System.out.println(x % m);
            return;
        }
        System.out.println(cal(x - 1) % m);
    }
}
","import java.util.HashMap;
import java.util.Scanner;


public class Main {
    static long a, x, m;
    static HashMap<Long, Long> hm = new HashMap<>();
    static long fastMul(long n) {
        if (hm.containsKey(n)) return hm.get(n);
        long tmp, sum, base;
        tmp = n;
        sum = 1;
        base = a;
        while (tmp > 0) {
            if (tmp % 2 == 1) {
                sum *= base;
                sum %= m;
            }
            base *= base;
            base %= m;
            tmp /= 2;
        }
        hm.put(n, sum);
        return sum;
    }
    static long cal(long n) {
        if (n == 0) return 1;
        if (n == 1) return a + 1;
        
        
        
        
        
        
        
        if (n % 2 == 0) {
            
            return (1 + a * (cal(n - 1) % m)) % m;
        }
        return ((1 + fastMul(n / 2 + 1)) % m * (cal(n / 2) % m)) % m;
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        a = sc.nextLong();
        x = sc.nextLong();
        m = sc.nextLong();
        if (a == 1) {
            System.out.println(x % m);
            return;
        }
        System.out.println(cal(x - 1) % m);
    }
}
",CE
azidantuiren ,abc293/E,Java,"import java.util.HashMap;
import java.util.Scanner;


public class Main {
    static long a, x, m;
    static HashMap<Long, Long> hm = new HashMap<>();
    static long fastMul(long n) {
        if (hm.containsKey(n)) return hm.get(n);
        long tmp, sum, base;
        tmp = n;
        sum = 1;
        base = a;
        while (tmp > 0) {
            if (tmp % 2 == 1) {
                sum *= base;
                sum %= m;
            }
            base *= base;
            base %= m;
            tmp /= 2;
        }
        hm.put(n, sum);
        return sum;
    }
    static long cal(long n) {
        if (n == 0) return 1;
        if (n == 1) return a + 1;
        
        
        
        
        
        
        
        if (n % 2 == 0) {
            
            return (1 + a * (cal(n - 1) % m)) % m;
        }
        return ((1 + fastMul(n / 2 + 1)) % m * (cal(n / 2) % m)) % m;
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        a = sc.nextLong();
        x = sc.nextLong();
        m = sc.nextLong();
        if (a == 1) {
            System.out.println(x % m);
            return;
        }
        System.out.println(cal(x - 1));
    }
}
","import java.util.HashMap;
import java.util.Scanner;


public class Main {
    static long a, x, m;
    static HashMap<Long, Long> hm = new HashMap<>();
    static long fastMul(long n) {
        if (hm.containsKey(n)) return hm.get(n);
        long tmp, sum, base;
        tmp = n;
        sum = 1;
        base = a;
        while (tmp > 0) {
            if (tmp % 2 == 1) {
                sum *= base;
                sum %= m;
            }
            base *= base;
            base %= m;
            tmp /= 2;
        }
        hm.put(n, sum);
        return sum;
    }
    static long cal(long n) {
        if (n == 0) return 1;
        if (n == 1) return a + 1;
        
        
        
        
        
        
        
        if (n % 2 == 0) {
            
            return (1 + a * (cal(n - 1) % m)) % m;
        }
        return ((1 + fastMul(n / 2 + 1)) % m * (cal(n / 2) % m)) % m;
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        a = sc.nextLong();
        x = sc.nextLong();
        m = sc.nextLong();
        if (a == 1) {
            System.out.println(x % m);
            return;
        }
        System.out.println(cal(x - 1) % m);
    }
}
",WA
azidantuiren ,abc293/E,Java,"import java.util.HashMap;
import java.util.Scanner;


public class Main {
    static long a, x, m;
    static HashMap<Long, Long> hm = new HashMap<>();
    static long fastMul(long n) {
        if (hm.containsKey(n)) return hm.get(n);
        long tmp, sum, base;
        tmp = n;
        sum = 1;
        base = a;
        while (tmp > 0) {
            if (tmp % 2 == 1) {
                sum *= base;
                sum %= m;
            }
            base *= base;
            base %= m;
            tmp /= 2;
        }
        hm.put(n, sum);
        return sum;
    }
    static long cal(long n) {
        if (n == 0) return 1;
        if (n == 1) return a + 1;
        
        
        
        
        
        
        
        if (n % 2 == 0) {
            
            return (1 + a * (cal(n - 1) % m)) % m;
        }
        return ((1 + fastMul(n / 2 + 1)) % m * (cal(n / 2) % m)) % m;
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        a = sc.nextLong();
        x = sc.nextLong();
        m = sc.nextLong();
        if (a == 1) {
            System.out.println(x);
            return;
        }
        System.out.println(cal(x - 1));
    }
}
","import java.util.HashMap;
import java.util.Scanner;


public class Main {
    static long a, x, m;
    static HashMap<Long, Long> hm = new HashMap<>();
    static long fastMul(long n) {
        if (hm.containsKey(n)) return hm.get(n);
        long tmp, sum, base;
        tmp = n;
        sum = 1;
        base = a;
        while (tmp > 0) {
            if (tmp % 2 == 1) {
                sum *= base;
                sum %= m;
            }
            base *= base;
            base %= m;
            tmp /= 2;
        }
        hm.put(n, sum);
        return sum;
    }
    static long cal(long n) {
        if (n == 0) return 1;
        if (n == 1) return a + 1;
        
        
        
        
        
        
        
        if (n % 2 == 0) {
            
            return (1 + a * (cal(n - 1) % m)) % m;
        }
        return ((1 + fastMul(n / 2 + 1)) % m * (cal(n / 2) % m)) % m;
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        a = sc.nextLong();
        x = sc.nextLong();
        m = sc.nextLong();
        if (a == 1) {
            System.out.println(x % m);
            return;
        }
        System.out.println(cal(x - 1) % m);
    }
}
",WA
gaps ,abc293/E,Java,"import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long a = sc.nextLong();
        long x = sc.nextLong();
        long m = sc.nextLong();
        System.out.println(calc(a, x, m));
    }

    private static long calc(long a, long x, long m) {
        int s = (int) Math.ceil(Math.sqrt(x));
        long mod = 1;
        long[] sum = new long[s];
        sum[0] = 1;
        for (int i = 1; i < s; i++) {
            sum[i] = (sum[i - 1] + (mod = mod * a % m)) % m;
        }
        mod = mod * a % m;
        long res = 0;
        long cur = 1;
        for (; x >= s; x -= s) {
            res = (res + sum[s - 1] * cur) % m;
            cur = cur * mod % m;
        }
        return x <= 0 ? res : (res + sum[(int) x] * cur) % m;
    }
}
","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long a = sc.nextLong();
        long x = sc.nextLong();
        long m = sc.nextLong();
        System.out.println(calc(a, x, m));
    }

    private static long calc(long a, long x, long m) {
        int s = (int) Math.ceil(Math.sqrt(x));
        long mod = 1;
        long[] sum = new long[s];
        sum[0] = 1;
        for (int i = 1; i < s; i++) {
            sum[i] = (sum[i - 1] + (mod = mod * a % m)) % m;
        }
        mod = mod * a % m;
        long res = 0;
        long cur = 1;
        for (; x >= s; x -= s) {
            res = (res + sum[s - 1] * cur) % m;
            cur = cur * mod % m;
        }
        return x <= 0 ? res : (res + sum[(int) x - 1] * cur) % m;
    }
}
",WA
Java_Programmer ,abc293/E,Java,"


import java.io.*;
import java.util.*;

public class Main {
    private static final FastReader fr = new FastReader();
    private static final long a = fr.nextLong();
    private static final long x = fr.nextLong();
    private static final long MOD = fr.nextLong();
    public static void main(String[] args) throws IOException {
        BufferedWriter output = new BufferedWriter(new OutputStreamWriter(System.out));
        StringBuilder sb = new StringBuilder();




        if(a == 1){
            sb.append(x%MOD);
        }
        else {
            sb.append(fun(x));
        }
        output.write(sb.toString());
        output.flush();

    }
    private static long powMod(long n){
        if(n == 0) return 1L;
        long t = powMod(n/2);
        if(n%2 == 0) return t*t%MOD;
        return t*t%MOD*a%MOD;
    }
    private static long fun(long p){
        if(p == 0) return 0L;
        if(p == 1) return 1L;
        long half = fun(p/2);
        if(p%2 == 0) return (half+half*powMod(p/2)%MOD)%MOD;
        return (1+a*half%MOD+powMod(p/2+1)*half%MOD)%MOD;
    }
}
class FastReader {
    BufferedReader br;
    StringTokenizer st;

    public FastReader()
    {
        br = new BufferedReader(new InputStreamReader(System.in));
    }

    String next() {
        while (st == null || !st.hasMoreElements()) {
            try {
                st = new StringTokenizer(br.readLine());
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }
        return st.nextToken();
    }

    int nextInt() { return Integer.parseInt(next()); }

    long nextLong() { return Long.parseLong(next()); }

    double nextDouble()
    {
        return Double.parseDouble(next());
    }

    String nextLine()
    {
        String str = """";
        try {
            if(st.hasMoreTokens()){
                str = st.nextToken(""\n"");
            }
            else{
                str = br.readLine();
            }
        }
        catch (IOException e) {
            e.printStackTrace();
        }
        return str;
    }
}
","


import java.io.*;
import java.util.*;

public class Main {
    private static final FastReader fr = new FastReader();
    private static final long a = fr.nextLong();
    private static final long x = fr.nextLong();
    private static final long MOD = fr.nextLong();
    public static void main(String[] args) throws IOException {
        BufferedWriter output = new BufferedWriter(new OutputStreamWriter(System.out));
        StringBuilder sb = new StringBuilder();




        if(a == 1){
            sb.append(x%MOD);
        }
        else {
            sb.append(fun(x)%MOD);
        }
        output.write(sb.toString());
        output.flush();

    }
    private static long powMod(long n){
        if(n == 0) return 1L;
        long t = powMod(n/2);
        if(n%2 == 0) return t*t%MOD;
        return t*t%MOD*a%MOD;
    }
    private static long fun(long p){
        if(p == 0) return 0L;
        if(p == 1) return 1L;
        long half = fun(p/2);
        if(p%2 == 0) return (half+half*powMod(p/2)%MOD)%MOD;
        return (1+a*half%MOD+powMod(p/2+1)*half%MOD)%MOD;
    }
}
class FastReader {
    BufferedReader br;
    StringTokenizer st;

    public FastReader()
    {
        br = new BufferedReader(new InputStreamReader(System.in));
    }

    String next() {
        while (st == null || !st.hasMoreElements()) {
            try {
                st = new StringTokenizer(br.readLine());
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }
        return st.nextToken();
    }

    int nextInt() { return Integer.parseInt(next()); }

    long nextLong() { return Long.parseLong(next()); }

    double nextDouble()
    {
        return Double.parseDouble(next());
    }

    String nextLine()
    {
        String str = """";
        try {
            if(st.hasMoreTokens()){
                str = st.nextToken(""\n"");
            }
            else{
                str = br.readLine();
            }
        }
        catch (IOException e) {
            e.printStackTrace();
        }
        return str;
    }
}
",WA
Java_Programmer ,abc293/E,Java,"


import java.io.*;
import java.util.*;

public class Main {
    private static final FastReader fr = new FastReader();
    private static final long a = fr.nextLong();
    private static final long x = fr.nextLong();
    private static final long MOD = fr.nextLong();
    public static void main(String[] args) throws IOException {
        BufferedWriter output = new BufferedWriter(new OutputStreamWriter(System.out));
        StringBuilder sb = new StringBuilder();




        if(a == 1){
            sb.append((x-1)%MOD);
        }
        else {
            sb.append(fun(x));
        }
        output.write(sb.toString());
        output.flush();

    }
    private static long powMod(long n){
        if(n == 0) return 1L;
        long t = powMod(n/2);
        if(n%2 == 0) return t*t%MOD;
        return t*t%MOD*a%MOD;
    }
    private static long fun(long p){
        if(p == 0) return 0L;
        if(p == 1) return 1L;
        long half = fun(p/2);
        if(p%2 == 0) return (half+half*powMod(p/2)%MOD)%MOD;
        return (1+a*half%MOD+powMod(p/2+1)*half%MOD)%MOD;
    }
}
class FastReader {
    BufferedReader br;
    StringTokenizer st;

    public FastReader()
    {
        br = new BufferedReader(new InputStreamReader(System.in));
    }

    String next() {
        while (st == null || !st.hasMoreElements()) {
            try {
                st = new StringTokenizer(br.readLine());
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }
        return st.nextToken();
    }

    int nextInt() { return Integer.parseInt(next()); }

    long nextLong() { return Long.parseLong(next()); }

    double nextDouble()
    {
        return Double.parseDouble(next());
    }

    String nextLine()
    {
        String str = """";
        try {
            if(st.hasMoreTokens()){
                str = st.nextToken(""\n"");
            }
            else{
                str = br.readLine();
            }
        }
        catch (IOException e) {
            e.printStackTrace();
        }
        return str;
    }
}
","


import java.io.*;
import java.util.*;

public class Main {
    private static final FastReader fr = new FastReader();
    private static final long a = fr.nextLong();
    private static final long x = fr.nextLong();
    private static final long MOD = fr.nextLong();
    public static void main(String[] args) throws IOException {
        BufferedWriter output = new BufferedWriter(new OutputStreamWriter(System.out));
        StringBuilder sb = new StringBuilder();




        if(a == 1){
            sb.append(x%MOD);
        }
        else {
            sb.append(fun(x)%MOD);
        }
        output.write(sb.toString());
        output.flush();

    }
    private static long powMod(long n){
        if(n == 0) return 1L;
        long t = powMod(n/2);
        if(n%2 == 0) return t*t%MOD;
        return t*t%MOD*a%MOD;
    }
    private static long fun(long p){
        if(p == 0) return 0L;
        if(p == 1) return 1L;
        long half = fun(p/2);
        if(p%2 == 0) return (half+half*powMod(p/2)%MOD)%MOD;
        return (1+a*half%MOD+powMod(p/2+1)*half%MOD)%MOD;
    }
}
class FastReader {
    BufferedReader br;
    StringTokenizer st;

    public FastReader()
    {
        br = new BufferedReader(new InputStreamReader(System.in));
    }

    String next() {
        while (st == null || !st.hasMoreElements()) {
            try {
                st = new StringTokenizer(br.readLine());
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }
        return st.nextToken();
    }

    int nextInt() { return Integer.parseInt(next()); }

    long nextLong() { return Long.parseLong(next()); }

    double nextDouble()
    {
        return Double.parseDouble(next());
    }

    String nextLine()
    {
        String str = """";
        try {
            if(st.hasMoreTokens()){
                str = st.nextToken(""\n"");
            }
            else{
                str = br.readLine();
            }
        }
        catch (IOException e) {
            e.printStackTrace();
        }
        return str;
    }
}
",WA
yadavdipesh ,abc293/E,Java,"




import java.io.*;
import java.util.*;
import java.lang.*;
public class Main{
    
  static PrintWriter out = new PrintWriter(System.out);
  static FastReader in = new FastReader();
  public static void main(String[] args) throws IOException{
    
    
    int ntc = 1;
    for(int tno = 1 ; tno <= ntc ; tno++) solve();
    
    out.flush();
  } 
  public static void solve(){
        
        long a = in.nextLong();
        long x = in.nextLong();
        long m = in.nextLong();
        a  = a % m;
        out.println(rec(a , x , m));





  }
  public static long rec(long a, long x , long m){
  	if(x == 1){
  		return 1 % m;
  	}
  	
  	if((x&1) == 0){
  		return rec(a , x/2 , m) * (1 + pow(a , x/2 , m))%m;
  	}
  	else{
  		return rec(a , x-1 , m) + pow(a , x-1 , m)%m;
  	}
  }
  
  public static long pow(long a , long b , long mod){
  	long res = 1;
  	while(b > 0){
  		if((b&1) == 0){
  			a = (a * a) % mod;
  			b = (b >> 1);
  		}
  		else{
  			res = (res * a) % mod;
  			b = (b - 1);
  		}
  	}
  	return res%mod;
  }


      
	public static int[] ia(int n){
		int[] arr = new int[n];
		for(int i = 0 ; i < n ; i++){
			arr[i] = in.nextInt();
		}
		return arr;
	}
	public static int inp(){return in.nextInt();}
	public static String inps(){return in.next();}
	public static int[] radixSort2(int[] a){
		int n = a.length;
		int[] c0 = new int[0x101];
		int[] c1 = new int[0x101];
		int[] c2 = new int[0x101];
		int[] c3 = new int[0x101];
		for(int v : a) {
			c0[(v&0xff)+1]++;
			c1[(v>>>8&0xff)+1]++;
			c2[(v>>>16&0xff)+1]++;
			c3[(v>>>24^0x80)+1]++;
		}
		for(int i = 0;i < 0xff;i++) {
			c0[i+1] += c0[i];
			c1[i+1] += c1[i];
			c2[i+1] += c2[i];
			c3[i+1] += c3[i];
		}
		int[] t = new int[n];
		for(int v : a)t[c0[v&0xff]++] = v;
		for(int v : t)a[c1[v>>>8&0xff]++] = v;
		for(int v : a)t[c2[v>>>16&0xff]++] = v;
		for(int v : t)a[c3[v>>>24^0x80]++] = v;
		return a;
	}
   static long mod = 1000000007;
   
 public static void no(){out.println(""No"");}
 public static void yes(){out.println(""Yes"");}
  static long gcd(long a, long b) {
        while (b != 0) {
          long t = a;
          a = b;  
          b = t % b;
        } 
        return a;
  }    
  static class FastReader {
      BufferedReader br;
      StringTokenizer st;
      public FastReader() {
        br = new BufferedReader(new InputStreamReader(System.in));
      }
      String next() {
        while (st == null || !st.hasMoreTokens()) {
          try {
            st = new StringTokenizer(br.readLine());
          } catch (IOException e) {
            e.printStackTrace();
          }
        }
        return st.nextToken();
      }
      int nextInt() {
        return Integer.parseInt(next());
      }
      long nextLong() {
        return Long.parseLong(next());
      }
      double nextDouble() {
        return Double.parseDouble(next());
      }
      String nextLine() {
        String str = """";
        try {
          str = br.readLine().trim();
        } catch (Exception e) {
          e.printStackTrace();
        }
        return str;
      }
    }
}


","




import java.io.*;
import java.util.*;
import java.lang.*;
public class Main{
    
  static PrintWriter out = new PrintWriter(System.out);
  static FastReader in = new FastReader();
  public static void main(String[] args) throws IOException{
    
    
    int ntc = 1;
    for(int tno = 1 ; tno <= ntc ; tno++) solve();
    
    out.flush();
  } 
  public static void solve(){
        
        long a = in.nextLong();
        long x = in.nextLong();
        long m = in.nextLong();
        a  = a % m;
        out.println(rec(a , x , m));





  }
  public static long rec(long a, long x , long m){
  	if(x == 1){
  		return 1 % m;
  	}
  	
  	if((x&1) == 0){
  		return (rec(a , x/2 , m) * (1 + pow(a , x/2 , m))%m)%m;
  	}
  	else{
  		return (rec(a , x-1 , m) + pow(a , x-1 , m)%m)%m;
  	}
  }
  
  public static long pow(long a , long b , long mod){
  	long res = 1;
  	while(b > 0){
  		if((b&1) == 0){
  			a = (a * a) % mod;
  			b = (b >> 1);
  		}
  		else{
  			res = (res * a) % mod;
  			b = (b - 1);
  		}
  	}
  	return res%mod;
  }


      
	public static int[] ia(int n){
		int[] arr = new int[n];
		for(int i = 0 ; i < n ; i++){
			arr[i] = in.nextInt();
		}
		return arr;
	}
	public static int inp(){return in.nextInt();}
	public static String inps(){return in.next();}
	public static int[] radixSort2(int[] a){
		int n = a.length;
		int[] c0 = new int[0x101];
		int[] c1 = new int[0x101];
		int[] c2 = new int[0x101];
		int[] c3 = new int[0x101];
		for(int v : a) {
			c0[(v&0xff)+1]++;
			c1[(v>>>8&0xff)+1]++;
			c2[(v>>>16&0xff)+1]++;
			c3[(v>>>24^0x80)+1]++;
		}
		for(int i = 0;i < 0xff;i++) {
			c0[i+1] += c0[i];
			c1[i+1] += c1[i];
			c2[i+1] += c2[i];
			c3[i+1] += c3[i];
		}
		int[] t = new int[n];
		for(int v : a)t[c0[v&0xff]++] = v;
		for(int v : t)a[c1[v>>>8&0xff]++] = v;
		for(int v : a)t[c2[v>>>16&0xff]++] = v;
		for(int v : t)a[c3[v>>>24^0x80]++] = v;
		return a;
	}
   static long mod = 1000000007;
   
 public static void no(){out.println(""No"");}
 public static void yes(){out.println(""Yes"");}
  static long gcd(long a, long b) {
        while (b != 0) {
          long t = a;
          a = b;  
          b = t % b;
        } 
        return a;
  }    
  static class FastReader {
      BufferedReader br;
      StringTokenizer st;
      public FastReader() {
        br = new BufferedReader(new InputStreamReader(System.in));
      }
      String next() {
        while (st == null || !st.hasMoreTokens()) {
          try {
            st = new StringTokenizer(br.readLine());
          } catch (IOException e) {
            e.printStackTrace();
          }
        }
        return st.nextToken();
      }
      int nextInt() {
        return Integer.parseInt(next());
      }
      long nextLong() {
        return Long.parseLong(next());
      }
      double nextDouble() {
        return Double.parseDouble(next());
      }
      String nextLine() {
        String str = """";
        try {
          str = br.readLine().trim();
        } catch (Exception e) {
          e.printStackTrace();
        }
        return str;
      }
    }
}


",WA
Rock111 ,abc293/E,Java,"import java.io.*;
import java.util.*;

public class Main {
    static StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    public static double nextDouble() throws IOException{ in.nextToken(); return in.nval; }
    public static float nextFloat() throws IOException{ in.nextToken(); return (float)in.nval; }
    public static int nextInt() throws IOException { in.nextToken(); return (int)in.nval; }
    public static long nextLong() throws IOException { in.nextToken(); return (long)in.nval; }
    public static String next() throws IOException{ in.nextToken(); return in.sval;}
    static BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));

    long ksm(long x, long p, long m) {
        long rem=1;
        while (p>0) {
            if (p % 2 != 0) {
                rem = (rem * x) % m;
            }
            x = (x * x) % m;
            p = p >> 1;
        }
        return rem % m;
    }

    public void resolve() throws Exception {
        long a=nextLong(),x=nextLong(),m=nextLong();
        out.println(cal(a,x-1,m));
    }

    long cal(long a,long x,long m) {
        if (x==0) {
            return 1;
        }
        long res=0;
        if (x%2==0) {
            res+=ksm(a,x,m);
            x-=1;
        }
        long mid=(x+1)/2;
        long r1=ksm(a,mid,m);
        long r2=cal(a,mid-1,m);
        return (res+r2%m+r1*r2%m)%m;
    }

    public static void main(String[] args) throws Exception {
        new Main().resolve();
        out.flush();
    }
}

","import java.io.*;
import java.util.*;

public class Main {
    static StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    public static double nextDouble() throws IOException{ in.nextToken(); return in.nval; }
    public static float nextFloat() throws IOException{ in.nextToken(); return (float)in.nval; }
    public static int nextInt() throws IOException { in.nextToken(); return (int)in.nval; }
    public static long nextLong() throws IOException { in.nextToken(); return (long)in.nval; }
    public static String next() throws IOException{ in.nextToken(); return in.sval;}
    static BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));

    long ksm(long x, long p, long m) {
        long rem=1;
        while (p>0) {
            if (p % 2 != 0) {
                rem = (rem * x) % m;
            }
            x = (x * x) % m;
            p = p >> 1;
        }
        return rem % m;
    }

    public void resolve() throws Exception {
        long a=nextLong(),x=nextLong(),m=nextLong();
        out.println(cal(a,x-1,m));
    }

    long cal(long a,long x,long m) {
        if (m==1) {
            return 0;
        }
        if (x==0) {
            return 1;
        }
        long res=0;
        if (x%2==0) {
            res+=ksm(a,x,m);
            x-=1;
        }
        long mid=(x+1)/2;
        long r1=ksm(a,mid,m);
        long r2=cal(a,mid-1,m);
        return (res+r2%m+r1*r2%m)%m;
    }

    public static void main(String[] args) throws Exception {
        new Main().resolve();
        out.flush();
    }
}

",WA
yvbf ,abc293/E,Java,"
import java.io.*;
import java.util.*;

public class Main {

    long M, a;

    public long largePower(long exp) {
        long base = a;
        long Mod = M;
        long ret = 1L, baseLong = base;
        for (int i = 0; i <= 60; ++i) {
            if ((exp & (1L << i)) > 0) {
                ret = (ret * baseLong) % Mod;
            }
            baseLong = (baseLong * baseLong) % Mod;
        }
        return ret;
    }

    long comp(long n) {
        if (n == 1) return 1;
        long ret = 0;
        if (n % 2 == 1) {
            ret = largePower(n - 1);
            n--;
        }
        long r1 = comp(n / 2);
        long r2 = (largePower(n / 2) + 1) % M;
        ret += r1 * r2 % M;
        return ret;
    }

    void go() {
        a = sc.nextLong();
        long x = sc.nextLong();
        M = sc.nextLong();
        if (a == 1) {
            sl(x % M);
            return;
        }
        if (M == 1) {
            sl(0);
            return;
        }
        sl(comp(x));
    }

    static Scanner sc = null;

    void so(Object s) {
        System.out.print(s);
    }

    void sl(Object s) {
        System.out.println(s);
    }

    public static void main(String[] args) throws Exception {
        try {
            sc = new Scanner(new FileInputStream(""src/go/main.in""));
        } catch (FileNotFoundException ffe) {
            sc = new Scanner(System.in);
        }
        while (sc.hasNext()) {
            new Main().go();
        }
    }
}
","
import java.io.*;
import java.util.*;

public class Main {

    long M, a;

    public long largePower(long exp) {
        long base = a;
        long Mod = M;
        long ret = 1L, baseLong = base;
        for (int i = 0; i <= 60; ++i) {
            if ((exp & (1L << i)) > 0) {
                ret = (ret * baseLong) % Mod;
            }
            baseLong = (baseLong * baseLong) % Mod;
        }
        return ret;
    }

    long comp(long n) {
        if (n == 1) return 1;
        long ret = 0;
        if (n % 2 == 1) {
            ret = largePower(n - 1);
            n--;
        }
        long r1 = comp(n / 2);
        long r2 = (largePower(n / 2) + 1) % M;
        ret += r1 * r2 % M;
        ret %= M;
        return ret;
    }

    void go() {
        a = sc.nextLong();
        long x = sc.nextLong();
        M = sc.nextLong();
        if (a == 1) {
            sl(x % M);
            return;
        }
        if (M == 1) {
            sl(0);
            return;
        }
        sl(comp(x));
    }

    static Scanner sc = null;

    void so(Object s) {
        System.out.print(s);
    }

    void sl(Object s) {
        System.out.println(s);
    }

    public static void main(String[] args) throws Exception {
        try {
            sc = new Scanner(new FileInputStream(""src/go/main.in""));
        } catch (FileNotFoundException ffe) {
            sc = new Scanner(System.in);
        }
        while (sc.hasNext()) {
            new Main().go();
        }
    }
}
",WA
dlmasa ,abc298/D,Java,"import java.io.*;
import java.util.ArrayDeque;
import java.util.Deque;
import java.util.StringTokenizer;

public class Main {
    public static void main(String[] args) throws Throwable {
        Main main = new Main();
        main.solve();
    }
    public void solve() throws Throwable {
        FastScan scan = new FastScan(System.in);
        PrintWriter pw = new PrintWriter(System.out);
        int Q = scan.nextInt();
        long current = 1;
        long mod = 998244353;
        int length = 1;
        Deque<Integer> d = new ArrayDeque<>();
        d.add(1);
        long[] c = new long[6500000];
        c[0] = 1;
        for (int i = 1; i < 6500000; i++) {
            c[i] = c[i-1] * 10;
            c[i] %= mod;
        }
        for (int i = 0; i < Q; i++) {
            int type = scan.nextInt();
            if (type == 1) {
                int x = scan.nextInt();
                current *= 10;
                current %= mod;
                current += x;
                current %= mod;
                length += 1;
                d.add(x);
                continue;
            }
            if (type == 2) {
                long f = d.pollFirst();
                f *= c[length-1];
                f %= mod;
                current -= f;
                while(current < 0) {
                    current += mod;
                }
                current %= mod;
                continue;
            }
            if (type == 3) {
                pw.println(current);
            }
        }
        pw.flush();
        pw.close();
    }
    class FastScan {
        BufferedReader br;
        StringTokenizer st;
        FastScan(InputStream is) {
            InputStreamReader isr = new InputStreamReader(is);
            this.br = new BufferedReader(isr);
        }
        String next() throws IOException {
            while (this.st == null || !this.st.hasMoreTokens()) {
                this.st = new StringTokenizer(br.readLine().trim());
            }
            return st.nextToken();
        }
        long nextLong() throws IOException {
            return Long.parseLong(this.next());
        }
        int nextInt() throws IOException {
            return Integer.parseInt(this.next());
        }
    }
}
","import java.io.*;
import java.util.ArrayDeque;
import java.util.Deque;
import java.util.StringTokenizer;

public class Main {
    public static void main(String[] args) throws Throwable {
        Main main = new Main();
        main.solve();
    }
    public void solve() throws Throwable {
        FastScan scan = new FastScan(System.in);
        PrintWriter pw = new PrintWriter(System.out);
        int Q = scan.nextInt();
        long current = 1;
        long mod = 998244353;
        int length = 1;
        Deque<Integer> d = new ArrayDeque<>();
        d.add(1);
        long[] c = new long[6500000];
        c[0] = 1;
        for (int i = 1; i < 6500000; i++) {
            c[i] = c[i-1] * 10;
            c[i] %= mod;
        }
        for (int i = 0; i < Q; i++) {
            int type = scan.nextInt();
            if (type == 1) {
                int x = scan.nextInt();
                current *= 10;
                current %= mod;
                current += x;
                current %= mod;
                length += 1;
                d.add(x);
                continue;
            }
            if (type == 2) {
                long f = d.pollFirst();
                f *= c[length-1];
                f %= mod;
                current -= f;
                while(current < 0) {
                    current += mod;
                }
                current %= mod;
                length -= 1;
                continue;
            }
            if (type == 3) {
                pw.println(current);
            }
        }
        pw.flush();
        pw.close();
    }
    class FastScan {
        BufferedReader br;
        StringTokenizer st;
        FastScan(InputStream is) {
            InputStreamReader isr = new InputStreamReader(is);
            this.br = new BufferedReader(isr);
        }
        String next() throws IOException {
            while (this.st == null || !this.st.hasMoreTokens()) {
                this.st = new StringTokenizer(br.readLine().trim());
            }
            return st.nextToken();
        }
        long nextLong() throws IOException {
            return Long.parseLong(this.next());
        }
        int nextInt() throws IOException {
            return Integer.parseInt(this.next());
        }
    }
}
",WA
dlmasa ,abc298/D,Java,"import java.io.*;
import java.util.ArrayDeque;
import java.util.Deque;
import java.util.StringTokenizer;

public class Main {
    public static void main(String[] args) throws Throwable {
        Main main = new Main();
        main.solve();
    }
    public void solve() throws Throwable {
        FastScan scan = new FastScan(System.in);
        PrintWriter pw = new PrintWriter(System.out);
        int Q = scan.nextInt();
        long current = 1;
        long mod = 998244353;
        int length = 1;
        Deque<Integer> d = new ArrayDeque<>();
        d.add(1);
        long[] c = new long[6500000];
        c[0] = 1;
        for (int i = 1; i < 6500000; i++) {
            c[i] = c[i-1] * 10;
            c[i] %= mod;
        }
        for (int i = 0; i < Q; i++) {
            int type = scan.nextInt();
            if (type == 1) {
                int x = scan.nextInt();
                current *= 10;
                current %= mod;
                current += x;
                current %= mod;
                length += 1;
                d.add(x);
                continue;
            }
            if (type == 2) {
                long f = d.pollFirst();
                f *= c[length-1];
                current -= f;
                while(current < 0) {
                    current += mod;
                }
                current %= mod;
                continue;
            }
            if (type == 3) {
                pw.println(current);
            }
        }
        pw.flush();
        pw.close();
    }
    class FastScan {
        BufferedReader br;
        StringTokenizer st;
        FastScan(InputStream is) {
            InputStreamReader isr = new InputStreamReader(is);
            this.br = new BufferedReader(isr);
        }
        String next() throws IOException {
            while (this.st == null || !this.st.hasMoreTokens()) {
                this.st = new StringTokenizer(br.readLine().trim());
            }
            return st.nextToken();
        }
        long nextLong() throws IOException {
            return Long.parseLong(this.next());
        }
        int nextInt() throws IOException {
            return Integer.parseInt(this.next());
        }
    }
}
","import java.io.*;
import java.util.ArrayDeque;
import java.util.Deque;
import java.util.StringTokenizer;

public class Main {
    public static void main(String[] args) throws Throwable {
        Main main = new Main();
        main.solve();
    }
    public void solve() throws Throwable {
        FastScan scan = new FastScan(System.in);
        PrintWriter pw = new PrintWriter(System.out);
        int Q = scan.nextInt();
        long current = 1;
        long mod = 998244353;
        int length = 1;
        Deque<Integer> d = new ArrayDeque<>();
        d.add(1);
        long[] c = new long[6500000];
        c[0] = 1;
        for (int i = 1; i < 6500000; i++) {
            c[i] = c[i-1] * 10;
            c[i] %= mod;
        }
        for (int i = 0; i < Q; i++) {
            int type = scan.nextInt();
            if (type == 1) {
                int x = scan.nextInt();
                current *= 10;
                current %= mod;
                current += x;
                current %= mod;
                length += 1;
                d.add(x);
                continue;
            }
            if (type == 2) {
                long f = d.pollFirst();
                f *= c[length-1];
                f %= mod;
                current -= f;
                while(current < 0) {
                    current += mod;
                }
                current %= mod;
                length -= 1;
                continue;
            }
            if (type == 3) {
                pw.println(current);
            }
        }
        pw.flush();
        pw.close();
    }
    class FastScan {
        BufferedReader br;
        StringTokenizer st;
        FastScan(InputStream is) {
            InputStreamReader isr = new InputStreamReader(is);
            this.br = new BufferedReader(isr);
        }
        String next() throws IOException {
            while (this.st == null || !this.st.hasMoreTokens()) {
                this.st = new StringTokenizer(br.readLine().trim());
            }
            return st.nextToken();
        }
        long nextLong() throws IOException {
            return Long.parseLong(this.next());
        }
        int nextInt() throws IOException {
            return Integer.parseInt(this.next());
        }
    }
}
",WA
optimus369 ,abc298/D,Java,"import java.util.*;


import java.lang.*;
import java.io.*;


public class Main {
	
	
	
    public static void main (String[] args) throws java.lang.Exception {
		PrintWriter out=new PrintWriter(System.out);
		FastReader sc = new FastReader();
		int testCases=1;

		
		while(testCases-->0) {
			
			long s=1;
			int q=sc.nextInt();
			long mod=998244353;
			Queue<Integer>st=new LinkedList<>();
			st.add(1);
			long pow=1;
			for(int i=0;i<q;i++) {
				int t=sc.nextInt();
				if(t==1) {
					int d=sc.nextInt();
					s=s*10%mod;
					s=(s+d)%mod;
					pow=pow*10%mod;
					st.add(d);
				}else if(t==2) {
					long d=st.isEmpty()?0:st.poll();
					d=d*pow%mod;
					pow=(pow*power(10,mod-2))%mod;
					s=(s-d+mod)%mod;
				}else if(t==3) {
					out.println(s);
				}
			}
		    
		}
		out.close();
	}

   public static long power(long a,long b) {
	   long res=1;
	   int mod=998244353;
	   while(b>0) {
		   res=(res*a)%mod;
		   a=(a*a)%mod;
		   b/=2;
	   }
	   return res;
   }

	public static boolean isPallindrome(String a,String b) {
		int n = a.length();
		for(int i=0;i<n;i++) if(a.charAt(i) != b.charAt(i)) return false;
		return true;
	}
	
	

	public static long gcd(long a, long b) {
		if(a==0) return b;
		return gcd(b%a,a);
	}

	private static long lcm(long a, long b) {
		return (a*b)/gcd(a,b);
	}
  
	static class FenWick{
		int n;
		int tree[];
		public FenWick(int n) {
			this.n=n;
			tree=new int[n];
		}
		public void add(int idx,int d) {
			while(idx<n) {
				tree[idx]+=d;
				idx+=(idx&(-idx));
			}
		}
		public int sum(int idx) {
			int sum=0;
			while(idx>0) {
				sum+=tree[idx];
				idx-=(idx&(-idx));
			}
			return sum;
		}
	}


	static class DSU{
		int parent[];
		int rank[];
		int size[];
		public DSU(int n) {
			this.parent = new int[n];
			this.rank = new int[n];
			size=new int[n];
			for(int i=0;i<n;i++) parent[i]=i;
			for(int i=0;i<n;i++) size[i]=1;
		}
		public int find(int x) {
			if(parent[x]==x) return x;
			return parent[x]=find(parent[x]);
		}
		public boolean union(int x,int y) {
			int px = find(x);
			int py = find(y);
			if(px == py) return false;
			if(rank[px]>rank[py]) {
				parent[py]=px;
				size[px]+=size[py];
			}
			else if(rank[py]>rank[px]) {
				parent[px]=py;
				size[py]+=size[px];
			}
			else {
				rank[px]++;
				parent[py]=px;
				size[px]+=size[py];
			}
			return true;

		}
	}

	static class FastReader {
		BufferedReader br;
		StringTokenizer st;

		public FastReader() {
			br = new BufferedReader(
					new InputStreamReader(System.in));
		}

		String next() {
			while (st == null || !st.hasMoreElements()) {
				try {
					st = new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			return st.nextToken();
		}

		int nextInt() {
			return Integer.parseInt(next());
		}

		long nextLong() {
			return Long.parseLong(next());
		}

		double nextDouble() {
			return Double.parseDouble(next());
		}

		String nextLine() {
			String str = """";
			try {
				str = br.readLine();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return str;
		}
	}

}
","import java.util.*;


import java.lang.*;
import java.io.*;


public class Main {
	
	
	
    public static void main (String[] args) throws java.lang.Exception {
		PrintWriter out=new PrintWriter(System.out);
		FastReader sc = new FastReader();
		int testCases=1;

		
		while(testCases-->0) {
			
			long s=1;
			int q=sc.nextInt();
			long mod=998244353;
			Queue<Integer>st=new LinkedList<>();
			st.add(1);
			long pow=1;
			for(int i=0;i<q;i++) {
				int t=sc.nextInt();
				if(t==1) {
					int d=sc.nextInt();
					s=s*10%mod;
					s=(s+d)%mod;
					pow=pow*10%mod;
					st.add(d);
				}else if(t==2) {
					long d=st.isEmpty()?0:st.poll();
					d=d*pow%mod;
					pow=(pow*power(10,mod-2))%mod;
					s=(s-d+mod)%mod;
				}else if(t==3) {
					out.println(s);
				}
			}
		    
		}
		out.close();
	}

   public static long power(long a,long b) {
	   long res=1;
	   int mod=998244353;
	   while(b>0) {
		   if((b&1)>0) res=(res*a)%mod;
		   a=(a*a)%mod;
		   b/=2;
	   }
	   return res;
   }

	public static boolean isPallindrome(String a,String b) {
		int n = a.length();
		for(int i=0;i<n;i++) if(a.charAt(i) != b.charAt(i)) return false;
		return true;
	}
	
	

	public static long gcd(long a, long b) {
		if(a==0) return b;
		return gcd(b%a,a);
	}

	private static long lcm(long a, long b) {
		return (a*b)/gcd(a,b);
	}
  
	static class FenWick{
		int n;
		int tree[];
		public FenWick(int n) {
			this.n=n;
			tree=new int[n];
		}
		public void add(int idx,int d) {
			while(idx<n) {
				tree[idx]+=d;
				idx+=(idx&(-idx));
			}
		}
		public int sum(int idx) {
			int sum=0;
			while(idx>0) {
				sum+=tree[idx];
				idx-=(idx&(-idx));
			}
			return sum;
		}
	}


	static class DSU{
		int parent[];
		int rank[];
		int size[];
		public DSU(int n) {
			this.parent = new int[n];
			this.rank = new int[n];
			size=new int[n];
			for(int i=0;i<n;i++) parent[i]=i;
			for(int i=0;i<n;i++) size[i]=1;
		}
		public int find(int x) {
			if(parent[x]==x) return x;
			return parent[x]=find(parent[x]);
		}
		public boolean union(int x,int y) {
			int px = find(x);
			int py = find(y);
			if(px == py) return false;
			if(rank[px]>rank[py]) {
				parent[py]=px;
				size[px]+=size[py];
			}
			else if(rank[py]>rank[px]) {
				parent[px]=py;
				size[py]+=size[px];
			}
			else {
				rank[px]++;
				parent[py]=px;
				size[px]+=size[py];
			}
			return true;

		}
	}

	static class FastReader {
		BufferedReader br;
		StringTokenizer st;

		public FastReader() {
			br = new BufferedReader(
					new InputStreamReader(System.in));
		}

		String next() {
			while (st == null || !st.hasMoreElements()) {
				try {
					st = new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			return st.nextToken();
		}

		int nextInt() {
			return Integer.parseInt(next());
		}

		long nextLong() {
			return Long.parseLong(next());
		}

		double nextDouble() {
			return Double.parseDouble(next());
		}

		String nextLine() {
			String str = """";
			try {
				str = br.readLine();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return str;
		}
	}

}
",WA
optimus369 ,abc298/D,Java,"import java.util.*;


import java.lang.*;
import java.io.*;


public class Main {
	
	
	
    public static void main (String[] args) throws java.lang.Exception {
		PrintWriter out=new PrintWriter(System.out);
		FastReader sc = new FastReader();
		int testCases=1;

		
		while(testCases-->0) {
			
			long s=1;
			int q=sc.nextInt();
			int mod=998244353;
			Queue<Integer>st=new LinkedList<>();
			st.add(1);
			long pow=1;
			for(int i=0;i<q;i++) {
				int t=sc.nextInt();
				if(t==1) {
					int d=sc.nextInt();
					s=s*10%mod;
					s=(s+d)%mod;
					pow=pow*10%mod;
					st.add(d);
				}else if(t==2) {
					long d=st.isEmpty()?0:st.poll();
					d=d*pow%mod;
					pow=(pow*power(10,mod-2))%mod;
					s=(s-d+mod)%mod;
				}else if(t==3) {
					out.println(s);
				}
			}
		    
		}
		out.close();
	}

   public static long power(long a,long b) {
	   long res=1;
	   int mod=998244353;
	   while(b>0) {
		   res=(res*a)%mod;
		   a=(a*a)%mod;
		   b/=2;
	   }
	   return res;
   }

	public static boolean isPallindrome(String a,String b) {
		int n = a.length();
		for(int i=0;i<n;i++) if(a.charAt(i) != b.charAt(i)) return false;
		return true;
	}
	
	

	public static long gcd(long a, long b) {
		if(a==0) return b;
		return gcd(b%a,a);
	}

	private static long lcm(long a, long b) {
		return (a*b)/gcd(a,b);
	}
  
	static class FenWick{
		int n;
		int tree[];
		public FenWick(int n) {
			this.n=n;
			tree=new int[n];
		}
		public void add(int idx,int d) {
			while(idx<n) {
				tree[idx]+=d;
				idx+=(idx&(-idx));
			}
		}
		public int sum(int idx) {
			int sum=0;
			while(idx>0) {
				sum+=tree[idx];
				idx-=(idx&(-idx));
			}
			return sum;
		}
	}


	static class DSU{
		int parent[];
		int rank[];
		int size[];
		public DSU(int n) {
			this.parent = new int[n];
			this.rank = new int[n];
			size=new int[n];
			for(int i=0;i<n;i++) parent[i]=i;
			for(int i=0;i<n;i++) size[i]=1;
		}
		public int find(int x) {
			if(parent[x]==x) return x;
			return parent[x]=find(parent[x]);
		}
		public boolean union(int x,int y) {
			int px = find(x);
			int py = find(y);
			if(px == py) return false;
			if(rank[px]>rank[py]) {
				parent[py]=px;
				size[px]+=size[py];
			}
			else if(rank[py]>rank[px]) {
				parent[px]=py;
				size[py]+=size[px];
			}
			else {
				rank[px]++;
				parent[py]=px;
				size[px]+=size[py];
			}
			return true;

		}
	}

	static class FastReader {
		BufferedReader br;
		StringTokenizer st;

		public FastReader() {
			br = new BufferedReader(
					new InputStreamReader(System.in));
		}

		String next() {
			while (st == null || !st.hasMoreElements()) {
				try {
					st = new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			return st.nextToken();
		}

		int nextInt() {
			return Integer.parseInt(next());
		}

		long nextLong() {
			return Long.parseLong(next());
		}

		double nextDouble() {
			return Double.parseDouble(next());
		}

		String nextLine() {
			String str = """";
			try {
				str = br.readLine();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return str;
		}
	}

}
","import java.util.*;


import java.lang.*;
import java.io.*;


public class Main {
	
	
	
    public static void main (String[] args) throws java.lang.Exception {
		PrintWriter out=new PrintWriter(System.out);
		FastReader sc = new FastReader();
		int testCases=1;

		
		while(testCases-->0) {
			
			long s=1;
			int q=sc.nextInt();
			long mod=998244353;
			Queue<Integer>st=new LinkedList<>();
			st.add(1);
			long pow=1;
			for(int i=0;i<q;i++) {
				int t=sc.nextInt();
				if(t==1) {
					int d=sc.nextInt();
					s=s*10%mod;
					s=(s+d)%mod;
					pow=pow*10%mod;
					st.add(d);
				}else if(t==2) {
					long d=st.isEmpty()?0:st.poll();
					d=d*pow%mod;
					pow=(pow*power(10,mod-2))%mod;
					s=(s-d+mod)%mod;
				}else if(t==3) {
					out.println(s);
				}
			}
		    
		}
		out.close();
	}

   public static long power(long a,long b) {
	   long res=1;
	   int mod=998244353;
	   while(b>0) {
		   if((b&1)>0) res=(res*a)%mod;
		   a=(a*a)%mod;
		   b/=2;
	   }
	   return res;
   }

	public static boolean isPallindrome(String a,String b) {
		int n = a.length();
		for(int i=0;i<n;i++) if(a.charAt(i) != b.charAt(i)) return false;
		return true;
	}
	
	

	public static long gcd(long a, long b) {
		if(a==0) return b;
		return gcd(b%a,a);
	}

	private static long lcm(long a, long b) {
		return (a*b)/gcd(a,b);
	}
  
	static class FenWick{
		int n;
		int tree[];
		public FenWick(int n) {
			this.n=n;
			tree=new int[n];
		}
		public void add(int idx,int d) {
			while(idx<n) {
				tree[idx]+=d;
				idx+=(idx&(-idx));
			}
		}
		public int sum(int idx) {
			int sum=0;
			while(idx>0) {
				sum+=tree[idx];
				idx-=(idx&(-idx));
			}
			return sum;
		}
	}


	static class DSU{
		int parent[];
		int rank[];
		int size[];
		public DSU(int n) {
			this.parent = new int[n];
			this.rank = new int[n];
			size=new int[n];
			for(int i=0;i<n;i++) parent[i]=i;
			for(int i=0;i<n;i++) size[i]=1;
		}
		public int find(int x) {
			if(parent[x]==x) return x;
			return parent[x]=find(parent[x]);
		}
		public boolean union(int x,int y) {
			int px = find(x);
			int py = find(y);
			if(px == py) return false;
			if(rank[px]>rank[py]) {
				parent[py]=px;
				size[px]+=size[py];
			}
			else if(rank[py]>rank[px]) {
				parent[px]=py;
				size[py]+=size[px];
			}
			else {
				rank[px]++;
				parent[py]=px;
				size[px]+=size[py];
			}
			return true;

		}
	}

	static class FastReader {
		BufferedReader br;
		StringTokenizer st;

		public FastReader() {
			br = new BufferedReader(
					new InputStreamReader(System.in));
		}

		String next() {
			while (st == null || !st.hasMoreElements()) {
				try {
					st = new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			return st.nextToken();
		}

		int nextInt() {
			return Integer.parseInt(next());
		}

		long nextLong() {
			return Long.parseLong(next());
		}

		double nextDouble() {
			return Double.parseDouble(next());
		}

		String nextLine() {
			String str = """";
			try {
				str = br.readLine();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return str;
		}
	}

}
",WA
optimus369 ,abc298/D,Java,"import java.util.*;


import java.lang.*;
import java.io.*;


public class Main {
	
	
	
    public static void main (String[] args) throws java.lang.Exception {
		PrintWriter out=new PrintWriter(System.out);
		FastReader sc = new FastReader();
		int testCases=1;

		
		while(testCases-->0) {
			
			long s=1;
			int q=sc.nextInt();
			int mod=998244353;
			Queue<Integer>st=new LinkedList<>();
			st.add(1);
			long pow=1;
			for(int i=0;i<q;i++) {
				int t=sc.nextInt();
				if(t==1) {
					int d=sc.nextInt();
					s*=10;
					s%=mod;
					s+=d;
					s%=mod;
					pow=pow*10%mod;
					st.add(d);
				}else if(t==2) {
					long d=st.isEmpty()?0:st.poll();
					d=d*pow%mod;
					pow=(pow*power(10,mod-2))%mod;
					s=(s-d+mod)%mod;
				}else if(t==3) {
					out.println(s);
				}
			}
		    
		}
		out.close();
	}

   public static long power(long a,long b) {
	   long res=1;
	   int mod=998244353;
	   while(b>0) {
		   res=(res*a)%mod;
		   a=(a*a)%mod;
		   b/=2;
	   }
	   return res;
   }

	public static boolean isPallindrome(String a,String b) {
		int n = a.length();
		for(int i=0;i<n;i++) if(a.charAt(i) != b.charAt(i)) return false;
		return true;
	}
	
	

	public static long gcd(long a, long b) {
		if(a==0) return b;
		return gcd(b%a,a);
	}

	private static long lcm(long a, long b) {
		return (a*b)/gcd(a,b);
	}
  
	static class FenWick{
		int n;
		int tree[];
		public FenWick(int n) {
			this.n=n;
			tree=new int[n];
		}
		public void add(int idx,int d) {
			while(idx<n) {
				tree[idx]+=d;
				idx+=(idx&(-idx));
			}
		}
		public int sum(int idx) {
			int sum=0;
			while(idx>0) {
				sum+=tree[idx];
				idx-=(idx&(-idx));
			}
			return sum;
		}
	}


	static class DSU{
		int parent[];
		int rank[];
		int size[];
		public DSU(int n) {
			this.parent = new int[n];
			this.rank = new int[n];
			size=new int[n];
			for(int i=0;i<n;i++) parent[i]=i;
			for(int i=0;i<n;i++) size[i]=1;
		}
		public int find(int x) {
			if(parent[x]==x) return x;
			return parent[x]=find(parent[x]);
		}
		public boolean union(int x,int y) {
			int px = find(x);
			int py = find(y);
			if(px == py) return false;
			if(rank[px]>rank[py]) {
				parent[py]=px;
				size[px]+=size[py];
			}
			else if(rank[py]>rank[px]) {
				parent[px]=py;
				size[py]+=size[px];
			}
			else {
				rank[px]++;
				parent[py]=px;
				size[px]+=size[py];
			}
			return true;

		}
	}

	static class FastReader {
		BufferedReader br;
		StringTokenizer st;

		public FastReader() {
			br = new BufferedReader(
					new InputStreamReader(System.in));
		}

		String next() {
			while (st == null || !st.hasMoreElements()) {
				try {
					st = new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			return st.nextToken();
		}

		int nextInt() {
			return Integer.parseInt(next());
		}

		long nextLong() {
			return Long.parseLong(next());
		}

		double nextDouble() {
			return Double.parseDouble(next());
		}

		String nextLine() {
			String str = """";
			try {
				str = br.readLine();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return str;
		}
	}

}
","import java.util.*;


import java.lang.*;
import java.io.*;


public class Main {
	
	
	
    public static void main (String[] args) throws java.lang.Exception {
		PrintWriter out=new PrintWriter(System.out);
		FastReader sc = new FastReader();
		int testCases=1;

		
		while(testCases-->0) {
			
			long s=1;
			int q=sc.nextInt();
			long mod=998244353;
			Queue<Integer>st=new LinkedList<>();
			st.add(1);
			long pow=1;
			for(int i=0;i<q;i++) {
				int t=sc.nextInt();
				if(t==1) {
					int d=sc.nextInt();
					s=s*10%mod;
					s=(s+d)%mod;
					pow=pow*10%mod;
					st.add(d);
				}else if(t==2) {
					long d=st.isEmpty()?0:st.poll();
					d=d*pow%mod;
					pow=(pow*power(10,mod-2))%mod;
					s=(s-d+mod)%mod;
				}else if(t==3) {
					out.println(s);
				}
			}
		    
		}
		out.close();
	}

   public static long power(long a,long b) {
	   long res=1;
	   int mod=998244353;
	   while(b>0) {
		   if((b&1)>0) res=(res*a)%mod;
		   a=(a*a)%mod;
		   b/=2;
	   }
	   return res;
   }

	public static boolean isPallindrome(String a,String b) {
		int n = a.length();
		for(int i=0;i<n;i++) if(a.charAt(i) != b.charAt(i)) return false;
		return true;
	}
	
	

	public static long gcd(long a, long b) {
		if(a==0) return b;
		return gcd(b%a,a);
	}

	private static long lcm(long a, long b) {
		return (a*b)/gcd(a,b);
	}
  
	static class FenWick{
		int n;
		int tree[];
		public FenWick(int n) {
			this.n=n;
			tree=new int[n];
		}
		public void add(int idx,int d) {
			while(idx<n) {
				tree[idx]+=d;
				idx+=(idx&(-idx));
			}
		}
		public int sum(int idx) {
			int sum=0;
			while(idx>0) {
				sum+=tree[idx];
				idx-=(idx&(-idx));
			}
			return sum;
		}
	}


	static class DSU{
		int parent[];
		int rank[];
		int size[];
		public DSU(int n) {
			this.parent = new int[n];
			this.rank = new int[n];
			size=new int[n];
			for(int i=0;i<n;i++) parent[i]=i;
			for(int i=0;i<n;i++) size[i]=1;
		}
		public int find(int x) {
			if(parent[x]==x) return x;
			return parent[x]=find(parent[x]);
		}
		public boolean union(int x,int y) {
			int px = find(x);
			int py = find(y);
			if(px == py) return false;
			if(rank[px]>rank[py]) {
				parent[py]=px;
				size[px]+=size[py];
			}
			else if(rank[py]>rank[px]) {
				parent[px]=py;
				size[py]+=size[px];
			}
			else {
				rank[px]++;
				parent[py]=px;
				size[px]+=size[py];
			}
			return true;

		}
	}

	static class FastReader {
		BufferedReader br;
		StringTokenizer st;

		public FastReader() {
			br = new BufferedReader(
					new InputStreamReader(System.in));
		}

		String next() {
			while (st == null || !st.hasMoreElements()) {
				try {
					st = new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			return st.nextToken();
		}

		int nextInt() {
			return Integer.parseInt(next());
		}

		long nextLong() {
			return Long.parseLong(next());
		}

		double nextDouble() {
			return Double.parseDouble(next());
		}

		String nextLine() {
			String str = """";
			try {
				str = br.readLine();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return str;
		}
	}

}
",WA
azidantuiren ,abc298/D,Java,"import java.util.ArrayList;
import java.util.Scanner;


public class Main {
    static long mod = 998244353l;
    static long getTenEx(int k) {
        if (k == 0) return 1l;
        if (k == 1) return 10l;
        long tmp = getTenEx(k / 2);
        if (k % 2 == 0) {
            return (tmp * tmp) % mod;
        } else {
            return (tmp * tmp * 10) % mod;
        }
    } 
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long num = 1l;
        int f = 0;
        ArrayList<Integer> s = new ArrayList<>();
        s.add(1);
        while (n-- > 0) {
            int ops = sc.nextInt();
            if (ops == 1) {
                
                int x = sc.nextInt();
                num = num * 10 + x;
                num %= mod;
                s.add(x);
            } else if (ops == 2) {
                
                int k = s.size() - f - 1;
                num = (num - s.get(f) * getTenEx(k) + mod * 20) % mod;
                f++;
            } else {
                
                System.out.println(num);
            }
        }
    }
}
","import java.util.ArrayList;
import java.util.Scanner;


public class Main {
    static long mod = 998244353l;
    static long getTenEx(int k) {
        if (k == 0) return 1l;
        if (k == 1) return 10l;
        long tmp = getTenEx(k / 2);
        if (k % 2 == 0) {
            return (tmp * tmp) % mod;
        } else {
            return (tmp * (tmp * 10 % mod)) % mod;
        }
    } 
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long num = 1l;
        int f = 0;
        ArrayList<Integer> s = new ArrayList<>();
        s.add(1);
        while (n-- > 0) {
            int ops = sc.nextInt();
            if (ops == 1) {
                
                int x = sc.nextInt();
                num = num * 10 + x;
                num %= mod;
                s.add(x);
            } else if (ops == 2) {
                
                int k = s.size() - f - 1;
                num = (num - s.get(f) * getTenEx(k) + mod * 10) % mod;
                f++;
            } else {
                
                System.out.println(num);
            }
        }
    }
}
",WA
Nacre ,abc298/D,Java,"import java.io.PrintWriter;
import java.util.ArrayDeque;
import java.util.Queue;
import java.util.Scanner;
 
public class Main {
	
	public static void main(String[] args) {
		
		try(Scanner sc = new Scanner(System.in);){
			
			PrintWriter out = new PrintWriter(System.out);
			StringBuilder sb = new StringBuilder();
			
			int q = Integer.parseInt(sc.next());
			final int mod = 998244353;
			
			Queue<Integer> que = new ArrayDeque<Integer>();
			que.add(1);
			long ans = 1L;
			
			while(q-- > 0) {
				int t = Integer.parseInt(sc.next());
				
				if(t == 1) {
					int x = Integer.parseInt(sc.next());
					que.add(x);
					ans = ans * 10 + x;
					ans %= mod;
					
				} else if(t == 2) {
					int x = que.poll();
					long s = (x % mod) * power(10, que.size(), mod);
					ans = ans - s + mod;
					ans %= mod;
					
				} else {
					sb.append(ans + ""\n"");
					
				}
			}
			
			out.println(sb.toString());
			out.flush();
			
		}
		
	}
	
	static long power(long x, long n, int m) {
		long ans = 1L;
		
		while(n > 0) {
			if((n & 1) != 0) {
				ans *= x;
				ans %= m;
			}
			x = (x * x) % m;
			n = n >> 1;
		}
		
		return ans;
	}

}

","import java.io.PrintWriter;
import java.util.ArrayDeque;
import java.util.Queue;
import java.util.Scanner;
 
public class Main {
	
	public static void main(String[] args) {
		
		try(Scanner sc = new Scanner(System.in);){
			
			PrintWriter out = new PrintWriter(System.out);
			StringBuilder sb = new StringBuilder();
			
			int q = Integer.parseInt(sc.next());
			final int mod = 998244353;
			
			Queue<Integer> que = new ArrayDeque<Integer>();
			que.add(1);
			long ans = 1L;
			
			while(q-- > 0) {
				int t = Integer.parseInt(sc.next());
				
				if(t == 1) {
					int x = Integer.parseInt(sc.next());
					que.add(x);
					ans = ans * 10 + x;
					ans %= mod;
					
				} else if(t == 2) {
					int x = que.poll();
					long s = (x % mod) * power(10, que.size(), mod) % mod;
					ans = ans - s + mod;
					ans %= mod;
					
				} else {
					sb.append(ans + ""\n"");
					
				}
			}
			
			out.println(sb.toString());
			out.flush();
			
		}
		
	}
	
	static long power(long x, long n, int m) {
		long ans = 1L;
		
		while(n > 0) {
			if((n & 1) != 0) {
				ans *= x;
				ans %= m;
			}
			x = (x * x) % m;
			n = n >> 1;
		}
		
		return ans;
	}

}

",WA
Nacre ,abc298/D,Java,"import java.io.PrintWriter;
import java.util.ArrayDeque;
import java.util.Queue;
import java.util.Scanner;

public class Main {
	
	public static void main(String[] args) {
		
		try(Scanner sc = new Scanner(System.in);){
			
			PrintWriter out = new PrintWriter(System.out);
			StringBuilder sb = new StringBuilder();
			
			int q = Integer.parseInt(sc.next());
			final int mod = 998244353;
			
			Queue<Integer> queue = new ArrayDeque<Integer>();
			queue.add(1);
			long ans = 1L;
			
			for(int i = 0; i < q; i++) {
				int index = Integer.parseInt(sc.next());
				
				if(index == 1) {
					int x = Integer.parseInt(sc.next());
					queue.add(x);
					ans = ans * 10 + x;
					ans %= mod;
					
				} else if(index == 2) {
					int x = queue.poll();
					long s = x * power(10, queue.size(), mod);
					ans = ans - s + mod;
					ans %= mod;
					
				} else {
					sb.append(ans + ""\n"");
				}
			}
			
			out.println(sb.toString());
			out.flush();
			
		}
		
	}
	
	static long power(long x, long n, int m) {
		long ans = 1;
		
		while(n > 0) {
			if((n & 1) != 0) {
				ans *= x;
				ans %= m;
			}
			
			x *= x;
			x %= m;
			n = n >> 1;
			
		}
		
		return ans;
		
	}
}
","import java.io.PrintWriter;
import java.util.ArrayDeque;
import java.util.Queue;
import java.util.Scanner;

public class Main {
	
	public static void main(String[] args) {
		
		try(Scanner sc = new Scanner(System.in);){
			
			PrintWriter out = new PrintWriter(System.out);
			StringBuilder sb = new StringBuilder();
			
			int q = Integer.parseInt(sc.next());
			final int mod = 998244353;
			
			Queue<Integer> queue = new ArrayDeque<Integer>();
			queue.add(1);
			long ans = 1L;
			
			for(int i = 0; i < q; i++) {
				int index = Integer.parseInt(sc.next());
				
				if(index == 1) {
					int x = Integer.parseInt(sc.next());
					queue.add(x);
					ans = ans * 10 + x;
					ans %= mod;
					
				} else if(index == 2) {
					int x = queue.poll();
					long s = x * power(10, queue.size(), mod) % mod;
					ans = ans - s + mod;
					ans %= mod;
					
				} else {
					sb.append(ans + ""\n"");
				}
			}
			
			out.println(sb.toString());
			out.flush();
			
		}
		
	}
	
	static long power(long x, long n, int m) {
		long ans = 1;
		
		while(n > 0) {
			if((n & 1) != 0) {
				ans *= x;
				ans %= m;
			}
			
			x *= x;
			x %= m;
			n = n >> 1;
			
		}
		
		return ans;
		
	}
}
",WA
Nacre ,abc298/D,Java,"import java.io.PrintWriter;
import java.util.ArrayDeque;
import java.util.Queue;
import java.util.Scanner;

public class Main {
	
	public static void main(String[] args) {
		
		try(Scanner sc = new Scanner(System.in);){
			
			PrintWriter out = new PrintWriter(System.out);
			StringBuilder sb = new StringBuilder();
			
			int q = Integer.parseInt(sc.next());
			final int mod = 998244353;
			
			Queue<Integer> queue = new ArrayDeque<Integer>();
			queue.add(1);
			long ans = 1L;
			
			for(int i = 0; i < q; i++) {
				int index = Integer.parseInt(sc.next());
				
				if(index == 1) {
					int x = Integer.parseInt(sc.next());
					queue.add(x);
					ans = ans * 10 + x;
					ans %= mod;
					
				} else if(index == 2) {
					int x = queue.poll();
					long s = x * power(10, queue.size(), mod) % mod;
					ans = ans - s + mod;
					ans %= mod;
					
				} else {
					sb.append(ans + ""\n"");
				}
			}
			
			out.println(sb.toString());
			out.flush();
			
		}
		
	}
	
	static long power(long x, long n, int m) {
		long ans = 1;
		
		while(n > 0) {
			if((n & 1) != 0) {
				ans *= x;
				ans %= m;
			}
			
			x *= x;
			n /= 2;
			
		}
		
		return ans;
		
	}
}
","import java.io.PrintWriter;
import java.util.ArrayDeque;
import java.util.Queue;
import java.util.Scanner;

public class Main {
	
	public static void main(String[] args) {
		
		try(Scanner sc = new Scanner(System.in);){
			
			PrintWriter out = new PrintWriter(System.out);
			StringBuilder sb = new StringBuilder();
			
			int q = Integer.parseInt(sc.next());
			final int mod = 998244353;
			
			Queue<Integer> queue = new ArrayDeque<Integer>();
			queue.add(1);
			long ans = 1L;
			
			for(int i = 0; i < q; i++) {
				int index = Integer.parseInt(sc.next());
				
				if(index == 1) {
					int x = Integer.parseInt(sc.next());
					queue.add(x);
					ans = ans * 10 + x;
					ans %= mod;
					
				} else if(index == 2) {
					int x = queue.poll();
					long s = x * power(10, queue.size(), mod) % mod;
					ans = ans - s + mod;
					ans %= mod;
					
				} else {
					sb.append(ans + ""\n"");
				}
			}
			
			out.println(sb.toString());
			out.flush();
			
		}
		
	}
	
	static long power(long x, long n, int m) {
		long ans = 1;
		
		while(n > 0) {
			if((n & 1) != 0) {
				ans *= x;
				ans %= m;
			}
			
			x *= x;
			x %= m;
			n /= 2;
			
		}
		
		return ans;
		
	}
}
",WA
Nacre ,abc298/D,Java,"import java.io.PrintWriter;
import java.util.ArrayDeque;
import java.util.Queue;
import java.util.Scanner;

public class Main {
	
	public static void main(String[] args) {
		
		try(Scanner sc = new Scanner(System.in);){
			
			PrintWriter out = new PrintWriter(System.out);
			StringBuilder sb = new StringBuilder();
			
			int q = Integer.parseInt(sc.next());
			final int mod = 998244353;
			
			Queue<Integer> queue = new ArrayDeque<Integer>();
			queue.add(1);
			long ans = 1L;
			
			for(int i = 0; i < q; i++) {
				int index = Integer.parseInt(sc.next());
				
				if(index == 1) {
					int x = Integer.parseInt(sc.next());
					queue.add(x);
					ans = ans * 10 + x;
					ans %= mod;
					
				} else if(index == 2) {
					int x = queue.poll();
					long s = x * power(10, queue.size(), mod);
					ans = ans - s + mod;
					ans %= mod;
					
				} else {
					sb.append(ans + ""\n"");
				}
			}
			
			out.println(sb.toString());
			out.flush();
			
		}
		
	}
	
	static long power(long x, long n, int m) {
		long ans = 1;
		
		while(n > 0) {
			if((n & 1) != 0) {
				ans *= x;
				ans %= m;
			}
			
			x *= x;
			x %= m;
			n = n >> 1;
			
		}
		
		return ans;
		
	}
}
","import java.io.PrintWriter;
import java.util.ArrayDeque;
import java.util.Queue;
import java.util.Scanner;

public class Main {
	
	public static void main(String[] args) {
		
		try(Scanner sc = new Scanner(System.in);){
			
			PrintWriter out = new PrintWriter(System.out);
			StringBuilder sb = new StringBuilder();
			
			int q = Integer.parseInt(sc.next());
			final int mod = 998244353;
			
			Queue<Integer> queue = new ArrayDeque<Integer>();
			queue.add(1);
			long ans = 1L;
			
			for(int i = 0; i < q; i++) {
				int index = Integer.parseInt(sc.next());
				
				if(index == 1) {
					int x = Integer.parseInt(sc.next());
					queue.add(x);
					ans = ans * 10 + x;
					ans %= mod;
					
				} else if(index == 2) {
					int x = queue.poll();
					long s = (x % mod) * power(10, queue.size(), mod) % mod;
					ans = ans - s + mod;
					ans %= mod;
					
				} else {
					sb.append(ans + ""\n"");
				}
			}
			
			out.println(sb.toString());
			out.flush();
			
		}
		
	}
	
	static long power(long x, long n, int m) {
		long ans = 1;
		
		while(n > 0) {
			if((n & 1) != 0) {
				ans *= x;
				ans %= m;
			}
			
			x *= x;
			x %= m;
			n = n >> 1;
			
		}
		
		return ans;
		
	}
}
",WA
numacci ,abc298/D,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.*;

public class Main {

    
    long modPow(long x, long n, long mod) {
        long ret = 1;
        while (n > 0) {
            if ((n & 1) == 1) ret = ret * x % mod;
            x = x * x % mod;
            n >>= 1;
        }
        return ret;
    }

    void solve() {
        int Q = nextInt();
        Deque<Integer> S = new ArrayDeque<>();
        S.push(1);
        long mod = 998244353;
        long remainder = 1;
        for (int q = 0; q < Q; q++) {
            int type = nextInt();
            if (type == 1) {
                int x = nextInt();
                S.addLast(x);
                remainder = (10 * remainder + x) % mod;
            } else if (type == 2) {
                int x = S.pollFirst();
                remainder = (remainder - x * modPow(10, S.size(), mod)) % mod;
            } else {
                println(remainder);
            }
        }
    }

    
    public static void main(String[] args) {
        Main main = new Main();
        main.solve();
        flush();
    }

    
    static FastReader fr = new FastReader();

    static String next() {
        return fr.next();
    }

    static int nextInt() {
        return fr.nextInt();
    }

    static class FastReader {

        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = """";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }

    
    static PrintWriter out = new PrintWriter(System.out);

    static void println(Object o) {
        out.println(o);
    }

    static void flush() {
        out.flush();
    }
}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.*;

public class Main {

    
    long modPow(long x, long n, long mod) {
        long ret = 1;
        while (n > 0) {
            if ((n & 1) == 1) ret = ret * x % mod;
            x = x * x % mod;
            n >>= 1;
        }
        return ret;
    }

    void solve() {
        int Q = nextInt();
        Deque<Integer> S = new ArrayDeque<>();
        S.push(1);
        long mod = 998244353;
        long remainder = 1;
        for (int q = 0; q < Q; q++) {
            int type = nextInt();
            if (type == 1) {
                int x = nextInt();
                S.addLast(x);
                remainder = (10 * remainder + x) % mod;
            } else if (type == 2) {
                int x = S.pollFirst();
                remainder = Math.floorMod(remainder - x * modPow(10, S.size(), mod), mod);
            } else {
                println(remainder);
            }
        }
    }

    
    public static void main(String[] args) {
        Main main = new Main();
        main.solve();
        flush();
    }

    
    static FastReader fr = new FastReader();

    static String next() {
        return fr.next();
    }

    static int nextInt() {
        return fr.nextInt();
    }

    static class FastReader {

        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = """";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }

    
    static PrintWriter out = new PrintWriter(System.out);

    static void println(Object o) {
        out.println(o);
    }

    static void flush() {
        out.flush();
    }
}
",WA
Allen931 ,abc298/D,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayDeque;
import java.util.Deque;
import java.util.StringTokenizer;

public class Main {
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader()
        {
            br = new BufferedReader(
                    new InputStreamReader(System.in));
        }

        String next()
        {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                }
                catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() { return Integer.parseInt(next()); }

        long nextLong() { return Long.parseLong(next()); }

        double nextDouble()
        {
            return Double.parseDouble(next());
        }

        String nextLine()
        {
            String str = """";
            try {
                if(st.hasMoreTokens()){
                    str = st.nextToken(""\n"");
                }
                else{
                    str = br.readLine();
                }
            }
            catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }

    static long modPow(long x, long n, long mod) {
        long result = 1;
        while (n > 0) {
            if ((n & 1) == 1) {
                result = result * x % mod;
            }
            x = x * x % mod;
            n >>= 1;
        }
        return result;
    }

    public static void main(String[] args) {
        FastReader scanner = new FastReader();
        long number = 1;
        long mod = 998244353;
        int q = scanner.nextInt();

        Deque<Integer> deque = new ArrayDeque<>();
        deque.offerLast(1);

        for (int i = 0; i < q; i++) {
            int option = scanner.nextInt();
            switch (option) {
                case 1:
                    int x = scanner.nextInt();
                    deque.offerLast(x);
                    number = (number * 10 + x) % mod;
                    break;
                case 2:
                    int upper = deque.pollFirst();
                    number = number - upper * modPow(10, deque.size(), mod);
                    break;
                case 3:
                    System.out.println(number);
                    break;
            }
        }
    }
}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayDeque;
import java.util.Deque;
import java.util.StringTokenizer;

public class Main {
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader()
        {
            br = new BufferedReader(
                    new InputStreamReader(System.in));
        }

        String next()
        {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                }
                catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() { return Integer.parseInt(next()); }

        long nextLong() { return Long.parseLong(next()); }

        double nextDouble()
        {
            return Double.parseDouble(next());
        }

        String nextLine()
        {
            String str = """";
            try {
                if(st.hasMoreTokens()){
                    str = st.nextToken(""\n"");
                }
                else{
                    str = br.readLine();
                }
            }
            catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }

    static long modPow(long x, long n, long mod) {
        long result = 1;
        while (n > 0) {
            if ((n & 1) == 1) {
                result = result * x % mod;
            }
            x = x * x % mod;
            n >>= 1;
        }
        return result;
    }

    public static void main(String[] args) {
        FastReader scanner = new FastReader();
        long number = 1;
        long mod = 998244353;
        int q = scanner.nextInt();

        Deque<Integer> deque = new ArrayDeque<>();
        deque.offerLast(1);

        for (int i = 0; i < q; i++) {
            int option = scanner.nextInt();
            switch (option) {
                case 1:
                    int x = scanner.nextInt();
                    deque.offerLast(x);
                    number = (number * 10 + x) % mod;
                    break;
                case 2:
                    int upper = deque.pollFirst();
                    number = Math.floorMod(number - upper * modPow(10, deque.size(), mod), mod);
                    break;
                case 3:
                    System.out.println(number);
                    break;
            }
        }
    }
}
",WA
Allen931 ,abc298/D,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayDeque;
import java.util.Deque;
import java.util.StringTokenizer;

public class Main {
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader()
        {
            br = new BufferedReader(
                    new InputStreamReader(System.in));
        }

        String next()
        {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                }
                catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() { return Integer.parseInt(next()); }

        long nextLong() { return Long.parseLong(next()); }

        double nextDouble()
        {
            return Double.parseDouble(next());
        }

        String nextLine()
        {
            String str = """";
            try {
                if(st.hasMoreTokens()){
                    str = st.nextToken(""\n"");
                }
                else{
                    str = br.readLine();
                }
            }
            catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }

    static long modPow(long x, long n, long mod) {
        long result = 1;
        while (n > 0) {
            if ((n & 1) == 1) {
                result = result * x % mod;
            }
            x = x * x % mod;
            n >>= 1;
        }
        return result;
    }

    public static void main(String[] args) {
        FastReader scanner = new FastReader();
        long number = 1;
        long mod = 998244353;
        int q = scanner.nextInt();

        Deque<Integer> deque = new ArrayDeque<>();
        deque.offerLast(1);

        for (int i = 0; i < q; i++) {
            int option = scanner.nextInt();
            switch (option) {
                case 1:
                    int x = scanner.nextInt();
                    deque.offerLast(x);
                    number = (number * 10 + x) % mod;
                    break;
                case 2:
                    int upper = deque.pollFirst();
                    number = number - upper * modPow(upper, deque.size(), mod);
                    break;
                case 3:
                    System.out.println(number);
                    break;
            }
        }
    }
}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayDeque;
import java.util.Deque;
import java.util.StringTokenizer;

public class Main {
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader()
        {
            br = new BufferedReader(
                    new InputStreamReader(System.in));
        }

        String next()
        {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                }
                catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() { return Integer.parseInt(next()); }

        long nextLong() { return Long.parseLong(next()); }

        double nextDouble()
        {
            return Double.parseDouble(next());
        }

        String nextLine()
        {
            String str = """";
            try {
                if(st.hasMoreTokens()){
                    str = st.nextToken(""\n"");
                }
                else{
                    str = br.readLine();
                }
            }
            catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }

    static long modPow(long x, long n, long mod) {
        long result = 1;
        while (n > 0) {
            if ((n & 1) == 1) {
                result = result * x % mod;
            }
            x = x * x % mod;
            n >>= 1;
        }
        return result;
    }

    public static void main(String[] args) {
        FastReader scanner = new FastReader();
        long number = 1;
        long mod = 998244353;
        int q = scanner.nextInt();

        Deque<Integer> deque = new ArrayDeque<>();
        deque.offerLast(1);

        for (int i = 0; i < q; i++) {
            int option = scanner.nextInt();
            switch (option) {
                case 1:
                    int x = scanner.nextInt();
                    deque.offerLast(x);
                    number = (number * 10 + x) % mod;
                    break;
                case 2:
                    int upper = deque.pollFirst();
                    number = Math.floorMod(number - upper * modPow(10, deque.size(), mod), mod);
                    break;
                case 3:
                    System.out.println(number);
                    break;
            }
        }
    }
}
",WA
Allen931 ,abc298/D,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayDeque;
import java.util.Deque;
import java.util.StringTokenizer;

public class Main {
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader()
        {
            br = new BufferedReader(
                    new InputStreamReader(System.in));
        }

        String next()
        {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                }
                catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() { return Integer.parseInt(next()); }

        long nextLong() { return Long.parseLong(next()); }

        double nextDouble()
        {
            return Double.parseDouble(next());
        }

        String nextLine()
        {
            String str = """";
            try {
                if(st.hasMoreTokens()){
                    str = st.nextToken(""\n"");
                }
                else{
                    str = br.readLine();
                }
            }
            catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }

    static long modPow(long x, long n, long mod) {
        long result = 1;
        while (n > 0) {
            if ((n & 1) == 1) {
                result = result * x % mod;
            }
            x = x * x % mod;
            n >>= 1;
        }
        return result;
    }

    public static void main(String[] args) {
        FastReader scanner = new FastReader();
        long number = 1;
        long mod = 998244353;
        int q = scanner.nextInt();

        Deque<Integer> deque = new ArrayDeque<>();
        deque.offerLast(1);

        for (int i = 0; i < q; i++) {
            int option = scanner.nextInt();
            switch (option) {
                case 1:
                    int x = scanner.nextInt();
                    deque.offerLast(x);
                    number = (number * 10 + x) % mod;
                    break;
                case 2:
                    int upper = deque.pollFirst();
                    number = (number - upper * modPow(10, deque.size(), mod)) % mod;
                    break;
                case 3:
                    System.out.println(number);
                    break;
            }
        }
    }
}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayDeque;
import java.util.Deque;
import java.util.StringTokenizer;

public class Main {
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader()
        {
            br = new BufferedReader(
                    new InputStreamReader(System.in));
        }

        String next()
        {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                }
                catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() { return Integer.parseInt(next()); }

        long nextLong() { return Long.parseLong(next()); }

        double nextDouble()
        {
            return Double.parseDouble(next());
        }

        String nextLine()
        {
            String str = """";
            try {
                if(st.hasMoreTokens()){
                    str = st.nextToken(""\n"");
                }
                else{
                    str = br.readLine();
                }
            }
            catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }

    static long modPow(long x, long n, long mod) {
        long result = 1;
        while (n > 0) {
            if ((n & 1) == 1) {
                result = result * x % mod;
            }
            x = x * x % mod;
            n >>= 1;
        }
        return result;
    }

    public static void main(String[] args) {
        FastReader scanner = new FastReader();
        long number = 1;
        long mod = 998244353;
        int q = scanner.nextInt();

        Deque<Integer> deque = new ArrayDeque<>();
        deque.offerLast(1);

        for (int i = 0; i < q; i++) {
            int option = scanner.nextInt();
            switch (option) {
                case 1:
                    int x = scanner.nextInt();
                    deque.offerLast(x);
                    number = (number * 10 + x) % mod;
                    break;
                case 2:
                    int upper = deque.pollFirst();
                    number = Math.floorMod(number - upper * modPow(10, deque.size(), mod), mod);
                    break;
                case 3:
                    System.out.println(number);
                    break;
            }
        }
    }
}
",WA
glycine ,abc298/D,Java,"import java.util.*;

import java.io.*;
import java.math.BigInteger;
import java.nio.charset.StandardCharsets;

public class Main {

	public static void main(String[] args) throws IOException {
		InputStreamReader reader = new InputStreamReader(System.in, StandardCharsets.UTF_8);
		BufferedReader in = new BufferedReader(reader);
		Main ins = new Main(in);
		ins.calc();
		ins.showResult();
	}

	static class Query {
		int type;
		int i;

		Query(String line) {
			String[] tokens = line.split("" "");
			this.type = Integer.parseInt(tokens[0]);
			if (this.type == 1) {
				this.i = Integer.parseInt(tokens[1]);
			}
		}
	}

	PrintWriter writer = new PrintWriter(System.out);
	BufferedReader in = null;
	int Q;
	Query[] queries;
	long MOD = 998244353L;
	Deque<Integer> deque = new ArrayDeque<>();
	long[] mods = new long[1000001];

	Main(BufferedReader in) throws IOException {
		this.Q = Integer.parseInt(in.readLine());
		this.queries = new Query[Q];
		for (int i = 0; i < Q; ++i) {
			this.queries[i] = new Query(in.readLine());
		}

		mods[1] = 1L;
		for (int i = 2; i < mods.length; ++i) {
			long val = mods[i - 1] * 10L;
			val %= MOD;
			mods[i] = val;
		}
	}

	void calc() {
		deque.add(1);
		long val = 1L;
		for (int i = 0; i < Q; ++i) {
			Query query = this.queries[i];
			if (query.type == 1) {
				deque.addLast(query.i);
				val *= 10L;
				val += (long) query.i;
				val %= MOD;
			} else if (query.type == 2) {
				int len = deque.size();
				long m = mods[len] * deque.pollFirst();
				val -= m;
				val += MOD;
				val %= MOD;
			} else {
				this.writer.println(val);
			}
			
		}
	}

	void showResult() {
		this.writer.flush();
	}

}
","import java.util.*;

import java.io.*;
import java.math.BigInteger;
import java.nio.charset.StandardCharsets;

public class Main {

	public static void main(String[] args) throws IOException {
		InputStreamReader reader = new InputStreamReader(System.in, StandardCharsets.UTF_8);
		BufferedReader in = new BufferedReader(reader);
		Main ins = new Main(in);
		ins.calc();
		ins.showResult();
	}

	static class Query {
		int type;
		int i;

		Query(String line) {
			String[] tokens = line.split("" "");
			this.type = Integer.parseInt(tokens[0]);
			if (this.type == 1) {
				this.i = Integer.parseInt(tokens[1]);
			}
		}
	}

	PrintWriter writer = new PrintWriter(System.out);
	BufferedReader in = null;
	int Q;
	Query[] queries;
	long MOD = 998244353L;
	Deque<Integer> deque = new ArrayDeque<>();
	long[] mods = new long[1000001];

	Main(BufferedReader in) throws IOException {
		this.Q = Integer.parseInt(in.readLine());
		this.queries = new Query[Q];
		for (int i = 0; i < Q; ++i) {
			this.queries[i] = new Query(in.readLine());
		}

		mods[1] = 1L;
		for (int i = 2; i < mods.length; ++i) {
			long val = mods[i - 1] * 10L;
			val %= MOD;
			mods[i] = val;
		}
	}

	void calc() {
		deque.add(1);
		long val = 1L;
		for (int i = 0; i < Q; ++i) {
			Query query = this.queries[i];
			if (query.type == 1) {
				deque.addLast(query.i);
				val *= 10L;
				val += (long) query.i;
				val %= MOD;
			} else if (query.type == 2) {
				int len = deque.size();
				long m = mods[len] * deque.pollFirst();
				val -= m;
				while (val < 0L) {
					val += MOD;
				}
				val %= MOD;
			} else {
				this.writer.println(val);
			}
			
		}
	}

	void showResult() {
		this.writer.flush();
	}

}
",WA
yadavdipesh ,abc298/D,Java,"




import java.io.*;
import java.util.*;
import java.lang.*;
public class Main{
    
  static PrintWriter out = new PrintWriter(System.out);
  static FastReader in = new FastReader();
  public static void main(String[] args) throws IOException{
    
    
    int ntc = 1;
    for(int tno = 1 ; tno <= ntc ; tno++) solve();
    
    out.flush();
  } 
  public static void solve(){
        int n = inp() , flag = 0 , temp = 0 , slag = 0;
        ArrayDeque<Integer> q = new ArrayDeque<>();
        q.addLast(1);
        int c = 1;
        long v = 1;
        while(n-- > 0){
        	int a = inp();
        	if(a == 1){
        		int x = inp();
        		q.addLast(x);
        		v = ((v * 10)%mod + x) % mod;
        		c++;
        	}
        	else if(a == 2){ 
        		c--;
        		int x = q.removeFirst();
        		v = (v - (pow(10,c,mod)*x)%mod)%mod;
        	}
        	else{
        		 out.println(v);
        	}
        }





  }


      
	public static int[] ia(int n){
		int[] arr = new int[n];
		for(int i = 0 ; i < n ; i++){
			arr[i] = in.nextInt();
		}
		return arr;
	}
	public static int inp(){return in.nextInt();}
	public static String inps(){return in.next();}
	public static int[] radixSort2(int[] a){
		int n = a.length;
		int[] c0 = new int[0x101];
		int[] c1 = new int[0x101];
		int[] c2 = new int[0x101];
		int[] c3 = new int[0x101];
		for(int v : a) {
			c0[(v&0xff)+1]++;
			c1[(v>>>8&0xff)+1]++;
			c2[(v>>>16&0xff)+1]++;
			c3[(v>>>24^0x80)+1]++;
		}
		for(int i = 0;i < 0xff;i++) {
			c0[i+1] += c0[i];
			c1[i+1] += c1[i];
			c2[i+1] += c2[i];
			c3[i+1] += c3[i];
		}
		int[] t = new int[n];
		for(int v : a)t[c0[v&0xff]++] = v;
		for(int v : t)a[c1[v>>>8&0xff]++] = v;
		for(int v : a)t[c2[v>>>16&0xff]++] = v;
		for(int v : t)a[c3[v>>>24^0x80]++] = v;
		return a;
	}
   static long mod = 998244353;
   public static long pow(long a, long b , long mod) {
    long res = 1;
    while (b > 0) {
        if ((b & 1) == 0) {
            a  = (a*a)%mod ;
            b = b >> 1;
        } else {
            res = (res*a)%mod ;
            b--;
        }
    }
    return res%mod;
   }
 public static void no(){out.println(""No"");}
 public static void yes(){out.println(""Yes"");}
  static long gcd(long a, long b) {
        while (b != 0) {
          long t = a;
          a = b;  
          b = t % b;
        } 
        return a;
  }    
  static class FastReader {
      BufferedReader br;
      StringTokenizer st;
      public FastReader() {
        br = new BufferedReader(new InputStreamReader(System.in));
      }
      String next() {
        while (st == null || !st.hasMoreTokens()) {
          try {
            st = new StringTokenizer(br.readLine());
          } catch (IOException e) {
            e.printStackTrace();
          }
        }
        return st.nextToken();
      }
      int nextInt() {
        return Integer.parseInt(next());
      }
      long nextLong() {
        return Long.parseLong(next());
      }
      double nextDouble() {
        return Double.parseDouble(next());
      }
      String nextLine() {
        String str = """";
        try {
          str = br.readLine().trim();
        } catch (Exception e) {
          e.printStackTrace();
        }
        return str;
      }
    }
}


","




import java.io.*;
import java.util.*;
import java.lang.*;
public class Main{
    
  static PrintWriter out = new PrintWriter(System.out);
  static FastReader in = new FastReader();
  public static void main(String[] args) throws IOException{
    
    
    int ntc = 1;
    for(int tno = 1 ; tno <= ntc ; tno++) solve();
    
    out.flush();
  } 
  public static void solve(){
        int n = inp() , flag = 0 , temp = 0 , slag = 0;
        ArrayDeque<Integer> q = new ArrayDeque<>();
        q.addLast(1);
        int c = 1;
        long v = 1;
        while(n-- > 0){
        	int a = inp();
        	if(a == 1){
        		int x = inp();
        		q.addLast(x);
        		v = ((v * 10)%mod + x) % mod;
        		c++;
        	}
        	else if(a == 2){ 
        		c--;
        		int x = q.removeFirst();
        		v = (v + mod - (pow(10,c,mod)*x)%mod)%mod;
        	}
        	else{
        		 out.println(v);
        	}
        }





  }


      
	public static int[] ia(int n){
		int[] arr = new int[n];
		for(int i = 0 ; i < n ; i++){
			arr[i] = in.nextInt();
		}
		return arr;
	}
	public static int inp(){return in.nextInt();}
	public static String inps(){return in.next();}
	public static int[] radixSort2(int[] a){
		int n = a.length;
		int[] c0 = new int[0x101];
		int[] c1 = new int[0x101];
		int[] c2 = new int[0x101];
		int[] c3 = new int[0x101];
		for(int v : a) {
			c0[(v&0xff)+1]++;
			c1[(v>>>8&0xff)+1]++;
			c2[(v>>>16&0xff)+1]++;
			c3[(v>>>24^0x80)+1]++;
		}
		for(int i = 0;i < 0xff;i++) {
			c0[i+1] += c0[i];
			c1[i+1] += c1[i];
			c2[i+1] += c2[i];
			c3[i+1] += c3[i];
		}
		int[] t = new int[n];
		for(int v : a)t[c0[v&0xff]++] = v;
		for(int v : t)a[c1[v>>>8&0xff]++] = v;
		for(int v : a)t[c2[v>>>16&0xff]++] = v;
		for(int v : t)a[c3[v>>>24^0x80]++] = v;
		return a;
	}
   static long mod = 998244353;
   public static long pow(long a, long b , long mod) {
    long res = 1;
    while (b > 0) {
        if ((b & 1) == 0) {
            a  = (a*a)%mod ;
            b = b >> 1;
        } else {
            res = (res*a)%mod ;
            b--;
        }
    }
    return res%mod;
   }
 public static void no(){out.println(""No"");}
 public static void yes(){out.println(""Yes"");}
  static long gcd(long a, long b) {
        while (b != 0) {
          long t = a;
          a = b;  
          b = t % b;
        } 
        return a;
  }    
  static class FastReader {
      BufferedReader br;
      StringTokenizer st;
      public FastReader() {
        br = new BufferedReader(new InputStreamReader(System.in));
      }
      String next() {
        while (st == null || !st.hasMoreTokens()) {
          try {
            st = new StringTokenizer(br.readLine());
          } catch (IOException e) {
            e.printStackTrace();
          }
        }
        return st.nextToken();
      }
      int nextInt() {
        return Integer.parseInt(next());
      }
      long nextLong() {
        return Long.parseLong(next());
      }
      double nextDouble() {
        return Double.parseDouble(next());
      }
      String nextLine() {
        String str = """";
        try {
          str = br.readLine().trim();
        } catch (Exception e) {
          e.printStackTrace();
        }
        return str;
      }
    }
}


",WA
yiyz ,abc298/D,Java,"import java.nio.charset.StandardCharsets;
import java.util.ArrayDeque;
import java.util.Deque;
import java.util.Scanner;

public class Main {
    private static final int MOD = 998244353;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in, StandardCharsets.UTF_8);
        int q = scanner.nextInt();

        long res = 1L;
        Deque<Integer> deque = new ArrayDeque<>();
        deque.addLast(1);
        while (q-- > 0) {
            int op = scanner.nextInt();
            if (op == 1) {
                int x = scanner.nextInt();
                deque.addLast(x);
                res = (res * 10 + x) % MOD;
            } else if (op == 2) {
                int y = deque.removeFirst();
                int sz = deque.size();
                res = (res - y * quickPow(10, sz) + MOD) % MOD;
            } else {
                System.out.println(res);
            }
        }
    }

    
    private static long quickPow(long a, long b) {
        long res = 1L;
        while (b > 0) {
            if ((b & 1) == 1) {
                res = res * a % MOD;
            }
            a = a * a % MOD;
            b >>= 1;
        }
        return res;
    }
}
","import java.nio.charset.StandardCharsets;
import java.util.ArrayDeque;
import java.util.Deque;
import java.util.Scanner;

public class Main {
    private static final int MOD = 998244353;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in, StandardCharsets.UTF_8);
        int q = scanner.nextInt();

        long res = 1L;
        Deque<Integer> deque = new ArrayDeque<>();
        deque.addLast(1);
        while (q-- > 0) {
            int op = scanner.nextInt();
            if (op == 1) {
                int x = scanner.nextInt();
                deque.addLast(x);
                res = (res * 10 + x) % MOD;
            } else if (op == 2) {
                int y = deque.removeFirst();
                int sz = deque.size();
                res = ((res - y * quickPow(10, sz)) % MOD + MOD) % MOD;
            } else {
                System.out.println(res);
            }
        }
    }

    
    private static long quickPow(long a, long b) {
        long res = 1L;
        while (b > 0) {
            if ((b & 1) == 1) {
                res = res * a % MOD;
            }
            a = a * a % MOD;
            b >>= 1;
        }
        return res;
    }
}

",WA
k_araki ,abc298/D,Java,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
	public static void main(String args[] ) throws Exception {

		BufferedReader br = new BufferedReader( new InputStreamReader( System.in ) ) ;
		int Q = Integer.valueOf ( br.readLine().trim() ) ;
		
		long v = 1 ; 
		long mod =  998244353L ;
		long b = 1 ;
		long bx = BigInteger.TEN.modInverse( BigInteger.valueOf( mod ) ).longValue() ;

	
		List<Integer> list = new ArrayList<>() ;
		list.add ( 1 ) ;
		for ( int i=0 ; i<Q ; i++ ) {
			String S = br.readLine().trim() ;
			switch( S.charAt(0) ) {
				case '1' :
					String[] ss = S.split("" "") ;
					int r = Integer.valueOf( ss[1] ) ;
					list.add ( r ) ;
					b = ( b * 10 ) %mod ;
					v = ( v * 10 + r ) % mod ;
					break ;
				case '2' :

					int c = list.remove(0);
					v -= ( b * c ) % mod ;
					v = ( v + mod ) % mod ;
						
					b = ( b * bx ) % mod ;
					break ;
				case '3' : 
					System.out.println( v ) ;
					break ;
			}
		}
		br.close() ;
	}
}
","import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
	public static void main(String args[] ) throws Exception {

		BufferedReader br = new BufferedReader( new InputStreamReader( System.in ) ) ;
		int Q = Integer.valueOf ( br.readLine().trim() ) ;
		
		long v = 1 ; 
		long mod =  998244353L ;
		long b = 1 ;
		long bx = BigInteger.TEN.modInverse( BigInteger.valueOf( mod ) ).longValue() ;

		LinkedList<Integer> list = new LinkedList<>() ;
		list.add ( 1 ) ;
		for ( int i=0 ; i<Q ; i++ ) {
			String S = br.readLine().trim() ;
			switch( S.charAt(0) ) {
				case '1' :
					String[] ss = S.split("" "") ;
					int r = Integer.valueOf( ss[1] ) ;
					list.add ( r ) ;
					b = ( b * 10 ) %mod ;
					v = ( v * 10 + r ) % mod ;
					break ;
				case '2' :
					int c = list.poll() ;
					v -= ( b * c ) % mod ;
					v = ( v + mod ) % mod ;
						
					b = ( b * bx ) % mod ;
					break ;
				case '3' : 
					System.out.println( v ) ;
					break ;
			}
		}
		br.close() ;
	}
}
",TLE
k_araki ,abc298/D,Java,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
	public static void main(String args[] ) throws Exception {

		BufferedReader br = new BufferedReader( new InputStreamReader( System.in ) ) ;
		int Q = Integer.valueOf ( br.readLine().trim() ) ;
		
		long v = 1 ; 
		long mod =  998244353L ;
		long b = 1 ;
		long bx = BigInteger.TEN.modInverse( BigInteger.valueOf( mod ) ).longValue() ;

	
		List<Integer> list = new ArrayList<>() ;
		list.add ( 1 ) ;
		for ( int i=0 ; i<Q ; i++ ) {
			String S = br.readLine().trim() ;
			switch( S.charAt(0) ) {
				case '1' :
					String[] ss = S.split("" "") ;
					int r = Integer.valueOf( ss[1] ) ;
					list.add ( r ) ;
					b = ( b * 10 ) %mod ;
					v = ( v * 10 + r ) % mod ;
					break ;
				case '2' :

					int c = list.remove(0);
					v -= ( b * c ) % mod ;
					v = ( v + mod ) % mod ;
						
					b = ( b * bx ) % mod ;
					break ;
				case '3' : 
					System.out.println( v ) ;
					break ;
			}
		}
		br.close() ;
	}
}
","import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
	public static void main(String args[] ) throws Exception {

		BufferedReader br = new BufferedReader( new InputStreamReader( System.in ) ) ;
		int Q = Integer.valueOf ( br.readLine().trim() ) ;
		
		long v = 1 ; 
		long mod =  998244353L ;
		long b = 1 ;
		long bx = BigInteger.TEN.modInverse( BigInteger.valueOf( mod ) ).longValue() ;
		Deque<Integer> list = new ArrayDeque<>();
		list.add ( 1 ) ;
		for ( int i=0 ; i<Q ; i++ ) {
			String S = br.readLine().trim() ;
			switch( S.charAt(0) ) {
				case '1' :
					String[] ss = S.split("" "") ;
					int r = Integer.valueOf( ss[1] ) ;
					list.add ( r ) ;
					b = ( b * 10 ) %mod ;
					v = ( v * 10 + r ) % mod ;
					break ;
				case '2' :
					int c = list.poll() ;
					v -= ( b * c ) % mod ;
					v = ( v + mod ) % mod ;
						
					b = ( b * bx ) % mod ;
					break ;
				case '3' : 
					System.out.println( v ) ;
					break ;
			}
		}
		br.close() ;
	}
}
",TLE
k_araki ,abc298/D,Java,"import java.util.*;
import java.io.*;
import java.math.*;
import java.util.stream.*;

public class Main {
	public static void main(String args[] ) throws Exception {

		


		InputStreamReader reader = new InputStreamReader( System.in ) ;
		StringBuilder sb = new StringBuilder() ; 

		while ( true ) {
			int c = reader.read() ; 
			if ( c < '0' ) break ;
			if ( c > '9' ) break ;
			sb.append( c -'0' ) ;
		}


		int Q = Integer.valueOf ( sb.toString() ) ;
		
		System.out.println( Q ) ;
		long v = 1 ; 
		long mod = 998244353L ;
		long b = 1 ;
		long bx = BigInteger.TEN.modInverse( BigInteger.valueOf( mod ) ).longValue() ;
		Deque<Integer> list = new ArrayDeque<>();
	
		list.add ( 1 ) ;
		for ( int i=0 ; i<Q ; i++ ) {

			sb = new StringBuilder() ;
			while ( true ) {
				int c = reader.read() ; 
				if ( c == ' ' ) {
					sb.append( (char)c ) ;
				} else if ( c >= '0' && c <= '9' ) {
					sb.append( (char)c ) ;
				} else  {

					break;
				}
			}
			String S = sb.toString() ;


			switch( S.charAt(0) ) {
				case '1' :
					String[] ss = S.split("" "") ;
					int r = Integer.valueOf( ss[1] ) ;
					list.add ( r ) ;
					b = ( b * 10 ) %mod ;
					v = ( v * 10 + r ) % mod ;
					break ;
				case '2' :
					int c = list.poll() ;

					v -= ( b * c ) % mod ;
					v = ( v + mod ) % mod ;
						
					b = ( b * bx ) % mod ;
					break ;
				case '3' : 
					System.out.println( v ) ;
					break ;
			}
		}
		reader.close() ;



	
	}
	
	public static String P ( List<Object> list ) {
		StringBuilder sb = new StringBuilder() ;
		for ( Object x : list ) 
			sb.append( x ).append("" "") ;
		return sb.toString().trim() ;
	}
}
","import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
	public static void main(String args[] ) throws Exception {

		


		InputStreamReader reader = new InputStreamReader( System.in ) ;
		StringBuilder sb = new StringBuilder() ; 

		while ( true ) {
			int c = reader.read() ; 
			if ( c < '0' ) break ;
			if ( c > '9' ) break ;
			sb.append( c -'0' ) ;
		}


		int Q = Integer.valueOf ( sb.toString() ) ;
		

		long v = 1 ; 
		long mod = 998244353L ;
		long b = 1 ;
		long bx = BigInteger.TEN.modInverse( BigInteger.valueOf( mod ) ).longValue() ;
		Deque<Integer> list = new ArrayDeque<>();
	
		list.add ( 1 ) ;
		for ( int i=0 ; i<Q ; i++ ) {

			sb = new StringBuilder() ;
			while ( true ) {
				int c = reader.read() ; 
				if ( c == ' ' ) {
					sb.append( (char)c ) ;
				} else if ( c >= '0' && c <= '9' ) {
					sb.append( (char)c ) ;
				} else  {

					break;
				}
			}
			String S = sb.toString() ;


			switch( S.charAt(0) ) {
				case '1' :
					String[] ss = S.split("" "") ;
					int r = Integer.valueOf( ss[1] ) ;
					list.add ( r ) ;
					b = ( b * 10 ) %mod ;
					v = ( v * 10 + r ) % mod ;
					break ;
				case '2' :
					int c = list.poll() ;

					v -= ( b * c ) % mod ;
					v = ( v + mod ) % mod ;
						
					b = ( b * bx ) % mod ;
					break ;
				case '3' : 
					System.out.println( v ) ;
					break ;
			}
		}
		reader.close() ;



	
	}
	
	public static String P ( List<Object> list ) {
		StringBuilder sb = new StringBuilder() ;
		for ( Object x : list ) 
			sb.append( x ).append("" "") ;
		return sb.toString().trim() ;
	}
}
",WA
k_araki ,abc298/D,Java,"import java.util.*;

public class Main {
	public static void main(String args[] ) throws Exception {

		Scanner sc = new Scanner(System.in);
		int Q = Integer.valueOf ( sc.nextLine().trim() ) ;
		
		long v = 1 ; 
		long mod =  998244353L ;
		long b = 1 ;
		long br = modInv ( 10 , mod ) ;
		List<Integer> list = new ArrayList<>() ;
		list.add ( 1 ) ;
		for ( int i=0 ; i<Q ; i++ ) {
			String[] ss = sc.nextLine().trim().split("" "") ;
			int q = Integer.valueOf( ss[0] ) ;
			if ( q == 1 ) {
				int r = Integer.valueOf( ss[1] ) ;
				list.add ( r ) ;
				b *= 10 ;
				b %= mod ;
				
				v = ( v * 10 + r ) % mod ;

			} else if ( q == 2 ) {
				int c = list.remove( 0 ) ;
				v -= ( b * c ) % mod ;
				v = ( v + mod ) % mod ;
					
				b *= br ; 
				b %= mod ;
			} else if ( q == 3 ) {
				System.out.println( v ) ;
			}
		}
	}
	public static long modInv ( long n , long mod  ) {

		long[] arr = extUc3 ( n , mod * -1 ) ;
		long v1 = arr[0] ;
		while ( v1 < 0 )
			v1 += mod ;
		return v1 % mod ;
	}
	public static long[] extUc3( long a , long b ) {
		long[] arr1 = new long[] { 1L , 0L } ; 
		long[] arr2 = new long[] { 0L , 1L } ; 
		long[] arr3 = null ;
		
		while ( Math.abs( b ) != 1 ) {
			
			arr3 = new long[2] ;
			long div = a / b ;
			long mod = a % b ;

			arr3[0] = arr1[0] - Math.multiplyExact( div , arr2[0] ) ;
			arr3[1] = arr1[1] - Math.multiplyExact( div , arr2[1] ) ;

			arr1 = arr2 ; 
			arr2 = arr3 ; 

			a = b ; 
			b = mod ;
		}

		if ( b==-1 ) {
			arr3[0] *= -1 ;
			arr3[1] *= -1 ; 
		}
		return arr3 ;
	}
}
","import java.util.*;

public class Main {
	public static void main(String args[] ) throws Exception {

		Scanner sc = new Scanner(System.in);
		int Q = Integer.valueOf ( sc.nextLine().trim() ) ;
		
		long v = 1 ; 
		long mod =  998244353L ;
		long b = 1 ;
		long br = modInv ( 10 , mod ) ;
		Deque<Integer> list = new ArrayDeque<>();
		list.add ( 1 ) ;
		for ( int i=0 ; i<Q ; i++ ) {
			String[] ss = sc.nextLine().trim().split("" "") ;
			int q = Integer.valueOf( ss[0] ) ;
			if ( q == 1 ) {
				int r = Integer.valueOf( ss[1] ) ;
				list.add ( r ) ;
				b *= 10 ;
				b %= mod ;
				
				v = ( v * 10 + r ) % mod ;

			} else if ( q == 2 ) {
				int c = list.poll() ;
				v -= ( b * c ) % mod ;
				v = ( v + mod ) % mod ;
					
				b *= br ; 
				b %= mod ;
			} else if ( q == 3 ) {
				System.out.println( v ) ;
			}
		}
	}
	public static long modInv ( long n , long mod  ) {

		long[] arr = extUc3 ( n , mod * -1 ) ;
		long v1 = arr[0] ;
		while ( v1 < 0 )
			v1 += mod ;
		return v1 % mod ;
	}
	public static long[] extUc3( long a , long b ) {
		long[] arr1 = new long[] { 1L , 0L } ; 
		long[] arr2 = new long[] { 0L , 1L } ; 
		long[] arr3 = null ;
		
		while ( Math.abs( b ) != 1 ) {
			
			arr3 = new long[2] ;
			long div = a / b ;
			long mod = a % b ;

			arr3[0] = arr1[0] - Math.multiplyExact( div , arr2[0] ) ;
			arr3[1] = arr1[1] - Math.multiplyExact( div , arr2[1] ) ;

			arr1 = arr2 ; 
			arr2 = arr3 ; 

			a = b ; 
			b = mod ;
		}

		if ( b==-1 ) {
			arr3[0] *= -1 ;
			arr3[1] *= -1 ; 
		}
		return arr3 ;
	}
}
",TLE
wdasddsa ,abc298/D,Java,"import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Scanner;
import java.util.Set;
import java.util.Stack;






public class Main {
	static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	private static StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static Scanner sc = new Scanner(System.in);

	private static int Int() {
		try {
			st.nextToken();
			
		} catch (IOException e) {

			e.printStackTrace();
		}
		return (int) st.nval;
	}

	private static long Long() {
		try {
			st.nextToken();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return (long) st.nval;
	}

	private static String str() {
		try {
			st.nextToken();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return (String) st.sval;
	}

	static long gcd(long a, long b) {
		return b == 0 ? a : gcd(b, a % b);
	}

	static int[][] tu;
	static int ans,n,m,b,chu;
	static int[]dp,dp1,dp2,mx,down,pr,c,du;
	static Map<Integer, List<Integer>>map,ziyinziweiz;
	
	static int v1;
	static List<Long>list;
	static long []p;
	static Set<Integer>set;
	static String s1[];
	public static void main(String[] args) {
		
		int t =1;
		long mod=(long) (998244353);
		long []bs=new long[600001];bs[1]=1;
		for (int i = 2; i < bs.length; i++) {
			bs[i]=bs[i-1]*10;
			bs[i]%=mod;
		}
		
		while (t-->0) {
			int q=Int();
			long ans=1;
			int chu=0;
			List<Integer>list=new ArrayList<Integer>();
			list.add(1);
			for (int i = 0; i <q; i++) {
				int k=Int();
				if (k==1) {
					int x=Int();
					list.add(x);
					ans*=10;ans+=x;
					ans%=mod;
				}else if(k==2){
					int le=list.size()-chu;
					long jian=list.get(chu)*bs[le];jian%=mod;
					ans-=jian+mod;
					ans%=mod;
					chu++;
				}else {
					out.println(ans);
				}
				
			}
		}
		
		out.close();
	}

}
","import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Scanner;
import java.util.Set;
import java.util.Stack;






public class Main {
	static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	private static StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static Scanner sc = new Scanner(System.in);

	private static int Int() {
		try {
			st.nextToken();
			
		} catch (IOException e) {

			e.printStackTrace();
		}
		return (int) st.nval;
	}

	private static long Long() {
		try {
			st.nextToken();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return (long) st.nval;
	}

	private static String str() {
		try {
			st.nextToken();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return (String) st.sval;
	}

	static long gcd(long a, long b) {
		return b == 0 ? a : gcd(b, a % b);
	}

	static int[][] tu;
	static int ans,n,m,b,chu;
	static int[]dp,dp1,dp2,mx,down,pr,c,du;
	static Map<Integer, List<Integer>>map,ziyinziweiz;
	
	static int v1;
	static List<Long>list;
	static long []p;
	static Set<Integer>set;
	static String s1[];
	public static void main(String[] args) {
		
		int t =1;
		long mod=(long) (998244353);
		long []bs=new long[600001];bs[1]=1;
		for (int i = 2; i < bs.length; i++) {
			bs[i]=bs[i-1]*10;
			bs[i]%=mod;
		}
		
		while (t-->0) {
			int q=Int();
			long ans=1;
			int chu=0;
			List<Integer>list=new ArrayList<Integer>();
			list.add(1);
			for (int i = 0; i <q; i++) {
				int k=Int();
				if (k==1) {
					int x=Int();
					list.add(x);
					ans*=10;ans+=x;
					ans%=mod;
				}else if(k==2){
					int le=list.size()-chu;
					long jian=list.get(chu)*bs[le];jian%=mod;
					ans-=jian;ans+=mod;
					ans%=mod;
					chu++;
				}else {
					out.println(ans);
				}
				
			}
		}
		
		out.close();
	}

}
",WA
Virendra ,abc298/D,Java,"

import java.util.*;
import java.io.*;

public class Main {
    static void solve() {
        StringBuilder res = new StringBuilder();
        int n = sc.nextInt();
        Queue<Integer> q = new LinkedList<>();
        q.offer(1);
        long ans = 1, mod = 998244353,k = 1;
        for (int i = 0; i < n; i++) {
            int t = sc.nextInt();
            if(t==1){
                int x = sc.nextInt();
                ans*=10;
                ans+=x;
                ans%=mod;
                k++;
            }else if( t==2){
                int p = q.poll();
                ans -= binpow(10,k-1,mod)*p%mod;
                ans += mod;
                ans%=mod;
                k--;
            }else{
                print(ans%mod);
            }
        }
    }

    static long binpow(long a, long b,long mod) {
        if (b == 0)
            return 1;
        long res = binpow(a, b / 2,mod);
        res = res *res%mod;
        if (b % 2==1)
            return res * a % mod;
        else
            return res;
    }

    static int gcd(int a, int b) {
        if (b == 0)
            return a;
        return gcd(b, a % b);
    }

    static FastReader sc;
    static PrintWriter out;
    public static void main(String[] args) throws IOException {
        sc = new FastReader();
        out = new PrintWriter(System.out);
        int tt = 1;
        for (int t = 1; t <= tt; t++) {
            solve();
        }
        out.close();
    }

    static <E> void print(E res) {
        out.println(res);
    }

    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = """";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        int[] readIntArray(int n) {
            int[] res = new int[n];
            for (int i = 0; i < n; i++)
                res[i] = nextInt();
            return res;
        }

        long[] readLongArray(int n) {
            long[] res = new long[n];
            for (int i = 0; i < n; i++)
                res[i] = nextLong();
            return res;
        }
    }

}
","

import java.util.*;
import java.io.*;

public class Main {
    static void solve() {
        StringBuilder res = new StringBuilder();
        int n = sc.nextInt();
        Queue<Integer> q = new LinkedList<>();
        q.offer(1);
        long ans = 1, mod = 998244353,k = 1;
        for (int i = 0; i < n; i++) {
            int t = sc.nextInt();
            if(t==1){
                int x = sc.nextInt();
                ans*=10;
                ans+=x;
                ans%=mod;
                q.offer(x);
                k++;
            }else if( t==2){
                int p = q.poll();
                ans -= binpow(10,k-1,mod)*p%mod;
                ans += mod;
                ans%=mod;
                k--;
            }else{
                print(ans%mod);
            }
        }
    }

    static long binpow(long a, long b,long mod) {
        if (b == 0)
            return 1;
        long res = binpow(a, b / 2,mod);
        res = res *res%mod;
        if (b % 2==1)
            return res * a % mod;
        else
            return res;
    }

    static int gcd(int a, int b) {
        if (b == 0)
            return a;
        return gcd(b, a % b);
    }

    static FastReader sc;
    static PrintWriter out;
    public static void main(String[] args) throws IOException {
        sc = new FastReader();
        out = new PrintWriter(System.out);
        int tt = 1;
        for (int t = 1; t <= tt; t++) {
            solve();
        }
        out.close();
    }

    static <E> void print(E res) {
        out.println(res);
    }

    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = """";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        int[] readIntArray(int n) {
            int[] res = new int[n];
            for (int i = 0; i < n; i++)
                res[i] = nextInt();
            return res;
        }

        long[] readLongArray(int n) {
            long[] res = new long[n];
            for (int i = 0; i < n; i++)
                res[i] = nextLong();
            return res;
        }
    }

}
",RE
Shushantbk16 ,abc295/C,Java,"import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
         int t=sc.nextInt();
        long[] a=new long[t];
       
      long ans=0;
      HashMap<Long,Integer> mp=new HashMap<>();
        for(int i=0;i<t;i++){
            a[i]=sc.nextLong();
          if(mp.containsKey(a[i])){
            mp.put(a[i],mp.get(a[i])+1);
          }else{
          mp.put(a[i],1);
          }
        }
      for (Map.Entry<String,Integer> mapElement : mp.entrySet()) {
            int key = mapElement.getValue();
        ans+=key/2;
      }
        System.out.println(ans);

    }
}
","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
         int t=sc.nextInt();
        long[] a=new long[t];
       
      long ans=0;
      HashMap<Long,Integer> mp=new HashMap<>();
        for(int i=0;i<t;i++){
            a[i]=sc.nextLong();
          if(mp.containsKey(a[i])){
            mp.put(a[i],mp.get(a[i])+1);
          }else{
          mp.put(a[i],1);
          }
        }
      for (Map.Entry<Long,Integer> mapElement : mp.entrySet()) {
            int key = mapElement.getValue();
        ans+=key/2;
      }
        System.out.println(ans);

    }
}
",CE
kmatsu ,abc295/C,Java,"import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main2 {
	public static void main(String[] args) {
		try (Scanner scanner = new Scanner(System.in)) {
			int n = scanner.nextInt();
			Set<Integer> set = new HashSet<>(n);
			int result = 0;
			for (int i = 0; i < n; i++) {
				int a = scanner.nextInt();
				if (set.remove(a)) {
					result++;
				} else {
					set.add(a);
				}
			}
			System.out.println(result);
		}
	}
}
","import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
	public static void main(String[] args) {
		try (Scanner scanner = new Scanner(System.in)) {
			int n = scanner.nextInt();
			Set<Integer> set = new HashSet<>(n);
			int result = 0;
			for (int i = 0; i < n; i++) {
				int a = scanner.nextInt();
				if (set.remove(a)) {
					result++;
				} else {
					set.add(a);
				}
			}
			System.out.println(result);
		}
	}
}
",CE
kk129 ,abc295/C,Java,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            HashMap<Integer,Integer> map = new HashMap<>();
            for (int i = 0; i < n; i++) {
                int a = in.nextInt();
                map.put(a,map.getOrDefault(a,0)+1);
            }
            int sum = 0;
            for (Integer s: map.keySet()) {
                if(map.get(s)>1)
                    sum++;
            }
            out.println(sum);
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;
        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}
","import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            HashMap<Integer,Integer> map = new HashMap<>();
            for (int i = 0; i < n; i++) {
                int a = in.nextInt();
                map.put(a,map.getOrDefault(a,0)+1);
            }
            int sum = 0;
            for (Integer s: map.keySet()) {
                sum+=map.get(s)/2;
            }
            out.println(sum);
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;
        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}
",WA
HassanU ,abc295/C,Java,"import java.io.*;
import java.util.*;
import java.math.BigInteger;
public class A {
	static PrintWriter out=new PrintWriter(System.out);
	static Scanner sc=new Scanner(System.in);
	
	public static void main(String[] args) throws Exception {
		int n=sc.nextInt();
		HashSet<Integer>hs=new HashSet<>();
		int ans=0;
		for(int i=0;i<n;i++) {
			int a=sc.nextInt();
			if(hs.contains(a)) {
				ans++;
				hs.remove(a);
			}
			else hs.add(a);
		}
		out.println(ans);
		out.close();
		
	}
		
	
	static class Pair implements Comparable<Pair>{
		int x;
		int y;
		public Pair(int x,int y) {
			this.x=x;
			this.y=y;
		}
		public int compareTo(Pair o) {
			return this.x-o.x;
		}
		public String toString() {
			return ""(""+this.x+"",""+this.y+"")"";
		}
		
	}
	static class Scanner {
		StringTokenizer st;
		BufferedReader br;
		public Scanner(InputStream s) {
			br = new BufferedReader(new InputStreamReader(s));
		}
		public Scanner(String file) throws FileNotFoundException {
			br = new BufferedReader(new FileReader(file));
		}
		
		public String next() throws IOException {
			while (st == null || !st.hasMoreTokens())
				st = new StringTokenizer(br.readLine());
			return st.nextToken();
		}
		public int nextInt() throws IOException {
			return Integer.parseInt(next());
		}
		public long nextLong() throws IOException {
			return Long.parseLong(next());
		}
		public String nextLine() throws IOException {
			return br.readLine();
		}
		public double nextDouble() throws IOException {
			return Double.parseDouble(next());
		}
		public boolean ready() throws IOException {
			return br.ready();
		}
		public int[] nextIntArr(int n) throws IOException{
			int arr[]=new int[n];
			for(int i=0;i<n;i++)arr[i]=nextInt();
			return arr;
		}
		public BigInteger BigInteger(String s) throws IOException{
			BigInteger a=new BigInteger(s);
			return a;
		}
	}
}
","import java.io.*;
import java.util.*;
import java.math.BigInteger;
public class Main {
	static PrintWriter out=new PrintWriter(System.out);
	static Scanner sc=new Scanner(System.in);
	
	public static void main(String[] args) throws Exception {
		int n=sc.nextInt();
		HashSet<Integer>hs=new HashSet<>();
		int ans=0;
		for(int i=0;i<n;i++) {
			int a=sc.nextInt();
			if(hs.contains(a)) {
				ans++;
				hs.remove(a);
			}
			else hs.add(a);
		}
		out.println(ans);
		out.close();
		
	}
		
	
	static class Pair implements Comparable<Pair>{
		int x;
		int y;
		public Pair(int x,int y) {
			this.x=x;
			this.y=y;
		}
		public int compareTo(Pair o) {
			return this.x-o.x;
		}
		public String toString() {
			return ""(""+this.x+"",""+this.y+"")"";
		}
		
	}
	static class Scanner {
		StringTokenizer st;
		BufferedReader br;
		public Scanner(InputStream s) {
			br = new BufferedReader(new InputStreamReader(s));
		}
		public Scanner(String file) throws FileNotFoundException {
			br = new BufferedReader(new FileReader(file));
		}
		
		public String next() throws IOException {
			while (st == null || !st.hasMoreTokens())
				st = new StringTokenizer(br.readLine());
			return st.nextToken();
		}
		public int nextInt() throws IOException {
			return Integer.parseInt(next());
		}
		public long nextLong() throws IOException {
			return Long.parseLong(next());
		}
		public String nextLine() throws IOException {
			return br.readLine();
		}
		public double nextDouble() throws IOException {
			return Double.parseDouble(next());
		}
		public boolean ready() throws IOException {
			return br.ready();
		}
		public int[] nextIntArr(int n) throws IOException{
			int arr[]=new int[n];
			for(int i=0;i<n;i++)arr[i]=nextInt();
			return arr;
		}
		public BigInteger BigInteger(String s) throws IOException{
			BigInteger a=new BigInteger(s);
			return a;
		}
	}
}
",CE
vjudge4 ,abc295/C,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class Main{
    public static void main(String[] args) throws IOException {
        BufferedReader br= new BufferedReader(new InputStreamReader(System.in));
        br.readLine();
        String[] arr = br.readLine().split("" "");
        System.out.println(socks(arr));
    }

    public static int socks (String [] n){
        Arrays.sort(n);
        int result=0;

        for (int i = 0; i < n.length; i++) {
            if(i + 1 < n.length)
            if (n[i].equals(n[i++])){
                result++;
                i++;
            }
        }
        return result;
    }

}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class Main{
    public static void main(String[] args) throws IOException {
        BufferedReader br= new BufferedReader(new InputStreamReader(System.in));
        br.readLine();
        String[] arr = br.readLine().split("" "");
        System.out.println(socks(arr));
    }

    public static int socks (String [] n){
        Arrays.sort(n);
        int result=0;
        for (int i = 0; i < n.length; i++) {
            if(i + 1 < n.length)
            if (n[i].equals(n[i+1])){
                result++;
                i++;
            }
        }
        return result;
    }

}
",WA
347TAIKI ,abc295/C,Java,"import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        ArrayList<Integer> set = new ArrayList<Integer>(a);
        int b = 0;

        for (int i = 0; i < a; i++) {
            int c = sc.nextInt();
            if (!set.contains(c)) {
                set.add(c);
            } else {
                set.remove(c);
                b++;
            }
        }
        System.out.println(b);
    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        Set<Integer> set = new HashSet<Integer>(a);
        int b = 0;

        for (int i = 0; i < a; i++) {
            int c = sc.nextInt();
            if (!set.contains(c)) {
                set.add(c);
            } else {
                set.remove(c);
                b++;
            }
        }
        System.out.println(b);
    }
}
",RE
347TAIKI ,abc295/C,Java,"import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();

        ArrayList<Integer> set = new ArrayList<Integer>(a);
        int b = 0;

        for (int i = 0; i < a; i++) {
            int c = sc.nextInt();
            if (!set.contains(c)) {
                set.add(c);
            } else {
                set.remove(c);
                b++;
            }
        }
        System.out.println(b);
    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        Set<Integer> set = new HashSet<Integer>(a);
        int b = 0;

        for (int i = 0; i < a; i++) {
            int c = sc.nextInt();
            if (!set.contains(c)) {
                set.add(c);
            } else {
                set.remove(c);
                b++;
            }
        }
        System.out.println(b);
    }
}
",RE
Masa19212 ,abc295/C,Java,"import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class Main {
    public static void main(String[] args) throws IOException {
    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    	String nstg = br.readLine();
    	int n = Integer.parseInt(nstg);	
    	String[] wake = br.readLine().split("" "");
    	int[] arr = new int[n];
    	for(int i = 0; i < n; i++) {
    		arr[i] = Integer.parseInt(wake[i]);	
    	}
    	Arrays.sort(arr);
    	int pea = 0;
    	for(int i = 0; i < n;) {
    		int cnt = 1;
    		while((i + cnt) < n && arr[i] == arr[i + cnt]) {
    			cnt++;
    		}
    		pea = pea + cnt / 2;
    		i += cnt;
    	}
    	System.out.println(pea);
    }
}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class Main {
    public static void main(String[] args) throws IOException {
    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    	String nstg = br.readLine();
    	int n = Integer.parseInt(nstg);	
    	String[] wake = br.readLine().split("" "");
    	int[] arr = new int[n];
    	for(int i = 0; i < n; i++) {
    		arr[i] = Integer.parseInt(wake[i]);	
    	}
    	Arrays.sort(arr);
    	int pea = 0;
    	for(int i = 0; i < n;) {
    		int cnt = 1;
    		while((i + cnt) < n && arr[i] == arr[i + cnt]) {
    			cnt++;
    		}
    		pea = pea + cnt / 2;
    		i += cnt;
    	}
    	System.out.println(pea);
    }
}
",CE
Masa19212 ,abc295/C,Java,"import java.io.IOException;
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) throws IOException {
    	Scanner sc = new Scanner(System.in);
    	int n = sc.nextInt();
    	int[] arr = new int[n];
    	for(int i = 0; i < n; i++) {
    		arr[i] = sc.nextInt();
    	}
    	Arrays.sort(arr);
    	int pea = 0;
    	for(int i = 0; i < n; i++) {
    		int cnt = 1;
    		while((i + cnt) < n && arr[i] == arr[i + cnt]) {
    			cnt++;
    		}
    		pea = pea + cnt / 2;
    		i += cnt;
    	}
    	System.out.println(pea);
    }
}
","import java.io.IOException;
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) throws IOException {
    	Scanner sc = new Scanner(System.in);
    	int n = sc.nextInt();
    	int[] arr = new int[n];
    	for(int i = 0; i < n; i++) {
    		arr[i] = sc.nextInt();
    	}
    	Arrays.sort(arr);
    	int pea = 0;
    	for(int i = 0; i < n;) {
    		int cnt = 1;
    		while((i + cnt) < n && arr[i] == arr[i + cnt]) {
    			cnt++;
    		}
    		pea = pea + cnt / 2;
    		i += cnt;
    	}
    	System.out.println(pea);
    }
}
",WA
miisuke ,abc295/C,Java,"import java.util.Arrays;
import java.util.Scanner;

class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int[] a = new int[n];
		for (int i = 0; i < n; i++) {
			a[i] = sc.nextInt();
		}
		Arrays.sort(a);
		int ans = 0;
		int now = a[0];
		int p = 1;
		for (int i = 1; i < n; i++) {
			if (a[i] != now || i==n-1) {
				ans += p / 2;
				p = 1;
			} else {
				p++;
			}
			now = a[i];
		}
		System.out.println(ans);
	}

}
","import java.util.Arrays;
import java.util.Scanner;

class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int[] a = new int[n];
		for (int i = 0; i < n; i++) {
			a[i] = sc.nextInt();
		}
		Arrays.sort(a);
		int ans = 0;
		int now = a[0];
		int p = 1;
		for (int i = 1; i < n; i++) {
			if(i==n-1 && a[i]==now)p++;
			if (a[i] != now || i==n-1) {
				ans += p / 2;
				p = 1;
			} else {
				p++;
			}
			now = a[i];
		}
		System.out.println(ans);
	}

}
",WA
tommypang ,abc295/C,Java,"import java.io.*;
import java.util.*;

public class D {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static StringTokenizer st;
    public static void main(String[] args) throws IOException {
        int n = readInt();
        Map<Integer, Integer> cnt = new HashMap<>();
        for (int i = 0; i < n; i++) {
            int v = readInt();
            cnt.put(v, cnt.getOrDefault(v, 0) + 1);
        }
        int ans = 0;
        for (int k : cnt.keySet()) {
            ans += cnt.get(k) / 2;
        }
        System.out.println(ans);
    }


    static String next() throws IOException {
        while (st == null || !st.hasMoreTokens())
            st = new StringTokenizer(br.readLine().trim());
        return st.nextToken();
    }
    static long readLong() throws IOException {
        return Long.parseLong(next());
    }
    static int readInt() throws IOException {
        return Integer.parseInt(next());
    }
    static double readDouble() throws IOException {
        return Double.parseDouble(next());
    }
    static char readCharacter() throws IOException {
        return next().charAt(0);
    }
    static String readLine() throws IOException {
        return br.readLine().trim();
    }
    static int readLongLineInt() throws IOException{
        int x = 0, c;
        while((c = br.read()) != ' ' && c != '\n')
            x = x * 10 + (c - '0');
        return x;
    }
}
","import java.io.*;
import java.util.*;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static StringTokenizer st;
    public static void main(String[] args) throws IOException {
        int n = readInt();
        Map<Integer, Integer> cnt = new HashMap<>();
        for (int i = 0; i < n; i++) {
            int v = readInt();
            cnt.put(v, cnt.getOrDefault(v, 0) + 1);
        }
        int ans = 0;
        for (int k : cnt.keySet()) {
            ans += cnt.get(k) / 2;
        }
        System.out.println(ans);
    }


    static String next() throws IOException {
        while (st == null || !st.hasMoreTokens())
            st = new StringTokenizer(br.readLine().trim());
        return st.nextToken();
    }
    static long readLong() throws IOException {
        return Long.parseLong(next());
    }
    static int readInt() throws IOException {
        return Integer.parseInt(next());
    }
    static double readDouble() throws IOException {
        return Double.parseDouble(next());
    }
    static char readCharacter() throws IOException {
        return next().charAt(0);
    }
    static String readLine() throws IOException {
        return br.readLine().trim();
    }
    static int readLongLineInt() throws IOException{
        int x = 0, c;
        while((c = br.read()) != ' ' && c != '\n')
            x = x * 10 + (c - '0');
        return x;
    }
}
",CE
awasinka ,abc295/C,Java,"import java.util.ArrayList;
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		int n = Integer.parseInt(sc.next());
		ArrayList<Integer> list = new ArrayList<>();
		
		int num;
		int count = 0;
		while(n-- > 0) {
			num = Integer.parseInt(sc.next());
			if(list.contains(num)) {
				list.remove(list.indexOf(num));
				count++;
			} else {
				list.add(num);
			}
		}
		System.out.println(count);
	}
}
","import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		int n = Integer.parseInt(sc.next());
		Set<Integer> list = new HashSet<>();
		
		int num;
		int count = 0;
		while(n-- > 0) {
			num = Integer.parseInt(sc.next());
			if(list.contains(num)) {
				list.remove(num);
				count++;
			} else {
				list.add(num);
			}
		}
		System.out.println(count);
	}
}
",TLE
sankarkalla04 ,abc295/C,Java,"import java.util.*;

public class PairSocks {
	public static void main(String[] args) {
		int count = 0;
		Scanner sc = new Scanner(System.in);
		HashSet<Integer> hSet = new HashSet<>();
		int N = sc.nextInt();
		while(N-- > 0) {
			int inches = sc.nextInt();
			if(hSet.contains(inches)) {
				++count;
				hSet.remove(inches);
			} else {
				hSet.add(inches);
			}
		}
		System.out.println(count);
	}
}
","import java.util.*;

public class Main {
	public static void main(String[] args) {
		int count = 0;
		Scanner sc = new Scanner(System.in);
		HashSet<Integer> hSet = new HashSet<>();
		int N = sc.nextInt();
		while(N-- > 0) {
			int inches = sc.nextInt();
			if(hSet.contains(inches)) {
				++count;
				hSet.remove(inches);
			} else {
				hSet.add(inches);
			}
		}
		System.out.println(count);
	}
}
",CE
wangzilong ,abc295/C,Java,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n=in.nextInt();
        int []a=new int[n];
        for (int i = 0; i < n; i++) {
            a[i]=in.nextInt();
        }
        int sum=0;
        for (int i = 0; i < n; i++) {
            for (int j = i+1; j < n; j++) {
                if(a[i]==a[j] && a[i]!=0 && a[j]!=0){
                    a[i]=0;
                    a[j]=0;
                    sum++;
                    break;
                }
            }
        }
        System.out.println(sum);
    }
}
","import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n=in.nextInt();
        int []a=new int[n];
        for (int i = 0; i < n; i++) {
            a[i]=in.nextInt();
        }
        int sum=0;
        Arrays.sort(a);
        for (int i = 0; i < n; i++) {
            for (int j = i+1; j < n; j++) {
                if(a[i]!=a[j]){
                    break;
                }
                if(a[i]==a[j] && a[i]!=0 && a[j]!=0){
                    a[i]=0;
                    a[j]=0;
                    sum++;
                    break;
                }
            }
        }
        System.out.println(sum);
    }
}
",TLE
yru12 ,abc293/B,Java,"import java.util.Scanner;

public class Main2 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] array = new int[n];
        for (int i = 0; i < n; i++) {
            array[i] = scanner.nextInt() - 1;
        }
        int[] ansArray = new int[n];
        for (int i = 0; i < n; i++) {
            if (ansArray[i] == 0) {
                ansArray[array[i]]++;
            }
        }
        int count = 0;
        for (int i = 0; i < n; i++) {
            if (ansArray[i] == 0) {
                count++;
            }
        }
        System.out.println(count);
        boolean isExt = false;
        for (int i = 0; i < n; i++) {
            if (ansArray[i] == 0) {
                if (isExt) {
                    System.out.print("" "");
                }
                System.out.print(i + 1);
                isExt = true;
            }
        }
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] array = new int[n];
        for (int i = 0; i < n; i++) {
            array[i] = scanner.nextInt() - 1;
        }
        int[] ansArray = new int[n];
        for (int i = 0; i < n; i++) {
            if (ansArray[i] == 0) {
                ansArray[array[i]]++;
            }
        }
        int count = 0;
        for (int i = 0; i < n; i++) {
            if (ansArray[i] == 0) {
                count++;
            }
        }
        System.out.println(count);
        boolean isExt = false;
        for (int i = 0; i < n; i++) {
            if (ansArray[i] == 0) {
                if (isExt) {
                    System.out.print("" "");
                }
                System.out.print(i + 1);
                isExt = true;
            }
        }
    }
}
",CE
VidishaSinghal ,abc293/B,Java,"import java.util.ArrayList;
import java.util.Scanner;

public class Main
{
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int vlen = input.nextInt();
        Boolean[] visited = new Boolean[vlen];
        ArrayList<Integer> res = new ArrayList<>();
        int[] ele = new int[vlen];
        for(int i =0;i<vlen;i++){
            ele[i] = input.nextInt();
        }

        for(int i =0;i<vlen;i++){
            if(visited[i] != true){
                visited[ele[i]-1] = true;
            }
        }

        for (int i = 0; i < vlen; i++) {
            if(visited[i]!=true)
                res.add(i+1);
        }
        System.out.println(res.size());
        for (int i =0;i<res.size();i++){
            System.out.print(res.get(i)+"" "");
        }
    }
}
","import java.util.ArrayList;
import java.util.Scanner;

public class Main
{
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int vlen = input.nextInt();
        Boolean[] visited = new Boolean[vlen];
        ArrayList<Integer> res = new ArrayList<>();
        int[] ele = new int[vlen];
        for(int i =0;i<vlen;i++){
            ele[i] = input.nextInt();
            visited[i] = false;
        }

        for(int i =0;i<vlen;i++){
            if(visited[i] != true){
                visited[ele[i]-1] = true;
            }
        }

        for (int i = 0; i < vlen; i++) {
            if(visited[i]!=true)
                res.add(i+1);
        }
        System.out.println(res.size());
        for (int i =0;i<res.size();i++){
            System.out.print(res.get(i)+"" "");
        }
    }
}
",RE
oksin ,abc293/B,Java,"import java.util.Arrays;
import java.util.Scanner;


public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        sc.nextLine();
        String[] d = sc.nextLine().split("" "");
        String[] f = new String[n];
        for (int i = 0; i < f.length; i++) {
            f[i] = Integer.toString(i + 1);
        }

        for (int i = 0; i < d.length; i++) {
            int index = Integer.parseInt(d[i]) - 1;
            if (!""Y"".equals(f[i])) {
                f[index] = ""Y"";
            }
        }

        int[] list = Arrays.stream(f).filter(s -> !""Y"".equals(s))
                .mapToInt(Integer::parseInt)
                .sorted().toArray();
        String t = String.join("" "", Arrays.toString(list))
                .replaceAll(""\\["", """")
                .replaceAll(""\\]"", """")
                .replaceAll("","", """");
        System.out.println(t);
    }
}
","import java.util.Arrays;
import java.util.Scanner;


public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        sc.nextLine();
        String[] d = sc.nextLine().split("" "");
        String[] f = new String[n];
        for (int i = 0; i < f.length; i++) {
            f[i] = Integer.toString(i + 1);
        }

        for (int i = 0; i < d.length; i++) {
            int index = Integer.parseInt(d[i]) - 1;
            if (!""Y"".equals(f[i])) {
                f[index] = ""Y"";
            }
        }

        int[] list = Arrays.stream(f).filter(s -> !""Y"".equals(s))
                .mapToInt(Integer::parseInt)
                .sorted().toArray();

        String t = String.join("" "", Arrays.toString(list))
                .replaceAll(""\\["", """")
                .replaceAll(""\\]"", """")
                .replaceAll("","", """");

        System.out.println(list.length);
        System.out.println(t);
    }
}
",WA
reticent98 ,abc293/B,Java,"import java.util.Scanner;
class Main {
  public static void main(String[] args) {
    Scanner scan = new Scanner(System.in);
    int N = scan.nextInt();
    int A;
    int K = N;
    boolean[] called = new boolean[N];
    for(int i=0; i<N; i++){
      A = scan.nextInt() - 1;
      if(!called[i]){
        called[A] = true;
        K--;
      }
    }
    System.out.println(K);
    for(int i=0; i<N; i++){
      int j = 0;
      if(!called[i]){
        System.out.print(i+1);
        j++;
        if(j<K)
          System.out.print("" "");
      }
    }
  }
}
","import java.util.Scanner;
class Main {
  public static void main(String[] args) {
    Scanner scan = new Scanner(System.in);
    int N = scan.nextInt();
    int A;
    int K = N;
    boolean[] called = new boolean[N];
    for(int i=0; i<N; i++){
      A = scan.nextInt() - 1;
      if(!called[i] && !called[A]){
        called[A] = true;
        K--;
      }
    }
    System.out.println(K);
    for(int i=0; i<N; i++){
      int j = 0;
      if(!called[i]){
        System.out.print(i+1);
        j++;
        if(j<K)
          System.out.print("" "");
      }
    }
  }
}
",WA
BurnEtz ,abc293/B,Java,"import java.util.Arrays;
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
 
		int n = sc.nextInt();
		int a[] = new int[n];
		boolean called[] = new boolean[n];
		int count = n;
		
		for(int i = 0; i < n; i++) {
			a[i] = sc.nextInt() - 1;
			if(!called[i]) {
				called[a[i]] = true;
				count--;
			}
		}
		
		System.out.println(count);
		for(int i = 0; i < n; i++) {
			if(!called[i]) {
				System.out.print((i + 1) + "" "");
			}
		}
	}		
}
","import java.util.Arrays;
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
 
		int n = sc.nextInt();
		int a[] = new int[n];
		boolean called[] = new boolean[n];
		int count = n;
		
		for(int i = 0; i < n; i++) {
			a[i] = sc.nextInt() - 1;
			if(!called[i] && !called[a[i]]) {
				called[a[i]] = true;
				count--;
			}
		}
		
		System.out.println(count);
		for(int i = 0; i < n; i++) {
			if(!called[i]) {
				System.out.print((i + 1) + "" "");
			}
		}
	}		
}
",WA
CaitSithT ,abc293/B,Java,"import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		int S = sc.nextInt();
		int[] array = new int[S + 1];
		int K = 0;
		for (int i = 1; i <= S; i++) {
			int idx = sc.nextInt();
			if (array[i] == 0 && array[idx] == 0) {
				array[idx] = 1;
				K++;
			}
		}
		sc.close();

		System.out.println(K);
		for (int i = 1; i <= S; i++) {
			if (array[i] == 0) System.out.print( i + "" "");
		}
	}

}
","import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		int S = sc.nextInt();
		int[] array = new int[S + 1];
		int K = 0;
		for (int i = 1; i <= S; i++) {
			int idx = sc.nextInt();
			if (array[i] == 0 && array[idx] == 0) {
				array[idx] = 1;
				K++;
			}
		}
		sc.close();

		System.out.println(S - K);
		for (int i = 1; i <= S; i++) {
			if (array[i] == 0) System.out.print( i + "" "");
		}
	}

}
",WA
Krdar ,abc293/B,Java,"import java.util.*;

public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int[] A = new int[N];
        for (int i = 0 ; i < A.length ; i++){
            A[i] = sc.nextInt();
        }
        int K = 0;
        int[] X = new int[N];

        Set<Integer> set = new HashSet<>();
        ArrayList<Integer> arr = new ArrayList<>();
        int count = 0;

        for (int i = 0 ; i < A.length ; i++){
            if (set.contains(i+1)){
                continue;
            }else{
                set.add(A[i]);
                count++;
            }
        }
        for (int i = 0 ; i < A.length ; i++){
            if (set.contains(i+1)){
                continue;
            }else{
                arr.add(i+1);
            }
        }

        System.out.println(A.length - count);

        for (int i = 0 ; i < arr.size() ; i++){
            System.out.print(arr.get(i) + "" "");
        }

    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int[] A = new int[N];
        for (int i = 0 ; i < A.length ; i++){
            A[i] = sc.nextInt();
        }
        int K = 0;
        int[] X = new int[N];

        Set<Integer> set = new HashSet<>();
        ArrayList<Integer> arr = new ArrayList<>();
        int count = 0;

        for (int i = 0 ; i < A.length ; i++){
            if (set.contains(i+1)){
                continue;
            }else{
                set.add(A[i]);
            }
        }
        for (int i = 0 ; i < A.length ; i++){
            if (set.contains(i+1)){
                continue;
            }else{
                arr.add(i+1);
                count++;
            }
        }

        System.out.println(count);

        for (int i = 0 ; i < arr.size() ; i++){
            System.out.print(arr.get(i) + "" "");
        }

    }
}
",WA
takemi48 ,abc293/B,Java,"import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
public class Main {
	public static void main(String[] args){

		Scanner sc = new Scanner(System.in);
		
		int N = sc.nextInt();

		List<Boolean> hitoList = new ArrayList<Boolean>();
		
		for (int i=0; i<N; i++) {
			hitoList.add(false);
		}
		
		
		
		for(int i=0; i< N-1; i++ ) {
			int A = sc.nextInt();
			
			
			
			if (!hitoList.get(i)) {
				
				hitoList.set(A-1, true);
			}
		}
		
		
		long unCalled = hitoList.stream().filter(e -> !e).count();

		System.out.println(unCalled);
		boolean isFirst = true;
		for (int i=0; i<hitoList.size(); i++) {
			
			if (!hitoList.get(i)) {

				
				if (!isFirst) {
					System.out.print("" "");
				}
				System.out.print(i+1);
				isFirst = false;
			}
		}
	}
}
","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
public class Main {
	public static void main(String[] args){

		Scanner sc = new Scanner(System.in);
		
		int N = sc.nextInt();

		List<Boolean> hitoList = new ArrayList<Boolean>();
		
		for (int i=0; i<N; i++) {
			hitoList.add(false);
		}
		
		
		
		for(int i=0; i< N; i++ ) {
			int A = sc.nextInt();
			
			
			
			if (!hitoList.get(i)) {
				
				hitoList.set(A-1, true);
			}
		}
		
		
		long unCalled = hitoList.stream().filter(e -> !e).count();

		System.out.println(unCalled);
		boolean isFirst = true;
		for (int i=0; i<hitoList.size(); i++) {
			
			if (!hitoList.get(i)) {

				
				if (!isFirst) {
					System.out.print("" "");
				}
				System.out.print(i+1);
				isFirst = false;
			}
		}
	}
}
",WA
takemi48 ,abc293/B,Java,"import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
public class Main {
	public static void main(String[] args){

		Scanner sc = new Scanner(System.in);
		
		int N = sc.nextInt();

		List<Boolean> hitoList = new ArrayList<Boolean>();
		
		for (int i=0; i<N; i++) {
			hitoList.add(false);
		}
		
		
		
		for(int i=1; i<N; i++ ) {
			int A = sc.nextInt();
			
			
			
			if (!hitoList.get(i-1)) {
				
				hitoList.set(A-1, true);
			}
		}
		
		
		long unCalled = hitoList.stream().filter(e -> !e).count();

		System.out.println(unCalled);
		boolean isFirst = true;
		for (int i=0; i<hitoList.size(); i++) {
			
			if (!hitoList.get(i)) {

				
				if (!isFirst) {
					System.out.print("" "");
				}
				System.out.print(i+1);
				isFirst = false;
			}
		}
	}
}
","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
public class Main {
	public static void main(String[] args){

		Scanner sc = new Scanner(System.in);
		
		int N = sc.nextInt();

		List<Boolean> hitoList = new ArrayList<Boolean>();
		
		for (int i=0; i<N; i++) {
			hitoList.add(false);
		}
		
		
		
		for(int i=0; i< N; i++ ) {
			int A = sc.nextInt();
			
			
			
			if (!hitoList.get(i)) {
				
				hitoList.set(A-1, true);
			}
		}
		
		
		long unCalled = hitoList.stream().filter(e -> !e).count();

		System.out.println(unCalled);
		boolean isFirst = true;
		for (int i=0; i<hitoList.size(); i++) {
			
			if (!hitoList.get(i)) {

				
				if (!isFirst) {
					System.out.print("" "");
				}
				System.out.print(i+1);
				isFirst = false;
			}
		}
	}
}
",WA
ruminos ,abc293/B,Java,"import java.util.*;
public class Main{
  public static void main(String[] args){
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[] A= new int[N];
    Arrays.fill(A,0);
    int a;

    for(int i=0;i<N;i++){
      a= sc.nextInt();
      if(A[i]==0){
        A[a-1] = 1;
      }
    }
    
    ArrayList<Integer> hoge = new ArrayList<>();
    for(int i=0;i<N;i++){
      if(A[i]==0){
        hoge.add(i+1);
      }
    }
    System.out.println(hoge.size());
    for(int i=0;i<hoge.size();i++){
      System.out.print(hoge.get(i));
    }
  }
}
","import java.util.*;
public class Main{
  public static void main(String[] args){
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[] A= new int[N];
    Arrays.fill(A,0);
    int a;

    for(int i=0;i<N;i++){
      a= sc.nextInt();
      if(A[i]==0){
        A[a-1] = 1;
      }
    }
    
    ArrayList<Integer> hoge = new ArrayList<>();
    for(int i=0;i<N;i++){
      if(A[i]==0){
        hoge.add(i+1);
      }
    }
    System.out.println(hoge.size());
    for(int i=0;i<hoge.size();i++){
      System.out.print(hoge.get(i)+"" "");
    }
  }
}
",WA
ntj ,arc159/B,Java,"import java.util.Scanner;
import java.util.ArrayList;

public class Main{
  public static void main(String[] args){
    Scanner sc_i = new Scanner(System.in);
    long a = Long.parseLong(sc_i.next());
    long b = Long.parseLong(sc_i.next());
    if(a < b){long tmp = a; a = b; b = tmp;};
    long val = a - b;
    if(val == 0){
      System.out.println(1);
      return;
    };
    var list = new ArrayList<Long>();
    boolean[] check = new boolean[(int) (3+Math.sqrt(val))];
    for(int i = 2; i <= Math.sqrt(val)+1; i++){
      if(! check[i]){
        while(val % i == 0){list.add((long)i); val /= i;};
        for(int x = i; x < Math.min(val, check.length); x += i){check[x] = true;};
      };
    };
    if(val != 1){list.add(val);};
    int counter = 0;
    while(b >= 1){
      long nex = b;
      for(int i = 0; i < list.size(); i++){
        long x = list.get(i);
        if(b % x == 0){
          b /= x;
          list.remove((int)i);
          i--;
          nex = -1;
        }else{
          nex = Math.min(nex, b % x);
        };
      };
      if(nex == -1){nex = 1;};
      b -= nex; counter += nex;
    };
    System.out.println(counter);
  }
}


","import java.util.Scanner;
import java.util.ArrayList;

public class Main{
  public static void main(String[] args){
    Scanner sc_i = new Scanner(System.in);
    long a = Long.parseLong(sc_i.next());
    long b = Long.parseLong(sc_i.next());
    if(a < b){long tmp = a; a = b; b = tmp;};
    long val = a - b;
    if(val == 0){
      System.out.println(1);
      return;
    };
    var list = new ArrayList<Long>();
    boolean[] check = new boolean[(int) (3+Math.sqrt(val))];
    for(int i = 2; i <= Math.sqrt(val)+1; i++){
      if(! check[i]){
        while(val % i == 0){list.add((long)i); val /= i;};
        for(int x = i; x < Math.min(val, check.length); x += i){check[x] = true;};
      };
    };
    if(val != 1){list.add(val);};
    long counter = 0;
    while(b >= 1){
      long nex = b;
      for(int i = 0; i < list.size(); i++){
        long x = list.get(i);
        if(b % x == 0){
          b /= x;
          list.remove((int)i);
          i--;
          nex = -1;
        }else{
          nex = Math.min(nex, b % x);
        };
      };
      if(nex == -1){nex = 1;};
      b -= nex; counter += nex;
    };
    System.out.println(counter);
  }
}


",WA
dajeff ,arc159/B,Java,"import java.io.*;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;

class Main {
    static final BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static final PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));

    static long gcd(long a, long b) {
        return b == 0 ? a : gcd(b, a % b);
    }

    static List<Long> factorize(long n) {
        List<Long> res = new ArrayList<>();
        for (long i = 1; i * i <= n; ++i) {
            if (n % i == 0) {
                res.add(i);
                if (i * i != n) {
                    res.add(n / i);
                }
            }
        }
        return res;
    }

    static void solve() throws IOException {
        

        StringTokenizer input = new StringTokenizer(br.readLine());
        long a = Long.parseLong(input.nextToken());
        long b = Long.parseLong(input.nextToken());

        if (a > b) {
            long temp = a;
            a = b;
            b = temp;
        }

        long g = gcd(a, b);

        final List<Long> aMinusBFactors = factorize(b - a);

        int res = 0;
        while (a != 0 && b != 0) {

            long maxNextA = 0;
            long minStep = a;
            long gPrime = g;
            for (long factor : aMinusBFactors) {
                if (factor > g && factor % g == 0) {
                    long step = a % factor;
                    if ((b - step) % factor == 0) {
                        if (a - step > maxNextA) {
                            maxNextA = a - step;
                            minStep = step;
                            gPrime = factor;
                        }
                    }
                }
            }

            res += (a - maxNextA) / g;
            a = maxNextA;
            b = b - minStep;
            g = gPrime;
        }

        pw.println(res);
    }

    public static void main(String[] args) throws IOException {
        solve();

        br.close();
        pw.close();
    }
}
","import java.io.*;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;

class Main {
    static final BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static final PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));

    static long gcd(long a, long b) {
        return b == 0 ? a : gcd(b, a % b);
    }

    static List<Long> factorize(long n) {
        List<Long> res = new ArrayList<>();
        for (long i = 1; i * i <= n; ++i) {
            if (n % i == 0) {
                res.add(i);
                if (i * i != n) {
                    res.add(n / i);
                }
            }
        }
        return res;
    }

    static void solve() throws IOException {
        

        StringTokenizer input = new StringTokenizer(br.readLine());
        long a = Long.parseLong(input.nextToken());
        long b = Long.parseLong(input.nextToken());

        if (a > b) {
            long temp = a;
            a = b;
            b = temp;
        }

        long g = gcd(a, b);

        final List<Long> aMinusBFactors = factorize(b - a);

        long res = 0;
        while (a != 0 && b != 0) {

            long maxNextA = 0;
            long minStep = a;
            long gPrime = g;
            for (long factor : aMinusBFactors) {
                if (factor > g && factor % g == 0) {
                    long step = a % factor;
                    if ((b - step) % factor == 0) {
                        if (a - step > maxNextA) {
                            maxNextA = a - step;
                            minStep = step;
                            gPrime = factor;
                        }
                    }
                }
            }

            res += (a - maxNextA) / g;
            a = maxNextA;
            b = b - minStep;
            g = gPrime;
        }

        pw.println(res);
    }

    public static void main(String[] args) throws IOException {
        solve();

        br.close();
        pw.close();
    }
}
",WA
CaitSithT ,arc159/B,Java,"import java.util.Scanner;
import java.util.TreeSet;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		long A = sc.nextLong(), B = sc.nextLong();
		sc.close();
		
		TreeSet<Long> div  =getDivisors(Math.abs(A - B));
		
		long low = Math.min(A, B);
		long g = gcd(A, B);
		long ans = 0;
		while (low >= 1) {
			long v2 = 0L;
			long g2 = 0L;
			for (var d : div) {
				var v3 = low / d * d;
				if (d > g && d % g == 0 && v2 <= v3) {
					v2 = v3;
					g2 = d;
				}
			}
			ans += (low - v2) / g;
			low = v2;
			g = g2;
			
			ans++;
		}

		System.out.println(ans);
	}

	public static final long gcd(long a, long b) {

		if (b == 0) return a;

        return gcd(b, a % b);

	}	

	public static TreeSet<Long> getDivisors(long n) {
		TreeSet set = new TreeSet<Long>();
		for (long i = 1L; i < Math.sqrt(n) + 1; i++) {
			if (n % i == 0) {
				set.add(i);
				set.add(n / i);
			}
		}
		return set;
	}
}
","import java.util.Scanner;
import java.util.TreeSet;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		long A = sc.nextLong(), B = sc.nextLong();
		sc.close();
		
		TreeSet<Long> div  =getDivisors(Math.abs(A - B));
		
		long low = Math.min(A, B);
		long g = gcd(A, B);
		long ans = 0;
		while (low >= 1) {
			long v2 = 0L;
			long g2 = 0L;
			for (var d : div) {
				var v3 = low / d * d;
				if (d > g && d % g == 0 && v2 <= v3) {
					v2 = v3;
					g2 = d;
				}
			}
			ans += (low - v2) / g;
			low = v2;
			g = g2;
		}

		System.out.println(ans);
	}

	public static final long gcd(long a, long b) {

		if (b == 0) return a;

        return gcd(b, a % b);

	}	

	public static TreeSet<Long> getDivisors(long n) {
		TreeSet set = new TreeSet<Long>();
		for (long i = 1L; i < Math.sqrt(n) + 1; i++) {
			if (n % i == 0) {
				set.add(i);
				set.add(n / i);
			}
		}
		return set;
	}
}
",WA
youtsuha ,arc159/B,Java,"public class Main {

    static FastScanner cin;
    static PrintWriter cout;

    private static void init()throws IOException {
        cin = new FastScanner(System.in);
        cout = new PrintWriter(System.out);
    }

    private static void close(){
        cout.close();
    }
    private static void sol()throws IOException {

    }

    static long gcd(long a, long b){
        if(b == 0){
            return a;
        }
        return gcd(b,a%b);
    }
    public static void main(String[] args) throws IOException {
        init();
        sol();
        long a = cin.nextLong(), b = cin.nextLong();
        long ans = 0, add = 0;
        while(a >= 1 && b >= 1) {
            long d = gcd(a,b);
            long dif = Math.abs(a-b);
            add = Math.min(a,b)/d;
            for(long i = 1; i*i <= dif; i ++ ) {
                if(dif%i == 0){
                    if(i > 1 && i % d == 0 && i != d){
                        add = Math.min(add,a/d%(i/d));
                    }
                    if(dif/i%d == 0 && dif/i != d){
                        add = Math.min(add,a/d%(dif/i/d));
                    }
                }
            }
            a -= add*d; b-= add*d;

            ans += add;
        }
        cout.println(ans);
        close();
    }
}
class FastScanner {
    BufferedReader br;
    StringTokenizer st = new StringTokenizer("""");

    public FastScanner(InputStream s) {
        br = new BufferedReader(new InputStreamReader(s));
    }

    public FastScanner(String s) throws FileNotFoundException {
        br = new BufferedReader(new FileReader(new File(s)));
    }

    public String next() throws IOException {
        while (!st.hasMoreTokens()){
            try {
                st = new StringTokenizer(br.readLine());
            } catch (IOException e) { e.printStackTrace(); }
        }
        return st.nextToken();
    }

    public int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    public long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    public double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }
}
","
import java.util.*;
import java.io.*;
public class Main {

    static FastScanner cin;
    static PrintWriter cout;

    private static void init()throws IOException {
        cin = new FastScanner(System.in);
        cout = new PrintWriter(System.out);
    }

    private static void close(){
        cout.close();
    }
    private static void sol()throws IOException {

    }

    static long gcd(long a, long b){
        if(b == 0){
            return a;
        }
        return gcd(b,a%b);
    }
    public static void main(String[] args) throws IOException {
        init();
        sol();
        long a = cin.nextLong(), b = cin.nextLong();
        long ans = 0, add = 0;
        while(a >= 1 && b >= 1) {
            long d = gcd(a,b);
            long dif = Math.abs(a-b);
            add = Math.min(a,b)/d;
            for(long i = 1; i*i <= dif; i ++ ) {
                if(dif%i == 0){
                    if(i > 1 && i % d == 0 && i != d){
                        add = Math.min(add,a/d%(i/d));
                    }
                    if(dif/i%d == 0 && dif/i != d){
                        add = Math.min(add,a/d%(dif/i/d));
                    }
                }
            }
            a -= add*d; b-= add*d;

            ans += add;
        }
        cout.println(ans);
        close();
    }
}
class FastScanner {
    BufferedReader br;
    StringTokenizer st = new StringTokenizer("""");

    public FastScanner(InputStream s) {
        br = new BufferedReader(new InputStreamReader(s));
    }

    public FastScanner(String s) throws FileNotFoundException {
        br = new BufferedReader(new FileReader(new File(s)));
    }

    public String next() throws IOException {
        while (!st.hasMoreTokens()){
            try {
                st = new StringTokenizer(br.readLine());
            } catch (IOException e) { e.printStackTrace(); }
        }
        return st.nextToken();
    }

    public int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    public long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    public double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }
}
",CE
kyonkyo ,abc295/A,Java,"import java.util.Scanner;

public class a.java {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);

    int N = Integer.parseInt(scanner.next());
    int flag = 0;

    for (int i = 0; i < N; i++) {
      switch (scanner.next()) {
        case ""and"":
          flag = 1;
          break;

        case ""not"":
          flag = 1;
          break;

        case ""that"":
          flag = 1;
          break;

        case ""the"":
          flag = 1;
          break;

        case ""you"":
          flag = 1;
          break;

        default:
          break;
      }
    }

    if (flag == 1) {
      System.out.println(""Yes"");
    } else {
      System.out.println(""No"");
    }
    scanner.close();
  }
}
","import java.util.Scanner;

public class Main {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);

    int N = Integer.parseInt(scanner.next());
    int flag = 0;

    for (int i = 0; i < N; i++) {
      switch (scanner.next()) {
        case ""and"":
          flag = 1;
          break;

        case ""not"":
          flag = 1;
          break;

        case ""that"":
          flag = 1;
          break;

        case ""the"":
          flag = 1;
          break;

        case ""you"":
          flag = 1;
          break;

        default:
          break;
      }
    }

    if (flag == 1) {
      System.out.println(""Yes"");
    } else {
      System.out.println(""No"");
    }
    scanner.close();
  }
}
",CE
kyonkyo ,abc295/A,Java,"import java.util.Scanner;

public class a {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);

    int N = Integer.parseInt(scanner.next());
    int flag = 0;

    for (int i = 0; i < N; i++) {
      switch (scanner.next()) {
        case ""and"":
          flag = 1;
          break;

        case ""not"":
          flag = 1;
          break;

        case ""that"":
          flag = 1;
          break;

        case ""the"":
          flag = 1;
          break;

        case ""you"":
          flag = 1;
          break;

        default:
          break;
      }
    }

    if (flag == 1) {
      System.out.println(""Yes"");
    } else {
      System.out.println(""No"");
    }
    scanner.close();
  }
}
","import java.util.Scanner;

public class Main {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);

    int N = Integer.parseInt(scanner.next());
    int flag = 0;

    for (int i = 0; i < N; i++) {
      switch (scanner.next()) {
        case ""and"":
          flag = 1;
          break;

        case ""not"":
          flag = 1;
          break;

        case ""that"":
          flag = 1;
          break;

        case ""the"":
          flag = 1;
          break;

        case ""you"":
          flag = 1;
          break;

        default:
          break;
      }
    }

    if (flag == 1) {
      System.out.println(""Yes"");
    } else {
      System.out.println(""No"");
    }
    scanner.close();
  }
}
",CE
kyonkyo ,abc295/A,Java,"import java.util.Scanner;

public class{
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);

    int N = Integer.parseInt(scanner.next());
    int flag = 0;

    for (int i = 0; i < N; i++) {
      switch (scanner.next()) {
        case ""and"":
          flag = 1;
          break;

        case ""not"":
          flag = 1;
          break;

        case ""that"":
          flag = 1;
          break;

        case ""the"":
          flag = 1;
          break;

        case ""you"":
          flag = 1;
          break;

        default:
          break;
      }
    }

    if (flag == 1) {
      System.out.println(""Yes"");
    } else {
      System.out.println(""No"");
    }
    scanner.close();
  }
}
","import java.util.Scanner;

public class Main {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);

    int N = Integer.parseInt(scanner.next());
    int flag = 0;

    for (int i = 0; i < N; i++) {
      switch (scanner.next()) {
        case ""and"":
          flag = 1;
          break;

        case ""not"":
          flag = 1;
          break;

        case ""that"":
          flag = 1;
          break;

        case ""the"":
          flag = 1;
          break;

        case ""you"":
          flag = 1;
          break;

        default:
          break;
      }
    }

    if (flag == 1) {
      System.out.println(""Yes"");
    } else {
      System.out.println(""No"");
    }
    scanner.close();
  }
}
",CE
NaoHgt ,abc295/A,Java,"import java.util.Scanner;

public class Main {

    public static void main(String[] args) throws Exception {

        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        sc.nextLine();
        String S = "" "" + sc.nextLine();
        if (S.matches("".* (and|not|that|the|you) .*"")) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
        
        

        
        
        

        
        

        
        
        
        
        
        
        
        
        

        
        
        
        
        
        
        
        
        
        
        

        
        
        

        

        sc.close();
        return;
    }

}
","import java.util.Scanner;

public class Main {

    public static void main(String[] args) throws Exception {

        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        sc.nextLine();
        String S = "" "" + sc.nextLine() + "" "";
        if (S.matches("".* (and|not|that|the|you) .*"")) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
        
        

        
        
        

        
        

        
        
        
        
        
        
        
        
        

        
        
        
        
        
        
        
        
        
        
        

        
        
        

        

        sc.close();
        return;
    }

}
",WA
Shushantbk16 ,abc295/A,Java,"import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
         int t=sc.nextInt();
         int max=0;
         while(t-->0){
             String s=sc.nextInt();
             if(s.equals(""and"")||s.equals(""not"")||s.equals(""that"")||s.equals(""you"")||s.equals(""the"")){
                 max=1;
             }
         }if(max==1){
            System.out.println(""Yes"");
        }else {
            System.out.println(""No"");
        }


    }
}
","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
         int t=sc.nextInt();
         int max=0;
         while(t-->0){
             String s=sc.next();
             if(s.equals(""and"")||s.equals(""not"")||s.equals(""that"")||s.equals(""you"")||s.equals(""the"")){
                 max=1;
             }
         }if(max==1){
            System.out.println(""Yes"");
        }else {
            System.out.println(""No"");
        }


    }
}
",CE
batyaaa ,abc295/A,Java,"import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        boolean is = false;
        int a = sc.nextInt();
        String [] s1 = {""and"",""not"",""that"",""the"",""you""};
        Set <String> l1 = new HashSet<>();
        for (int i = 0; i < a; i++) {
            l1.add(sc.next());
        }
        for (int i = 0; i < 5; i++) {
            if(l1.contains(s1[i]))
            { is = true
                break;
            }
        }
        System.out.println(is ? ""Yes"" : ""No"");
    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        boolean is = false;
        int a = sc.nextInt();
        String [] s1 = {""and"",""not"",""that"",""the"",""you""};
        Set <String> l1 = new HashSet<>();
        for (int i = 0; i < a; i++) {
            l1.add(sc.next());
        }
        for (int i = 0; i < 5; i++) {
            if(l1.contains(s1[i]))
            { is = true;
                break;
            }
        }
        System.out.println(is ? ""Yes"" : ""No"");
    }
}
",CE
batyaaa ,abc295/A,Java,"import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        boolean is = false;
        int a = sc.nextInt();
        String [] s1 = {""and"",""not"",""that"",""the"",""you""};
        Set <String> l1 = new HashSet<>();
        for (int i = 0; i < a; i++) {
            l1.add(sc.next());
        }
        for (int i = 0; i < s1.length; i++) {
            if(l1.contains(s1[i])) is = true;
            break;
        }
        System.out.println(is ? ""Yes"" : ""No"");
    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        boolean is = false;
        int a = sc.nextInt();
        String [] s1 = {""and"",""not"",""that"",""the"",""you""};
        Set <String> l1 = new HashSet<>();
        for (int i = 0; i < a; i++) {
            l1.add(sc.next());
        }
        for (int i = 0; i < 5; i++) {
            if(l1.contains(s1[i]))
            { is = true;
                break;
            }
        }
        System.out.println(is ? ""Yes"" : ""No"");
    }
}
",WA
batyaaa ,abc295/A,Java,"import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        boolean is = false;
        int a = sc.nextInt();
        String [] s1 = {""and"",""not"",""that"",""the"",""you""};
        HashSet <String> l1 = new HashSet<>();
        for (int i = 0; i < a; i++) {
            l1.add(sc.next());
        }
        for (int i = 0; i < s1.length; i++) {
            if(l1.contains(s1[i])) is = true;
            break;
        }
        System.out.println(is ? ""Yes"" : ""No"");
    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        boolean is = false;
        int a = sc.nextInt();
        String [] s1 = {""and"",""not"",""that"",""the"",""you""};
        Set <String> l1 = new HashSet<>();
        for (int i = 0; i < a; i++) {
            l1.add(sc.next());
        }
        for (int i = 0; i < 5; i++) {
            if(l1.contains(s1[i]))
            { is = true;
                break;
            }
        }
        System.out.println(is ? ""Yes"" : ""No"");
    }
}
",WA
alo ,abc295/A,Java,"public class Main {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		String[] englishStrings = {""and"", ""not"", ""that"", ""the"", ""you""};
		String[] inputsWords= new String[N];
		for (int i = 0; i < N; i++) {
			inputsWords[i] = sc.next();
		}
		boolean isEnglish = false;
		for (String word:inputsWords) {
			for (String eWord : englishStrings) {
				if (word.equals(eWord)) {
					isEnglish = true;
					break;
				}
			}
		}
		System.out.println(isEnglish ? ""Yes"" : ""No"");
	}
}
","import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		String[] englishStrings = {""and"", ""not"", ""that"", ""the"", ""you""};
		String[] inputsWords= new String[N];
		for (int i = 0; i < N; i++) {
			inputsWords[i] = sc.next();
		}
		boolean isEnglish = false;
		for (String word:inputsWords) {
			for (String eWord : englishStrings) {
				if (word.equals(eWord)) {
					isEnglish = true;
					break;
				}
			}
		}
		System.out.println(isEnglish ? ""Yes"" : ""No"");
	}
}
",CE
muxii ,abc295/A,Java,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[] s1 = new String[n];
        for(int i = 0; i < n; i++){
            s1[i] = sc.next();
        }
        for(int i = 0; i < s1.length; i++){
            if(s1[i] == ""and"" || s1[i].equals(""not"") || s1[i].equals(""that"") ||
            s1[i].equals(""the"") || s1[i].equals(""you"")){
                System.out.println(""Yes"");
                return;
            }else{
                continue;
            }
        }
        System.out.println(""No"");
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[] s1 = new String[n];
        for(int i = 0; i < n; i++){
            s1[i] = sc.next();
        }
        for(int i = 0; i < s1.length; i++){
            if(s1[i].equals(""and"")|| s1[i].equals(""not"") || s1[i].equals(""that"") ||
            s1[i].equals(""the"") || s1[i].equals(""you"")){
                System.out.println(""Yes"");
                return;
            }else{
                continue;
            }
        }
        System.out.println(""No"");
    }
}
",WA
Wolfgupta ,abc295/A,Java,"import java.util.*;

public class StringCheck {

    public static void main(String[] args) {
        
        Scanner input = new Scanner(System.in);
        
        int n = input.nextInt();
        String[] words = new String[n];

        
        for (int i = 0; i < n; i++) {
            
            words[i] = input.next();
        }

        
        boolean found = false;
        String[] targetWords = {""and"", ""not"", ""that"", ""the"", ""you""};
        for (int i = 0; i < n; i++) {
            for (String word : targetWords) {
                if (words[i].equals(word)) {
                    found = true;
                    break;
                }
            }
            if (found) {
                break;
            }
        }

        
        if (found) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}
","import java.util.*;
import java.io.*;

public class Main {

    public static void main(String[] args) {
        
        Scanner input = new Scanner(System.in);
        
        int n = input.nextInt();
        String[] words = new String[n];

        
        for (int i = 0; i < n; i++) {
            
            words[i] = input.next();
        }

        
        boolean found = false;
        String[] targetWords = {""and"", ""not"", ""that"", ""the"", ""you""};
        for (int i = 0; i < n; i++) {
            for (String word : targetWords) {
                if (words[i].equals(word)) {
                    found = true;
                    break;
                }
            }
            if (found) {
                break;
            }
        }

        
        if (found) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}
",CE
liverwort ,abc295/A,Java,"import java.util.Scanner;

public class Main{
  public static void main(String... args){
    int n;
    String w;
    boolean out = false;
    Scanner scanner = new Scanner(System.in);
    n = scanner.nextInt();
    scanner.nextLine();
    for(int i=0; i<n; i++){
      w = scanner.next();
      if(w.equals(""and"")
        ||w.equals(""not"")
        ||w.equals(""that"")
        ||w.equals(""thhe"")
        ||w.equals(""you"")){
        out = true;
        break;
      }
    }
    System.out.println(out?""Yes"":""No"");
  }
}
","import java.util.Scanner;

public class Main{
  public static void main(String... args){
    int n;
    String w;
    boolean out = false;
    Scanner scanner = new Scanner(System.in);
    n = scanner.nextInt();
    scanner.nextLine();
    for(int i=0; i<n; i++){
      w = scanner.next();
      if(w.equals(""and"")
        ||w.equals(""not"")
        ||w.equals(""that"")
        ||w.equals(""the"")
        ||w.equals(""you"")){
        out = true;
        break;
      }
    }
    System.out.println(out?""Yes"":""No"");
  }
}
",WA
Java_Programmer ,abc295/A,Java,"

import java.io.*;
import java.util.*;

public class Main {
    private static final long MOD = 1_000_000_007L;
    static HashSet<String> set = new HashSet<>();
    private static final FastReader fr = new FastReader();
    public static void main(String[] args) throws IOException {
        PrintWriter out = new PrintWriter(System.out);
        int n = fr.nextInt();

        set.add(""add"");
        set.add(""not"");
        set.add(""that"");
        set.add(""the"");
        set.add(""you"");
        String[] strings = new String[n];
        for(int i=0;i<n;i++) strings[i] = fr.next();
        if(solve(strings)) out.println(""Yes"");
        else out.println(""No"");
        out.close();
    }
    private static boolean solve(String[] strings){
        for(String string: strings){
            if(set.contains(string)) return true;
        }
        return false;
    }
}
class FastReader {
    BufferedReader br;
    StringTokenizer st;

    public FastReader()
    {
        br = new BufferedReader(new InputStreamReader(System.in));
    }

    String next() {
        while (st == null || !st.hasMoreElements()) {
            try {
                st = new StringTokenizer(br.readLine());
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }
        return st.nextToken();
    }

    int nextInt() { return Integer.parseInt(next()); }

    long nextLong() { return Long.parseLong(next()); }

    double nextDouble()
    {
        return Double.parseDouble(next());
    }

    String nextLine()
    {
        String str = """";
        try {
            if(st.hasMoreTokens()){
                str = st.nextToken(""\n"");
            }
            else{
                str = br.readLine();
            }
        }
        catch (IOException e) {
            e.printStackTrace();
        }
        return str;
    }
}


","

import java.io.*;
import java.util.*;

public class Main {
    private static final long MOD = 1_000_000_007L;
    static HashSet<String> set = new HashSet<>();
    private static final FastReader fr = new FastReader();
    public static void main(String[] args) throws IOException {
        PrintWriter out = new PrintWriter(System.out);
        int n = fr.nextInt();

        set.add(""and"");
        set.add(""not"");
        set.add(""that"");
        set.add(""the"");
        set.add(""you"");
        String[] strings = new String[n];
        for(int i=0;i<n;i++) strings[i] = fr.next();
        if(solve(strings)) out.println(""Yes"");
        else out.println(""No"");
        out.close();
    }
    private static boolean solve(String[] strings){
        for(String string: strings){
            if(set.contains(string)) return true;
        }
        return false;
    }
}
class FastReader {
    BufferedReader br;
    StringTokenizer st;

    public FastReader()
    {
        br = new BufferedReader(new InputStreamReader(System.in));
    }

    String next() {
        while (st == null || !st.hasMoreElements()) {
            try {
                st = new StringTokenizer(br.readLine());
            }
            catch (IOException e) {
                e.printStackTrace();
            }
        }
        return st.nextToken();
    }

    int nextInt() { return Integer.parseInt(next()); }

    long nextLong() { return Long.parseLong(next()); }

    double nextDouble()
    {
        return Double.parseDouble(next());
    }

    String nextLine()
    {
        String str = """";
        try {
            if(st.hasMoreTokens()){
                str = st.nextToken(""\n"");
            }
            else{
                str = br.readLine();
            }
        }
        catch (IOException e) {
            e.printStackTrace();
        }
        return str;
    }
}

",WA
bananann ,abc295/A,Java,"import java.util.Scanner;
public class Mine {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		int n=sc.nextInt();
		String w[]=new String[n];

		for(int i=0;i<n;i++) {
			w[i]=sc.next();
		}
		for(int j=0;j<w.length;j++) {
			
			if(w[j].equals(""and"")){
				System.out.println(""Yes"");
				System.exit(0);
			}
			if(w[j].equals(""not"")) {
				System.out.println(""Yes"");
				System.exit(0);
			}
			if(w[j].equals(""that"")) {
				System.out.println(""Yes"");
				System.exit(0);
			}
			if(w[j].equals(""the"")) {
				System.out.println(""Yes"");
				System.exit(0);
			}
			if(w[j].equals(""you"")) {
				System.out.println(""Yes"");
				System.exit(0);
			}
		}
		System.out.println(""No"");
	}

}
","import java.util.Scanner;
public class Main {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		int n=sc.nextInt();
		String w[]=new String[n];

		for(int i=0;i<n;i++) {
			w[i]=sc.next();
		}
		for(int j=0;j<w.length;j++) {
			
			if(w[j].equals(""and"")){
				System.out.println(""Yes"");
				System.exit(0);
			}
			if(w[j].equals(""not"")) {
				System.out.println(""Yes"");
				System.exit(0);
			}
			if(w[j].equals(""that"")) {
				System.out.println(""Yes"");
				System.exit(0);
			}
			if(w[j].equals(""the"")) {
				System.out.println(""Yes"");
				System.exit(0);
			}
			if(w[j].equals(""you"")) {
				System.out.println(""Yes"");
				System.exit(0);
			}
		}
		System.out.println(""No"");
	}

}
",CE
bananann ,abc295/A,Java,"import java.util.Scanner;
public class Mine2 {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		int n=sc.nextInt();
		String w[]=new String[n];

		for(int i=0;i<n;i++) {
			w[i]=sc.next();
		}
		for(int j=0;j<w.length;j++) {
			
			if(w[j].equals(""and"")){
				System.out.println(""Yes"");
				System.exit(0);
			}
			if(w[j].equals(""not"")) {
				System.out.println(""Yes"");
				System.exit(0);
			}
			if(w[j].equals(""that"")) {
				System.out.println(""Yes"");
				System.exit(0);
			}
			if(w[j].equals(""the"")) {
				System.out.println(""Yes"");
				System.exit(0);
			}
			if(w[j].equals(""you"")) {
				System.out.println(""Yes"");
				System.exit(0);
			}
		}
		System.out.println(""No"");
	}

}
","import java.util.Scanner;
public class Main {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		int n=sc.nextInt();
		String w[]=new String[n];

		for(int i=0;i<n;i++) {
			w[i]=sc.next();
		}
		for(int j=0;j<w.length;j++) {
			
			if(w[j].equals(""and"")){
				System.out.println(""Yes"");
				System.exit(0);
			}
			if(w[j].equals(""not"")) {
				System.out.println(""Yes"");
				System.exit(0);
			}
			if(w[j].equals(""that"")) {
				System.out.println(""Yes"");
				System.exit(0);
			}
			if(w[j].equals(""the"")) {
				System.out.println(""Yes"");
				System.exit(0);
			}
			if(w[j].equals(""you"")) {
				System.out.println(""Yes"");
				System.exit(0);
			}
		}
		System.out.println(""No"");
	}

}
",CE
sankarkalla04 ,abc295/A,Java,"import java.util.*;

public class ProbablyEnglish {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		HashSet<String> hSet = new HashSet<>();
		hSet.add(""and"");
		hSet.add(""not"");
		hSet.add(""that"");
		hSet.add(""you"");
		hSet.add(""the"");

		while(N-- > 0) {
			if(hSet.contains(sc.next())) {
				System.out.println(""Yes"");
				return;
			}
		}

		System.out.println(""No"");

	}
}
","import java.util.*;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		HashSet<String> hSet = new HashSet<>();
		hSet.add(""and"");
		hSet.add(""not"");
		hSet.add(""that"");
		hSet.add(""you"");
		hSet.add(""the"");

		while(N-- > 0) {
			if(hSet.contains(sc.next())) {
				System.out.println(""Yes"");
				return;
			}
		}

		System.out.println(""No"");

	}
}
",CE
Kartikey_Agarwal ,abc295/A,Java,"import java.util.Scanner;

public class NewAtcoder1 {
    public static void main(String[] args) {
        Scanner sc= new Scanner(System.in);
        int n=sc.nextInt();
        String[] s=new String[n];
        for (int i=0;i<n;i++) {
            s[i]=sc.next();
        }
        int c=0;
        for (int i=0;i<n;i++) {
            if(s[i].equals(""and"") ||s[i].equals(""not"")||s[i].equals(""that"")||s[i].equals(""the"")||s[i].equals(""you"")) {
                c++;
                break;
            }
        }
        if(c==1) {
            System.out.println(""Yes"");
        }
        else {
            System.out.println(""No"");
        }

    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc= new Scanner(System.in);
        int n=sc.nextInt();
        String[] s=new String[n];
        for (int i=0;i<n;i++) {
            s[i]=sc.next();
        }
        int c=0;
        for (int i=0;i<n;i++) {
            if(s[i].equals(""and"") ||s[i].equals(""not"")||s[i].equals(""that"")||s[i].equals(""the"")||s[i].equals(""you"")) {
                c++;
                break;
            }
        }
        if(c==1) {
            System.out.println(""Yes"");
        }
        else {
            System.out.println(""No"");
        }

    }
}

",CE
paddlew ,abc295/A,Java,"import java.util.*;


public class Main {

  public static void main(String[] args) {
    Scanner kb = new Scanner(System.in);
    int n = kb.nextInt();
    List<String> list = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      list.add(kb.next());
    }
    Set<String> set = new HashSet<>(Arrays.asList(""and"", ""not"", ""that"", ""theyou""));
    boolean res = list.stream().anyMatch(set::contains);
    String prompt = res ? ""Yes"" : ""No"";
    System.out.println(prompt);
  }
}
","import java.util.*;
 

public class Main {
 
  public static void main(String[] args) {
    Scanner kb = new Scanner(System.in);
    int n = kb.nextInt();
    List<String> list = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      list.add(kb.next());
    }
    Set<String> set = new HashSet<>(Arrays.asList(""and"", ""not"", ""that"", ""the"",""you""));
    boolean res = list.stream().anyMatch(set::contains);
    String prompt = res ? ""Yes"" : ""No"";
    System.out.println(prompt);
  }
}
",WA
fune3 ,abc295/A,Java,"import java.util.*;
import java.io.*;

public class Main{
	public static void main(String[] args) {
		FastScanner str=new FastScanner(System.in);
	  PrintWriter out=new PrintWriter(System.out);
    int n=str.nextInt();
		String[] s=new String[n];
		for(int i=0;i<n;i++){
			s[i]=str.next();
		}
		for(int i=0;i<n;i++){
			if(s[i].equals(""and"")||s[i].equals(""not"")||s[i].equals(""you"")||s[i].equals(""that"")||s[i].equals(""the"")){
				out.println(""Yes"");
				out.flush();
				return;
			}
		}
		out.flush();
	}
}






	class FastScanner implements Closeable {
	private final InputStream in;
	private final byte[] buffer = new byte[1024];
	private int ptr = 0;
	private int buflen = 0;
	public FastScanner(InputStream in) {
		this.in = in;
	}
	private boolean hasNextByte() {
		if (ptr < buflen) {
			return true;
		}else{
			ptr = 0;
			try {
				buflen = in.read(buffer);
			} catch (IOException e) {
				e.printStackTrace();
			}
			if (buflen <= 0) {
				return false;
			}
		}
		return true;
	}
	private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
	private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
	public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
	public String next() {
		if (!hasNext()) throw new NoSuchElementException();
		StringBuilder sb = new StringBuilder();
		int b = readByte();
		while(isPrintableChar(b)) {
			sb.appendCodePoint(b);
			b = readByte();
		}
		return sb.toString();
	}
	public long nextLong() {
		if (!hasNext()) throw new NoSuchElementException();
		long n = 0;
		boolean minus = false;
		int b = readByte();
		if (b == '-') {
			minus = true;
			b = readByte();
		}
		if (b < '0' || '9' < b) {
			throw new NumberFormatException();
		}
		while(true){
			if ('0' <= b && b <= '9') {
				n *= 10;
				n += b - '0';
			}else if(b == -1 || !isPrintableChar(b)){
				return minus ? -n : n;
			}else{
				throw new NumberFormatException();
			}
			b = readByte();
		}
	}
	public int nextInt() {
		long nl = nextLong();
		if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
		return (int) nl;
	}
	public double nextDouble() { return Double.parseDouble(next());}
	public void close() {
		try {
			in.close();
		} catch (IOException e) {
		}
	}

		}
","import java.util.*;
import java.io.*;

public class Main{
	public static void main(String[] args) {
		FastScanner str=new FastScanner(System.in);
	  PrintWriter out=new PrintWriter(System.out);
    int n=str.nextInt();
		String[] s=new String[n];
		for(int i=0;i<n;i++){
			s[i]=str.next();
		}
		for(int i=0;i<n;i++){
			if(s[i].equals(""and"")||s[i].equals(""not"")||s[i].equals(""you"")||s[i].equals(""that"")||s[i].equals(""the"")){
				out.println(""Yes"");
				out.flush();
				return;
			}
		}
		out.println(""No"");
		out.flush();
	}
}






	class FastScanner implements Closeable {
	private final InputStream in;
	private final byte[] buffer = new byte[1024];
	private int ptr = 0;
	private int buflen = 0;
	public FastScanner(InputStream in) {
		this.in = in;
	}
	private boolean hasNextByte() {
		if (ptr < buflen) {
			return true;
		}else{
			ptr = 0;
			try {
				buflen = in.read(buffer);
			} catch (IOException e) {
				e.printStackTrace();
			}
			if (buflen <= 0) {
				return false;
			}
		}
		return true;
	}
	private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
	private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
	public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
	public String next() {
		if (!hasNext()) throw new NoSuchElementException();
		StringBuilder sb = new StringBuilder();
		int b = readByte();
		while(isPrintableChar(b)) {
			sb.appendCodePoint(b);
			b = readByte();
		}
		return sb.toString();
	}
	public long nextLong() {
		if (!hasNext()) throw new NoSuchElementException();
		long n = 0;
		boolean minus = false;
		int b = readByte();
		if (b == '-') {
			minus = true;
			b = readByte();
		}
		if (b < '0' || '9' < b) {
			throw new NumberFormatException();
		}
		while(true){
			if ('0' <= b && b <= '9') {
				n *= 10;
				n += b - '0';
			}else if(b == -1 || !isPrintableChar(b)){
				return minus ? -n : n;
			}else{
				throw new NumberFormatException();
			}
			b = readByte();
		}
	}
	public int nextInt() {
		long nl = nextLong();
		if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
		return (int) nl;
	}
	public double nextDouble() { return Double.parseDouble(next());}
	public void close() {
		try {
			in.close();
		} catch (IOException e) {
		}
	}

		}
",WA
HassanU ,abc295/A,Java,"import java.io.*;
import java.util.*;
import java.math.BigInteger;
public class Main {
	static PrintWriter out=new PrintWriter(System.out);
	static Scanner sc=new Scanner(System.in);
	
	public static void main(String[] args) throws Exception {
		int n=sc.nextInt();
		String arr[]=sc.nextLine().split("" "");
		boolean flag=false;
		for(String s:arr) {
			if(s.equals(""and"")||s.equals(""not"")||s.equals(""that"")||s.equals(""the"")||s.equals(""you""))flag=true;
		}
		out.println(flag?""YES"":""NO"");
		out.close();
		
	}
		
	
	static class Pair implements Comparable<Pair>{
		int x;
		int y;
		public Pair(int x,int y) {
			this.x=x;
			this.y=y;
		}
		public int compareTo(Pair o) {
			return this.x-o.x;
		}
		public String toString() {
			return ""(""+this.x+"",""+this.y+"")"";
		}
		
	}
	static class Scanner {
		StringTokenizer st;
		BufferedReader br;
		public Scanner(InputStream s) {
			br = new BufferedReader(new InputStreamReader(s));
		}
		public Scanner(String file) throws FileNotFoundException {
			br = new BufferedReader(new FileReader(file));
		}
		
		public String next() throws IOException {
			while (st == null || !st.hasMoreTokens())
				st = new StringTokenizer(br.readLine());
			return st.nextToken();
		}
		public int nextInt() throws IOException {
			return Integer.parseInt(next());
		}
		public long nextLong() throws IOException {
			return Long.parseLong(next());
		}
		public String nextLine() throws IOException {
			return br.readLine();
		}
		public double nextDouble() throws IOException {
			return Double.parseDouble(next());
		}
		public boolean ready() throws IOException {
			return br.ready();
		}
		public int[] nextIntArr(int n) throws IOException{
			int arr[]=new int[n];
			for(int i=0;i<n;i++)arr[i]=nextInt();
			return arr;
		}
		public BigInteger BigInteger(String s) throws IOException{
			BigInteger a=new BigInteger(s);
			return a;
		}
	}
}
","import java.io.*;
import java.util.*;
import java.math.BigInteger;
public class Main {
	static PrintWriter out=new PrintWriter(System.out);
	static Scanner sc=new Scanner(System.in);
	
	public static void main(String[] args) throws Exception {
		int n=sc.nextInt();
		String arr[]=sc.nextLine().split("" "");
		boolean flag=false;
		for(String s:arr) {
			if(s.equals(""and"")||s.equals(""not"")||s.equals(""that"")||s.equals(""the"")||s.equals(""you""))flag=true;
		}
		out.println(flag?""Yes"":""No"");
		out.close();
		
	}
		
	
	static class Pair implements Comparable<Pair>{
		int x;
		int y;
		public Pair(int x,int y) {
			this.x=x;
			this.y=y;
		}
		public int compareTo(Pair o) {
			return this.x-o.x;
		}
		public String toString() {
			return ""(""+this.x+"",""+this.y+"")"";
		}
		
	}
	static class Scanner {
		StringTokenizer st;
		BufferedReader br;
		public Scanner(InputStream s) {
			br = new BufferedReader(new InputStreamReader(s));
		}
		public Scanner(String file) throws FileNotFoundException {
			br = new BufferedReader(new FileReader(file));
		}
		
		public String next() throws IOException {
			while (st == null || !st.hasMoreTokens())
				st = new StringTokenizer(br.readLine());
			return st.nextToken();
		}
		public int nextInt() throws IOException {
			return Integer.parseInt(next());
		}
		public long nextLong() throws IOException {
			return Long.parseLong(next());
		}
		public String nextLine() throws IOException {
			return br.readLine();
		}
		public double nextDouble() throws IOException {
			return Double.parseDouble(next());
		}
		public boolean ready() throws IOException {
			return br.ready();
		}
		public int[] nextIntArr(int n) throws IOException{
			int arr[]=new int[n];
			for(int i=0;i<n;i++)arr[i]=nextInt();
			return arr;
		}
		public BigInteger BigInteger(String s) throws IOException{
			BigInteger a=new BigInteger(s);
			return a;
		}
	}
}
",WA
HassanU ,abc295/A,Java,"import java.io.*;
import java.util.*;
import java.math.BigInteger;
public class A {
	static PrintWriter out=new PrintWriter(System.out);
	static Scanner sc=new Scanner(System.in);
	
	public static void main(String[] args) throws Exception {
		int n=sc.nextInt();
		String arr[]=sc.nextLine().split("" "");
		boolean flag=false;
		for(String s:arr) {
			if(s.equals(""and"")||s.equals(""not"")||s.equals(""that"")||s.equals(""the"")||s.equals(""you""))flag=true;
		}
		out.println(flag?""YES"":""NO"");
		out.close();
		
	}
		
	
	static class Pair implements Comparable<Pair>{
		int x;
		int y;
		public Pair(int x,int y) {
			this.x=x;
			this.y=y;
		}
		public int compareTo(Pair o) {
			return this.x-o.x;
		}
		public String toString() {
			return ""(""+this.x+"",""+this.y+"")"";
		}
		
	}
	static class Scanner {
		StringTokenizer st;
		BufferedReader br;
		public Scanner(InputStream s) {
			br = new BufferedReader(new InputStreamReader(s));
		}
		public Scanner(String file) throws FileNotFoundException {
			br = new BufferedReader(new FileReader(file));
		}
		
		public String next() throws IOException {
			while (st == null || !st.hasMoreTokens())
				st = new StringTokenizer(br.readLine());
			return st.nextToken();
		}
		public int nextInt() throws IOException {
			return Integer.parseInt(next());
		}
		public long nextLong() throws IOException {
			return Long.parseLong(next());
		}
		public String nextLine() throws IOException {
			return br.readLine();
		}
		public double nextDouble() throws IOException {
			return Double.parseDouble(next());
		}
		public boolean ready() throws IOException {
			return br.ready();
		}
		public int[] nextIntArr(int n) throws IOException{
			int arr[]=new int[n];
			for(int i=0;i<n;i++)arr[i]=nextInt();
			return arr;
		}
		public BigInteger BigInteger(String s) throws IOException{
			BigInteger a=new BigInteger(s);
			return a;
		}
	}
}
","import java.io.*;
import java.util.*;
import java.math.BigInteger;
public class Main {
	static PrintWriter out=new PrintWriter(System.out);
	static Scanner sc=new Scanner(System.in);
	
	public static void main(String[] args) throws Exception {
		int n=sc.nextInt();
		String arr[]=sc.nextLine().split("" "");
		boolean flag=false;
		for(String s:arr) {
			if(s.equals(""and"")||s.equals(""not"")||s.equals(""that"")||s.equals(""the"")||s.equals(""you""))flag=true;
		}
		out.println(flag?""Yes"":""No"");
		out.close();
		
	}
		
	
	static class Pair implements Comparable<Pair>{
		int x;
		int y;
		public Pair(int x,int y) {
			this.x=x;
			this.y=y;
		}
		public int compareTo(Pair o) {
			return this.x-o.x;
		}
		public String toString() {
			return ""(""+this.x+"",""+this.y+"")"";
		}
		
	}
	static class Scanner {
		StringTokenizer st;
		BufferedReader br;
		public Scanner(InputStream s) {
			br = new BufferedReader(new InputStreamReader(s));
		}
		public Scanner(String file) throws FileNotFoundException {
			br = new BufferedReader(new FileReader(file));
		}
		
		public String next() throws IOException {
			while (st == null || !st.hasMoreTokens())
				st = new StringTokenizer(br.readLine());
			return st.nextToken();
		}
		public int nextInt() throws IOException {
			return Integer.parseInt(next());
		}
		public long nextLong() throws IOException {
			return Long.parseLong(next());
		}
		public String nextLine() throws IOException {
			return br.readLine();
		}
		public double nextDouble() throws IOException {
			return Double.parseDouble(next());
		}
		public boolean ready() throws IOException {
			return br.ready();
		}
		public int[] nextIntArr(int n) throws IOException{
			int arr[]=new int[n];
			for(int i=0;i<n;i++)arr[i]=nextInt();
			return arr;
		}
		public BigInteger BigInteger(String s) throws IOException{
			BigInteger a=new BigInteger(s);
			return a;
		}
	}
}
",CE
shiomusu ,abc295/A,Java,"import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {
	public static void main(String[] args){
		
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		List<String> wordList = new ArrayList<String>() {
			{
			add(""and"");
			add(""not"");
			add(""that"");
			add(""the"");
			add(""you"");
			}
		};
		
		for (int i = 0; i < N; i++) {
			String inputWord = sc.next();
			if (0 < wordList.indexOf(inputWord)) {
				System.out.println(""Yes"");
				return;
			}
		}
		
		System.out.println(""No"");
	}
}
","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {
	public static void main(String[] args){
		
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		List<String> wordList = new ArrayList<String>() {
			{
			add(""and"");
			add(""not"");
			add(""that"");
			add(""the"");
			add(""you"");
			}
		};
		
		for (int i = 0; i < N; i++) {
			String inputWord = sc.next();
			if (0 <= wordList.indexOf(inputWord)) {
				System.out.println(""Yes"");
				return;
			}
		}
		
		System.out.println(""No"");
	}
}
",WA
shiomusu ,abc295/A,Java,"import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {
	public static void main(String[] args){
		
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		List<String> wordList = new ArrayList<String>() {
			{
			add(""and"");
			add(""not"");
			add(""that"");
			add(""the"");
			add(""you"");
			}
		};
		
		for (int i = 0; i < wordList.size(); i++) {
			String inputWord = sc.next();
			if (0 < wordList.indexOf(inputWord)) {
				System.out.println(""Yes"");
				return;
			}
		}
		
		System.out.println(""No"");
	}
}
","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {
	public static void main(String[] args){
		
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		List<String> wordList = new ArrayList<String>() {
			{
			add(""and"");
			add(""not"");
			add(""that"");
			add(""the"");
			add(""you"");
			}
		};
		
		for (int i = 0; i < N; i++) {
			String inputWord = sc.next();
			if (0 <= wordList.indexOf(inputWord)) {
				System.out.println(""Yes"");
				return;
			}
		}
		
		System.out.println(""No"");
	}
}
",RE
iknownothing13 ,abc295/A,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class Main
{
    static ArrayList<ArrayList<String>> ans=new ArrayList<>();
    public static void main (String[] args)
    {
        Scanner input=new Scanner(System.in);
        int n=input.nextInt();int ans=0;
        for (int i=0;i<n;i++){
            String str=input.next();
            
            if (str.equals(""and"") || str.equals(""not"") || str.equals(""that"") || str.equals(""the"") || str.equals(""you"")){
                ans=1;
            }
        }
        if (ans==1){
            System.out.println(""YES"");
        }
        else {
            System.out.println(""NO"");
        }
    }
    static void recurse(ArrayList<String> arr){
        ArrayList<String> list=new ArrayList<>();
        for(int i=0;i<arr.size();i++){
            if (i+1<arr.size() && arr.get(i+1).equals(rev(arr.get(i)))){
                list.add(arr.get(i+1)+arr.get(i));
                for(int j=i+2;j<arr.size();j++){
                    list.add(arr.get(j));
                }
                break;
            }
            else if(i+2<arr.size() && arr.get(i+2).equals(rev(arr.get(i)))){
                list.add(arr.get(i)+arr.get(i+1)+arr.get(i+2));
                for(int j=i+3;j<arr.size();j++){
                    list.add(arr.get(j));
                }
                break;
            }
            else{
                list.add(arr.get(i));
            }
        }
        if (list.size()==arr.size()){
            return;
        }
        ans.add(list);
        recurse(list);
    }
    public static String rev(String str){
        String ans="""";
        for (int i=str.length()-1;i>=0;i--){
            ans+=str.charAt(i);
        }
        return ans;
    }
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = """";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }
}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class Main
{
    static ArrayList<ArrayList<String>> ans=new ArrayList<>();
    public static void main (String[] args)
    {
        Scanner input=new Scanner(System.in);
        int n=input.nextInt();int ans=0;
        for (int i=0;i<n;i++){
            String str=input.next();
            
            if (str.equals(""and"") || str.equals(""not"") || str.equals(""that"") || str.equals(""the"") || str.equals(""you"")){
                ans=1;
            }
        }
        if (ans==1){
            System.out.println(""Yes"");
        }
        else {
            System.out.println(""No"");
        }
    }
    static void recurse(ArrayList<String> arr){
        ArrayList<String> list=new ArrayList<>();
        for(int i=0;i<arr.size();i++){
            if (i+1<arr.size() && arr.get(i+1).equals(rev(arr.get(i)))){
                list.add(arr.get(i+1)+arr.get(i));
                for(int j=i+2;j<arr.size();j++){
                    list.add(arr.get(j));
                }
                break;
            }
            else if(i+2<arr.size() && arr.get(i+2).equals(rev(arr.get(i)))){
                list.add(arr.get(i)+arr.get(i+1)+arr.get(i+2));
                for(int j=i+3;j<arr.size();j++){
                    list.add(arr.get(j));
                }
                break;
            }
            else{
                list.add(arr.get(i));
            }
        }
        if (list.size()==arr.size()){
            return;
        }
        ans.add(list);
        recurse(list);
    }
    public static String rev(String str){
        String ans="""";
        for (int i=str.length()-1;i>=0;i--){
            ans+=str.charAt(i);
        }
        return ans;
    }
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = """";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }
}
",WA
347TAIKI ,abc295/A,Java,"import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int wordCount = sc.nextInt();
        Array<String> words = new Array<>();
        words.add(""and"");
        words.add(""not"");
        words.add(""that"");
        words.add(""you"");
        words.add(""the"");

        while (wordCount-- > 0) {
            if (words.contains(sc.next())) {
                System.out.println(""Yes"");
                return;
            }
        }

        System.out.println(""No"");

    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int wordCount = sc.nextInt();
        ArrayList<String> words = new ArrayList<String>();
        words.add(""and"");
        words.add(""not"");
        words.add(""that"");
        words.add(""you"");
        words.add(""the"");

        while (wordCount-- > 0) {
            if (words.contains(sc.next())) {
                System.out.println(""Yes"");
                return;
            }
        }

        System.out.println(""No"");

    }
}
",CE
347TAIKI ,abc295/A,Java,"public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int wordCount = sc.nextInt();
        Array<String> words = new Array<>();
        words.add(""and"");
        words.add(""not"");
        words.add(""that"");
        words.add(""you"");
        words.add(""the"");

        while (wordCount-- > 0) {
            if (words.contains(sc.next())) {
                System.out.println(""Yes"");
                return;
            }
        }

        System.out.println(""No"");

    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int wordCount = sc.nextInt();
        ArrayList<String> words = new ArrayList<String>();
        words.add(""and"");
        words.add(""not"");
        words.add(""that"");
        words.add(""you"");
        words.add(""the"");

        while (wordCount-- > 0) {
            if (words.contains(sc.next())) {
                System.out.println(""Yes"");
                return;
            }
        }

        System.out.println(""No"");

    }
}
",CE
dkk123 ,abc295/A,Java,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner in=new Scanner(System.in);
        int n=in.nextInt();
        String a[]=new String[n];
        String b="""";
        int f=0;
        for (int i = 0; i <n;   i++) {
            a[i]=in.next();
            if (a[i].equals(""and"")|| a[i].equals(""not"")||
                    a[i].equals(""that"")||a[i].equals(""the"")||a[i].equals(""or"")){
               f+=1;
               break;
            }
        }
        if (f==0){
            System.out.println(""No"");
        }else{
            System.out.println(""Yes"");
        }
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner in=new Scanner(System.in);
        int n=in.nextInt();
        String a[]=new String[n];
        String b="""";
        int f=0;
        for (int i = 0; i <n;   i++) {
            a[i]=in.next();
            if (a[i].equals(""and"")|| a[i].equals(""not"")||
                    a[i].equals(""that"")||a[i].equals(""the"")||a[i].equals(""you"")){
               f+=1;
               break;
            }
        }
        if (f==0){
            System.out.println(""No"");
        }else{
            System.out.print(""Yes\n"");
        }
    }
}
",WA
MeraNaamShivam ,abc295/A,Java,"import java.util.*;
public class Main
{
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		int count=0;
		String[] sample=new String[n];
		for(int i=0;i<n;i++){
		    sample[i]=sc.next();
		}
		for(int i=0;i<n;i++){
		    if(sample[i].equals(""and"")||sample[i].equals(""not"")||sample[i].equals(""that"")||sample[i].equals(""the"")||sample[i].equals(""you"")){
		        count++;
		    }
		    if(count==2){
		        System.out.println(""Yes"");
		        break;
		    }else if(i==n-1){
		        System.out.println(""No"");
		    }
		}
	}
}
","import java.util.*;
public class Main
{
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		int count=0;
		String[] sample=new String[n];
		for(int i=0;i<n;i++){
		    sample[i]=sc.next();
		}
		for(int i=0;i<n;i++){
		    if(sample[i].equals(""and"")||sample[i].equals(""not"")||sample[i].equals(""that"")||sample[i].equals(""the"")||sample[i].equals(""you"")){
		        count++;
		    }
		    if(count==1){
		        System.out.println(""Yes"");
		        break;
		    }else if(i==n-1){
		        System.out.println(""No"");
		    }
		}
	}
}
",WA
madmax27 ,abc295/A,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class test {
    public static void main(String[] args) {
        MyScanner scn = new MyScanner();
        int n = scn.nextInt();
        HashMap<String,Integer> map = new HashMap<>();
        map.put(""and"", 1);
        map.put(""not"", 1);
        map.put(""that"", 1);
        map.put(""the"", 1);
        map.put(""you"", 1);
        String ans = ""No"";
        String temp = """";
        while(n>0){
            temp = scn.next();
            if(map.getOrDefault(temp,0)==1) ans = ""Yes"";
            n=n-1;
        }
        System.out.println(ans);
    }
}
     class Element implements Comparable<Element> {

        int index, value, path_value;

        Element(int index, int value, int path_value){
            this.index = index;
            this.value = value;
            this.path_value = path_value;
        }

        public int compareTo(Element e) {
            return this.value - e.value;
        }
}

class MyScanner {
    BufferedReader br;
    StringTokenizer st;

    public MyScanner() {
        br = new BufferedReader(new InputStreamReader(System.in));
    }

    String next() {
        while (st == null || !st.hasMoreElements()) {
            try {
                st = new StringTokenizer(br.readLine());
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        return st.nextToken();
    }

    int nextInt() {
        return Integer.parseInt(next());
    }

    long nextLong() {
        return Long.parseLong(next());
    }

    double nextDouble() {
        return Double.parseDouble(next());
    }

    String nextLine(){
        String str = """";
        try {
            str = br.readLine();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return str;
    }

}






","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        MyScanner scn = new MyScanner();
        int n = scn.nextInt();
        HashMap<String,Integer> map = new HashMap<>();
        map.put(""and"", 1);
        map.put(""not"", 1);
        map.put(""that"", 1);
        map.put(""the"", 1);
        map.put(""you"", 1);
        String ans = ""No"";
        String temp = """";
        while(n>0){
            temp = scn.next();
            if(map.getOrDefault(temp,0)==1) ans = ""Yes"";
            n=n-1;
        }
        System.out.println(ans);
    }
}
     class Element implements Comparable<Element> {

        int index, value, path_value;

        Element(int index, int value, int path_value){
            this.index = index;
            this.value = value;
            this.path_value = path_value;
        }

        public int compareTo(Element e) {
            return this.value - e.value;
        }
}

class MyScanner {
    BufferedReader br;
    StringTokenizer st;

    public MyScanner() {
        br = new BufferedReader(new InputStreamReader(System.in));
    }

    String next() {
        while (st == null || !st.hasMoreElements()) {
            try {
                st = new StringTokenizer(br.readLine());
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        return st.nextToken();
    }

    int nextInt() {
        return Integer.parseInt(next());
    }

    long nextLong() {
        return Long.parseLong(next());
    }

    double nextDouble() {
        return Double.parseDouble(next());
    }

    String nextLine(){
        String str = """";
        try {
            str = br.readLine();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return str;
    }

}






",CE
Anshush_01 ,abc295/A,Java,"import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    
	    HashSet<String> hs=new HashSet<>();
	    hs.add(""and"");
	      hs.add(""not"");
	        hs.add(""that"");  hs.add(""the"");  hs.add(""you"");
	    boolean f=false;
		Scanner sc = new Scanner(System.in);
		int n=sc.nextInt();
		for(int i=0;i<=n;i++){
		    String inp=sc.nextLine();
		    if(hs.contains(inp)){
		        f=true;
		    }
		}
if(f){
System.out.println(""Yes"");
	}
else{
System.out.println(""No"");
} } 
}
","import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    
	    HashSet<String> hs=new HashSet<>();
	    hs.add(""and"");
	      hs.add(""not"");
	        hs.add(""that"");  hs.add(""the"");  hs.add(""you"");
	    boolean f=false;
		Scanner sc = new Scanner(System.in);
		int n=sc.nextInt();
	while(n-->0){
		    String inp=sc.next();
		    if(hs.contains(inp)){
		        f=true;
		    }
		}
if(f){
System.out.println(""Yes"");
	}
else{
System.out.println(""No"");
} } 
}
",RE
Anshush_01 ,abc295/A,Java,"
import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    
	    HashSet<String> hs=new HashSet<>();
	    hs.add(""and"");
	      hs.add(""not"");
	        hs.add(""that"");  hs.add(""the"");  hs.add(""you"");
	    boolean f=false;
		Scanner sc = new Scanner(System.in);
		int n=sc.nextInt();
		for(int i=0;i<=n;i++){
		    String inp=sc.nextLine();
		    if(hs.contains(inp)){
		        f=true;
		    }
		}
if(f){
System.out.println(""Yes"");
	}
else{
System.out.println(""No"");
} } 
}
","import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    
	    HashSet<String> hs=new HashSet<>();
	    hs.add(""and"");
	      hs.add(""not"");
	        hs.add(""that"");  hs.add(""the"");  hs.add(""you"");
	    boolean f=false;
		Scanner sc = new Scanner(System.in);
		int n=sc.nextInt();
	while(n-->0){
		    String inp=sc.next();
		    if(hs.contains(inp)){
		        f=true;
		    }
		}
if(f){
System.out.println(""Yes"");
	}
else{
System.out.println(""No"");
} } 
}
",RE
Anshush_01 ,abc295/A,Java,"
import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    
	    HashSet<String> hs=new HashSet<>();
	    hs.add(""and"");
	      hs.add(""not"");
	        hs.add(""that"");  hs.add(""the"");  hs.add(""you"");
	    boolean f=false;
		Scanner sc = new Scanner(System.in);
		int n=sc.nextInt();
		for(int i=0;i<n;i++){
		    String inp=sc.nextLine();
		    if(hs.contains(inp)){
		        f=true;
		    }
		}
if(f){
System.out.println(""Yes"");
	}
else{
System.out.println(""No"");
} } 
}
","import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    
	    HashSet<String> hs=new HashSet<>();
	    hs.add(""and"");
	      hs.add(""not"");
	        hs.add(""that"");  hs.add(""the"");  hs.add(""you"");
	    boolean f=false;
		Scanner sc = new Scanner(System.in);
		int n=sc.nextInt();
	while(n-->0){
		    String inp=sc.next();
		    if(hs.contains(inp)){
		        f=true;
		    }
		}
if(f){
System.out.println(""Yes"");
	}
else{
System.out.println(""No"");
} } 
}
",RE
Afzal072 ,abc295/A,Java,"import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner input=new Scanner(System.in);
        int n=input.nextInt();
        String arr[]=new String[n];
        for(int i=0;i<n;i++)
        {
            arr[i]=input.next();
            if(arr[i].equals(""and"") || arr[i].equals(""that"") || arr[i].equals(""not"") || arr[i].equals(""you"") || arr[i].equals(""the""))
            {
                System.out.println(""yes"");
                return;
            }
        }
        System.out.println(""no"");
        return;

    }
}
","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner input=new Scanner(System.in);
        int n=input.nextInt();
        String arr[]=new String[n];
        for(int i=0;i<n;i++)
        {
            arr[i]=input.next();
            if(arr[i].equals(""and"") || arr[i].equals(""that"") || arr[i].equals(""not"") || arr[i].equals(""you"") || arr[i].equals(""the""))
            {
                System.out.println(""Yes"");
                return;
            }
        }
        System.out.println(""No"");
        return;

    }
}
",WA
Afzal072 ,abc295/A,Java,"import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner input=new Scanner(System.in);
        int n=input.nextInt();
        String arr[]=new String[n];
        for(int i=0;i<n;i++)
        {
            arr[i]=input.next();
            if(arr[i].equals(""and"") || arr[i].equals(""that"") || arr[i].equals(""then"") || arr[i].equals(""you"") || arr[i].equals(""the""))
            {
                System.out.println(""yes"");
                return;
            }
        }
        System.out.println(""no"");
        return;

    }
}
","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner input=new Scanner(System.in);
        int n=input.nextInt();
        String arr[]=new String[n];
        for(int i=0;i<n;i++)
        {
            arr[i]=input.next();
            if(arr[i].equals(""and"") || arr[i].equals(""that"") || arr[i].equals(""not"") || arr[i].equals(""you"") || arr[i].equals(""the""))
            {
                System.out.println(""Yes"");
                return;
            }
        }
        System.out.println(""No"");
        return;

    }
}
",WA
Afzal072 ,abc295/A,Java,"import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner input=new Scanner(System.in);
        int n=input.nextInt();
        String arr[]=new String[n];
        for(int i=0;i<n;i++)
        {
            arr[i]=input.next();
            if(arr[i].equals(""and"") || arr[i].equals(""that"") || arr[i].equals(""then"") || arr[i].equals(""then""))
            {
                System.out.println(""yes"");
                return;
            }
        }
        System.out.println(""no"");
        return;

    }
}
","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner input=new Scanner(System.in);
        int n=input.nextInt();
        String arr[]=new String[n];
        for(int i=0;i<n;i++)
        {
            arr[i]=input.next();
            if(arr[i].equals(""and"") || arr[i].equals(""that"") || arr[i].equals(""not"") || arr[i].equals(""you"") || arr[i].equals(""the""))
            {
                System.out.println(""Yes"");
                return;
            }
        }
        System.out.println(""No"");
        return;

    }
}
",WA
Tushar_prajapati ,abc295/A,Java,"import java.util.*;
public class main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String[] W = new String[N];
        for (int i = 0; i < N; i++) {
            W[i] = sc.next();  
        }
        if (Arrays.asList(W).contains(""and"") || Arrays.asList(W).contains(""not"") ||
            Arrays.asList(W).contains(""that"") || Arrays.asList(W).contains(""the"") ||
            Arrays.asList(W).contains(""you"")) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}
","import java.util.*;
class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String[] W = new String[N];
        for (int i = 0; i < N; i++) {
            W[i] = sc.next(); 
        }
        if (Arrays.asList(W).contains(""and"") || Arrays.asList(W).contains(""not"") ||
            Arrays.asList(W).contains(""that"") || Arrays.asList(W).contains(""the"") ||
            Arrays.asList(W).contains(""you"")) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}
",CE
Tushar_prajapati ,abc295/A,Java,"import java.util.*;
public class Atcoder {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String[] W = new String[N];
        for (int i = 0; i < N; i++) {
            W[i] = sc.next();  
        }
        if (Arrays.asList(W).contains(""and"") || Arrays.asList(W).contains(""not"") ||
            Arrays.asList(W).contains(""that"") || Arrays.asList(W).contains(""the"") ||
            Arrays.asList(W).contains(""you"")) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}
","import java.util.*;
class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String[] W = new String[N];
        for (int i = 0; i < N; i++) {
            W[i] = sc.next(); 
        }
        if (Arrays.asList(W).contains(""and"") || Arrays.asList(W).contains(""not"") ||
            Arrays.asList(W).contains(""that"") || Arrays.asList(W).contains(""the"") ||
            Arrays.asList(W).contains(""you"")) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}
",CE
Nagendravarma ,abc295/A,Java,"import javax.rmi.ssl.SslRMIClientSocketFactory;
import java.lang.reflect.Array;
import java.util.Scanner;
import java.util.*;
import java.io.*;

public class Main {



    public void sieve(int n,int p[]){
        p[2]=1;
        for(int i=2;i<=n;i++){
            if(p[i] == 0)continue;
            for(int j=i*i;j<=n;j+=i){
                p[j]=0;
            }
        }
    }

    
    public static long gcd(long a,long b){
        if(a == 0)return b;
        return gcd(b%a,a);
    }


    public static void println(int n){
        System.out.println(n);
    }
    public static void print(int n){
        System.out.print(n);
    }
    public static void println(long n){System.out.println(n);}
    public static void println(String n){
        System.out.println(n);
    }
    public static void print(String n){
        System.out.print(n);
    }

    static int yy = 0;

    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);
        int mod = (int) Math.pow(10, 9) + 7;
        int t = 1;
        while (t-- > 0) {
           int n = sc.nextInt();
           boolean ans = false;
           for(int i=0;i<n;i++){
               String s = sc.next();
               println(s);
               if(is(s))ans = true;
           }

           if(ans)println(""Yes"");
           else println(""No"");


        }
    }
    static boolean is(String w){
        if(w.equals(""and"") || w.equals(""not"") || w.equals(""that"")|| w.equals(""the"") || w.equals(""you""))return true;
        return false;
    }
    static void f(int arr[],int index){

        


    }
    public static boolean V(int x,int y,int n,int m){
        if(x>=0 && y>=0 && x<n && y<m)return false;
        else return true;
    }
    public static boolean isPerfectSquare(int n){
        double sqrt = Math.sqrt((double)n);
        return ((sqrt-Math.floor((sqrt))) == 0);
    }
    static void runtest(int a,int b){
        for(int p1=1;p1<100;p1++){
            for(int p2=1;p2<100;p2++){
                int p3 = (p1+p2)/b;
                if((p1+p2)%b == 0 && p1!=p2 && (a*p1)%b!=0 && (a*p2)%b!=0 && (a*p1!=a*b*p3) && (a*p2!=a*b*p3)){
                    println(""YES"");
                    println(a*p1+"" ""+a*p2+"" ""+a*b*p3);
                    return;
                }
            }
        }
    }
    
    public static long powerUsingBinaryExponentation(int n,long base){
        long ans = 1L;
        long mod = (long) Math.pow(10,9)+7L;

        while(n>0){
            if(n%2 == 1){
                ans =  (ans*base)%mod;
                n-= 1;
            }else{
                base = (int) (base*base)%mod;
                n /= 2;
            }

        }
        return ans;
    }
}
class pair{
    int value;int index;
    public pair(int value,int index){
        this.value = value;
        this.index = index;
    }
}
class tuple{
    int x;
    int y;
    int prev;

    int time;

    public tuple(int x,int y,int prev,int time){
        this.x = x;
        this.y = y;
        this.prev = prev;
        this.time = time;
    }
}
","import javax.rmi.ssl.SslRMIClientSocketFactory;
import java.lang.reflect.Array;
import java.util.Scanner;
import java.util.*;
import java.io.*;

public class Main {



    public void sieve(int n,int p[]){
        p[2]=1;
        for(int i=2;i<=n;i++){
            if(p[i] == 0)continue;
            for(int j=i*i;j<=n;j+=i){
                p[j]=0;
            }
        }
    }

    
    public static long gcd(long a,long b){
        if(a == 0)return b;
        return gcd(b%a,a);
    }


    public static void println(int n){
        System.out.println(n);
    }
    public static void print(int n){
        System.out.print(n);
    }
    public static void println(long n){System.out.println(n);}
    public static void println(String n){
        System.out.println(n);
    }
    public static void print(String n){
        System.out.print(n);
    }

    static int yy = 0;

    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);
        int mod = (int) Math.pow(10, 9) + 7;
        int t = 1;
        while (t-- > 0) {
           int n = sc.nextInt();
           boolean ans = false;
           for(int i=0;i<n;i++){
               String s = sc.next();
               if(is(s))ans = true;
           }

           if(ans)println(""Yes"");
           else println(""No"");


        }
    }
    static boolean is(String w){
        if(w.equals(""and"") || w.equals(""not"") || w.equals(""that"")|| w.equals(""the"") || w.equals(""you""))return true;
        return false;
    }
    static void f(int arr[],int index){

        


    }
    public static boolean V(int x,int y,int n,int m){
        if(x>=0 && y>=0 && x<n && y<m)return false;
        else return true;
    }
    public static boolean isPerfectSquare(int n){
        double sqrt = Math.sqrt((double)n);
        return ((sqrt-Math.floor((sqrt))) == 0);
    }
    static void runtest(int a,int b){
        for(int p1=1;p1<100;p1++){
            for(int p2=1;p2<100;p2++){
                int p3 = (p1+p2)/b;
                if((p1+p2)%b == 0 && p1!=p2 && (a*p1)%b!=0 && (a*p2)%b!=0 && (a*p1!=a*b*p3) && (a*p2!=a*b*p3)){
                    println(""YES"");
                    println(a*p1+"" ""+a*p2+"" ""+a*b*p3);
                    return;
                }
            }
        }
    }
    
    public static long powerUsingBinaryExponentation(int n,long base){
        long ans = 1L;
        long mod = (long) Math.pow(10,9)+7L;

        while(n>0){
            if(n%2 == 1){
                ans =  (ans*base)%mod;
                n-= 1;
            }else{
                base = (int) (base*base)%mod;
                n /= 2;
            }

        }
        return ans;
    }
}
class pair{
    int value;int index;
    public pair(int value,int index){
        this.value = value;
        this.index = index;
    }
}
class tuple{
    int x;
    int y;
    int prev;

    int time;

    public tuple(int x,int y,int prev,int time){
        this.x = x;
        this.y = y;
        this.prev = prev;
        this.time = time;
    }
}
",WA
Nagendravarma ,abc295/A,Java,"import javax.rmi.ssl.SslRMIClientSocketFactory;
import java.lang.reflect.Array;
import java.util.Scanner;
import java.util.*;
import java.io.*;

public class Main {



    public void sieve(int n,int p[]){
        p[2]=1;
        for(int i=2;i<=n;i++){
            if(p[i] == 0)continue;
            for(int j=i*i;j<=n;j+=i){
                p[j]=0;
            }
        }
    }

    
    public static long gcd(long a,long b){
        if(a == 0)return b;
        return gcd(b%a,a);
    }


    public static void println(int n){
        System.out.println(n);
    }
    public static void print(int n){
        System.out.print(n);
    }
    public static void println(long n){System.out.println(n);}
    public static void println(String n){
        System.out.println(n);
    }
    public static void print(String n){
        System.out.print(n);
    }

    static int yy = 0;

    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);
        int mod = (int) Math.pow(10, 9) + 7;
        int t = 1;
        while (t-- > 0) {
           int n = sc.nextInt();
           boolean ans = false;
           for(int i=0;i<n;i++){
               String s = sc.next();
               
               if(is(s))ans = true;
           }

           if(ans)println(""YES"");
           else println(""NO"");


        }
    }
    static boolean is(String w){
        if(w.equals(""and"") || w.equals(""not"") || w.equals(""that"")|| w.equals(""the"") || w.equals(""you""))return true;
        return false;
    }
    static void f(int arr[],int index){

        


    }
    public static boolean V(int x,int y,int n,int m){
        if(x>=0 && y>=0 && x<n && y<m)return false;
        else return true;
    }
    public static boolean isPerfectSquare(int n){
        double sqrt = Math.sqrt((double)n);
        return ((sqrt-Math.floor((sqrt))) == 0);
    }
    static void runtest(int a,int b){
        for(int p1=1;p1<100;p1++){
            for(int p2=1;p2<100;p2++){
                int p3 = (p1+p2)/b;
                if((p1+p2)%b == 0 && p1!=p2 && (a*p1)%b!=0 && (a*p2)%b!=0 && (a*p1!=a*b*p3) && (a*p2!=a*b*p3)){
                    println(""YES"");
                    println(a*p1+"" ""+a*p2+"" ""+a*b*p3);
                    return;
                }
            }
        }
    }
    
    public static long powerUsingBinaryExponentation(int n,long base){
        long ans = 1L;
        long mod = (long) Math.pow(10,9)+7L;

        while(n>0){
            if(n%2 == 1){
                ans =  (ans*base)%mod;
                n-= 1;
            }else{
                base = (int) (base*base)%mod;
                n /= 2;
            }

        }
        return ans;
    }
}
class pair{
    int value;int index;
    public pair(int value,int index){
        this.value = value;
        this.index = index;
    }
}
class tuple{
    int x;
    int y;
    int prev;

    int time;

    public tuple(int x,int y,int prev,int time){
        this.x = x;
        this.y = y;
        this.prev = prev;
        this.time = time;
    }
}
","import javax.rmi.ssl.SslRMIClientSocketFactory;
import java.lang.reflect.Array;
import java.util.Scanner;
import java.util.*;
import java.io.*;

public class Main {



    public void sieve(int n,int p[]){
        p[2]=1;
        for(int i=2;i<=n;i++){
            if(p[i] == 0)continue;
            for(int j=i*i;j<=n;j+=i){
                p[j]=0;
            }
        }
    }

    
    public static long gcd(long a,long b){
        if(a == 0)return b;
        return gcd(b%a,a);
    }


    public static void println(int n){
        System.out.println(n);
    }
    public static void print(int n){
        System.out.print(n);
    }
    public static void println(long n){System.out.println(n);}
    public static void println(String n){
        System.out.println(n);
    }
    public static void print(String n){
        System.out.print(n);
    }

    static int yy = 0;

    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);
        int mod = (int) Math.pow(10, 9) + 7;
        int t = 1;
        while (t-- > 0) {
           int n = sc.nextInt();
           boolean ans = false;
           for(int i=0;i<n;i++){
               String s = sc.next();
               if(is(s))ans = true;
           }

           if(ans)println(""Yes"");
           else println(""No"");


        }
    }
    static boolean is(String w){
        if(w.equals(""and"") || w.equals(""not"") || w.equals(""that"")|| w.equals(""the"") || w.equals(""you""))return true;
        return false;
    }
    static void f(int arr[],int index){

        


    }
    public static boolean V(int x,int y,int n,int m){
        if(x>=0 && y>=0 && x<n && y<m)return false;
        else return true;
    }
    public static boolean isPerfectSquare(int n){
        double sqrt = Math.sqrt((double)n);
        return ((sqrt-Math.floor((sqrt))) == 0);
    }
    static void runtest(int a,int b){
        for(int p1=1;p1<100;p1++){
            for(int p2=1;p2<100;p2++){
                int p3 = (p1+p2)/b;
                if((p1+p2)%b == 0 && p1!=p2 && (a*p1)%b!=0 && (a*p2)%b!=0 && (a*p1!=a*b*p3) && (a*p2!=a*b*p3)){
                    println(""YES"");
                    println(a*p1+"" ""+a*p2+"" ""+a*b*p3);
                    return;
                }
            }
        }
    }
    
    public static long powerUsingBinaryExponentation(int n,long base){
        long ans = 1L;
        long mod = (long) Math.pow(10,9)+7L;

        while(n>0){
            if(n%2 == 1){
                ans =  (ans*base)%mod;
                n-= 1;
            }else{
                base = (int) (base*base)%mod;
                n /= 2;
            }

        }
        return ans;
    }
}
class pair{
    int value;int index;
    public pair(int value,int index){
        this.value = value;
        this.index = index;
    }
}
class tuple{
    int x;
    int y;
    int prev;

    int time;

    public tuple(int x,int y,int prev,int time){
        this.x = x;
        this.y = y;
        this.prev = prev;
        this.time = time;
    }
}
",WA
Nagendravarma ,abc295/A,Java,"import javax.rmi.ssl.SslRMIClientSocketFactory;
import java.lang.reflect.Array;
import java.util.Scanner;
import java.util.*;
import java.io.*;

public class Main {



    public void sieve(int n,int p[]){
        p[2]=1;
        for(int i=2;i<=n;i++){
            if(p[i] == 0)continue;
            for(int j=i*i;j<=n;j+=i){
                p[j]=0;
            }
        }
    }

    
    public static long gcd(long a,long b){
        if(a == 0)return b;
        return gcd(b%a,a);
    }


    public static void println(int n){
        System.out.println(n);
    }
    public static void print(int n){
        System.out.print(n);
    }
    public static void println(long n){System.out.println(n);}
    public static void println(String n){
        System.out.println(n);
    }
    public static void print(String n){
        System.out.print(n);
    }

    static int yy = 0;

    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);
        int mod = (int) Math.pow(10, 9) + 7;
        int t = 1;
        while (t-- > 0) {
           int n = sc.nextInt();
           boolean ans = false;
           for(int i=0;i<n;i++){
               String s = sc.next();
               println(s);
               if(is(s))ans = true;
           }

           if(ans)println(""YES"");
           else println(""NO"");


        }
    }
    static boolean is(String w){
        if(w.equals(""and"") || w.equals(""not"") || w.equals(""that"")|| w.equals(""the"") || w.equals(""you""))return true;
        return false;
    }
    static void f(int arr[],int index){

        


    }
    public static boolean V(int x,int y,int n,int m){
        if(x>=0 && y>=0 && x<n && y<m)return false;
        else return true;
    }
    public static boolean isPerfectSquare(int n){
        double sqrt = Math.sqrt((double)n);
        return ((sqrt-Math.floor((sqrt))) == 0);
    }
    static void runtest(int a,int b){
        for(int p1=1;p1<100;p1++){
            for(int p2=1;p2<100;p2++){
                int p3 = (p1+p2)/b;
                if((p1+p2)%b == 0 && p1!=p2 && (a*p1)%b!=0 && (a*p2)%b!=0 && (a*p1!=a*b*p3) && (a*p2!=a*b*p3)){
                    println(""YES"");
                    println(a*p1+"" ""+a*p2+"" ""+a*b*p3);
                    return;
                }
            }
        }
    }
    
    public static long powerUsingBinaryExponentation(int n,long base){
        long ans = 1L;
        long mod = (long) Math.pow(10,9)+7L;

        while(n>0){
            if(n%2 == 1){
                ans =  (ans*base)%mod;
                n-= 1;
            }else{
                base = (int) (base*base)%mod;
                n /= 2;
            }

        }
        return ans;
    }
}
class pair{
    int value;int index;
    public pair(int value,int index){
        this.value = value;
        this.index = index;
    }
}
class tuple{
    int x;
    int y;
    int prev;

    int time;

    public tuple(int x,int y,int prev,int time){
        this.x = x;
        this.y = y;
        this.prev = prev;
        this.time = time;
    }
}
","import javax.rmi.ssl.SslRMIClientSocketFactory;
import java.lang.reflect.Array;
import java.util.Scanner;
import java.util.*;
import java.io.*;

public class Main {



    public void sieve(int n,int p[]){
        p[2]=1;
        for(int i=2;i<=n;i++){
            if(p[i] == 0)continue;
            for(int j=i*i;j<=n;j+=i){
                p[j]=0;
            }
        }
    }

    
    public static long gcd(long a,long b){
        if(a == 0)return b;
        return gcd(b%a,a);
    }


    public static void println(int n){
        System.out.println(n);
    }
    public static void print(int n){
        System.out.print(n);
    }
    public static void println(long n){System.out.println(n);}
    public static void println(String n){
        System.out.println(n);
    }
    public static void print(String n){
        System.out.print(n);
    }

    static int yy = 0;

    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);
        int mod = (int) Math.pow(10, 9) + 7;
        int t = 1;
        while (t-- > 0) {
           int n = sc.nextInt();
           boolean ans = false;
           for(int i=0;i<n;i++){
               String s = sc.next();
               if(is(s))ans = true;
           }

           if(ans)println(""Yes"");
           else println(""No"");


        }
    }
    static boolean is(String w){
        if(w.equals(""and"") || w.equals(""not"") || w.equals(""that"")|| w.equals(""the"") || w.equals(""you""))return true;
        return false;
    }
    static void f(int arr[],int index){

        


    }
    public static boolean V(int x,int y,int n,int m){
        if(x>=0 && y>=0 && x<n && y<m)return false;
        else return true;
    }
    public static boolean isPerfectSquare(int n){
        double sqrt = Math.sqrt((double)n);
        return ((sqrt-Math.floor((sqrt))) == 0);
    }
    static void runtest(int a,int b){
        for(int p1=1;p1<100;p1++){
            for(int p2=1;p2<100;p2++){
                int p3 = (p1+p2)/b;
                if((p1+p2)%b == 0 && p1!=p2 && (a*p1)%b!=0 && (a*p2)%b!=0 && (a*p1!=a*b*p3) && (a*p2!=a*b*p3)){
                    println(""YES"");
                    println(a*p1+"" ""+a*p2+"" ""+a*b*p3);
                    return;
                }
            }
        }
    }
    
    public static long powerUsingBinaryExponentation(int n,long base){
        long ans = 1L;
        long mod = (long) Math.pow(10,9)+7L;

        while(n>0){
            if(n%2 == 1){
                ans =  (ans*base)%mod;
                n-= 1;
            }else{
                base = (int) (base*base)%mod;
                n /= 2;
            }

        }
        return ans;
    }
}
class pair{
    int value;int index;
    public pair(int value,int index){
        this.value = value;
        this.index = index;
    }
}
class tuple{
    int x;
    int y;
    int prev;

    int time;

    public tuple(int x,int y,int prev,int time){
        this.x = x;
        this.y = y;
        this.prev = prev;
        this.time = time;
    }
}
",WA
rocket_zacky ,abc295/A,Java,"import java.util.*;
public class Main {
  public static void main(String[] args){
    Scanner sc = new Scanner(System.in);
    
    int n = sc.nextInt();
    
    int flg = 0;
    for (int i = 0; i < n; i++){
      
	  String s = sc.next();
      if (s.equals(""and"") || s.equals(""not"") || s.equals(""that"") || s.equals(""the"") || s.equals(""you"")){
        flg = 1;
        break;
      }
    }
    
    if (flg == 1){
      System.out.println(""yes"");
    }
    else {
		System.out.println(""no"");
    }
  }
}
","import java.util.*;
public class Main {
  public static void main(String[] args){
    Scanner sc = new Scanner(System.in);
    
    int n = sc.nextInt();
    
    int flg = 0;
    for (int i = 0; i < n; i++){
      
	  String s = sc.next();
      if (s.equals(""and"") || s.equals(""not"") || s.equals(""that"") || s.equals(""the"") || s.equals(""you"")){
        flg = 1;
        break;
      }
    }
    
    if (flg == 1){
      System.out.println(""Yes"");
    }
    else {
		System.out.println(""No"");
    }
  }
}
",WA
proteasome ,abc295/A,Java,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        @SuppressWarnings(""resource"")
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[] s = new String[n];
        for (int i = 0 ; i < n ; i++) {
            s[i] = sc.next();
        }
        for (int i = 0 ; i < n ; i++) {
            if (s[i].equals(""and"") || s[i].equals(""not"") || s[i].equals(""that"") || s[i].equals(""the"") || s[i].equals(""no"")) {
                System.out.println(""Yes"");
                return;
            }
        }
        System.out.println(""No"");
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        @SuppressWarnings(""resource"")
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[] s = new String[n];
        for (int i = 0 ; i < n ; i++) {
            s[i] = sc.next();
        }
        for (int i = 0 ; i < n ; i++) {
            if (s[i].equals(""and"") || s[i].equals(""not"") || s[i].equals(""that"") || s[i].equals(""the"") || s[i].equals(""you"")) {
                System.out.println(""Yes"");
                return;
            }
        }
        System.out.println(""No"");
    }
}
",WA
proteasome ,abc295/A,Java,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        @SuppressWarnings(""resource"")
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[] s = new String[n];
        for (int i = 0 ; i < n ; i++) {
            s[i] = sc.next();
        }
        for (int i = 0 ; i < n ; i++) {
            if (s.equals(""and"") || s.equals(""not"") || s.equals(""that"") || s.equals(""the"") || s.equals(""no"")) {
                System.out.println(""Yes"");
                return;
            }
        }
        System.out.println(""No"");
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        @SuppressWarnings(""resource"")
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[] s = new String[n];
        for (int i = 0 ; i < n ; i++) {
            s[i] = sc.next();
        }
        for (int i = 0 ; i < n ; i++) {
            if (s[i].equals(""and"") || s[i].equals(""not"") || s[i].equals(""that"") || s[i].equals(""the"") || s[i].equals(""you"")) {
                System.out.println(""Yes"");
                return;
            }
        }
        System.out.println(""No"");
    }
}
",WA
AkaiKitune ,abc295/A,Java,"import java.util.*;
class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int a = scanner.nextInt();
     for (int i = 0; i < a; i++){
       String W = scanner.next();
       if(W.equals(""and"")||W.equals(""not"")||W.equals(""the"")||W.equals(""you"")){
          System.out.println(""Yes"");
          return;
       }
     }
      System.out.println(""No"");
    }
}
","import java.util.*;
class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int a = scanner.nextInt();
     for (int i = 0; i < a; i++){
       String W = scanner.next();
       if(W.equals(""and"")||W.equals(""not"")||W.equals(""the"")||W.equals(""you"")||W.equals(""that"")){
          System.out.println(""Yes"");
          return;
       }
     }
      System.out.println(""No"");
    }
}
",WA
Rajgupta ,abc295/A,Java,"import java.util.*;

public class Main{
	public static void main(String[] args) {
		Scanner sc= new Scanner(System.in);
		int n = sc.nextInt();
		String [] raj = new String [n];
		for(int i=0;i<n;i++)
			arr[i]= sc.next();
		
		boolean ans=false;
		 for(int i=0;i<n;i++){
			if(raj[i].equals(""and"") || raj[i].equals(""not"")|| raj[i].equals(""that"")|| raj[i].equals(""the"")||raj[i].equals(""you"")){
				ans=true;
				break;
			}

		}
		if(ans==true)
			System.out.println(""Yes"");
		else
			System.out.println(""No"");
	}
}
","import java.util.*;

public class Main{
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		String [] raj = new String [n];
		for(int i=0;i<n;i++)
			raj[i]= sc.next();
		
		boolean ans=false;
		 for(int i=0;i<n;i++){
			if(raj[i].equals(""and"") || raj[i].equals(""not"")|| raj[i].equals(""that"")|| raj[i].equals(""the"")||raj[i].equals(""you"")){
				ans=true;
				break;
			}

		}
		if(ans==true)
			System.out.println(""Yes"");
		else
			System.out.println(""No"");
	}
}
",CE
Rajgupta ,abc295/A,Java,"import java.util.*;

public class Main{
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		String [] raj = new String [n];
		for(int i=0;i<n;i++)
			raj[i]= sc.next();
		
		boolean ans=false;
		 for(int i=0;i<n;i++){
			if(raj[i]==""and"" || raj[i]==""not""|| raj[i]==""that""|| raj[i]==""the""||raj[i]==""you""){
				ans=true;
				break;
			}

		}
		if(ans==true)
			System.out.println(""Yes"");
		else
			System.out.println(""No"");
	}
}
","import java.util.*;

public class Main{
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		String [] raj = new String [n];
		for(int i=0;i<n;i++)
			raj[i]= sc.next();
		
		boolean ans=false;
		 for(int i=0;i<n;i++){
			if(raj[i].equals(""and"") || raj[i].equals(""not"")|| raj[i].equals(""that"")|| raj[i].equals(""the"")||raj[i].equals(""you"")){
				ans=true;
				break;
			}

		}
		if(ans==true)
			System.out.println(""Yes"");
		else
			System.out.println(""No"");
	}
}
",WA
Gunjeet05 ,abc295/A,Java,"import java.util.*;

public class Main {
public static void main(String[] args) {
Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    Set<String> set = new HashSet<>(Arrays.asList(""and"", ""not"", ""that"", ""the"", ""or"", ""you""));

    for (int i = 0; i < n; i++) {
        String word = scanner.next();
        if (set.contains(word)) {
            System.out.println(""Yes"");
            return;
        }
    }

    System.out.println(""No"");
}
}
","import java.util.*;
 
public class Main {
public static void main(String[] args) {
Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    Set<String> set = new HashSet<>(Arrays.asList(""and"", ""not"", ""that"", ""the"",  ""you""));
 
    for (int i = 0; i < n; i++) {
        String word = scanner.next();
        if (set.contains(word)) {
            System.out.println(""Yes"");
            return;
        }
    }
 
    System.out.println(""No"");
}
}
",WA
Moldir ,abc295/A,Java,"
import java.util.Arrays;
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Set<String> keys = new HashSet<>(Arrays.asList(""and"", ""not"", ""that"", ""the"", ""or"", ""you""));
        int n = sc.nextInt();
        boolean found = false;
        for(int i = 0; i < n; i++){
            String word = sc.next();
            if(keys.contains(word)){
                found = true;
                break;
            }
        }
        if(found){
            System.out.println(""Yes"");
        }
        else{
            System.out.println(""No"");
        }
    }
}
","
import java.util.Arrays;
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Set<String> keys = new HashSet<>(Arrays.asList(""and"", ""not"", ""that"", ""the"", ""you""));
        int n = sc.nextInt();
        boolean found = false;
        for(int i = 0; i < n; i++){
            String word = sc.next();
            if(keys.contains(word)){
                found = true;
                break;
            }
        }
        if(found){
            System.out.println(""Yes"");
        }
        else{
            System.out.println(""No"");
        }
    }
}
",WA
Moldir ,abc295/A,Java,"package Codeforces;

import java.util.Arrays;
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Set<String> keys = new HashSet<>(Arrays.asList(""and"", ""not"", ""that"", ""the"", ""or"", ""you""));
        int n = sc.nextInt();
        boolean found = false;
        for(int i = 0; i < n; i++){
            String word = sc.next();
            if(keys.contains(word)){
                found = true;
                break;
            }
        }
        if(found){
            System.out.println(""Yes"");
        }
        else{
            System.out.println(""No"");
        }
    }
}
","
import java.util.Arrays;
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Set<String> keys = new HashSet<>(Arrays.asList(""and"", ""not"", ""that"", ""the"", ""you""));
        int n = sc.nextInt();
        boolean found = false;
        for(int i = 0; i < n; i++){
            String word = sc.next();
            if(keys.contains(word)){
                found = true;
                break;
            }
        }
        if(found){
            System.out.println(""Yes"");
        }
        else{
            System.out.println(""No"");
        }
    }
}
",RE
NABETAKU ,abc295/A,Java,"
import java.util.Scanner;

public class ABC295a {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        final int N = sc.nextInt();
        sc.nextLine();
        String[] W = sc.nextLine().split("" "");
        sc.close();

        int ans = 0;
        for (int i = 0; i < N; i++){
            if(W[i].equals(""and"") || W[i].equals(""not"") || W[i].equals(""that"") || W[i].equals(""the"") || W[i].equals(""you"")){
                ans++;
            }
            
        }

        if (ans == 0) System.out.println(""No"");
        else System.out.println(""Yes"");
    }
}
","
import java.util.Scanner;

class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        final int N = sc.nextInt();
        sc.nextLine();
        String[] W = sc.nextLine().split("" "");
        sc.close();

        int ans = 0;
        for (int i = 0; i < N; i++){
            if(W[i].equals(""and"") || W[i].equals(""not"") || W[i].equals(""that"") || W[i].equals(""the"") || W[i].equals(""you"")){
                ans++;
            }
            
        }

        if (ans == 0) System.out.println(""No"");
        else System.out.println(""Yes"");
    }
}
",CE
fuyou ,abc295/A,Java,"import  java.util.*;
public class Main {
    static Scanner sc=new Scanner(System.in);

    public static void main(String[] args) {
        int t= sc.nextInt();
        String[]s= new String[t];
        for(int i=0;i<t;i++) s[i]=sc.next();
        for(String ss:s){
            if(ss.equals(""yes"")) {
                System.out.println(""Yes"");
                return;
            }
        }
        System.out.println(""No"");
    }
}
","import  java.util.*;
public class Main {
    static Scanner sc=new Scanner(System.in);

    public static void main(String[] args) {
        int t= sc.nextInt();
        Set<String> set=new HashSet<>();
        String[]s= new String[t];
        for(int i=0;i<t;i++) s[i]=sc.next();
        for(String ss:s){
            if(ss.equals(""and"")||ss.equals(""not"")||ss.equals(""that"")||ss.equals(""the"")||ss.equals(""you"")) {
                System.out.println(""Yes"");
                return;
            }
        }
        System.out.println(""No"");
    }
}
",WA
Ashraf_Ali ,abc295/A,Java,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.*;
import java.util.regex.Pattern;

public class Probable {
    public static void main(String[] args) {
        try {
            BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
            int length = Integer.parseInt(reader.readLine());
            String[] data = reader.readLine().split(Pattern.quote("" ""));
            System.out.println(IsProbable(data));
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    public static String IsProbable(String[] data) {
        List<String> probdata = new ArrayList<>();
        probdata.add(""you"");
        probdata.add(""and"");
        probdata.add(""that"");
        probdata.add(""the"");
        probdata.add(""not"");
        for (int i = 0; i < data.length; i++) {
            if (probdata.contains(data[i])) {
                return ""Yes"";
            }
        }
        return ""No"";
    }

}
","import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.*;
import java.util.regex.Pattern;

public class Main {
    public static void main(String[] args) {
        try {
            BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
            int length = Integer.parseInt(reader.readLine());
            String[] data = reader.readLine().split(Pattern.quote("" ""));
            System.out.println(IsProbable(data));
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    public static String IsProbable(String[] data) {
        List<String> probdata = new ArrayList<>();
        probdata.add(""you"");
        probdata.add(""and"");
        probdata.add(""that"");
        probdata.add(""the"");
        probdata.add(""not"");
        for (int i = 0; i < data.length; i++) {
            if (probdata.contains(data[i])) {
                return ""Yes"";
            }
        }
        return ""No"";
    }

}
",CE
amenokayoubi ,abc295/A,Java,"import java.util.*;
import java.util.regex.*;

public class Main {
    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner (System.in);
        Integer N =  Integer.parseInt(sc.nextLine());
        String[] words = sc.nextLine().split("" "");
        Pattern pattern = Pattern.compile(""^(and|not|that|the|you)$"");
        
        for (String word: words) {
            Matcher matcher = pattern.matcher(word);
            if (matcher.find()) {
                System.out.println(""yes"");
                return;
            }
        }
        System.out.println(""no"");
    }
}
","import java.util.*;
import java.util.regex.*;

public class Main {
    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner (System.in);
        Integer N =  Integer.parseInt(sc.nextLine());
        String[] words = sc.nextLine().split("" "");
        Pattern pattern = Pattern.compile(""^(and|not|that|the|you)$"");
        
        for (String word: words) {
            Matcher matcher = pattern.matcher(word);
            if (matcher.find()) {
                System.out.println(""Yes"");
                return;
            }
        }
        System.out.println(""No"");
    }
}
",WA
Devsharma122 ,abc295/A,Java,"import java.util.*;
public class Mainn {
    public static void main(String[] args) {
      Scanner sc=new Scanner(System.in);
      int n=sc.nextInt();
      int count=0;
      for(int i=0;i<n;i++){
        	String w = sc.next();
        if(w.equals(""and"")){
       
          count++;
        		break;
        }
        else if(w.equals(""not"")){
       
          count++;
          break;
        }
        else if(w.equals(""the"")){
          
          count++;
          break;
        }
         else if(w.equals(""that"")){
        
           count++;
           break;
        }
        
         else if(w.equals(""you"")){
        
           count++;
        break;
         }
      }
      if(count>0){
        System.out.println(""Yes"");
      }
      else {
        System.out.println(""No"");
    }
      }
}
","import java.util.*;
public class Main {
    public static void main(String[] args) {
      Scanner sc=new Scanner(System.in);
      int n=sc.nextInt();
      int count=0;
      for(int i=0;i<n;i++){
        	String w = sc.next();
        if(w.equals(""and"")){
       
          count++;
        		break;
        }
        else if(w.equals(""not"")){
       
          count++;
          break;
        }
        else if(w.equals(""the"")){
          
          count++;
          break;
        }
         else if(w.equals(""that"")){
        
           count++;
           break;
        }
        
         else if(w.equals(""you"")){
        
           count++;
        break;
         }
      }
      if(count>0){
        System.out.println(""Yes"");
      }
      else {
        System.out.println(""No"");
    }
      }
}
",CE
Teertha_Deb ,abc295/A,Java,"import java.util.Scanner;
public class Untitled {
	static void solve()
	{
		Scanner myobj = new Scanner(System.in);
		int n;
		String s = myobj.nextLine();
		n = Integer.parseInt(s);
		String [] str_1 = {""and"" , ""not"" , ""that"" , ""the"" , ""you""};
		String str_2 = myobj.nextLine();
		String [] str_3 = str_2.split("" "");
		for (String string : str_3) {
			for(int i = 0 ; i<str_1.length ; i++){
				if(str_1[i].equalsIgnoreCase(string)){
					System.out.println(""Yes"");
					return;
				}
			}
		}
		System.out.println(""No"");
	}
	public static void main(String[] args) {
		Scanner myobj = new Scanner(System.in);
		int Test_cases = 1 , i = 1;
		
		for(;i <= Test_cases ; i++){
			
			solve();
		}
		myobj.close();
	}
}
","import java.util.Scanner;
public class Main {
	static void solve()
	{
		Scanner myobj = new Scanner(System.in);
		int n;
		String s = myobj.nextLine();
		n = Integer.parseInt(s);
		String [] str_1 = {""and"" , ""not"" , ""that"" , ""the"" , ""you""};
		String str_2 = myobj.nextLine();
		String [] str_3 = str_2.split("" "");
		for (String string : str_3) {
			for(int i = 0 ; i<str_1.length ; i++){
				if(str_1[i].equalsIgnoreCase(string)){
					System.out.println(""Yes"");
					return;
				}
			}
		}
		System.out.println(""No"");
	}
	public static void main(String[] args) {
		Scanner myobj = new Scanner(System.in);
		int Test_cases = 1 , i = 1;
		
		for(;i <= Test_cases ; i++){
			
			solve();
		}
		myobj.close();
	}
}
",CE
Imcyj123 ,abc295/A,Java,"import java.io.BufferedReader;
import java.io.InputStreamReader;

public class Main {
    final static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));

    public static void main(String[] args) throws Exception {
        in.readLine();
        String[] split = in.readLine().split("" "");
        boolean yes = false;
        for (String s : split) {
            if (s.equals(""and"") || s.equals(""not"") || s.equals(""that"") || s.equals(""the"") || s.equals(""or"") || s.equals(""you"")) {
                yes = true;
                break;
            }
        }
        System.out.println(yes ? ""Yes"" : ""No"");
    }
}
","import java.io.BufferedReader;
import java.io.InputStreamReader;

public class Main {
    final static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));

    public static void main(String[] args) throws Exception {
        in.readLine();
        String[] split = in.readLine().split("" "");
        boolean yes = false;
        for (String s : split) {
            if (s.equals(""and"") || s.equals(""not"") || s.equals(""that"") || s.equals(""the"") || s.equals(""you"")) {
                yes = true;
                break;
            }
        }
        System.out.println(yes ? ""Yes"" : ""No"");
    }
}
",WA
guchi5 ,abc295/A,Java,"import java.util.*;
public class Main{
    public static void main(String args[]){
        Scanner scan =  new Scanner(System.in);
        int num = scan.nextInt();
        scan =  new Scanner(System.in);
        List<String> list = new ArrayList<>(Arrays.asList(""and"", ""not"", ""that"", ""the"", ""you""));
        boolean isElement = false;
        for(int i=0;i<num;i++){
            String parm = scan.next();
            if(list.indexOf(parm) != -1){
                isElement = true;
                break;
            }        
        }
        if(isElement){
            System.out.println(""Yes"");
        }else{
            System.out.println(""No"");
        }
    }
}
","import java.util.*;
public class Main{
    public static void main(String args[]){
        Scanner scan =  new Scanner(System.in);
        int num = scan.nextInt();
        List<String> list = new ArrayList<>(Arrays.asList(""and"", ""not"", ""that"", ""the"", ""you""));
        boolean isElement = false;
        
        for(int i=0;i<num;i++){
            String parm = scan.next();
            if(list.indexOf(parm) != -1){
                isElement = true;
                break;
            }        
        }
        if(isElement){
            System.out.println(""Yes"");
        }else{
            System.out.println(""No"");
        }

    }
}
",RE
guchi5 ,abc295/A,Java,"import java.util.*;
class Main{
    public static void main(String args[]){
        Scanner scan =  new Scanner(System.in);
        int num = scan.nextInt();
        scan =  new Scanner(System.in);
        List<String> list = new ArrayList<>(Arrays.asList(""and"", ""not"", ""that"", ""the"", ""you""));
        boolean isElement = false;
        for(int i=0;i<num;i++){
            String parm = scan.next();
            if(list.indexOf(parm) != -1){
                isElement = true;
                break;
            }        
        }
        if(isElement){
            System.out.println(""Yes"");
        }else{
            System.out.println(""No"");
        }
    }
}
","import java.util.*;
public class Main{
    public static void main(String args[]){
        Scanner scan =  new Scanner(System.in);
        int num = scan.nextInt();
        List<String> list = new ArrayList<>(Arrays.asList(""and"", ""not"", ""that"", ""the"", ""you""));
        boolean isElement = false;
        
        for(int i=0;i<num;i++){
            String parm = scan.next();
            if(list.indexOf(parm) != -1){
                isElement = true;
                break;
            }        
        }
        if(isElement){
            System.out.println(""Yes"");
        }else{
            System.out.println(""No"");
        }

    }
}
",RE
guchi5 ,abc295/A,Java,"import java.util.*;
class test2{
    public static void main(String args[]){
        Scanner scan =  new Scanner(System.in);
        int num = scan.nextInt();
        scan =  new Scanner(System.in);
        List<String> list = new ArrayList<>(Arrays.asList(""and"", ""not"", ""that"", ""the"", ""you""));
        boolean isElement = false;
        for(int i=0;i<num;i++){
            String parm = scan.next();
            if(list.indexOf(parm) != -1){
                isElement = true;
                break;
            }        
        }
        if(isElement){
            System.out.println(""Yes"");
        }else{
            System.out.println(""No"");
        }
    }
}
","import java.util.*;
public class Main{
    public static void main(String args[]){
        Scanner scan =  new Scanner(System.in);
        int num = scan.nextInt();
        List<String> list = new ArrayList<>(Arrays.asList(""and"", ""not"", ""that"", ""the"", ""you""));
        boolean isElement = false;
        
        for(int i=0;i<num;i++){
            String parm = scan.next();
            if(list.indexOf(parm) != -1){
                isElement = true;
                break;
            }        
        }
        if(isElement){
            System.out.println(""Yes"");
        }else{
            System.out.println(""No"");
        }

    }
}
",RE
Katsu8998 ,abc295/A,Java,"import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int times = sc.nextInt();
		sc.nextLine();

		String[] w = sc.nextLine().split("" "");
		List<String>word = Arrays.asList(w);
		if(word.contains(""you"") || word.contains(""the"") || word.contains(""that"")
				|| word.contains(""not"") || word.contains(""and"")) {
			System.out.println(""yes"");
		}else {
			System.out.println(""no"");
		}

	}
}
","import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
 
public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int times = sc.nextInt();
		sc.nextLine();
 
		String[] w = sc.nextLine().split("" "");
		List<String>word = Arrays.asList(w);
		if(word.contains(""you"") || word.contains(""the"") || word.contains(""that"")
				|| word.contains(""not"") || word.contains(""and"")) {
			System.out.println(""Yes"");
		}else {
			System.out.println(""No"");
		}
 
	}
}
",WA
Katsu8998 ,abc295/A,Java,"import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

public class Main1 {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int times = sc.nextInt();
		sc.nextLine();

		String[] w = sc.nextLine().split("" "");
		List<String>word = Arrays.asList(w);
		if(word.contains(""you"") || word.contains(""the"") || word.contains(""that"")
				|| word.contains(""not"") || word.contains(""and"")) {
			System.out.println(""yes"");
		}else {
			System.out.println(""no"");
		}

	}
}
","import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
 
public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int times = sc.nextInt();
		sc.nextLine();
 
		String[] w = sc.nextLine().split("" "");
		List<String>word = Arrays.asList(w);
		if(word.contains(""you"") || word.contains(""the"") || word.contains(""that"")
				|| word.contains(""not"") || word.contains(""and"")) {
			System.out.println(""Yes"");
		}else {
			System.out.println(""No"");
		}
 
	}
}
",CE
Katsu8998 ,abc295/A,Java,"import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int times = sc.nextInt();
		sc.nextLine();

		String[] w = sc.nextLine().split("" "");
		System.out.println(w[0]);
		List<String>word = Arrays.asList(w);
		if(word.contains(""you"") || word.contains(""the"") || word.contains(""that"")
				|| word.contains(""not"") || word.contains(""and"")) {
			System.out.println(""yes"");
		}else {
			System.out.println(""no"");
		}

	}
}
","import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
 
public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int times = sc.nextInt();
		sc.nextLine();
 
		String[] w = sc.nextLine().split("" "");
		List<String>word = Arrays.asList(w);
		if(word.contains(""you"") || word.contains(""the"") || word.contains(""that"")
				|| word.contains(""not"") || word.contains(""and"")) {
			System.out.println(""Yes"");
		}else {
			System.out.println(""No"");
		}
 
	}
}
",WA
Katsu8998 ,abc295/A,Java,"import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

public class Main1 {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int times = sc.nextInt();
		sc.nextLine();

		String[] w = sc.nextLine().split("" "");
		System.out.println(w[0]);
		List<String>word = Arrays.asList(w);
		if(word.contains(""you"") || word.contains(""the"") || word.contains(""that"")
				|| word.contains(""not"") || word.contains(""and"")) {
			System.out.println(""yes"");
		}else {
			System.out.println(""no"");
		}

	}
}
","import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
 
public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int times = sc.nextInt();
		sc.nextLine();
 
		String[] w = sc.nextLine().split("" "");
		List<String>word = Arrays.asList(w);
		if(word.contains(""you"") || word.contains(""the"") || word.contains(""that"")
				|| word.contains(""not"") || word.contains(""and"")) {
			System.out.println(""Yes"");
		}else {
			System.out.println(""No"");
		}
 
	}
}
",CE
room335 ,abc295/A,Java,"import java.util.*;

public class Main {
    public static void main(String[] args) {
        
        
        Scanner sc = new Scanner(System.in);
        String N = sc.nextLine();
        String mojiretsu= sc.nextLine();
        String[] data =mojiretsu.split("" "");
        int num = Integer.parseInt(N);
        String answer = ""no"";
        for (int i = 0; i < num; i++) {
            if (data[i].equals(""and"") || data[i].equals(""not"") || data[i].equals(""that"") || data[i].equals(""the"") || data[i].equals(""you"")) {
                answer = ""yes"";
            }
        }
        System.out.println(answer);

    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args) {
        
        
        Scanner sc = new Scanner(System.in);
        String N = sc.nextLine();
        String mojiretsu= sc.nextLine();
        String[] data =mojiretsu.split("" "");
        int num = Integer.parseInt(N);
        String answer = ""No"";
        for (int i = 0; i < num; i++) {
            if (data[i].equals(""and"") || data[i].equals(""not"") || data[i].equals(""that"") || data[i].equals(""the"") || data[i].equals(""you"")) {
                answer = ""Yes"";
            }
        }
        System.out.println(answer);

    }
}
",WA
ai310 ,abc295/A,Java,"import java.util.*;

public class Abc295 {
    public static void main(String[] args){
        String[] targetStr = {""and"", ""not"", ""that"", ""the"", ""you""};
        List<String> targets = new ArrayList<String>(Arrays.asList(targetStr));

        Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();

        String result = ""No"";
        for (int i=0;i<N;i++){
            String Wi = sc.next();
            if (targets.contains(Wi)) {
                result = ""Yes"";
                break;
            }
        }
        System.out.println(result);
    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args){
        String[] targetStr = {""and"", ""not"", ""that"", ""the"", ""you""};
        List<String> targets = new ArrayList<String>(Arrays.asList(targetStr));

        Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();

        String result = ""No"";
        for (int i=0;i<N;i++){
            String Wi = sc.next();
            if (targets.contains(Wi)) {
                result = ""Yes"";
                break;
            }
        }
        System.out.println(result);
    }
}
",CE
ai310 ,abc295/A,Java,"import java.util.*;

public class Abc295 {
    public static void main(String[] args){
        String[] targetStr = {""and"", ""not"", ""that"", ""the"", ""you""};
        List<String> targets = new ArrayList<String>(Arrays.asList(targetStr));

        Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();

        String result = ""No"";
        for (int i=0;i<N;i++){
            String Wi = sc.next();
            if (targets.contains(Wi)) {
                result = ""Yes"";
                break;
            }
        }
        System.out.println(result);
    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args){
        String[] targetStr = {""and"", ""not"", ""that"", ""the"", ""you""};
        List<String> targets = new ArrayList<String>(Arrays.asList(targetStr));

        Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();

        String result = ""No"";
        for (int i=0;i<N;i++){
            String Wi = sc.next();
            if (targets.contains(Wi)) {
                result = ""Yes"";
                break;
            }
        }
        System.out.println(result);
        sc.close();
    }
}
",CE
amakura ,abc295/A,Java,"import java.util.*;
import java.util.LinkedList.*;
public class Main {
   
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in); 
        int n = sc.nextInt();
        sc.next();
        String w[] = sc.nextLine().split("" "");
      boolean ans = false;
        for(int i=0;i<n;i++){
          if(w[i].equals(""and"")) ans = true; 
          if(w[i].equals(""not"")) ans = true;
          if(w[i].equals(""that"")) ans = true;
          if(w[i].equals(""the"")) ans = true;
          if(w[i].equals(""you"")) ans = true;
          
        }
      if(ans == true){
        System.out.println(""Yes"");
      }else{
       System.out.println(""No""); 
      }
        
        
      
  }
  
  
  
}
","import java.util.*;
import java.util.LinkedList.*;
public class Main {
   
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in); 
        int n = sc.nextInt();
        sc.skip(""\\r?\\n"");
        String w[] = sc.nextLine().split("" "");
      boolean ans = false;
        for(int i=0;i<n;i++){
          if(w[i].equals(""and"")) ans = true; 
          if(w[i].equals(""not"")) ans = true;
          if(w[i].equals(""that"")) ans = true;
          if(w[i].equals(""the"")) ans = true;
          if(w[i].equals(""you"")) ans = true;
          
        }
      if(ans == true){
        System.out.println(""Yes"");
      }else{
       System.out.println(""No""); 
      }
        
        
      
  }
  
  
  
}
",WA
Katharsis13 ,abc295/A,Java,"import java.util.*;
import java.io.*;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    static final int N = 100010;
    static int n; 
    
    public static void main(String[] args) throws Exception {
        n = Integer.parseInt(br.readLine());

        String str[] = br.readLine().split("" "");
        boolean ans = false;
        for(int i = 0; i < n; i ++ ) {
            if(str[i].equals(""and"") || str[i].equals(""not"") || str[i].equals(""that"") || str[i].equals(""you"")) {
                ans = true;
                break;
            }
        }
        if(ans) bw.write(""Yes\n"");
        else bw.write(""No\n"");
        bw.flush();
    }
}
","import java.util.*;
import java.io.*;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    static final int N = 100010;
    static int n; 
    
    public static void main(String[] args) throws Exception {
        n = Integer.parseInt(br.readLine());

        String str[] = br.readLine().split("" "");
        boolean ans = false;
        for(int i = 0; i < n; i ++ ) {
            if(str[i].equals(""and"") || str[i].equals(""not"") || str[i].equals(""that"") || str[i].equals(""you"") || str[i].equals(""the"")) {
                ans = true;
                break;
            }
        }
        if(ans) bw.write(""Yes\n"");
        else bw.write(""No\n"");
        bw.flush();
    }
}
",WA
Nacre ,abc298/F,Java,"import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Scanner;
 
public class Main {
	
	public static void main(String[] args) {
		
		try(Scanner sc = new Scanner(System.in);){
			
			PrintWriter out = new PrintWriter(System.out);
			StringBuilder sb = new StringBuilder();
			
			int n = Integer.parseInt(sc.next());
			
			Map<Integer, Long> rmap = new HashMap<Integer, Long>();
			Map<Integer, Long> cmap = new HashMap<Integer, Long>();
			Map<Map<Integer, Integer>, Long> pmap = new HashMap<Map<Integer,Integer>, Long>();
			
			for(int i = 0; i < n; i++) {
				int r = Integer.parseInt(sc.next());
				int c = Integer.parseInt(sc.next());
				Long x = Long.parseLong(sc.next());
				
				rmap.merge(r, x, Long::sum);
				cmap.merge(c, x, Long::sum);
				
				HashMap<Integer, Integer> tmp = new HashMap<Integer, Integer>();
				tmp.put(r, c);
				
				pmap.put(tmp, x);
			}
			
			List<Entry<Integer, Long>> list = new ArrayList<Entry<Integer, Long>>(cmap.entrySet());
			list.sort(Entry.comparingByValue());
			
			long ans = 0L;
			for(Map.Entry<Integer, Long> row : rmap.entrySet()) {
				for(int i = list.size() - 1;  i >= 0; i--) {
					Entry<Integer, Long> cmax = list.get(list.size() - 1);
					
					HashMap<Integer, Integer> tmp = new HashMap<Integer, Integer>();
					tmp.put(row.getKey(), cmax.getKey());
					
					Long v = pmap.get(tmp);
					
					if(v == null) {
						ans = Math.max(ans, row.getValue() + cmax.getValue());
						break;
					} else {
						ans = Math.max(ans, row.getValue() + cmax.getValue() - v);
					}
				}
				
				
				
				
				
			}
			
			sb.append(ans);
			
			out.println(sb.toString());
			out.flush();
			
		}
		
	}

}
","import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Scanner;
 
public class Main {
	
	public static void main(String[] args) {
		
		try(Scanner sc = new Scanner(System.in);){
			
			PrintWriter out = new PrintWriter(System.out);
			StringBuilder sb = new StringBuilder();
			
			int n = Integer.parseInt(sc.next());
			
			Map<Integer, Long>	rmap = new HashMap<Integer, Long>();
			Map<Integer, Long>	cmap = new HashMap<Integer, Long>();
			Map<Map<Integer, Integer>, Long> pmap = new HashMap<Map<Integer,Integer>, Long>();
			
			for(int i = 0; i < n; i++) {
				int r = Integer.parseInt(sc.next());
				int c = Integer.parseInt(sc.next());
				Long x = Long.parseLong(sc.next());
				
				rmap.merge(r, x, Long::sum);
				cmap.merge(c, x, Long::sum);
				
				HashMap<Integer, Integer> tmp = new HashMap<Integer, Integer>();
				tmp.put(r, c);
				
				pmap.put(tmp, x);
			}
			
			List<Entry<Integer, Long>> list = new ArrayList<Entry<Integer, Long>>(cmap.entrySet());
			list.sort(Entry.comparingByValue());
			
			long ans = 0L;
			for(Map.Entry<Integer, Long> row : rmap.entrySet()) {
				for(int i = list.size() - 1;  i >= 0; i--) {
					Entry<Integer, Long> cmax = list.get(i);
					
					HashMap<Integer, Integer> tmp = new HashMap<Integer, Integer>();
					tmp.put(row.getKey(), cmax.getKey());
					
					Long v = pmap.get(tmp);
					
					if(v == null) {
						ans = Math.max(ans, row.getValue() + cmax.getValue());
						break;
					} else {
						ans = Math.max(ans, row.getValue() + cmax.getValue() - v);
					}
				}
			}
			
			sb.append(ans);
			
			out.println(sb.toString());
			out.flush();
			
		}
		
	}
	
}
",WA
Nacre ,abc298/F,Java,"import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Scanner;
 
public class Main {
	
	public static void main(String[] args) {
		
		try(Scanner sc = new Scanner(System.in);){
			
			PrintWriter out = new PrintWriter(System.out);
			StringBuilder sb = new StringBuilder();
			
			int n = Integer.parseInt(sc.next());
			
			Map<Integer, Long> rmap = new HashMap<Integer, Long>();
			Map<Integer, Long> cmap = new HashMap<Integer, Long>();
			Map<Map<Integer, Integer>, Long> pmap = new HashMap<Map<Integer,Integer>, Long>();
			
			for(int i = 0; i < n; i++) {
				int r = Integer.parseInt(sc.next());
				int c = Integer.parseInt(sc.next());
				Long x = Long.parseLong(sc.next());
				
				rmap.merge(r, x, Long::sum);
				cmap.merge(c, x, Long::sum);
				
				HashMap<Integer, Integer> tmp = new HashMap<Integer, Integer>();
				tmp.put(r, c);
				
				pmap.put(tmp, x);
			}
			
			List<Entry<Integer, Long>> list = new ArrayList<Entry<Integer, Long>>(cmap.entrySet());
			list.sort(Entry.comparingByValue());
			
			long ans = 0L;
			for(Map.Entry<Integer, Long> row : rmap.entrySet()) {
				for(int i = list.size() - 1;  i >= 0; i--) {
					Entry<Integer, Long> cmax = list.get(list.size() - 1);
					
					HashMap<Integer, Integer> tmp = new HashMap<Integer, Integer>();
					tmp.put(row.getKey(), cmax.getKey());
					
					Long v = pmap.get(tmp);
					
					if(v == null) {
						ans = Math.max(ans, row.getValue() + cmax.getValue());
						break;
					} else {
						ans = Math.max(ans, row.getValue() + cmax.getValue() - v);
					}
				}
				
				
				
				
				
			}
			
			sb.append(ans);
			
			out.println(sb.toString());
			out.flush();
			
		}
		
	}

}
","import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Scanner;
 
public class Main {
	
	public static void main(String[] args) {
		
		try(Scanner sc = new Scanner(System.in);){
			
			PrintWriter out = new PrintWriter(System.out);
			StringBuilder sb = new StringBuilder();
			
			int n = Integer.parseInt(sc.next());
			
			Map<Integer, Long> rmap = new HashMap<Integer, Long>();
			Map<Integer, Long> cmap = new HashMap<Integer, Long>();
			Map<Map<Integer, Integer>, Long> pmap = new HashMap<Map<Integer,Integer>, Long>();
			
			for(int i = 0; i < n; i++) {
				int r = Integer.parseInt(sc.next());
				int c = Integer.parseInt(sc.next());
				Long x = Long.parseLong(sc.next());
				
				rmap.merge(r, x, Long::sum);
				cmap.merge(c, x, Long::sum);
				
				HashMap<Integer, Integer> tmp = new HashMap<Integer, Integer>();
				tmp.put(r, c);
				
				pmap.put(tmp, x);
			}
			
			List<Entry<Integer, Long>> list = new ArrayList<Entry<Integer, Long>>(cmap.entrySet());
			list.sort(Entry.comparingByValue());
			
			long ans = 0L;
			for(Map.Entry<Integer, Long> row : rmap.entrySet()) {
				for(int i = list.size() - 1;  i >= 0; i--) {
					Entry<Integer, Long> cmax = list.get(i);
					
					HashMap<Integer, Integer> tmp = new HashMap<Integer, Integer>();
					tmp.put(row.getKey(), cmax.getKey());
					
					Long v = pmap.get(tmp);
					
					if(v == null) {
						ans = Math.max(ans, row.getValue() + cmax.getValue());
						break;
					} else {
						ans = Math.max(ans, row.getValue() + cmax.getValue() - v);
					}
				}
				
				
				
				
				
			}
			
			sb.append(ans);
			
			out.println(sb.toString());
			out.flush();
			
		}
		
	}

}
",WA
vidya_99 ,abc298/F,Java,"import java.util.*;

public class Main {

	private static class Pair implements Comparable<Pair> {
		int x;
		long score;

		public Pair(int x,long score) {
			this.x=x;
			this.score=score;
		}

		public String toString() {
			return ""[""+this.x+"",""+this.score+""]"";
		}

		@Override
		public int compareTo(Pair x) {
			if(x.score-this.score>0)
				return 1;
			if(x.score-this.score<0)
				return -1;
			return 0;
		}

	}
    
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		HashMap<Integer, Long> rows=new HashMap<Integer, Long>();
		HashMap<Integer, Long> cols=new HashMap<Integer, Long>();
		HashMap<Integer, HashMap<Integer, Integer>> val=new HashMap<Integer, HashMap<Integer, Integer>>();
		for(int i=0;i<n;i++) {
			int r=sc.nextInt();
			int c=sc.nextInt();
			int x=sc.nextInt();
			rows.put(r,rows.getOrDefault(r,0L)+x);
			cols.put(c,cols.getOrDefault(c,0L)+x);
			HashMap<Integer, Integer> hm=val.getOrDefault(r,new HashMap<Integer, Integer>());
			hm.put(c,x);
			val.put(r,hm);
		}
		
		
		
		ArrayList<Pair> lcols=new ArrayList<Pair>();
		for(Integer x:cols.keySet())
			lcols.add(new Pair(x,cols.get(x)));
		Collections.sort(lcols);
		
		
		


		long ans=lcols.get(0).score;
		for(Integer x:rows.keySet()) {
			int i=0;
			while(i<lcols.size() && val.get(x).containsKey(lcols.get(i).x)) {
				
				i++;
			}
			if(i<lcols.size())
				ans=Math.max(ans,lcols.get(i).score+rows.get(x));
			
			
		}
		System.out.println(ans);
	}
}
","import java.util.*;

public class Main {

	private static class Pair implements Comparable<Pair> {
		int x;
		long score;

		public Pair(int x,long score) {
			this.x=x;
			this.score=score;
		}

		public String toString() {
			return ""[""+this.x+"",""+this.score+""]"";
		}

		@Override
		public int compareTo(Pair x) {
			if(x.score-this.score>0)
				return 1;
			if(x.score-this.score<0)
				return -1;
			return 0;
		}

	}
    
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		HashMap<Integer, Long> rows=new HashMap<Integer, Long>();
		HashMap<Integer, Long> cols=new HashMap<Integer, Long>();
		HashMap<Integer, HashMap<Integer, Integer>> val=new HashMap<Integer, HashMap<Integer, Integer>>();
		for(int i=0;i<n;i++) {
			int r=sc.nextInt();
			int c=sc.nextInt();
			int x=sc.nextInt();
			rows.put(r,rows.getOrDefault(r,0L)+x);
			cols.put(c,cols.getOrDefault(c,0L)+x);
			HashMap<Integer, Integer> hm=val.getOrDefault(r,new HashMap<Integer, Integer>());
			hm.put(c,x);
			val.put(r,hm);
		}
		
		
		
		ArrayList<Pair> lcols=new ArrayList<Pair>();
		for(Integer x:cols.keySet())
			lcols.add(new Pair(x,cols.get(x)));
		Collections.sort(lcols);
		
		
		


		long ans=0;
		for(Integer x:rows.keySet()) {
			
			
			
			
			
			
			
			
			
			int i=0;
			while(i<lcols.size() && val.get(x).containsKey(lcols.get(i).x)) {
				ans=Math.max(ans,lcols.get(i).score+rows.get(x)-val.get(x).get(lcols.get(i).x));
				i++;
			}
			if(i<lcols.size())
				ans=Math.max(ans,lcols.get(i).score+rows.get(x));
		}
		System.out.println(ans);
	}
}
",WA
kero0331 ,abc295/D,Java,"import java.util.*;
public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        Map<Integer,Integer> map = new HashMap<>();
        map.put(0,1);
        int ans = 0;
        for(char c:S.toCharArray()){
            int r = c-'0';
            int temp = 1<<r;
            ans^=temp;
            map.put(ans,map.getOrDefault(ans,0) +1);
        }
        int num = 0;
        for(int i:map.values())num += i*(i-1)/2;
        System.out.println(num);
    }
}
","import java.util.*;
public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        Map<Integer,Long> map = new HashMap<>();
        map.put(0, 1l);
        int ans = 0;
        for(char c:S.toCharArray()){
            int r = c-'0';
            int temp = 1<<r;
            ans^=temp;
            map.put(ans,map.getOrDefault(ans,0l) +1);
        }
        long num = 0;
        for(long i:map.values())num += i*(i-1)/2;
        System.out.println(num);
    }
}
",WA
CaliPota ,abc295/D,Java,"import java.util.HashSet;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String input = sc.nextLine();
        int n = input.length();
        int[] acum = new int[n+1];
        acum[0]=0;
        for(int i=0; i<n; i++){
            acum[i+1] = (acum[i] ^ (1<<(input.charAt(i)-48)));
            
        }
        int[] kei = new int[1024];
        for(int i=0; i<=n; i++){
            kei[acum[i]]++;
        }
        int ans=0;
        for(int e: kei){
            ans += e*(e-1);
        }
        ans /=2;
        System.out.println(ans);
    }
}
","import java.util.HashSet;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String input = sc.nextLine();
        int n = input.length();
        int[] acum = new int[n+1];
        acum[0]=0;
        for(int i=0; i<n; i++){
            acum[i+1] = (acum[i] ^ (1<<(input.charAt(i)-48)));
            
        }
        int[] kei = new int[1024];
        for(int i=0; i<=n; i++){
            kei[acum[i]]++;
        }
        long ans=0L;
        for(long e: kei){
            ans += e*(e-1L);
        }
        ans /=2L;
        System.out.println(ans);
    }
}
",WA
dlmasa ,abc295/D,Java,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) throws Throwable {
        Main main = new Main();
        main.solve();
    }
    public void solve() throws Throwable {
        FastScan scan = new FastScan(System.in);
        char[] S = scan.next().toCharArray();
        int N = S.length;
        int[][] count = new int[N+1][10];
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < 10; j++) {
                count[i+1][j] = count[i][j];
                if (j == S[i] - '0') {
                    count[i+1][j] += 1;
                    count[i+1][j] %= 2;
                }
            }
        }
        Map<Holder, Integer> map = new HashMap<>();
        for (int i = 0; i <= N; i++) {
            map.merge(new Holder(count[i]), 1, Integer::sum);
        }
        long ans = 0;
        for (Holder h : map.keySet()) {
            ans += sum(map.get(h)-1);
        }
        PrintWriter pw = new PrintWriter(System.out);
        pw.println(ans);
        pw.flush();
        pw.close();
    }
    private long sum(long i) {
        return i * (i-1) / 2;
    }
    class Holder {
        int[] count;
        Holder(int[] count) {
            this.count = count;
        }

        @Override
        public boolean equals(Object o) {
            if (this == o) return true;
            if (o == null || getClass() != o.getClass()) return false;
            Holder holder = (Holder) o;
            return Arrays.equals(count, holder.count);
        }

        @Override
        public int hashCode() {
            return Arrays.hashCode(count);
        }
    }
    class FastScan {
        BufferedReader br;
        StringTokenizer st;
        FastScan(InputStream is) {
            InputStreamReader isr = new InputStreamReader(is);
            this.br = new BufferedReader(isr);
        }
        String next() throws IOException {
            while (this.st == null || !this.st.hasMoreTokens()) {
                this.st = new StringTokenizer(br.readLine().trim());
            }
            return st.nextToken();
        }
        long nextLong() throws IOException {
            return Long.parseLong(this.next());
        }
        int nextInt() throws IOException {
            return Integer.parseInt(this.next());
        }
    }
}
","import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) throws Throwable {
        Main main = new Main();
        main.solve();
    }
    public void solve() throws Throwable {
        FastScan scan = new FastScan(System.in);
        char[] S = scan.next().toCharArray();
        int N = S.length;
        int[][] count = new int[N+1][10];
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < 10; j++) {
                count[i+1][j] = count[i][j];
                if (j == S[i] - '0') {
                    count[i+1][j] += 1;
                    count[i+1][j] %= 2;
                }
            }
        }
        Map<Holder, Integer> map = new HashMap<>();
        for (int i = 0; i <= N; i++) {
            map.merge(new Holder(count[i]), 1, Integer::sum);
        }
        long ans = 0;
        for (Holder h : map.keySet()) {
            ans += sum(map.get(h)-1);
        }
        PrintWriter pw = new PrintWriter(System.out);
        pw.println(ans);
        pw.flush();
        pw.close();
    }
    private long sum(long i) {
        return i * (i+1) / 2;
    }
    class Holder {
        int[] count;
        Holder(int[] count) {
            this.count = count;
        }

        @Override
        public boolean equals(Object o) {
            if (this == o) return true;
            if (o == null || getClass() != o.getClass()) return false;
            Holder holder = (Holder) o;
            return Arrays.equals(count, holder.count);
        }

        @Override
        public int hashCode() {
            return Arrays.hashCode(count);
        }
    }
    class FastScan {
        BufferedReader br;
        StringTokenizer st;
        FastScan(InputStream is) {
            InputStreamReader isr = new InputStreamReader(is);
            this.br = new BufferedReader(isr);
        }
        String next() throws IOException {
            while (this.st == null || !this.st.hasMoreTokens()) {
                this.st = new StringTokenizer(br.readLine().trim());
            }
            return st.nextToken();
        }
        long nextLong() throws IOException {
            return Long.parseLong(this.next());
        }
        int nextInt() throws IOException {
            return Integer.parseInt(this.next());
        }
    }
}
",WA
seyjs ,abc295/D,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Stream;

import static java.util.stream.Collectors.toList;

public class Main {
    private static int getMask(int[] count){
        int mask = 0;
        for(int i = 0 ;i < count.length;i++){
            mask += Math.pow(2,count.length - i - 1) * count[i];
        }
        return mask;
    }
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        String str = bufferedReader.readLine().trim();
        int[] count = new int[10];
        int res = 0;
        Map<Integer,Integer> map = new HashMap<>();
        map.put(0,1);
        for(int i = 0; i < str.length();i++){
            int c = str.charAt(i) - '0';
            count[c] += 1;
            count[c] %= 2;
            int mask = getMask(count);
            res += map.getOrDefault(mask,0);
            map.put(mask,map.getOrDefault(mask,0) + 1);
        }
        System.out.println(res);
    }
}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Stream;

import static java.util.stream.Collectors.toList;

public class Main {
    private static int getMask(int[] count){
        int mask = 0;
        for(int i = 0 ;i < count.length;i++){
            mask += Math.pow(2,count.length - i - 1) * count[i];
        }
        return mask;
    }
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        String str = bufferedReader.readLine().trim();
        int[] count = new int[10];
        long res = 0;
        Map<Integer,Integer> map = new HashMap<>();
        map.put(0,1);
        for(int i = 0; i < str.length();i++){
            int c = str.charAt(i) - '0';
            count[c] += 1;
            count[c] %= 2;
            int mask = getMask(count);
            res += map.getOrDefault(mask,0);
            map.put(mask,map.getOrDefault(mask,0) + 1);
        }
        System.out.println(res);
    }
}
",WA
iknownothing13 ,abc295/D,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
import java.util.HashMap;


public class Main
{
    static ArrayList<ArrayList<String>> ans=new ArrayList<>();
    static int subString(String s, int n)
    {
        Map<Integer, Integer> hash = new HashMap<>();
        hash.put(0, 1);
        int pre = 0;
        int count = 0;
        for(int i = 0; i < n; i++)
        {
            pre ^= (1 << (int)(s.charAt(i) - 97));
            count += hash.getOrDefault(pre, 0);
            hash.put(pre, hash.getOrDefault(pre, 0) + 1);
        }
        return count;
    }

    
    public static void main(String[] args)
    {
        FastReader input=new FastReader();
        String str=input.nextLine();
        System.out.println(subString(str,str.length()));
    }
    static void recurse(ArrayList<String> arr){
        ArrayList<String> list=new ArrayList<>();
        for(int i=0;i<arr.size();i++){
            if (i+1<arr.size() && arr.get(i+1).equals(rev(arr.get(i)))){
                list.add(arr.get(i+1)+arr.get(i));
                for(int j=i+2;j<arr.size();j++){
                    list.add(arr.get(j));
                }
                break;
            }
            else if(i+2<arr.size() && arr.get(i+2).equals(rev(arr.get(i)))){
                list.add(arr.get(i)+arr.get(i+1)+arr.get(i+2));
                for(int j=i+3;j<arr.size();j++){
                    list.add(arr.get(j));
                }
                break;
            }
            else{
                list.add(arr.get(i));
            }
        }
        if (list.size()==arr.size()){
            return;
        }
        ans.add(list);
        recurse(list);
    }
    public static String rev(String str){
        String ans="""";
        for (int i=str.length()-1;i>=0;i--){
            ans+=str.charAt(i);
        }
        return ans;
    }
    static class pair{
        int v1;int v2;
        public pair(int v,int p){
            v1=v;v2=p;
        }
    }
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = """";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }
}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
import java.util.HashMap;


public class Main
{
    static ArrayList<ArrayList<String>> ans=new ArrayList<>();
    static long subString(String s, int n)
    {
        Map<Integer, Integer> hash = new HashMap<>();
        hash.put(0, 1);
        int pre = 0;
        long count = 0;
        for(int i = 0; i < n; i++)
        {
            pre ^= (1 << (int)(s.charAt(i) - 97));
            count += hash.getOrDefault(pre, 0);
            hash.put(pre, hash.getOrDefault(pre, 0) + 1);
        }
        return count;
    }

    
    public static void main(String[] args)
    {
        FastReader input=new FastReader();
        String str=input.nextLine();
        System.out.println(subString(str,str.length()));
    }
    static void recurse(ArrayList<String> arr){
        ArrayList<String> list=new ArrayList<>();
        for(int i=0;i<arr.size();i++){
            if (i+1<arr.size() && arr.get(i+1).equals(rev(arr.get(i)))){
                list.add(arr.get(i+1)+arr.get(i));
                for(int j=i+2;j<arr.size();j++){
                    list.add(arr.get(j));
                }
                break;
            }
            else if(i+2<arr.size() && arr.get(i+2).equals(rev(arr.get(i)))){
                list.add(arr.get(i)+arr.get(i+1)+arr.get(i+2));
                for(int j=i+3;j<arr.size();j++){
                    list.add(arr.get(j));
                }
                break;
            }
            else{
                list.add(arr.get(i));
            }
        }
        if (list.size()==arr.size()){
            return;
        }
        ans.add(list);
        recurse(list);
    }
    public static String rev(String str){
        String ans="""";
        for (int i=str.length()-1;i>=0;i--){
            ans+=str.charAt(i);
        }
        return ans;
    }
    static class pair{
        int v1;int v2;
        public pair(int v,int p){
            v1=v;v2=p;
        }
    }
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = """";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }
}
",WA
Deadcoder11u2 ,abc295/D,Java,"import java.util.*;
import java.util.Map.Entry;
import java.io.*;
import java.time.*;
import static java.lang.Math.*;

@SuppressWarnings(""unused"")
public class B {
    static boolean DEBUG = false;

    static Reader fs;
    static PrintWriter pw;

    static void solve() {
        char a[] = fs.next().toCharArray();
        int n = a.length;
        HashMap<Integer, Long> mp = new HashMap<>();
        Long ans = 0l;
        int freq[] = new int[10];
        mp.put(0, 1l);
        for(int i = 0 ; i < n ; i++) {
            freq[a[i] - '0']++;
            int mask = 0;
            for(int j = 0 ; j < 10 ; j++) {
                if(freq[j] % 2 == 1) {
                    mask += (int) pow(2, j);
                }
            }
            ans += mp.getOrDefault(mask, 0l);
            mp.put(mask, mp.getOrDefault(mask, 0l) + 1);
        }
        pw.println(ans);
    }

    public static void main(String[] args) throws IOException {
        Instant start = Instant.now();
        fs = new Reader();
        pw = new PrintWriter(System.out);
        
        
        solve();
        
        Instant end = Instant.now();
        if (DEBUG) {
            pw.println(Duration.between(start, end));
        }
        pw.close();
    }

    static void sort(int a[]) {
        ArrayList<Integer> l = new ArrayList<Integer>();
        for (int x : a)
            l.add(x);
        Collections.sort(l);
        for (int i = 0; i < a.length; i++) {
            a[i] = l.get(i);
        }
    }

    public static void print(long a, long b, long c, PrintWriter pw) {
        pw.println(a + "" "" + b + "" "" + c);
        return;
    }

    static class Reader {
        BufferedReader br;
        StringTokenizer st;

        public Reader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = """";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        int[] readArray(int n) {
            int a[] = new int[n];
            for (int i = 0; i < n; i++)
                a[i] = nextInt();
            return a;
        }

        int[][] read2Array(int n, int m) {
            int a[][] = new int[n][m];
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < m; j++) {
                    a[i][j] = nextInt();
                }
            }
            return a;
        }
    }
}
","import java.util.*;
import java.util.Map.Entry;
import java.io.*;
import java.time.*;
import static java.lang.Math.*;

@SuppressWarnings(""unused"")
public class Main {
    static boolean DEBUG = false;

    static Reader fs;
    static PrintWriter pw;

    static void solve() {
        char a[] = fs.next().toCharArray();
        int n = a.length;
        HashMap<Integer, Long> mp = new HashMap<>();
        Long ans = 0l;
        int freq[] = new int[10];
        mp.put(0, 1l);
        for(int i = 0 ; i < n ; i++) {
            freq[a[i] - '0']++;
            int mask = 0;
            for(int j = 0 ; j < 10 ; j++) {
                if(freq[j] % 2 == 1) {
                    mask += (int) pow(2, j);
                }
            }
            ans += mp.getOrDefault(mask, 0l);
            mp.put(mask, mp.getOrDefault(mask, 0l) + 1);
        }
        pw.println(ans);
    }

    public static void main(String[] args) throws IOException {
        Instant start = Instant.now();
        fs = new Reader();
        pw = new PrintWriter(System.out);
        
        
        solve();
        
        Instant end = Instant.now();
        if (DEBUG) {
            pw.println(Duration.between(start, end));
        }
        pw.close();
    }

    static void sort(int a[]) {
        ArrayList<Integer> l = new ArrayList<Integer>();
        for (int x : a)
            l.add(x);
        Collections.sort(l);
        for (int i = 0; i < a.length; i++) {
            a[i] = l.get(i);
        }
    }

    public static void print(long a, long b, long c, PrintWriter pw) {
        pw.println(a + "" "" + b + "" "" + c);
        return;
    }

    static class Reader {
        BufferedReader br;
        StringTokenizer st;

        public Reader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = """";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        int[] readArray(int n) {
            int a[] = new int[n];
            for (int i = 0; i < n; i++)
                a[i] = nextInt();
            return a;
        }

        int[][] read2Array(int n, int m) {
            int a[][] = new int[n][m];
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < m; j++) {
                    a[i][j] = nextInt();
                }
            }
            return a;
        }
    }
}
",CE
devgenjin77 ,abc295/D,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {

  public static void main(String[] args) throws IOException {
    final BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    final String s = br.readLine();
    br.close();
    int[] bits = new int[1 << 10];
    int bit = 0;
    bits[bit]++;
    for (char c : s.toCharArray()) {
      int b = c - '0';
      
      bit ^= 1 << b;
      bits[bit]++;
    }
    long ans = 0;
    for (int i = 0; i < (1 << 10); i++) {
      ans += (bits[i] * (bits[i] - 1)) / 2;
    }
    System.out.println(ans);
  }
}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {

  public static void main(String[] args) throws IOException {
    final BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    final String s = br.readLine();
    br.close();
    long[] bits = new long[1 << 10];
    int bit = 0;
    bits[bit]++;
    for (char c : s.toCharArray()) {
      int b = c - '0';
      
      bit ^= 1 << b;
      bits[bit]++;
    }
    long ans = 0;
    for (int i = 0; i < (1 << 10); i++) {
      ans += (bits[i] * (bits[i] - 1)) / 2;
    }
    System.out.println(ans);
  }
}
",WA
tagucha ,abc295/D,Java,"import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String S = scanner.next();
        Map<Stats, Integer> count = new HashMap<>();
        Stats now = new Stats(new boolean[]{true, true, true, true, true, true, true, true, true, true});
        count.put(now, 1);
        for (int i = 0;i < S.length();i++) {
            now = now.next(S.charAt(i) - '0');
            count.put(now, count.getOrDefault(now, 0) + 1);
        }

        System.out.println(count.values().stream().mapToInt(v -> v * (v - 1) / 2).sum());
    }

    private static class Stats {
        private final boolean isEven[];

        public Stats(boolean[] isEven) {
            this.isEven = isEven;
        }

        @Override
        public boolean equals(Object o) {
            if (this == o) return true;
            if (o == null || getClass() != o.getClass()) return false;

            Stats stats = (Stats) o;

            return Arrays.equals(isEven, stats.isEven);
        }

        @Override
        public int hashCode() {
            return Arrays.hashCode(isEven);
        }

        public Stats next(int i) {
            boolean[] array = Arrays.copyOf(isEven, 10);
            array[i] = !array[i];
            return new Stats(array);
        }
    }
}
","import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String S = scanner.next();
        Map<Stats, Long> count = new HashMap<>();
        Stats now = new Stats(new boolean[]{true, true, true, true, true, true, true, true, true, true});
        count.put(now, 1L);
        for (int i = 0;i < S.length();i++) {
            now = now.next(S.charAt(i) - '0');
            count.put(now, count.getOrDefault(now, 0L) + 1);
        }

        System.out.println(count.values().stream().mapToLong(v -> v * (v - 1) / 2).sum());
    }

    private static class Stats {
        private final boolean isEven[];

        public Stats(boolean[] isEven) {
            this.isEven = isEven;
        }

        @Override
        public boolean equals(Object o) {
            if (this == o) return true;
            if (o == null || getClass() != o.getClass()) return false;

            Stats stats = (Stats) o;

            return Arrays.equals(isEven, stats.isEven);
        }

        @Override
        public int hashCode() {
            return Arrays.hashCode(isEven);
        }

        public Stats next(int i) {
            boolean[] array = Arrays.copyOf(isEven, 10);
            array[i] = !array[i];
            return new Stats(array);
        }
    }
}
",WA
glycine ,abc295/D,Java,"import java.util.*;

import java.io.*;
import java.math.BigInteger;
import java.nio.charset.StandardCharsets;

public class Main {

	public static void main(String[] args) throws IOException {
		InputStreamReader reader = new InputStreamReader(System.in, StandardCharsets.UTF_8);
		BufferedReader in = new BufferedReader(reader);
		Main ins = new Main(in);
		ins.calc();
		ins.showResult();
	}

	PrintWriter writer = new PrintWriter(System.out);
	BufferedReader in = null;
	char[] S;
	List[] positions;

	Main(BufferedReader in) throws IOException {
		
		this.S = in.readLine().toCharArray();
		this.positions = new List[2048];
		for (int i = 0; i < positions.length; ++i) {
			positions[i] = new ArrayList<Integer>();
		}
		boolean[] isEven = new boolean[10];
		Arrays.fill(isEven, true);
		int index = getIndex(isEven);
		positions[index].add(-1);
		for (int i = 0; i < S.length; ++i) {
			int val = c2i(S[i]);
			isEven[val] = !isEven[val];
			index = getIndex(isEven);
			positions[index].add(i);
		}

	}

	int getIndex(boolean[] isEven) {
		int result = 0;
		int base = 1;
		for (int i = 0; i < isEven.length; ++i) {
			if (isEven[i]) {
				result += base;
			}
			base *= 2;
		}
		return result;
	}

	int c2i(char c) {
		return (int) c - 48;
	}

	void calc() {
		long count = 0L;
		for (int i = 0; i < positions.length; ++i) {
			if (positions[i].isEmpty()) {
				continue;
			}
			if (positions[i].size() == 1) {
				continue;
			}
			int size = positions[i].size();
			count += (long) (size * (size - 1)) / 2L;
		}
		this.writer.println(count);
	}

	void showResult() {
		this.writer.flush();
	}

}
","import java.util.*;

import java.io.*;
import java.math.BigInteger;
import java.nio.charset.StandardCharsets;

public class Main {

	public static void main(String[] args) throws IOException {
		InputStreamReader reader = new InputStreamReader(System.in, StandardCharsets.UTF_8);
		BufferedReader in = new BufferedReader(reader);
		Main ins = new Main(in);
		ins.calc();
		ins.showResult();
	}

	PrintWriter writer = new PrintWriter(System.out);
	BufferedReader in = null;
	char[] S;
	List[] positions;

	Main(BufferedReader in) throws IOException {
		
		this.S = in.readLine().toCharArray();
		this.positions = new List[2048];
		for (int i = 0; i < positions.length; ++i) {
			positions[i] = new ArrayList<Integer>();
		}
		boolean[] isEven = new boolean[10];
		Arrays.fill(isEven, true);
		int index = getIndex(isEven);
		positions[index].add(-1);
		for (int i = 0; i < S.length; ++i) {
			int val = c2i(S[i]);
			isEven[val] = !isEven[val];
			index = getIndex(isEven);
			positions[index].add(i);
		}

	}

	int getIndex(boolean[] isEven) {
		int result = 0;
		int base = 1;
		for (int i = 0; i < isEven.length; ++i) {
			if (isEven[i]) {
				result += base;
			}
			base *= 2;
		}
		return result;
	}

	int c2i(char c) {
		return (int) c - 48;
	}

	void calc() {
		long count = 0L;
		for (int i = 0; i < positions.length; ++i) {
			if (positions[i].isEmpty()) {
				continue;
			}
			if (positions[i].size() == 1) {
				continue;
			}
			int size = positions[i].size();
			count += (long) size * (long) (size - 1) / 2L;
		}
		this.writer.println(count);
	}

	void showResult() {
		this.writer.flush();
	}

}
",WA
msksknkn ,abc295/D,Java,"import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		String s = sc.next();
		int n = s.length();
		int[][] conN = new int[10][n + 1];
		int[] num = new int[1024];
		int ans = 0;
		for(int i = 1;i < n + 1;i++) {
				for(int j = 0;j < 10;j++) {
					conN[j][i] = conN[j][i - 1];
				}
			conN[s.charAt(i - 1) - '0'][i]++;
		}for(int i = 1;i < n + 1;i++) {
			int plusnum = 1;
			int tmp = 0;
			for(int j = 0;j < 10;j++) {
				tmp += (conN[j][i] % 2) * plusnum;
				plusnum *= 2;
			}
			num[tmp]++;
		}
		num[0]++;
		for(int i = 0;i < 1024;i++) {
			ans += ((long)num[i] * (num[i] - 1))/2 ;
		}
		System.out.print(ans);
	}public static boolean solve(int i,int j,int[][] c) {
		boolean ans = true;
		for(int k = 0;k < 10;k++) {
			if((c[k][i] - c[k][j]) % 2 == 1) {
				
				ans = false;
				break;
			}
		}
		return ans;
	}
}
","import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		String s = sc.next();
		int n = s.length();
		int[][] conN = new int[10][n + 1];
		int[] num = new int[1024];
		long ans = 0;
		for(int i = 1;i < n + 1;i++) {
				for(int j = 0;j < 10;j++) {
					conN[j][i] = conN[j][i - 1];
				}
			conN[s.charAt(i - 1) - '0'][i]++;
		}for(int i = 1;i < n + 1;i++) {
			int plusnum = 1;
			int tmp = 0;
			for(int j = 0;j < 10;j++) {
				tmp += (conN[j][i] % 2) * plusnum;
				plusnum *= 2;
			}
			num[tmp]++;
		}
		num[0]++;
		for(int i = 0;i < 1024;i++) {
			ans += ((long)num[i] * (num[i] - 1))/(long)2 ;
		}
		System.out.print(ans);
	}public static boolean solve(int i,int j,int[][] c) {
		boolean ans = true;
		for(int k = 0;k < 10;k++) {
			if((c[k][i] - c[k][j]) % 2 == 1) {
				
				ans = false;
				break;
			}
		}
		return ans;
	}
}
",WA
msksknkn ,abc295/D,Java,"import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		String s = sc.next();
		int n = s.length();
		int[][] conN = new int[10][n + 1];
		int[] num = new int[1024];
		int ans = 0;
		for(int i = 1;i < n + 1;i++) {
				for(int j = 0;j < 10;j++) {
					conN[j][i] = conN[j][i - 1];
				}
			conN[s.charAt(i - 1) - '0'][i]++;
		}for(int i = 1;i < n + 1;i++) {
			int plusnum = 1;
			int tmp = 0;
			for(int j = 0;j < 10;j++) {
				tmp += (conN[j][i] % 2) * plusnum;
				plusnum *= 2;
			}
			num[tmp]++;
		}
		num[0]++;
		for(int i = 0;i < 1024;i++) {
			ans += (num[i] * (num[i] - 1))/2 ;
		}
		System.out.print(ans);
	}public static boolean solve(int i,int j,int[][] c) {
		boolean ans = true;
		for(int k = 0;k < 10;k++) {
			if((c[k][i] - c[k][j]) % 2 == 1) {
				
				ans = false;
				break;
			}
		}
		return ans;
	}
}
","import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		String s = sc.next();
		int n = s.length();
		int[][] conN = new int[10][n + 1];
		int[] num = new int[1024];
		long ans = 0;
		for(int i = 1;i < n + 1;i++) {
				for(int j = 0;j < 10;j++) {
					conN[j][i] = conN[j][i - 1];
				}
			conN[s.charAt(i - 1) - '0'][i]++;
		}for(int i = 1;i < n + 1;i++) {
			int plusnum = 1;
			int tmp = 0;
			for(int j = 0;j < 10;j++) {
				tmp += (conN[j][i] % 2) * plusnum;
				plusnum *= 2;
			}
			num[tmp]++;
		}
		num[0]++;
		for(int i = 0;i < 1024;i++) {
			ans += ((long)num[i] * (num[i] - 1))/(long)2 ;
		}
		System.out.print(ans);
	}public static boolean solve(int i,int j,int[][] c) {
		boolean ans = true;
		for(int k = 0;k < 10;k++) {
			if((c[k][i] - c[k][j]) % 2 == 1) {
				
				ans = false;
				break;
			}
		}
		return ans;
	}
}
",WA
Spirall ,abc295/D,Java,"
import java.io.*;
import java.util.*;
public class Main
{
  public static void main(String[]args)throws IOException
  {
    BufferedReader buf=new BufferedReader(new InputStreamReader(System.in));
    String s=buf.readLine();
    int ans=0;
    HashMap<Integer,Long>hm=new HashMap<>();
    hm.put(0,1l);
    for(char ch:s.toCharArray())
    {
      int r=ch-'0';
      int temp=1<<r;
      ans^=temp;
      hm.put(ans,hm.getOrDefault(ans,0l)+1);
    }
    ans=0;
    for(long k:hm.values())ans+=(k*(k-1))>>1;
    System.out.println(ans);
  }
}
","
import java.io.*;
import java.util.*;
public class Main
{
  public static void main(String[]args)throws IOException
  {
    BufferedReader buf=new BufferedReader(new InputStreamReader(System.in));
    String s=buf.readLine();
    int ans=0;
    HashMap<Integer,Long>hm=new HashMap<>();
    hm.put(0,1l);
    for(char ch:s.toCharArray())
    {
      int r=ch-'0';
      int temp=1<<r;
      ans^=temp;
      hm.put(ans,hm.getOrDefault(ans,0l)+1);
    }
    long ans1=0l;
    for(long k:hm.values())ans1+=(k*(k-1))>>1;
    System.out.println(ans1);
  }
}
",WA
marii ,abc295/D,Java,"import java.util.HashMap;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        int N = S.length();
        int[][] table = new int[N + 1][10];
        for (int i = 1; i <= N; i++) {
            char c = S.charAt(i - 1);
            for (int j = 0; j < 10; j++) {
                table[i][j] = table[i - 1][j];
            }
            table[i][c - '0'] += 1;
        }
        HashMap<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i <= N; i++) {
            int key = 0;
            for (int j = 0; j < 10; j++) {
                key = key * 2 + table[i][j] % 2;
            }
            map.put(key, map.getOrDefault(key, 0) + 1);
        }
        int ans = 0;
        for (int key : map.keySet()) {
            int value = map.get(key);
            ans += value * (value - 1) / 2;
        }
        System.out.println(ans);
    }
}
","import java.util.HashMap;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        int N = S.length();
        int[][] table = new int[N + 1][10];
        for (int i = 1; i <= N; i++) {
            char c = S.charAt(i - 1);
            for (int j = 0; j < 10; j++) {
                table[i][j] = table[i - 1][j];
            }
            table[i][c - '0'] += 1;
        }
        HashMap<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i <= N; i++) {
            int key = 0;
            for (int j = 0; j < 10; j++) {
                key = key * 2 + table[i][j] % 2;
            }
            map.put(key, map.getOrDefault(key, 0) + 1);
        }
        long ans = 0;
        for (int key : map.keySet()) {
            int value = map.get(key);
            ans += (long) value * (value - 1) / 2;
        }
        System.out.println(ans);
    }
}
",WA
IanISam ,abc295/D,Java,"import java.io.*; import java.util.*;
public class Main
{
	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter pw = new PrintWriter(System.out);
		HashMap<Integer, Integer> u = new HashMap<>();
		String s = br.readLine();
	    int key = 0;
		long ans = 0;
		for(int i=0; i<s.length(); i++){
		    key^=1<<((int)s.charAt(i)-48);
		    if(key==511)ans++;
		    if(u.containsKey(key)){
		        int value = u.get(key);
		        ans+=value;
		        u.put(key, value+1);
		    }
		    else{
		        u.put(key, 1);
		    }
		}
		pw.println(ans);
		pw.close();
	}
}
","import java.io.*; import java.util.*;
public class Main
{
	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter pw = new PrintWriter(System.out);
		HashMap<Integer, Integer> u = new HashMap<>();
		String s = br.readLine();
	    int key = 0;
		long ans = 0;
		for(int i=0; i<s.length(); i++){
		    key^=1<<((int)s.charAt(i)-48);
		    if(key==0)ans++;
		    if(u.containsKey(key)){
		        int value = u.get(key);
		        ans+=value;
		        u.put(key, value+1);
		    }
		    else{
		        u.put(key, 1);
		    }
		}
		pw.println(ans);
		pw.close();
	}
}
",WA
AnuSharma1729 ,abc295/D,Java,"import java.io.*;
import java.util.*;

public class Main {


    public static void main(String[] args) {

        FastScanner fs = new FastScanner();
        PrintWriter out = new PrintWriter(System.out);


        String s = fs.next();

        HashMap<Integer, Integer> map = new HashMap<>();
        int xor = 0;
        map.put(0, 1);
        long ans = 0;
        for(int i = 0; i < s.length(); ++i){a
            xor ^= (1 << (s.charAt(i) - '0' + 1));
            if(map.containsKey(xor)){

                ans += map.get(xor);
            }

            map.put(xor, map.getOrDefault(xor, 0) + 1);
        }

        System.out.println(ans);

    }




    static final Random random = new Random();
    static final int mod = 1_000_000_007;

    static long add(long a, long b) {
        return (a + b) % mod;
    }

    static long sub(long a, long b) {
        return ((a - b) % mod + mod) % mod;
    }

    static void ruffleSort(int[] a) {
        int n = a.length;
        for (int i = 0; i < n; i++) {
            int oi = random.nextInt(n), temp = a[oi];
            a[oi] = a[i];
            a[i] = temp;
        }
        Arrays.sort(a);
    }

    static void sort(int[] a) {
        ArrayList<Integer> l = new ArrayList<>();
        for (int i : a) l.add(i);
        Collections.sort(l);
        for (int i = 0; i < a.length; i++) a[i] = l.get(i);
    }

    static long mul(long a, long b) {
        return (a * b) % mod;
    }

    static long exp(long base, long exp) {
        if (exp == 0) return 1;
        long half = exp(base, exp / 2);
        if (exp % 2 == 0) return mul(half, half);
        return mul(half, mul(half, base));
    }

    static long[] factorials = new long[2_000_001];
    static long[] invFactorials = new long[2_000_001];

    static void precompFacts() {
        factorials[0] = invFactorials[0] = 1;
        for (int i = 1; i < factorials.length; i++) factorials[i] = mul(factorials[i - 1], i);
        invFactorials[factorials.length - 1] = exp(factorials[factorials.length - 1], mod - 2);
        for (int i = invFactorials.length - 2; i >= 0; i--)
            invFactorials[i] = mul(invFactorials[i + 1], i + 1);
    }

    static long nCk(int n, int k) {
        return mul(factorials[n], mul(invFactorials[k], invFactorials[n - k]));
    }

    static class FastScanner {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer("""");

        String next() {
            while (!st.hasMoreTokens())
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        int[] readArray(int n) {
            int[] a = new int[n];
            for (int i = 0; i < n; i++) a[i] = nextInt();
            return a;
        }

        long nextLong() {
            return Long.parseLong(next());
        }
    }
}
","import java.io.*;
import java.util.*;

public class Main {


    public static void main(String[] args) {

        FastScanner fs = new FastScanner();
        PrintWriter out = new PrintWriter(System.out);


        String s = fs.next();

        HashMap<Integer, Integer> map = new HashMap<>();
        int xor = 0;
        map.put(0, 1);
        long ans = 0;
        for(int i = 0; i < s.length(); ++i){
            xor ^= (1 << (s.charAt(i) - '0' + 1));
            if(map.containsKey(xor)){

                ans += map.get(xor);
            }

            map.put(xor, map.getOrDefault(xor, 0) + 1);
        }

        System.out.println(ans);

    }




    static final Random random = new Random();
    static final int mod = 1_000_000_007;

    static long add(long a, long b) {
        return (a + b) % mod;
    }

    static long sub(long a, long b) {
        return ((a - b) % mod + mod) % mod;
    }

    static void ruffleSort(int[] a) {
        int n = a.length;
        for (int i = 0; i < n; i++) {
            int oi = random.nextInt(n), temp = a[oi];
            a[oi] = a[i];
            a[i] = temp;
        }
        Arrays.sort(a);
    }

    static void sort(int[] a) {
        ArrayList<Integer> l = new ArrayList<>();
        for (int i : a) l.add(i);
        Collections.sort(l);
        for (int i = 0; i < a.length; i++) a[i] = l.get(i);
    }

    static long mul(long a, long b) {
        return (a * b) % mod;
    }

    static long exp(long base, long exp) {
        if (exp == 0) return 1;
        long half = exp(base, exp / 2);
        if (exp % 2 == 0) return mul(half, half);
        return mul(half, mul(half, base));
    }

    static long[] factorials = new long[2_000_001];
    static long[] invFactorials = new long[2_000_001];

    static void precompFacts() {
        factorials[0] = invFactorials[0] = 1;
        for (int i = 1; i < factorials.length; i++) factorials[i] = mul(factorials[i - 1], i);
        invFactorials[factorials.length - 1] = exp(factorials[factorials.length - 1], mod - 2);
        for (int i = invFactorials.length - 2; i >= 0; i--)
            invFactorials[i] = mul(invFactorials[i + 1], i + 1);
    }

    static long nCk(int n, int k) {
        return mul(factorials[n], mul(invFactorials[k], invFactorials[n - k]));
    }

    static class FastScanner {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer("""");

        String next() {
            while (!st.hasMoreTokens())
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        int[] readArray(int n) {
            int[] a = new int[n];
            for (int i = 0; i < n; i++) a[i] = nextInt();
            return a;
        }

        long nextLong() {
            return Long.parseLong(next());
        }
    }
}
",CE
AnuSharma1729 ,abc295/D,Java,"import java.io.*;
import java.util.*;

public class Main {


    public static void main(String[] args) {

        FastScanner fs = new FastScanner();
        PrintWriter out = new PrintWriter(System.out);


        String s = fs.next();

        HashMap<Integer, Integer> map = new HashMap<>();
        int xor = 0;
        map.put(0, 1);
        long ans = 0;
        for(int i = 0; i < s.length(); ++i){a
            xor ^= (1 << (s.charAt(i) - '0' + 1);
            if(map.containsKey(xor)){

                ans += map.get(xor);
            }

            map.put(xor, map.getOrDefault(xor, 0) + 1);
        }

        System.out.println(ans);

    }




    static final Random random = new Random();
    static final int mod = 1_000_000_007;

    static long add(long a, long b) {
        return (a + b) % mod;
    }

    static long sub(long a, long b) {
        return ((a - b) % mod + mod) % mod;
    }

    static void ruffleSort(int[] a) {
        int n = a.length;
        for (int i = 0; i < n; i++) {
            int oi = random.nextInt(n), temp = a[oi];
            a[oi] = a[i];
            a[i] = temp;
        }
        Arrays.sort(a);
    }

    static void sort(int[] a) {
        ArrayList<Integer> l = new ArrayList<>();
        for (int i : a) l.add(i);
        Collections.sort(l);
        for (int i = 0; i < a.length; i++) a[i] = l.get(i);
    }

    static long mul(long a, long b) {
        return (a * b) % mod;
    }

    static long exp(long base, long exp) {
        if (exp == 0) return 1;
        long half = exp(base, exp / 2);
        if (exp % 2 == 0) return mul(half, half);
        return mul(half, mul(half, base));
    }

    static long[] factorials = new long[2_000_001];
    static long[] invFactorials = new long[2_000_001];

    static void precompFacts() {
        factorials[0] = invFactorials[0] = 1;
        for (int i = 1; i < factorials.length; i++) factorials[i] = mul(factorials[i - 1], i);
        invFactorials[factorials.length - 1] = exp(factorials[factorials.length - 1], mod - 2);
        for (int i = invFactorials.length - 2; i >= 0; i--)
            invFactorials[i] = mul(invFactorials[i + 1], i + 1);
    }

    static long nCk(int n, int k) {
        return mul(factorials[n], mul(invFactorials[k], invFactorials[n - k]));
    }

    static class FastScanner {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer("""");

        String next() {
            while (!st.hasMoreTokens())
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        int[] readArray(int n) {
            int[] a = new int[n];
            for (int i = 0; i < n; i++) a[i] = nextInt();
            return a;
        }

        long nextLong() {
            return Long.parseLong(next());
        }
    }
}
","import java.io.*;
import java.util.*;

public class Main {


    public static void main(String[] args) {

        FastScanner fs = new FastScanner();
        PrintWriter out = new PrintWriter(System.out);


        String s = fs.next();

        HashMap<Integer, Integer> map = new HashMap<>();
        int xor = 0;
        map.put(0, 1);
        long ans = 0;
        for(int i = 0; i < s.length(); ++i){
            xor ^= (1 << (s.charAt(i) - '0' + 1));
            if(map.containsKey(xor)){

                ans += map.get(xor);
            }

            map.put(xor, map.getOrDefault(xor, 0) + 1);
        }

        System.out.println(ans);

    }




    static final Random random = new Random();
    static final int mod = 1_000_000_007;

    static long add(long a, long b) {
        return (a + b) % mod;
    }

    static long sub(long a, long b) {
        return ((a - b) % mod + mod) % mod;
    }

    static void ruffleSort(int[] a) {
        int n = a.length;
        for (int i = 0; i < n; i++) {
            int oi = random.nextInt(n), temp = a[oi];
            a[oi] = a[i];
            a[i] = temp;
        }
        Arrays.sort(a);
    }

    static void sort(int[] a) {
        ArrayList<Integer> l = new ArrayList<>();
        for (int i : a) l.add(i);
        Collections.sort(l);
        for (int i = 0; i < a.length; i++) a[i] = l.get(i);
    }

    static long mul(long a, long b) {
        return (a * b) % mod;
    }

    static long exp(long base, long exp) {
        if (exp == 0) return 1;
        long half = exp(base, exp / 2);
        if (exp % 2 == 0) return mul(half, half);
        return mul(half, mul(half, base));
    }

    static long[] factorials = new long[2_000_001];
    static long[] invFactorials = new long[2_000_001];

    static void precompFacts() {
        factorials[0] = invFactorials[0] = 1;
        for (int i = 1; i < factorials.length; i++) factorials[i] = mul(factorials[i - 1], i);
        invFactorials[factorials.length - 1] = exp(factorials[factorials.length - 1], mod - 2);
        for (int i = invFactorials.length - 2; i >= 0; i--)
            invFactorials[i] = mul(invFactorials[i + 1], i + 1);
    }

    static long nCk(int n, int k) {
        return mul(factorials[n], mul(invFactorials[k], invFactorials[n - k]));
    }

    static class FastScanner {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer("""");

        String next() {
            while (!st.hasMoreTokens())
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        int[] readArray(int n) {
            int[] a = new int[n];
            for (int i = 0; i < n; i++) a[i] = nextInt();
            return a;
        }

        long nextLong() {
            return Long.parseLong(next());
        }
    }
}
",CE
rinlucky7 ,abc295/D,Java,"import java.util.HashMap;
import java.util.Scanner;

public class Main{

	public static void main (String[] args) {
		Main main = new Main();
		Scanner sc = new Scanner (System.in);

		String s = sc.next();
		int length = s.length();
		int[] list = new int[length+1];
		HashMap <Integer, Integer> map = new HashMap <Integer, Integer>();
		map.put(0, 1);
		for (int index=0; index<length; index++) {
			int a = Character.getNumericValue(s.charAt(index));
			int b = 1;
			b<<=a;
			list[index+1]=list[index]^b;
			if (map.containsKey(list[index+1])) {
				map.put(list[index+1],   map.get(list[index+1])+1);
			} else {
				map.put(list[index+1], 1);
			}
		}

		long count = 0;

		for (int index=0; index<length+1; index++) {
			if (map.get(list[index])!=0) {
				count+=(long) (map.get(list[index])*(map.get(list[index])-1))/2;
				map.put (list[index], 0);
			}
		}

		System.out.println(count);

		sc.close();
	}

}
","import java.util.HashMap;
import java.util.Scanner;

public class Main{

	public static void main (String[] args) {
		Main main = new Main();
		Scanner sc = new Scanner (System.in);

		String s = sc.next();
		int length = s.length();
		int[] list = new int[length+1];
		HashMap <Integer, Integer> map = new HashMap <Integer, Integer>();
		map.put(0, 1);
		for (int index=0; index<length; index++) {
			int a = Character.getNumericValue(s.charAt(index));
			int b = 1;
			b<<=a;
			list[index+1]=list[index]^b;
			if (map.containsKey(list[index+1])) {
				map.put(list[index+1],   map.get(list[index+1])+1);
			} else {
				map.put(list[index+1], 1);
			}
		}

		long count = 0;

		for (int index=0; index<length+1; index++) {
			if (map.get(list[index])!=0) {
				count+=(long) (map.get(list[index])*(long) (map.get(list[index])-1))/2;
				map.put (list[index], 0);
			}
		}

		System.out.println(count);

		sc.close();
	}

}
",WA
rinlucky7 ,abc295/D,Java,"import java.util.HashMap;
import java.util.Scanner;

public class Main{

	public static void main (String[] args) {
		Main main = new Main();
		Scanner sc = new Scanner (System.in);

		String s = sc.next();
		int length = s.length();
		int[] list = new int[length+1];
		HashMap <Integer, Integer> map = new HashMap <Integer, Integer>();
		map.put(0, 1);
		for (int index=0; index<length; index++) {
			int a = Character.getNumericValue(s.charAt(index));
			int b = 1;
			b<<=a;
			list[index+1]=list[index]^b;
			if (map.containsKey(list[index+1])) {
				map.put(list[index+1],   map.get(list[index+1])+1);
			} else {
				map.put(list[index+1], 1);
			}
		}

		long count = 0;

		for (int index=0; index<length+1; index++) {
			if (map.get(list[index])!=0) {
				count+=(long) (map.get(list[index])*(map.get(list[index])-1))/2;
				map.put (list[index], 0);
			}
		}

		System.out.println(count);

		sc.close();
	}

}
","import java.util.HashMap;
import java.util.Scanner;

public class Main{

	public static void main (String[] args) {
		Main main = new Main();
		Scanner sc = new Scanner (System.in);

		String s = sc.next();
		int length = s.length();
		int[] list = new int[length+1];
		HashMap <Integer, Integer> map = new HashMap <Integer, Integer>();
		map.put(0, 1);
		for (int index=0; index<length; index++) {
			int a = Character.getNumericValue(s.charAt(index));
			int b = 1;
			b<<=a;
			list[index+1]=list[index]^b;
			if (map.containsKey(list[index+1])) {
				map.put(list[index+1],   map.get(list[index+1])+1);
			} else {
				map.put(list[index+1], 1);
			}
		}

		long count = 0;

		for (int index=0; index<length+1; index++) {
			if (map.get(list[index])!=0) {
				count+=(long) (map.get(list[index])*(long) (map.get(list[index])-1))/2l;
				map.put (list[index], 0);
			}
		}

		System.out.println(count);

		sc.close();
	}

}
",WA
rinlucky7 ,abc295/D,Java,"import java.util.HashMap;
import java.util.Scanner;

public class Main{

	public static void main (String[] args) {
		Main main = new Main();
		Scanner sc = new Scanner (System.in);

		String s = sc.next();
		int length = s.length();
		int[] list = new int[length+1];
		HashMap <Integer, Integer> map = new HashMap <Integer, Integer>();
		map.put(0, 1);
		for (int index=0; index<length; index++) {
			int a = Character.getNumericValue(s.charAt(index));
			int b = 1;
			b<<=a;
			list[index+1]=list[index]^b;
			if (map.containsKey(list[index+1])) {
				map.put(list[index+1],   map.get(list[index+1])+1);
			} else {
				map.put((list[index+1]), 1);
			}
		}

		long count = 0;

		for (int index=0; index<length+1; index++) {
			if (map.get(list[index])!=0) {
				count+=(long) (map.get(list[index])*(map.get(list[index])-1))/2;
				map.put (list[index], 0);
			}
		}

		System.out.println(count);

		sc.close();
	}

}
","import java.util.HashMap;
import java.util.Scanner;

public class Main{

	public static void main (String[] args) {
		Main main = new Main();
		Scanner sc = new Scanner (System.in);

		String s = sc.next();
		int length = s.length();
		int[] list = new int[length+1];
		HashMap <Integer, Integer> map = new HashMap <Integer, Integer>();
		map.put(0, 1);
		for (int index=0; index<length; index++) {
			int a = Character.getNumericValue(s.charAt(index));
			int b = 1;
			b<<=a;
			list[index+1]=list[index]^b;
			if (map.containsKey(list[index+1])) {
				map.put(list[index+1],   map.get(list[index+1])+1);
			} else {
				map.put(list[index+1], 1);
			}
		}

		long count = 0;

		for (int index=0; index<length+1; index++) {
			if (map.get(list[index])!=0) {
				count+=(long) (map.get(list[index])*(long) (map.get(list[index])-1))/2;
				map.put (list[index], 0);
			}
		}

		System.out.println(count);

		sc.close();
	}

}
",WA
rinlucky7 ,abc295/D,Java,"import java.util.HashMap;
import java.util.Scanner;

public class Main{

	public static void main (String[] args) {
		Main main = new Main();
		Scanner sc = new Scanner (System.in);

		String s = sc.next();
		int length = s.length();
		int[] list = new int[length+1];
		HashMap <Integer, Integer> map = new HashMap <Integer, Integer>();
		map.put(0, 1);
		for (int index=0; index<length; index++) {
			int a = Character.getNumericValue(s.charAt(index));
			int b = 1;
			b<<=a;
			list[index+1]=list[index]^b;
			if (map.containsKey(list[index+1])) {
				map.put(list[index+1],   map.get(list[index+1])+1);
			} else {
				map.put((list[index+1]), 1);
			}
		}

		long count = 0;

		for (int index=0; index<length+1; index++) {
			if (map.get(list[index])!=0) {
				count+=(long) (map.get(list[index])*(map.get(list[index])-1))/2;
				map.put (list[index], 0);
			}
		}

		System.out.println(count);

		sc.close();
	}

}
","import java.util.HashMap;
import java.util.Scanner;

public class Main{

	public static void main (String[] args) {
		Main main = new Main();
		Scanner sc = new Scanner (System.in);

		String s = sc.next();
		int length = s.length();
		int[] list = new int[length+1];
		HashMap <Integer, Integer> map = new HashMap <Integer, Integer>();
		map.put(0, 1);
		for (int index=0; index<length; index++) {
			int a = Character.getNumericValue(s.charAt(index));
			int b = 1;
			b<<=a;
			list[index+1]=list[index]^b;
			if (map.containsKey(list[index+1])) {
				map.put(list[index+1],   map.get(list[index+1])+1);
			} else {
				map.put(list[index+1], 1);
			}
		}

		long count = 0;

		for (int index=0; index<length+1; index++) {
			if (map.get(list[index])!=0) {
				count+=(long) (map.get(list[index])*(long) (map.get(list[index])-1))/2l;
				map.put (list[index], 0);
			}
		}

		System.out.println(count);

		sc.close();
	}

}
",WA
rinlucky7 ,abc295/D,Java,"import java.util.HashMap;
import java.util.Scanner;

public class Main{

	public static void main (String[] args) {
		Main main = new Main();
		Scanner sc = new Scanner (System.in);

		String s = sc.next();
		int length = s.length();
		int[] list = new int[length+1];
		HashMap <Long, Integer> map = new HashMap <Long, Integer>();
		map.put(0l, 1);
		for (int index=0; index<length; index++) {
			int a = Character.getNumericValue(s.charAt(index));
			int b = 1;
			b<<=a;
			list[index+1]=list[index]^b;
			if (map.containsKey((long) list[index+1])) {
				map.put((long) list[index+1],   map.get((long) list[index+1])+1);
			} else {
				map.put((long) (list[index+1]), 1);
			}
		}

		long count = 0;

		for (int index=0; index<length+1; index++) {
			if (map.get((long) list[index])!=0) {
				count+=(map.get((long) list[index])*(map.get((long) list[index])-1))/2;
				map.put ((long) list[index], 0);
			}
		}

		System.out.println(count);

		sc.close();
	}

}
","import java.util.HashMap;
import java.util.Scanner;

public class Main{

	public static void main (String[] args) {
		Main main = new Main();
		Scanner sc = new Scanner (System.in);

		String s = sc.next();
		int length = s.length();
		int[] list = new int[length+1];
		HashMap <Long, Long> map = new HashMap <Long, Long>();
		map.put(0l, 1l);
		for (int index=0; index<length; index++) {
			int a = Character.getNumericValue(s.charAt(index));
			int b = 1;
			b<<=a;
			list[index+1]=list[index]^b;
			if (map.containsKey((long) list[index+1])) {
				map.put((long) list[index+1], (long) map.get((long) list[index+1])+1);
			} else {
				map.put((long) (list[index+1]), 1l);
			}
		}

		long count = 0;

		for (int index=0; index<length+1; index++) {
			if (map.get((long) list[index])!=0) {
				count+=(map.get((long) list[index])*(map.get((long) list[index])-1))/2;
				map.put ((long) list[index], 0l);
			}
		}

		System.out.println(count);

		sc.close();
	}

}
",WA
rinlucky7 ,abc295/D,Java,"import java.util.HashMap;
import java.util.Scanner;

public class Main{

	public static void main (String[] args) {
		Main main = new Main();
		Scanner sc = new Scanner (System.in);

		String s = sc.next();
		int length = s.length();
		int[] list = new int[length+1];
		HashMap <Integer, Integer> map = new HashMap <Integer, Integer>();
		map.put(0, 1);
		for (int index=0; index<length; index++) {
			int a = Character.getNumericValue(s.charAt(index));
			int b = 1;
			b<<=a;
			list[index+1]=list[index]^b;
			if (map.containsKey(list[index+1])) {
				map.put(list[index+1], map.get(list[index+1])+1);
			} else {
				map.put((list[index+1]), 1);
			}
		}

		long count = 0;

		for (int index=0; index<length+1; index++) {
			if (map.get(list[index])!=0) {
				count+=(map.get(list[index])*(map.get(list[index])-1))/2;
				map.put(list[index], 0);
			}
		}

		System.out.println(count);

		sc.close();
	}

}
","import java.util.HashMap;
import java.util.Scanner;

public class Main{

	public static void main (String[] args) {
		Main main = new Main();
		Scanner sc = new Scanner (System.in);

		String s = sc.next();
		int length = s.length();
		int[] list = new int[length+1];
		HashMap <Integer, Integer> map = new HashMap <Integer, Integer>();
		map.put(0, 1);
		for (int index=0; index<length; index++) {
			int a = Character.getNumericValue(s.charAt(index));
			int b = 1;
			b<<=a;
			list[index+1]=list[index]^b;
			if (map.containsKey(list[index+1])) {
				map.put(list[index+1],   map.get(list[index+1])+1);
			} else {
				map.put(list[index+1], 1);
			}
		}

		long count = 0;

		for (int index=0; index<length+1; index++) {
			if (map.get(list[index])!=0) {
				count+=(long) (map.get(list[index])*(long) (map.get(list[index])-1))/2;
				map.put (list[index], 0);
			}
		}

		System.out.println(count);

		sc.close();
	}

}
",WA
rinlucky7 ,abc295/D,Java,"import java.util.HashMap;
import java.util.Scanner;

public class Main{

	public static void main (String[] args) {
		Main main = new Main();
		Scanner sc = new Scanner (System.in);

		String s = sc.next();
		int length = s.length();
		int[] list = new int[length+1];
		HashMap <Integer, Integer> map = new HashMap <Integer, Integer>();
		map.put(0, 1);
		for (int index=0; index<length; index++) {
			int a = Character.getNumericValue(s.charAt(index));
			int b = 1;
			b<<=a;
			list[index+1]=list[index]^b;
			if (map.containsKey(list[index+1])) {
				map.put(list[index+1], map.get(list[index+1])+1);
			} else {
				map.put((list[index+1]), 1);
			}
		}

		long count = 0;

		for (int index=0; index<length+1; index++) {
			if (map.get(list[index])!=0) {
				count+=(map.get(list[index])*(map.get(list[index])-1))/2;
				map.put(list[index], 0);
			}
		}

		System.out.println(count);

		sc.close();
	}

}
","import java.util.HashMap;
import java.util.Scanner;

public class Main{

	public static void main (String[] args) {
		Main main = new Main();
		Scanner sc = new Scanner (System.in);

		String s = sc.next();
		int length = s.length();
		int[] list = new int[length+1];
		HashMap <Integer, Integer> map = new HashMap <Integer, Integer>();
		map.put(0, 1);
		for (int index=0; index<length; index++) {
			int a = Character.getNumericValue(s.charAt(index));
			int b = 1;
			b<<=a;
			list[index+1]=list[index]^b;
			if (map.containsKey(list[index+1])) {
				map.put(list[index+1],   map.get(list[index+1])+1);
			} else {
				map.put(list[index+1], 1);
			}
		}

		long count = 0;

		for (int index=0; index<length+1; index++) {
			if (map.get(list[index])!=0) {
				count+=(long) (map.get(list[index])*(long) (map.get(list[index])-1))/2l;
				map.put (list[index], 0);
			}
		}

		System.out.println(count);

		sc.close();
	}

}
",WA
vijay_panwar12 ,abc297/A,Java,"import java.util.*;

public class code
{
	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
	  
			int n=sc.nextInt();
			long d=sc.nextLong();
			long a[]=new long[n];
			for (int i = 0; i < n; i++) {
				a[i]=sc.nextLong();
			}
			long x=-1;
		    for(int i=1;i<n;i++){
				if(a[i]-a[i-1]<=d){
					x=a[i];
					break;
				}
			}
			System.out.println(x);
		sc.close();
	}
}
","import java.util.*;

public class Main
{
	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
	  
			int n=sc.nextInt();
			long d=sc.nextLong();
			long a[]=new long[n];
			for (int i = 0; i < n; i++) {
				a[i]=sc.nextLong();
			}
			long x=-1;
		    for(int i=1;i<n;i++){
				if(a[i]-a[i-1]<=d){
					x=a[i];
					break;
				}
			}
			System.out.println(x);
		sc.close();
	}
}
",CE
Imran435 ,abc297/A,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.util.StringTokenizer;

public class D {
	public static void main(String[] args) {
		InputStream inputStream = System.in;
		OutputStream outputStream = System.out;
		InputReader in = new InputReader(inputStream);
		PrintWriter out = new PrintWriter(outputStream);
		Task1 solver = new Task1();
		int testCount = 1;
		for (int i = 1; i <= testCount; i++)
			solver.solve(i, in, out);
		out.close();
	}

	static class Task1 {
		public void solve(int testNumber, InputReader in, PrintWriter out) {
			int n = in.nextInt(), d = in.nextInt();
			int[] a = new int[n];
			int ans = -1;
			for (int i = 0; i < n; i++)
				a[i] = in.nextInt();
			for (int i = 1; i < n; i++) {
				if (a[i] - a[i - 1] <= d) {
					ans = a[i];
					break;
				}
			}
			out.println(ans);
		}
	}

	static class Task2 {
		public void solve(int testNumber, InputReader in, PrintWriter out) {
			out.println();
		}
	}

	static class Task3 {
		public void solve(int testNumber, InputReader in, PrintWriter out) {
			out.println();
		}
	}

	static class Task4 {
		public void solve(int testNumber, InputReader in, PrintWriter out) {
			out.println();
		}
	}

	static class Task5 {
		public void solve(int testNumber, InputReader in, PrintWriter out) {
			out.println();
		}
	}

	static class Task6 {
		public void solve(int testNumber, InputReader in, PrintWriter out) {
			out.println();
		}
	}

	static class InputReader {
		public BufferedReader reader;
		public StringTokenizer tokenizer;

		public InputReader(InputStream stream) {
			reader = new BufferedReader(new InputStreamReader(stream), 32768);
			tokenizer = null;
		}

		public String next() {
			while (tokenizer == null || !tokenizer.hasMoreTokens()) {
				try {
					tokenizer = new StringTokenizer(reader.readLine());
				} catch (IOException e) {
					throw new RuntimeException(e);
				}
			}
			return tokenizer.nextToken();
		}

		public int nextInt() {
			return Integer.parseInt(next());
		}

		public long nextLong() {
			return Long.parseLong(next());
		}
	}
}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.util.StringTokenizer;

public class Main {
	public static void main(String[] args) {
		InputStream inputStream = System.in;
		OutputStream outputStream = System.out;
		InputReader in = new InputReader(inputStream);
		PrintWriter out = new PrintWriter(outputStream);
		Task1 solver = new Task1();
		int testCount = 1;
		for (int i = 1; i <= testCount; i++)
			solver.solve(i, in, out);
		out.close();
	}

	static class Task1 {
		public void solve(int testNumber, InputReader in, PrintWriter out) {
			int n = in.nextInt(), d = in.nextInt();
			int[] a = new int[n];
			int ans = -1;
			for (int i = 0; i < n; i++)
				a[i] = in.nextInt();
			for (int i = 1; i < n; i++) {
				if (a[i] - a[i - 1] <= d) {
					ans = a[i];
					break;
				}
			}
			out.println(ans);
		}
	}

	static class Task2 {
		public void solve(int testNumber, InputReader in, PrintWriter out) {
			out.println();
		}
	}

	static class Task3 {
		public void solve(int testNumber, InputReader in, PrintWriter out) {
			out.println();
		}
	}

	static class Task4 {
		public void solve(int testNumber, InputReader in, PrintWriter out) {
			out.println();
		}
	}

	static class Task5 {
		public void solve(int testNumber, InputReader in, PrintWriter out) {
			out.println();
		}
	}

	static class Task6 {
		public void solve(int testNumber, InputReader in, PrintWriter out) {
			out.println();
		}
	}

	static class InputReader {
		public BufferedReader reader;
		public StringTokenizer tokenizer;

		public InputReader(InputStream stream) {
			reader = new BufferedReader(new InputStreamReader(stream), 32768);
			tokenizer = null;
		}

		public String next() {
			while (tokenizer == null || !tokenizer.hasMoreTokens()) {
				try {
					tokenizer = new StringTokenizer(reader.readLine());
				} catch (IOException e) {
					throw new RuntimeException(e);
				}
			}
			return tokenizer.nextToken();
		}

		public int nextInt() {
			return Integer.parseInt(next());
		}

		public long nextLong() {
			return Long.parseLong(next());
		}
	}
}
",CE
k1800ban ,abc297/A,Java,"import java.util.Scanner;

public class Main {
  public static void main(String[] args) {
    try (Scanner sc = new Scanner(System.in)) {
      int N = sc.nextInt();
      int D = sc.nextInt();
      int[] T = new int[N];
      for (int i = 0; i < N; i++) {
        T[i] = sc.nextInt();
      }
      int ans = -1;
      for (int i = 0; i < T.length; i++) {
        if (i + 1 < N) {
          if (T[i + 1] - T[i] < D) {
            ans = T[i + 1];
            break;
          }
        }
      }
      System.out.println(ans);
    }
  }
}
","import java.util.Scanner;

public class Main {
  public static void main(String[] args) {
    try (Scanner sc = new Scanner(System.in)) {
      int N = sc.nextInt();
      int D = sc.nextInt();
      int[] T = new int[N];
      for (int i = 0; i < N; i++) {
        T[i] = sc.nextInt();
      }
      int ans = -1;
      for (int i = 0; i < T.length; i++) {
        if (i + 1 < N) {
          if (T[i + 1] - T[i] <= D) {
            ans = T[i + 1];
            break;
          }
        }
      }
      System.out.println(ans);
    }
  }
}
",WA
k1800ban ,abc297/A,Java,"public class Main {
  public static void main(String[] args) {
    try (Scanner sc = new Scanner(System.in)) {
      int N = sc.nextInt();
      int D = sc.nextInt();
      int[] T = new int[N];
      for (int i = 0; i < N; i++) {
        T[i] = sc.nextInt();
      }
      int ans = -1;
      for (int i = 0; i < N - 1; i++) {
        if (T[i + 1] - T[i] <= D) {
          ans = T[i + 1];
          break;
        }
      }
      System.out.println(ans);
    }
  }
}
","import java.util.Scanner;

public class Main {
  public static void main(String[] args) {
    try (Scanner sc = new Scanner(System.in)) {
      int N = sc.nextInt();
      int D = sc.nextInt();
      int[] T = new int[N];
      for (int i = 0; i < N; i++) {
        T[i] = sc.nextInt();
      }
      int ans = -1;
      for (int i = 0; i < N - 1; i++) {
        if (T[i + 1] - T[i] <= D) {
          ans = T[i + 1];
          break;
        }
      }
      System.out.println(ans);
    }
  }
}
",CE
k1800ban ,abc297/A,Java,"package AtCoder.ABC297;

import java.util.Scanner;

public class ABC297A {
  public static void main(String[] args) {
    try (Scanner sc = new Scanner(System.in)) {
      int N = sc.nextInt();
      int D = sc.nextInt();
      int[] T = new int[N];
      for (int i = 0; i < N; i++) {
        T[i] = sc.nextInt();
      }
      int ans = -1;
      for (int i = 0; i < T.length; i++) {
        if (i + 1 < N) {
          if (T[i + 1] - T[i] < D) {
            ans = T[i + 1];
            break;
          }
        }
      }
      System.out.println(ans);
    }
  }
}
","import java.util.Scanner;

public class Main {
  public static void main(String[] args) {
    try (Scanner sc = new Scanner(System.in)) {
      int N = sc.nextInt();
      int D = sc.nextInt();
      int[] T = new int[N];
      for (int i = 0; i < N; i++) {
        T[i] = sc.nextInt();
      }
      int ans = -1;
      for (int i = 0; i < T.length; i++) {
        if (i + 1 < N) {
          if (T[i + 1] - T[i] <= D) {
            ans = T[i + 1];
            break;
          }
        }
      }
      System.out.println(ans);
    }
  }
}
",CE
q2045891621 ,abc297/A,Java,"
import java.io.IOException;
import java.math.BigInteger;
import java.util.*;

public class Main {
    static Scanner in = new Scanner(System.in);


    public static int gcd(int a, int b) {
        return b == 0 ? a : gcd(b, a % b);
    }

    public static void solve() throws IOException {

    }

    public static void main(String arg[]) throws Exception {

        int n = in.nextInt();
        int d = in.nextInt();
        int[] a = new int[n + 1];
        for (int i = 1; i <= n; i++)
            a[i] = in.nextInt();
        for (int i = 2; i <= n; i++)
            if (a[i] - a[i - 1] <= d) {
                System.out.println(a[i - 1]);
                return;
            }
        System.out.println(-1);
    }
}
","
import java.io.IOException;
import java.math.BigInteger;
import java.util.*;

public class Main {
    static Scanner in = new Scanner(System.in);


    public static int gcd(int a, int b) {
        return b == 0 ? a : gcd(b, a % b);
    }

    public static void solve() throws IOException {

    }

    public static void main(String arg[]) throws Exception {

        int n = in.nextInt();
        int d = in.nextInt();

        int[] a = new int[n + 1];
        for (int i = 1; i <= n; i++)
            a[i] = in.nextInt();

        for (int i = 2; i <= n; i++)
            if (a[i] - a[i - 1] <= d) {
                System.out.println(a[i ]);
                return;
            }
        System.out.println(-1);
    }
}
",WA
emilyli1072 ,abc297/A,Java,"import java.util.*;
import java.io.*;
public class A {
    public static void main(String[] args) throws IOException{
        br = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(System.out);
        int N = nextInt();
        int D = nextInt();
        int previous = nextInt();
        boolean detected = false;
        for (int i = 1; i < N; i++) {
            int cur = nextInt();
            if (detected) break;
            if (cur-previous<=D) {
                detected = true;
                out.println(cur);
            }
            previous = cur;
        }
        if (!detected) out.println(-1);
        out.close();
    }
    static BufferedReader br;
    static PrintWriter out;
    static StringTokenizer in = new StringTokenizer("""");

    public static String nextToken() throws IOException {
        while (!in.hasMoreTokens()) {
            in = new StringTokenizer(br.readLine());
        }
        return in.nextToken();
    }

    public static int nextInt() throws IOException {
        return Integer.parseInt(nextToken());
    }
}
","import java.util.*;
import java.io.*;
public class Main {
    public static void main(String[] args) throws IOException{
        br = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(System.out);
        int N = nextInt();
        int D = nextInt();
        int previous = nextInt();
        boolean detected = false;
        for (int i = 1; i < N; i++) {
            int cur = nextInt();
            if (detected) break;
            if (cur-previous<=D) {
                detected = true;
                out.println(cur);
            }
            previous = cur;
        }
        if (!detected) out.println(-1);
        out.close();
    }
    static BufferedReader br;
    static PrintWriter out;
    static StringTokenizer in = new StringTokenizer("""");

    public static String nextToken() throws IOException {
        while (!in.hasMoreTokens()) {
            in = new StringTokenizer(br.readLine());
        }
        return in.nextToken();
    }

    public static int nextInt() throws IOException {
        return Integer.parseInt(nextToken());
    }
}
",CE
emilyli1072 ,abc297/A,Java,"import java.util.*;
import java.io.*;
public class A {
    public static void main(String[] args) throws IOException{
        br = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(System.out);
        int N = nextInt();
        int D = nextInt();
        int previous = nextInt();
        boolean detected = false;
        for (int i = 1; i < N; i++) {
            int cur = nextInt();
            if (detected) break;
            if (cur-previous<=D) {
                detected = true;
                out.println(cur);
            }
        }
        if (!detected) out.println(-1);
        out.close();
    }
    static BufferedReader br;
    static PrintWriter out;
    static StringTokenizer in = new StringTokenizer("""");

    public static String nextToken() throws IOException {
        while (!in.hasMoreTokens()) {
            in = new StringTokenizer(br.readLine());
        }
        return in.nextToken();
    }

    public static int nextInt() throws IOException {
        return Integer.parseInt(nextToken());
    }
}
","import java.util.*;
import java.io.*;
public class Main {
    public static void main(String[] args) throws IOException{
        br = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(System.out);
        int N = nextInt();
        int D = nextInt();
        int previous = nextInt();
        boolean detected = false;
        for (int i = 1; i < N; i++) {
            int cur = nextInt();
            if (detected) break;
            if (cur-previous<=D) {
                detected = true;
                out.println(cur);
            }
            previous = cur;
        }
        if (!detected) out.println(-1);
        out.close();
    }
    static BufferedReader br;
    static PrintWriter out;
    static StringTokenizer in = new StringTokenizer("""");

    public static String nextToken() throws IOException {
        while (!in.hasMoreTokens()) {
            in = new StringTokenizer(br.readLine());
        }
        return in.nextToken();
    }

    public static int nextInt() throws IOException {
        return Integer.parseInt(nextToken());
    }
}
",CE
sksinghl498 ,abc297/A,Java,"import java.util.*;
import java.io.*;


public class direction_change {
     
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader(){
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next(){
            while(st== null || !st.hasMoreElements()){
                try{ 
                    st= new StringTokenizer(br.readLine());
                }catch(IOException e){
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }
        int nextInt(){
            return Integer.parseInt(next());
        }
        long nextLong(){
            return Long.parseLong(next());
        }
        double nextDouble(){
            return Double.parseDouble(next());
        }
        String nextLine(){
            String str= """";
            try{
                str= br.readLine();
            }catch (IOException e){
                e.printStackTrace();
            }
            return str;
        }
    }


    public static void main(String[] args){
        FastReader sc= new FastReader();
        PrintWriter o = new PrintWriter(System.out);

        int n= sc.nextInt();
        long d= sc.nextLong();

        long arr[]= new long[n];

        for(int i=0;i<n;i++){
            arr[i]= sc.nextLong();
        }

        for(int i=1;i<n;i++){
            if((arr[i]-arr[i-1])<=d){
                o.println(arr[i]);
                o.flush();
                o.close();
            }
        }
        o.println(-1);
        o.flush();
        o.close();
    }
}
","import java.util.*;
import java.io.*;


public class Main{
     
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader(){
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next(){
            while(st== null || !st.hasMoreElements()){
                try{ 
                    st= new StringTokenizer(br.readLine());
                }catch(IOException e){
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }
        int nextInt(){
            return Integer.parseInt(next());
        }
        long nextLong(){
            return Long.parseLong(next());
        }
        double nextDouble(){
            return Double.parseDouble(next());
        }
        String nextLine(){
            String str= """";
            try{
                str= br.readLine();
            }catch (IOException e){
                e.printStackTrace();
            }
            return str;
        }
    }


    public static void main(String[] args){
        FastReader sc= new FastReader();
        PrintWriter o = new PrintWriter(System.out);

        int n= sc.nextInt();
        long d= sc.nextLong();

        long arr[]= new long[n];

        for(int i=0;i<n;i++){
            arr[i]= sc.nextLong();
        }

        for(int i=1;i<n;i++){
            if((arr[i]-arr[i-1])<=d){
                o.println(arr[i]);
                o.flush();
                o.close();
            }
        }
        o.println(-1);
        o.flush();
        o.close();
    }
}
",CE
honai ,abc297/A,Java,"import java.util.*;
public class Main {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int D = sc.nextInt();
    int prevClicked = -2 * D;
    for (int i = 0; i < N; i++) {
      int T_i = sc.nextInt();
      if (T_i - prevClicked <= D) {
        System.out.println(T_i);
        return;
      }
    }
    System.out.println(""-1"");
  }
}
","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int D = sc.nextInt();
        int prevClicked = -2 * D;
        for (int i = 0; i < N; i++) {
            int T_i = sc.nextInt();
            if (T_i - prevClicked <= D) {
                System.out.println(T_i);
                return;
            }
            prevClicked = T_i;
        }
        System.out.println(""-1"");
    }
}
",WA
honai ,abc297/A,Java,"import java.util.*;
public class Main {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int D = sc.nextInt();
    int prevClicked = -2 * D;
    for (int i = 0; i < N; i++) {
      int T_i = sc.nextInt();
      if (T_i - prevClicked <= D) {
        System.out.println(T_i);
        return;
      }
    }
    System.out.println(""-1"")
  }
}
","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int D = sc.nextInt();
        int prevClicked = -2 * D;
        for (int i = 0; i < N; i++) {
            int T_i = sc.nextInt();
            if (T_i - prevClicked <= D) {
                System.out.println(T_i);
                return;
            }
            prevClicked = T_i;
        }
        System.out.println(""-1"");
    }
}
",CE
honai ,abc297/A,Java,"public class Main {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int D = sc.nextInt();
    int prevClicked = -2 * D;
    for (int i = 0; i < N; i++) {
      T_i = sc.nextInt();
      if (T_i - prevClicked <= D) {
        System.out.println(T_i);
        return;
      }
    }
    System.out.println(""-1"");
  }
}
","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int D = sc.nextInt();
        int prevClicked = -2 * D;
        for (int i = 0; i < N; i++) {
            int T_i = sc.nextInt();
            if (T_i - prevClicked <= D) {
                System.out.println(T_i);
                return;
            }
            prevClicked = T_i;
        }
        System.out.println(""-1"");
    }
}
",CE
Nacre ,abc297/A,Java,"package onlinejudge;

import java.io.PrintWriter;
import java.util.Scanner;

public class Main {
	
	public static void main(String[] args) {
		
		try(Scanner sc = new Scanner(System.in);){
			
			PrintWriter out = new PrintWriter(System.out);
			StringBuilder sb = new StringBuilder();
			
			
			int n = Integer.parseInt(sc.next());
			int d = Integer.parseInt(sc.next());
			
			int[] t = new int[n];
 			for(int i = 0; i < n; i++) {
				t[i] = Integer.parseInt(sc.next());
			}
			
 			int ans = -1;
 			for(int i = 1; i < n; i++) {
 				if(t[i] - t[i - 1] <= d) {
 					ans = t[i];
 					break;
 				}
 			}
			
 			sb.append(ans);
 			
			out.println(sb.toString());
			out.flush();
			
		}
		
	}
	
}
","import java.io.PrintWriter;
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		
		try(Scanner sc = new Scanner(System.in);){
			
			PrintWriter out = new PrintWriter(System.out);
			StringBuilder sb = new StringBuilder();
			
			
			int n = Integer.parseInt(sc.next());
			int d = Integer.parseInt(sc.next());
			
			int[] t = new int[n];
 			for(int i = 0; i < n; i++) {
				t[i] = Integer.parseInt(sc.next());
			}
			
 			int ans = -1;
 			for(int i = 1; i < n; i++) {
 				if(t[i] - t[i - 1] <= d) {
 					ans = t[i];
 					break;
 				}
 			}
			
 			sb.append(ans);
 			
			out.println(sb.toString());
			out.flush();
			
		}

	}

}
",RE
hiyo123 ,abc297/A,Java,"import java.util.Scanner;

public class App {
    public static void main(String[] args) throws Exception {
        
        Scanner scanner = new Scanner(System.in);
        int N, D;
        N = scanner.nextInt();
        D = scanner.nextInt();

        int[] T = new int[N];
        
        for(int i = 0; i < N; i++)
            T[i] = scanner.nextInt();
        scanner.close();

        for(int i = 1; i < N; i++){
            if(Math.abs(T[i] - T[i-1]) <= D){
                System.out.println(T[i]);
                System.exit(0);
            }
        }

        System.out.println(-1);
        System.exit(0);
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) throws Exception {
        
        Scanner scanner = new Scanner(System.in);
        int N, D;
        N = scanner.nextInt();
        D = scanner.nextInt();

        int[] T = new int[N];
        
        for(int i = 0; i < N; i++)
            T[i] = scanner.nextInt();
        scanner.close();

        for(int i = 1; i < N; i++){
            if(Math.abs(T[i] - T[i-1]) <= D){
                System.out.println(T[i]);
                System.exit(0);
            }
        }

        System.out.println(-1);
        System.exit(0);
    }
}
",CE
hiyo123 ,abc297/A,Java,"import java.util.ArrayList;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) throws Exception {
        pro1();
    }

    private static void pro1(){
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int D = scanner.nextInt();
        int[] T = new int[N];

        for(int i = 0; i < N; i++){
            T[i] = scanner.nextInt();
        }
        scanner.close();

        for(int i = 1; i < N; i++){
            if(T[i]-T[i-1] <= D)
                System.out.println(T[i]);
                return;
        }
        System.out.println(-1);
    }

    private static void arr2(){
        ArrayList<ArrayList<Integer>> temp = new ArrayList<ArrayList<Integer>>();
        for (int i=0; i< 10; i++){
            temp.add(new ArrayList<Integer>());
            for (int j=0; j< 10; j++){
                temp.get(i).add(j);
                System.out.println(temp.get(i).get(j));
            }
        }
    }

    private static void Bfs(){
        Scanner scanner = new Scanner(System.in);
        int N, M;
        N = scanner.nextInt();
        M = scanner.nextInt();

        ArrayList<Integer>[] G = new ArrayList[N];
        for (int i = 0; i < N; i++) {
            G[i] = new ArrayList<Integer>();
        }

        for(int i = 0; i < M; i++){
            int a = scanner.nextInt();
            int b = scanner.nextInt();
            G[a].add(b);
            G[b].add(a);
        }
        scanner.close();

        int[] dist = new int[N];
        java.util.Arrays.fill(dist, -1);

        ArrayList<Integer>[] nodes = new ArrayList[N];
        for (int i = 0; i < N; i++) {
            nodes[i] = new ArrayList<Integer>();
        }

        dist[0] = 0;
        nodes[0].add(0);

        for (int i = 0; i < N; i++){
            for(int node: nodes[i]){
                for (int g: G[node]){

                    if (dist[g] != -1)
                        continue;
                    
                    dist[g] = i + 1;
                    nodes[i + 1].add(g);
                }
            }
        }

        for (int d: dist){
            System.out.println(d);
        }
    }

    public static void Click(){
        Scanner scanner = new Scanner(System.in);
        int N, D;
        N = scanner.nextInt();
        D = scanner.nextInt();

        int[] T = new int[N];
        
        for(int i = 0; i < N; i++)
            T[i] = scanner.nextInt();
        scanner.close();

        for(int i = 1; i < N; i++){
            if(Math.abs(T[i] - T[i-1]) <= D){
                System.out.println(T[i]);
                System.exit(0);
            }
        }

        System.out.println(-1);
        System.exit(0);
    }
}
","import java.util.ArrayList;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) throws Exception {
        pro1();
    }

    private static void pro1(){
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int D = scanner.nextInt();
        int[] T = new int[N];

        for(int i = 0; i < N; i++){
            T[i] = scanner.nextInt();
        }
        scanner.close();

        for(int i = 1; i < N; i++){
            if(T[i]-T[i-1] <= D){
                System.out.println(T[i]);
                return;
            }
        }
        System.out.println(-1);
    }

    private static void arr2(){
        ArrayList<ArrayList<Integer>> temp = new ArrayList<ArrayList<Integer>>();
        for (int i=0; i< 10; i++){
            temp.add(new ArrayList<Integer>());
            for (int j=0; j< 10; j++){
                temp.get(i).add(j);
                System.out.println(temp.get(i).get(j));
            }
        }
    }

    private static void Bfs(){
        Scanner scanner = new Scanner(System.in);
        int N, M;
        N = scanner.nextInt();
        M = scanner.nextInt();

        ArrayList<Integer>[] G = new ArrayList[N];
        for (int i = 0; i < N; i++) {
            G[i] = new ArrayList<Integer>();
        }

        for(int i = 0; i < M; i++){
            int a = scanner.nextInt();
            int b = scanner.nextInt();
            G[a].add(b);
            G[b].add(a);
        }
        scanner.close();

        int[] dist = new int[N];
        java.util.Arrays.fill(dist, -1);

        ArrayList<Integer>[] nodes = new ArrayList[N];
        for (int i = 0; i < N; i++) {
            nodes[i] = new ArrayList<Integer>();
        }

        dist[0] = 0;
        nodes[0].add(0);

        for (int i = 0; i < N; i++){
            for(int node: nodes[i]){
                for (int g: G[node]){

                    if (dist[g] != -1)
                        continue;
                    
                    dist[g] = i + 1;
                    nodes[i + 1].add(g);
                }
            }
        }

        for (int d: dist){
            System.out.println(d);
        }
    }

    public static void Click(){
        Scanner scanner = new Scanner(System.in);
        int N, D;
        N = scanner.nextInt();
        D = scanner.nextInt();

        int[] T = new int[N];
        
        for(int i = 0; i < N; i++)
            T[i] = scanner.nextInt();
        scanner.close();

        for(int i = 1; i < N; i++){
            if(Math.abs(T[i] - T[i-1]) <= D){
                System.out.println(T[i]);
                System.exit(0);
            }
        }

        System.out.println(-1);
        System.exit(0);
    }
}
",WA
singh_ ,abc297/A,Java,"import java.util.*;
import java.io.*;

public class Main
{
  public static void main(String[]args)
  {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int d = sc.nextInt();
    int[] t = new int[n];
    for(int i=0; i<t.length; i++)
    {
      t[i] =sc.nextInt();
    }
    
    boolean found = false;
    int i=0;
    while(i<t.length-1)
    {
      if(t[i+1]-t[i]<=d)
      {
          
        System.out.println(t[i+1]);
        found=true;
        break;
      }
      i++;
      
      if(i==t.length-1 && found==false)
      {
          System.out.println(-1);
      }
      
    }
    

  }
}
","import java.util.*;
import java.io.*;

public class Main
{
  public static void main(String[]args)
  {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int d = sc.nextInt();
    int[] t = new int[n];
    for(int i=0; i<t.length; i++)
    {
      t[i] =sc.nextInt();
    }
    
    boolean found = false;
    int i=0;
    while(i<t.length-1)
    {
      if(t[i+1]-t[i]<=d)
      {
          
        System.out.println(t[i+1]);
        found=true;
        break;
      }
      i++;
    }
    if(found==false)
      {
          System.out.println(-1);
      }
    

  }
}
",WA
singh_ ,abc297/A,Java,"import java.util.*;
import java.io.*;

public class Main
{
  public static void main(String[]args)
  {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int d = sc.nextInt();
    int[] t = new int[n];
    for(int i=0; i<t.length; i++)
    {
      t[i] =sc.nextInt();
    }
    
    boolean found = false;
    int i=0;
    while(i<t.length)
    {
      if(t[i+1]-t[i]<=d)
      {
          
        System.out.println(t[i+1]);
        found=true;
        break;
      }
      i++;
      
      if(i==t.length-1 && found==false)
      {
          System.out.println(-1);
      }
      
    }
    

  }
}
","import java.util.*;
import java.io.*;

public class Main
{
  public static void main(String[]args)
  {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int d = sc.nextInt();
    int[] t = new int[n];
    for(int i=0; i<t.length; i++)
    {
      t[i] =sc.nextInt();
    }
    
    boolean found = false;
    int i=0;
    while(i<t.length-1)
    {
      if(t[i+1]-t[i]<=d)
      {
          
        System.out.println(t[i+1]);
        found=true;
        break;
      }
      i++;
    }
    if(found==false)
      {
          System.out.println(-1);
      }
    

  }
}
",RE
MeraNaamShivam ,abc297/A,Java,"import java.util.*;
public class Main
{
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int N=sc.nextInt();
		int D=sc.nextInt();
		int[] sample=new int[N];
		for(int i=0;i<N;i++){
		    sample[i]=sc.nextInt();
		}
		for(int i=0;i<N-1;i++){
		    if(sample[i+1]-sample[i]<=D){
		        System.out.println(sample[i+1]);
		        break;
		    }else if(i==N-2){
		        System.out.println(-1);
		    }
		}
	}
}
","import java.util.*;
public class Main
{
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int N=sc.nextInt();
		int D=sc.nextInt();
		int[] sample=new int[N];
		for(int i=0;i<N;i++){
		    sample[i]=sc.nextInt();
		}
		if(N==1){
		    System.out.println(-1);
		}
		for(int i=0;i<N-1;i++){
		    if(sample[i+1]-sample[i]<=D){
		        System.out.println(sample[i+1]);
		        break;
		    }else if(i==N-2){
		        System.out.println(-1);
		    }
		}
	}
}
",WA
yamachansonic ,abc297/A,Java,"import java.io.IOException;
import java.io.InputStream;
import java.util.NoSuchElementException;

public class Main {

	public static void main(String[] args) {
		FastScanner sc = new FastScanner();
		int N = sc.nextInt();
		int D = sc.nextInt();
		int bfTime = sc.nextInt();
		for(int i = 1; i < N; i++) {
			int time = sc.nextInt();
			if(Math.abs(bfTime - time) < D) {
				System.out.println(time);
				return;
			}
			bfTime = time;
		}
		System.out.println(-1);
	}
}

class FastScanner {
	private final InputStream in = System.in;
	private final byte[] buffer = new byte[1024];
	private int ptr = 0;
	private int buflen = 0;

	private boolean hasNextByte() {
		if (ptr < buflen) {
			return true;
		} else {
			ptr = 0;
			try {
				buflen = in.read(buffer);
			} catch (IOException e) {
				e.printStackTrace();
			}
			if (buflen <= 0) {
				return false;
			}
		}
		return true;
	}

	private int readByte() {
		if (hasNextByte())
			return buffer[ptr++];
		else
			return -1;
	}

	private static boolean isPrintableChar(int c) {
		return 33 <= c && c <= 126;
	}

	public boolean hasNext() {
		while (hasNextByte() && !isPrintableChar(buffer[ptr]))
			ptr++;
		return hasNextByte();
	}

	public String next() {
		if (!hasNext())
			throw new NoSuchElementException();
		StringBuilder sb = new StringBuilder();
		int b = readByte();
		while (isPrintableChar(b)) {
			sb.appendCodePoint(b);
			b = readByte();
		}
		return sb.toString();
	}

	public long nextLong() {
		if (!hasNext())
			throw new NoSuchElementException();
		long n = 0;
		boolean minus = false;
		int b = readByte();
		if (b == '-') {
			minus = true;
			b = readByte();
		}
		if (b < '0' || '9' < b) {
			throw new NumberFormatException();
		}
		while (true) {
			if ('0' <= b && b <= '9') {
				n *= 10;
				n += b - '0';
			} else if (b == -1 || !isPrintableChar(b)) {
				return minus ? -n : n;
			} else {
				throw new NumberFormatException();
			}
			b = readByte();
		}
	}

	public int nextInt() {
		long nl = nextLong();
		if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE)
			throw new NumberFormatException();
		return (int) nl;
	}

	public double nextDouble() {
		return Double.parseDouble(next());
	}
}
","import java.io.IOException;
import java.io.InputStream;
import java.util.NoSuchElementException;

public class Main {

	public static void main(String[] args) {
		FastScanner sc = new FastScanner();
		int N = sc.nextInt();
		int D = sc.nextInt();
		int bfTime = sc.nextInt();
		for(int i = 1; i < N; i++) {
			int time = sc.nextInt();
			if(Math.abs(bfTime - time) <= D) {
				System.out.println(time);
				return;
			}
			bfTime = time;
		}
		System.out.println(-1);
	}
}

class FastScanner {
	private final InputStream in = System.in;
	private final byte[] buffer = new byte[1024];
	private int ptr = 0;
	private int buflen = 0;

	private boolean hasNextByte() {
		if (ptr < buflen) {
			return true;
		} else {
			ptr = 0;
			try {
				buflen = in.read(buffer);
			} catch (IOException e) {
				e.printStackTrace();
			}
			if (buflen <= 0) {
				return false;
			}
		}
		return true;
	}

	private int readByte() {
		if (hasNextByte())
			return buffer[ptr++];
		else
			return -1;
	}

	private static boolean isPrintableChar(int c) {
		return 33 <= c && c <= 126;
	}

	public boolean hasNext() {
		while (hasNextByte() && !isPrintableChar(buffer[ptr]))
			ptr++;
		return hasNextByte();
	}

	public String next() {
		if (!hasNext())
			throw new NoSuchElementException();
		StringBuilder sb = new StringBuilder();
		int b = readByte();
		while (isPrintableChar(b)) {
			sb.appendCodePoint(b);
			b = readByte();
		}
		return sb.toString();
	}

	public long nextLong() {
		if (!hasNext())
			throw new NoSuchElementException();
		long n = 0;
		boolean minus = false;
		int b = readByte();
		if (b == '-') {
			minus = true;
			b = readByte();
		}
		if (b < '0' || '9' < b) {
			throw new NumberFormatException();
		}
		while (true) {
			if ('0' <= b && b <= '9') {
				n *= 10;
				n += b - '0';
			} else if (b == -1 || !isPrintableChar(b)) {
				return minus ? -n : n;
			} else {
				throw new NumberFormatException();
			}
			b = readByte();
		}
	}

	public int nextInt() {
		long nl = nextLong();
		if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE)
			throw new NumberFormatException();
		return (int) nl;
	}

	public double nextDouble() {
		return Double.parseDouble(next());
	}
}
",WA
rio01 ,abc297/A,Java,"import java.util.*;
class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int D = sc.nextInt();
        int ans = 0;
        int pre = 0;
        for(int i=1; i<=N; i++){
            int T = sc.nextInt();
            if(i>1 && (T-pre)<= D){
                ans = T;
                break;
            }else{
                pre = T;
            }

        }
        
        System.out.println(ans);
    }
}
","import java.util.*;
class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int D = sc.nextInt();
        int ans = 0;
        int pre = 0;
        for(int i=1; i<=N; i++){
            int T = sc.nextInt();
            if(i>1 && (T-pre)<= D){
                ans = T;
                break;
            }else{
                pre = T;
            }

        }
        if(ans == 0){
            System.out.println(-1);
        }else{
            System.out.println(ans);
        }
       
    }
}
",WA
PrabhanshuBhowal ,abc297/A,Java,"import java.util.*;
class Main{
  public static void main(String args){
    Scanner sc=new Scanner(System.in);
    int n=sc.nextInt();
    int d=sc.nextInt();
    int a[]=new int[n];
    for(int i=0;i<n;i++)
    {
      a[i]=sc.nextInt();
    }
    int c=-1;
    for(int i=1;i<n;i++)
    {
      if(a[i]-a[i-1]<=d)
      {
        c=i;break;
      }
    }
    System.out.println(c);
  }
}
","import java.util.*;
class Main{
  public static void main(String args[]){
    Scanner sc=new Scanner(System.in);
    int n=sc.nextInt();
    int d=sc.nextInt();
    int a[]=new int[n];
    for(int i=0;i<n;i++)
    {
      a[i]=sc.nextInt();
    }
    int c=-1;
    for(int i=1;i<n;i++)
    {
      if(a[i]-a[i-1]<=d)
      {
        c=a[i];break;
      }
    }
    System.out.println(c);
  }
}
",RE
HasegawaT ,abc297/A,Java,"import java.util.Scanner;
class Main{
  public static void main(String[] args){
    Scanner scn = new Scanner(System.in);
    int n = Integer.parseInt(scn.next());
    int d = Integer.parseInt(scn.next());
    int[] arr = new int[n];
    for(int i = 0;i < n;i++){
      arr[i] = Integer.parseInt(scn.next());
    }
    
    int result = -1;
    for(int i = 1;i < n;i++){
      if(arr[i] - arr[i - 1] <= d){
        
        result = arr[i]
        break;
      }
    }
    
    System.out.println(result);
  }
}
    
    
","import java.util.Scanner;
class Main{
  public static void main(String[] args){
    Scanner scn = new Scanner(System.in);
    int n = Integer.parseInt(scn.next());
    int d = Integer.parseInt(scn.next());
    int[] arr = new int[n];
    for(int i = 0;i < n;i++){
      arr[i] = Integer.parseInt(scn.next());
    }
    
    int result = -1;
    for(int i = 1;i < n;i++){
      if(arr[i] - arr[i - 1] <= d){
        
        result = arr[i];
        break;
      }
    }
    
    System.out.println(result);
  }
}
    
    
",CE
nyahonyahotm01 ,abc297/A,Java,"import java.util.ArrayList;
import java.util.Scanner;

public class Main {
    public static void main(String args[]) {
        ArrayList<Integer> numlist = new ArrayList<>();
        Scanner sc = new Scanner(System.in);
        int count = sc.nextInt();
        int distance = sc.nextInt();

        for(int i = 0; i < count; i++) {
            int num = sc.nextInt();
            numlist.add(num);
        }

        int counter = 0;

        for(int i = 1; i < count; i++) {
            int x1 = numlist.get(i - 1);
            int x2 = numlist.get(i);
            int dis = x2 - x1;

            if(dis < distance) {
                System.out.println(x2);
                break;
            }
            counter++;
        }

        count--;
        if(counter == count) {
            System.out.println(-1);
        }
    }
}
","import java.util.ArrayList;
import java.util.Scanner;

public class Main {
    public static void main(String args[]) {
        ArrayList<Integer> numlist = new ArrayList<>();
        Scanner sc = new Scanner(System.in);
        int count = sc.nextInt();
        int distance = sc.nextInt();

        for(int i = 0; i < count; i++) {
            int num = sc.nextInt();
            numlist.add(num);
        }

        int counter = 0;

        for(int i = 1; i < count; i++) {
            int x1 = numlist.get(i - 1);
            int x2 = numlist.get(i);
            int dis = x2 - x1;

            if(dis <= distance) {
                System.out.println(x2);
                break;
            }
            counter++;
        }

        count--;
        if(counter == count) {
            System.out.println(-1);
        }
    }
}
",WA
k8dc ,abc297/A,Java,"import java.util.Scanner;
public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt(); int d =sc.nextInt();
        int t[] = new int[n];
        for(int i = 0;i<n;i++){
            t[i] = sc.nextInt();
        }
        boolean flag =false;
        for(int i=0;i<d-1;i++){
            int test =t[i+1] - t[i]; 
            if( test <= d){
                flag = true;
                System.out.println(t[i+1]);
                break;
            }
        }
        if(flag = false){
            System.out.println(-1);
        }
    }
}
","import java.util.Scanner;
public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt(); int d =sc.nextInt();
        int t[] = new int[n];
        for(int i = 0;i<n;i++){
            t[i] = sc.nextInt();
        }
        boolean flag =false;
        for(int i=0;i<n-1;i++){
            int test =t[i+1] - t[i]; 
            if( test <= d){
                flag = true;
                System.out.println(t[i+1]);
                break;
            }
        }
        if(flag == false){
            System.out.println(-1);
        }
    }
}
",RE
american_eagle ,abc297/A,Java,"import java.util.*;

public class american {
  public static void main(String args[]) {
    Scanner sc = new Scanner(System.in);
      int  n = sc.nextInt();
      long d = sc.nextInt();
      long arr[] = new long[n];
      for (int i = 0; i < arr.length; i++) {
        arr[i]=sc.nextLong();
      }
      int x=1;
      for (int i = 0; i < arr.length-1; i++) {
        if((arr[i+1]-arr[i])<=d){
          System.out.println(arr[i+1]);x=0;
        break;
        }
      }
      if(x==1){
      System.out.println(-1);
      }
    
  }
}
","import java.util.*;

public class Main {
  public static void main(String args[]) {
    Scanner sc = new Scanner(System.in);
      int  n = sc.nextInt();
      long d = sc.nextInt();
      long arr[] = new long[n];
      for (int i = 0; i < arr.length; i++) {
        arr[i]=sc.nextLong();
      }
      int x=1;
      for (int i = 0; i < arr.length-1; i++) {
        if((arr[i+1]-arr[i])<=d){
          System.out.println(arr[i+1]);x=0;
        break;
        }
      }
      if(x==1){
      System.out.println(-1);
      }
    
  }
}
",CE
tamagosushi ,abc297/A,Java,"import java.util.*;

public class App {
    public static void main(String[] args) throws Exception{
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt(), d = sc.nextInt();
        int a[] = new int[n];
        for(int i=0; i<n; i++){
            a[i] = sc.nextInt();
        }
        for(int i=1; i<n; i++){
            if(a[i]-a[i-1] <= d){
                System.out.println(a[i]);
                return;
            }
        }
        System.out.println(""-1"");
    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args) throws Exception{
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt(), d = sc.nextInt();
        int a[] = new int[n];
        for(int i=0; i<n; i++){
            a[i] = sc.nextInt();
        }
        for(int i=1; i<n; i++){
            if(a[i]-a[i-1] <= d){
                System.out.println(a[i]);
                return;
            }
        }
        System.out.println(""-1"");
    }
}
",CE
okusaro ,abc297/A,Java,"import java.util.ArrayList;
import java.util.Scanner;


public class main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
        final int N = sc.nextInt();
        final int D = sc.nextInt();

        ArrayList<Integer> list=new ArrayList<>();

        for(int i=0;i<N;i++) {
        	list.add(sc.nextInt());
        }

        int x_0=list.get(0);

		for(int i=1;i<list.size();i++) {
			int x=list.get(i);
			if(x-x_0<=D) {
				System.out.println(x);
				System .exit(0);
			}
			x_0=x;
		}

		System.out.println(-1);
	}
}
","import java.util.ArrayList;
import java.util.Scanner;


public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
        final int N = sc.nextInt();
        final int D = sc.nextInt();

        ArrayList<Integer> list=new ArrayList<>();

        for(int i=0;i<N;i++) {
        	list.add(sc.nextInt());
        }

        int x_0=list.get(0);

		for(int i=1;i<list.size();i++) {
			int x=list.get(i);
			if(x-x_0<=D) {
				System.out.println(x);
				System .exit(0);
			}
			x_0=x;
		}

		System.out.println(-1);
	}
}
",CE
okusaro ,abc297/A,Java,"import java.util.ArrayList;
import java.util.Scanner;


public class Abc297_a {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
        final int N = sc.nextInt();
        final int D = sc.nextInt();

        ArrayList<Integer> list=new ArrayList<>();

        for(int i=0;i<N;i++) {
        	list.add(sc.nextInt());
        }

        int x_0=list.get(0);

		for(int i=1;i<list.size();i++) {
			int x=list.get(i);
			if(x-x_0<=D) {
				System.out.println(x);
				System .exit(0);
			}
			x_0=x;
		}

		System.out.println(-1);
	}
}
","import java.util.ArrayList;
import java.util.Scanner;


public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
        final int N = sc.nextInt();
        final int D = sc.nextInt();

        ArrayList<Integer> list=new ArrayList<>();

        for(int i=0;i<N;i++) {
        	list.add(sc.nextInt());
        }

        int x_0=list.get(0);

		for(int i=1;i<list.size();i++) {
			int x=list.get(i);
			if(x-x_0<=D) {
				System.out.println(x);
				System .exit(0);
			}
			x_0=x;
		}

		System.out.println(-1);
	}
}
",CE
okusaro ,abc297/A,Java,"import java.util.ArrayList;
import java.util.Scanner;



public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
        final int N = sc.nextInt();
        final int D = sc.nextInt();

        ArrayList<Integer> list=new ArrayList<>();

        for(int i=0;i<N;i++) {
        	list.add(sc.nextInt());
        }

        int x_0=list.get(0);

		for(int i=1;i<list.size();i++) {
			int x=list.get(i);
			if(x-x_0<=D) {
				System.out.println(x);
				System .exit(0);
			}
			x_0=x;
		}

		System.out.println(-1);
	}
","import java.util.ArrayList;
import java.util.Scanner;


public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
        final int N = sc.nextInt();
        final int D = sc.nextInt();

        ArrayList<Integer> list=new ArrayList<>();

        for(int i=0;i<N;i++) {
        	list.add(sc.nextInt());
        }

        int x_0=list.get(0);

		for(int i=1;i<list.size();i++) {
			int x=list.get(i);
			if(x-x_0<=D) {
				System.out.println(x);
				System .exit(0);
			}
			x_0=x;
		}

		System.out.println(-1);
	}
}
",CE
skyshuaiboy ,abc297/A,Java,"import java.util.*;

public class main {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        while (in.hasNext()) {
            int n = in.nextInt();
            int d = in.nextInt();
            int[] arr = new int[n];
            for (int i = 0; i < n; i++) {
                arr[i] = in.nextInt();
            }
            int ans = -1;
            for (int i = 1; i < n; i++) {
                if (arr[i] - arr[i - 1] <= d) {
                    ans = arr[i];
                    break;
                }
            }
            System.out.println(ans);
        }
    }
}

","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        while (in.hasNext()) {
            int n = in.nextInt();
            int d = in.nextInt();
            int[] arr = new int[n];
            for (int i = 0; i < n; i++) {
                arr[i] = in.nextInt();
            }
            int ans = -1;
            for (int i = 1; i < n; i++) {
                if (arr[i] - arr[i - 1] <= d) {
                    ans = arr[i];
                    break;
                }
            }
            System.out.println(ans);
        }
    }
}

",CE
izqnqi1142 ,abc297/A,Java,"import java.util.Scanner;

public class a_2 {
	public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        String[] pointStr = scan.nextLine().split("" "");
        int index = Integer.parseInt(pointStr[0]);
        int d = Integer.parseInt(pointStr[1]);
        boolean f= false;
        
        String[] pointsStr = scan.nextLine().split("" "");
        int[] points = new int[index];
        int x=Integer.parseInt(pointsStr[0]);
        for(int i = 1; i < points.length; i++) {
            points[i] = Integer.parseInt(pointsStr[i]);
            
            int y=points[i];
            if(f==false&&(y-x)<=d) {
            	System.out.println(y);
            	scan.close();
            	f=true;
            	
            }
            x=y;
            
        }
        if(f==false)System.out.println(-1);
        scan.close();
    
    }
}
","import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        String[] pointStr = scan.nextLine().split("" "");
        int index = Integer.parseInt(pointStr[0]);
        int d = Integer.parseInt(pointStr[1]);
        boolean f= false;
        
        String[] pointsStr = scan.nextLine().split("" "");
        int[] points = new int[index];
        int x=Integer.parseInt(pointsStr[0]);
        for(int i = 1; i < points.length; i++) {
            points[i] = Integer.parseInt(pointsStr[i]);
            
            int y=points[i];
            if(f==false&&(y-x)<=d) {
            	System.out.println(y);
            	scan.close();
            	f=true;
            	
            }
            x=y;
            
        }
        if(f==false)System.out.println(-1);
        scan.close();
    
    }
}
",CE
izqnqi1142 ,abc297/A,Java,"public class main {
	public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        String[] pointStr = scan.nextLine().split("" "");
        int index = Integer.parseInt(pointStr[0]);
        int d = Integer.parseInt(pointStr[1]);
        boolean f= false;
        
        String[] pointsStr = scan.nextLine().split("" "");
        int[] points = new int[index];
        int x=Integer.parseInt(pointsStr[0]);
        for(int i = 1; i < points.length; i++) {
            points[i] = Integer.parseInt(pointsStr[i]);
            
            int y=points[i];
            if(f==false&&(y-x)<=d) {
            	System.out.println(y);
            	scan.close();
            	f=true;
            	
            }
            x=y;
            
        }
        if(f==false)System.out.println(-1);
        scan.close();
    
    }
}
","import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        String[] pointStr = scan.nextLine().split("" "");
        int index = Integer.parseInt(pointStr[0]);
        int d = Integer.parseInt(pointStr[1]);
        boolean f= false;
        
        String[] pointsStr = scan.nextLine().split("" "");
        int[] points = new int[index];
        int x=Integer.parseInt(pointsStr[0]);
        for(int i = 1; i < points.length; i++) {
            points[i] = Integer.parseInt(pointsStr[i]);
            
            int y=points[i];
            if(f==false&&(y-x)<=d) {
            	System.out.println(y);
            	scan.close();
            	f=true;
            	
            }
            x=y;
            
        }
        if(f==false)System.out.println(-1);
        scan.close();
    
    }
}
",CE
AWD826 ,abc297/A,Java,"interface Main{
  static void main(String[]g){
    var sc=new java.util.Scanner(System.in);
    int n=sc.nextInt(),d=sc.nextInt(),i=0,a=sc.nextInt(),b=0,r=-1;
    for(;++i<n&&r>0;a=b)if((b=sc.nextInt())-a<=d)r=b;
    System.out.println(r);
  }
}
","interface Main{
  static void main(String[]g){
    var sc=new java.util.Scanner(System.in);
    int n=sc.nextInt(),d=sc.nextInt(),a=sc.nextInt(),b=0,r=-1;
    for(;--n>0&&r<0;a=b)if((b=sc.nextInt())-a<=d)r=b;
    System.out.println(r);
  }
}
",WA
Nisemirei ,abc297/A,Java,"import java.util.Scanner;

public class Main{
	static public void main(String args[]){
    	Scanner sc = new Scanner(System.in);
      	int n = sc.nextInt();
      	int d = sc.nextInt();
      	int prev_t = sc.nextInt();
      	int ret = -1;
      	for (int i=0; i<n-1; i++){
          	t = sc.nextInt();
        	if (t - prev_t <= d){
            	ret = t;
              	break;
            }
          	else prev_t = t;
        }
      	return ret;
    } 
}
","import java.util.Scanner;

public class Main{
	static public void main(String args[]){
    	Scanner sc = new Scanner(System.in);
      	int n = sc.nextInt();
      	int d = sc.nextInt();
      	int prev_t = sc.nextInt();
      	int ret = -1;
      	for (int i=0; i<n-1; i++){
          	int t = sc.nextInt();
        	if (t - prev_t <= d){
            	ret = t;
              	break;
            }
          	else prev_t = t;
        }
      	System.out.println(ret);
    } 
}
",CE
OneOne_yy ,abc297/A,Java,"import java.util.*;
import java.math.*;
import java.io.*;

public class A {

    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    
    static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));

    public static void main(String[] args) throws Exception {
    	String[] nk = in.readLine().split("" "");
    	int n = Integer.parseInt(nk[0]), k = Integer.parseInt(nk[1]);
    	int[] a = new int[n + 1];
    	String[] s = in.readLine().split("" "");
    	int ans = -1;
    	for (int i = 1; i <= n; i++) {
    		a[i] = Integer.parseInt(s[i - 1]);
    		if (i >= 2 && a[i] - a[i - 1] <= k) {
    			ans = a[i];
    			break;
    		}
    	}
    	out.println(ans);

        
    

        out.flush();
        in.close();
    }  
}
","import java.util.*;
import java.math.*;
import java.io.*;

public class Main {

    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    
    static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));

    public static void main(String[] args) throws Exception {
    	String[] nk = in.readLine().split("" "");
    	int n = Integer.parseInt(nk[0]), k = Integer.parseInt(nk[1]);
    	int[] a = new int[n + 1];
    	String[] s = in.readLine().split("" "");
    	int ans = -1;
    	for (int i = 1; i <= n; i++) {
    		a[i] = Integer.parseInt(s[i - 1]);
    		if (i >= 2 && a[i] - a[i - 1] <= k) {
    			ans = a[i];
    			break;
    		}
    	}
    	out.println(ans);

        
    

        out.flush();
        in.close();
    }  
}
",CE
yuhao ,abc297/A,Java,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int N = input.nextInt();
        int D = input.nextInt();
        int last = 0;
        for(int i = 0;i < N;i++){
            int num = input.nextInt();
            if(last != 0){
                int dis = num - last;
                if(dis <= D){
                    System.out.println(num);
                    return;
                }
            }
        }
        System.out.println(-1);
    }
}
","import java.util.Scanner;

public class Main{
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int N = input.nextInt();
        int D = input.nextInt();
        int last = 0;
        for(int i = 0;i < N;i++){
            int num = input.nextInt();
            if(last != 0){
                int dis = num - last;
                if(dis <= D){
                    System.out.println(num);
                    return;
                }
            }
            last = num;
        }
        System.out.println(-1);
    }
}
",WA
kwyk ,abc297/A,Java,"package to.msn.wings.selflearn.chap01;

import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int d = scanner.nextInt();
        int[] t = new int[n];
        int ans = -1;
        for (int i = 0; i < n; i++) {
            t[i] = scanner.nextInt();
        }
        for (int i = 0; i < n-1; i++) {
            if (t[i+1]-t[i] <= d) {
                ans = t[i+1];
                break;
            }
        }
        System.out.println(ans);
    }

}
","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int d = scanner.nextInt();
        int[] t = new int[n];
        int ans = -1;
        for (int i = 0; i < n; i++) {
            t[i] = scanner.nextInt();
        }
        for (int i = 0; i < n-1; i++) {
            if (t[i+1]-t[i] <= d) {
                ans = t[i+1];
                break;
            }
        }
        System.out.println(ans);
    }

}
",RE
kwyk ,abc297/A,Java,"package to.msn.wings.selflearn.chap01;

import java.util.Scanner;

public class Hello {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int d = scanner.nextInt();
        int[] t = new int[n];
        int ans = -1;
        for (int i = 0; i < n; i++) {
            t[i] = scanner.nextInt();
        }
        for (int i = 0; i < n-1; i++) {
            if (t[i+1]-t[i] <= d) {
                ans = t[i+1];
                break;
            }
        }
        System.out.println(ans);
    }

}
","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int d = scanner.nextInt();
        int[] t = new int[n];
        int ans = -1;
        for (int i = 0; i < n; i++) {
            t[i] = scanner.nextInt();
        }
        for (int i = 0; i < n-1; i++) {
            if (t[i+1]-t[i] <= d) {
                ans = t[i+1];
                break;
            }
        }
        System.out.println(ans);
    }

}
",CE
chuquwan9964 ,abc297/A,Java,"

import java.io.*;
import java.util.*;

public class A {
    static FastScanner sc;
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));

    static void solve() throws Exception {
        int n = sc.nextInt();
        int d = sc.nextInt();
        int[] nums = new int[n];
        for(int i = 0;i < n;i++) {
            nums[i] = sc.nextInt();
        }
        for(int i = 1;i < n - 1;i++) {
            if(nums[i] - nums[i-1] <= d) {
                out.println(nums[i]);
                return;
            }
        }
        out.println(-1);
    }

    public static void main(String[] args) throws Exception {
        sc = new FastScanner();
        solve();
        out.flush();
    }

    private static class FastScanner {
        final private int BUFFER_SIZE = 1 << 16;
        private DataInputStream din;
        private byte[] buffer;
        private int bufferPointer, bytesRead;

        private FastScanner() throws IOException {
            din = new DataInputStream(System.in);
            buffer = new byte[BUFFER_SIZE];
            bufferPointer = bytesRead = 0;
        }

        private short nextShort() throws IOException {
            short ret = 0;
            byte c = read();
            while (c <= ' ')
                c = read();
            boolean neg = (c == '-');
            if (neg)
                c = read();
            do
                ret = (short) (ret * 10 + c - '0');
            while ((c = read()) >= '0' && c <= '9');
            if (neg)
                return (short) -ret;
            return ret;
        }

        private int nextInt() throws IOException {
            int ret = 0;
            byte c = read();
            while (c <= ' ')
                c = read();
            boolean neg = (c == '-');
            if (neg)
                c = read();
            do
                ret = ret * 10 + c - '0';
            while ((c = read()) >= '0' && c <= '9');
            if (neg)
                return -ret;
            return ret;
        }

        public long nextLong() throws IOException {
            long ret = 0;
            byte c = read();
            while (c <= ' ')
                c = read();
            boolean neg = (c == '-');
            if (neg)
                c = read();
            do
                ret = ret * 10 + c - '0';
            while ((c = read()) >= '0' && c <= '9');
            if (neg)
                return -ret;
            return ret;
        }

        private char nextChar() throws IOException {
            byte c = read();
            while (c <= ' ')
                c = read();
            return (char) c;
        }

        private String nextString() throws IOException {
            StringBuilder ret = new StringBuilder();
            byte c = read();
            while (c <= ' ')
                c = read();
            do {
                ret.append((char) c);
            } while ((c = read()) > ' ');
            return ret.toString();
        }

        private void fillBuffer() throws IOException {
            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);
            if (bytesRead == -1)
                buffer[0] = -1;
        }

        private byte read() throws IOException {
            if (bufferPointer == bytesRead)
                fillBuffer();
            return buffer[bufferPointer++];
        }
    }
}
","

import java.io.*;
import java.util.*;

public class Main {
    static FastScanner sc;
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));

    static void solve() throws Exception {
        int n = sc.nextInt();
        int d = sc.nextInt();
        int[] nums = new int[n];
        for(int i = 0;i < n;i++) {
            nums[i] = sc.nextInt();
        }
        for(int i = 1;i < n - 1;i++) {
            if(nums[i] - nums[i-1] <= d) {
                out.println(nums[i]);
                return;
            }
        }
        out.println(-1);
    }

    public static void main(String[] args) throws Exception {
        sc = new FastScanner();
        solve();
        out.flush();
    }

    private static class FastScanner {
        final private int BUFFER_SIZE = 1 << 16;
        private DataInputStream din;
        private byte[] buffer;
        private int bufferPointer, bytesRead;

        private FastScanner() throws IOException {
            din = new DataInputStream(System.in);
            buffer = new byte[BUFFER_SIZE];
            bufferPointer = bytesRead = 0;
        }

        private short nextShort() throws IOException {
            short ret = 0;
            byte c = read();
            while (c <= ' ')
                c = read();
            boolean neg = (c == '-');
            if (neg)
                c = read();
            do
                ret = (short) (ret * 10 + c - '0');
            while ((c = read()) >= '0' && c <= '9');
            if (neg)
                return (short) -ret;
            return ret;
        }

        private int nextInt() throws IOException {
            int ret = 0;
            byte c = read();
            while (c <= ' ')
                c = read();
            boolean neg = (c == '-');
            if (neg)
                c = read();
            do
                ret = ret * 10 + c - '0';
            while ((c = read()) >= '0' && c <= '9');
            if (neg)
                return -ret;
            return ret;
        }

        public long nextLong() throws IOException {
            long ret = 0;
            byte c = read();
            while (c <= ' ')
                c = read();
            boolean neg = (c == '-');
            if (neg)
                c = read();
            do
                ret = ret * 10 + c - '0';
            while ((c = read()) >= '0' && c <= '9');
            if (neg)
                return -ret;
            return ret;
        }

        private char nextChar() throws IOException {
            byte c = read();
            while (c <= ' ')
                c = read();
            return (char) c;
        }

        private String nextString() throws IOException {
            StringBuilder ret = new StringBuilder();
            byte c = read();
            while (c <= ' ')
                c = read();
            do {
                ret.append((char) c);
            } while ((c = read()) > ' ');
            return ret.toString();
        }

        private void fillBuffer() throws IOException {
            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);
            if (bytesRead == -1)
                buffer[0] = -1;
        }

        private byte read() throws IOException {
            if (bufferPointer == bytesRead)
                fillBuffer();
            return buffer[bufferPointer++];
        }
    }
}
",CE
SY_monmo ,abc297/A,Java,"import java.util.*;

public class Main {
    public static void main(String[] args) throws Exception {
        
        List<Integer> list = new ArrayList<Integer>();
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int d = scanner.nextInt();
        for(int i=0;i<n;i++){
            list.add(scanner.nextInt());
        }
        int a = -1;
        int b = -1;
        for(int t : list){
            b = a;
            a = t;
            if(b==0)continue;
            
            if(a-b <= d){
                System.out.println(a);
                break;
            }
            b = -1;
        }
        if(b == -1){
            System.out.println(""-1"");
        }
    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args) throws Exception {
        
        List<Integer> list = new ArrayList<Integer>();
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int d = scanner.nextInt();
        for(int i=0;i<n;i++){
            list.add(scanner.nextInt());
        }
        int a = -1;
        int b = -1;
        for(int t : list){
            b = a;
            a = t;
            if(b==-1)continue;
            
            if(a-b <= d){
                System.out.println(a);
                break;
            }
            b = -1;
        }
        if(b == -1){
            System.out.println(""-1"");
        }
    }
}
",WA
SY_monmo ,abc297/A,Java,"import java.util.*;

public class Main {
    public static void main(String[] args) throws Exception {
        
        List<Integer> list = new ArrayList<Integer>();
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int d = scanner.nextInt();
        for(int i=0;i<n;i++){
            list.add(scanner.nextInt());
        }
        int a = 0;
        int b = 0;
        for(int t : list){
            b = a;
            a = t;
            if(b==0)continue;
            
            if(a-b <= d){
                System.out.println(a);
                break;
            }
            b = -1;
        }
        if(b == -1){
            System.out.println(""-1"");
        }
    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args) throws Exception {
        
        List<Integer> list = new ArrayList<Integer>();
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int d = scanner.nextInt();
        for(int i=0;i<n;i++){
            list.add(scanner.nextInt());
        }
        int a = -1;
        int b = -1;
        for(int t : list){
            b = a;
            a = t;
            if(b==-1)continue;
            
            if(a-b <= d){
                System.out.println(a);
                break;
            }
            b = -1;
        }
        if(b == -1){
            System.out.println(""-1"");
        }
    }
}
",WA
ydzuisb ,abc297/A,Java,"public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        if (n == 1) {
            System.out.println(-1);
            return;
        }
        int d = sc.nextInt();
        int[] t = new int[n];
        for (int i = 0; i < n; i++) {
            t[i] = sc.nextInt();
        }
        int res = -1;
        for (int i = 1; i < n; i++) {
            if (t[i] - t[i - 1] <= d) {
                res = t[i];
                break;
            }
        }
        System.out.println(res);
    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        if (n == 1) {
            System.out.println(-1);
            return;
        }
        int d = sc.nextInt();
        int[] t = new int[n];
        for (int i = 0; i < n; i++) {
            t[i] = sc.nextInt();
        }
        int res = -1;
        for (int i = 1; i < n; i++) {
            if (t[i] - t[i - 1] <= d) {
                res = t[i];
                break;
            }
        }
        System.out.println(res);
    }
}
",CE
zakizaki777 ,abc297/A,Java,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner kbs = new Scanner(System.in);
        int n1 = kbs.nextInt();
        int n2 = kbs.nextInt();
        int tmp2;
        int tmp1 =kbs.nextInt();
        for (int i = 0; i < n1-1; i++) {
            tmp2 = kbs.nextInt();
            if(Math.abs(tmp1-tmp2)<=n2){
                System.out.println(tmp2);
                System.exit(0);
            }
            tmp1 = tmp2;
        }
        System.out.println(-1);
    }
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner kbs = new Scanner(System.in);
        int n1 = kbs.nextInt();
        int n2 = kbs.nextInt();
        int tmp2;
        int tmp1 =kbs.nextInt();
        for (int i = 0; i < n1-1; i++) {
            tmp2 = kbs.nextInt();
            if(Math.abs(tmp1-tmp2)<=n2){
                System.out.println(tmp2);
                System.exit(0);
            }
            tmp1 = tmp2;
        }
        System.out.println(-1);
    }
}
",CE
Shushantbk16 ,abc292/B,Java,"import java.util.*;
import java.lang.*;
import java.io.*;


class Main
{
    public static void main (String[] args) throws java.lang.Exception
    {
        
        Scanner sc=new Scanner(System.in);
        int a=sc.nextInt();
        int n=sc.nextInt();
        HashMap<Integer,Integer> mp=new HashMap<>();
        for(int i=1;i<=a;i++){
            mp.put(i,0);
        }
        for(int i=0;i<n;i++){
            int c=sc.nextInt();
            int d=sc.nextInt();
            if(c==3){
                if(mp.containsKey(d)){
                    System.out.println(""NO"");
                }else{
                    System.out.println(""YES"");
                }
            }else if(c==2){
                mp.remove(d);
            }else{
                mp.put(d,mp.get(d)+1);
                if(mp.get(d)>=2){
                    mp.remove(d);
                }
            }

        }
    }
}





","import java.util.*;
import java.lang.*;
import java.io.*;


class Main
{
    public static void main (String[] args) throws java.lang.Exception
    {
        
        Scanner sc=new Scanner(System.in);
        int a=sc.nextInt();
        int n=sc.nextInt();
        HashMap<Integer,Integer> mp=new HashMap<>();
        for(int i=1;i<=a;i++){
            mp.put(i,0);
        }
        for(int i=0;i<n;i++){
            int c=sc.nextInt();
            int d=sc.nextInt();
            if(c==3){
                if(mp.containsKey(d)){
                    System.out.println(""No"");
                }else{
                    System.out.println(""Yes"");
                }
            }else if(c==2){
                mp.remove(d);
            }else{
                mp.put(d,mp.get(d)+1);
                if(mp.get(d)>=2){
                    mp.remove(d);
                }
            }

        }
    }
}
",WA
k1800ban ,abc292/B,Java,"import java.util.Scanner;

public class Main {

  public static void main(String[] args) throws Exception {
    try (Scanner sc = new Scanner(System.in)) {
      int N = Integer.parseInt(sc.next());
      int Q = Integer.parseInt(sc.next());

      int[] member = new int[N];
      for (int i = 0; i < Q; i++) {
        int e = Integer.parseInt(sc.next());
        int x = Integer.parseInt(sc.next());
        if (e == 1) {
          member[x - 1] = 1;
        } else if (e == 2) {
          member[x - 1] = 2;
        } else if (e == 3) {
          if (member[x - 1] >= 2) {
            System.out.println(""Yes"");
          } else {
            System.out.println(""No"");
          }
        }
      }
    }
  }
}
","import java.util.Scanner;

public class Main {

  public static void main(String[] args) throws Exception {
    try (Scanner sc = new Scanner(System.in)) {
      int N = Integer.parseInt(sc.next());
      int Q = Integer.parseInt(sc.next());

      int[] member = new int[N];
      for (int i = 1; i <= Q; i++) {
        int e = Integer.parseInt(sc.next());
        int x = Integer.parseInt(sc.next());
        if (e == 1) {
          member[x - 1] += 1;
        }
        if (e == 2) {
          member[x - 1] += 2;
        }
        if (e == 3) {
          
          

          
          
          if (member[x - 1] >= 2) {
            System.out.println(""Yes"");
          } else {
            System.out.println(""No"");
          }
        }
      }
    }
  }
}
",WA
matchamura ,abc292/B,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
    public static void main(String[] args) {
        BufferedReader br = null;
        try {
            br = new BufferedReader(new InputStreamReader(System.in));
            String[] firstLine = br.readLine().split("" "");
            int n = Integer.parseInt(firstLine[0]);
            int q = Integer.parseInt(firstLine[1]);
            int[] penalties = new int[n + 1];

            for (int i = 0; i < q; i++) {
                String[] event = br.readLine().split("" "");
                int type = Integer.parseInt(event[0]);
                int x = Integer.parseInt(event[1]);

                if (type == 1) {
                    penalties[x] += 1;
                } else if (type == 2) {
                    penalties[x] += 2;
                } else {
                    if (penalties[x] == 2) {
                        System.out.println(""Yes"");
                    } else {
                        System.out.println(""No"");
                    }
                }
            }
            
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                if (br != null) {
                    br.close();
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
    public static void main(String[] args) {
        BufferedReader br = null;
        try {
            br = new BufferedReader(new InputStreamReader(System.in));
            String[] firstLine = br.readLine().split("" "");
            int n = Integer.parseInt(firstLine[0]);
            int q = Integer.parseInt(firstLine[1]);
            int[] penalties = new int[n + 1];

            for (int i = 0; i < q; i++) {
                String[] event = br.readLine().split("" "");
                int type = Integer.parseInt(event[0]);
                int x = Integer.parseInt(event[1]);

                if (type == 1) {
                    penalties[x] += 1;
                } else if (type == 2) {
                    penalties[x] += 2;
                } else {
                    if (penalties[x] >= 2) {
                        System.out.println(""Yes"");
                    } else {
                        System.out.println(""No"");
                    }
                }
            }

        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                if (br != null) {
                    br.close();
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
}
",WA
makky88 ,abc292/B,Java,"import java.util.*;
import java.util.stream.*;

class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner (System.in);
        int n = sc.nextInt ();
        int q = sc.nextInt ();
        Map<Integer, Integer> map = new HashMap<> ();
        for (int i = 1; i <= n; i++) {
            map.put (i,0);
        }
        for (int i = 0; i < q; i++) {
            int e = sc.nextInt ();
            int x = sc.nextInt ();
            Integer cnt = map.get (x);
            
            if (e == 3) {
                if (cnt != null) {
                    System.out.println (""No"");
                } else {
                    System.out.println (""Yes"");
                }
                continue;
            }
            
            if (cnt != null) {
                continue;
            }
            cnt = e + map.get (x);
            
            if (cnt >= 2) map.remove (x);
            
            map.put (x,cnt);
        }
    }
}
","import java.util.*;
import java.util.stream.*;

class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner (System.in);
        int n = sc.nextInt ();
        int q = sc.nextInt ();
        Map<Integer, Integer> map = new HashMap<> ();
        for (int i = 1; i <= n; i++) {
            map.put (i,0);
        }
        for (int i = 0; i < q; i++) {
            int e = sc.nextInt ();
            int x = sc.nextInt ();
            Integer cnt = map.get (x);
            
            if (e == 3) {
                if (cnt != null) {
                    System.out.println (""No"");
                } else {
                    System.out.println (""Yes"");
                }
                continue;
            }
            
            if (cnt == null) {
                continue;
            }
            cnt = e + map.get (x);
            
            if (cnt >= 2) {
                map.remove (x);
                continue;
            }
            
            map.put (x,cnt);
        }
    }
}
",WA
makky88 ,abc292/B,Java,"import java.util.*;
import java.util.stream.*;

class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner (System.in);
        int n = sc.nextInt ();
        int q = sc.nextInt ();
        Map<Integer, Integer> map = new HashMap<> ();
        for (int i = 1; i <= n; i++) {
            map.put (i,0);
        }
        for (int i = 0; i < q; i++) {
            int e = sc.nextInt ();
            int x = sc.nextInt ();
            Integer cnt = map.get (x);
            
            if (e == 3) {
                if (cnt != null) {
                    System.out.println (""No"");
                } else {
                    System.out.println (""Yes"");
                }
            }
            
            if (cnt != null) {
                continue;
            }
            cnt = e + map.get (x);
            
            if (cnt >= 2) map.remove (x);
            
            map.put (x,cnt);
        }
    }
}
","import java.util.*;
import java.util.stream.*;

class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner (System.in);
        int n = sc.nextInt ();
        int q = sc.nextInt ();
        Map<Integer, Integer> map = new HashMap<> ();
        for (int i = 1; i <= n; i++) {
            map.put (i,0);
        }
        for (int i = 0; i < q; i++) {
            int e = sc.nextInt ();
            int x = sc.nextInt ();
            Integer cnt = map.get (x);
            
            if (e == 3) {
                if (cnt != null) {
                    System.out.println (""No"");
                } else {
                    System.out.println (""Yes"");
                }
                continue;
            }
            
            if (cnt == null) {
                continue;
            }
            cnt = e + map.get (x);
            
            if (cnt >= 2) {
                map.remove (x);
                continue;
            }
            
            map.put (x,cnt);
        }
    }
}
",WA
yamdatakuya ,abc292/B,Java,"import java.util.*;

public class Main {
    public static void main(String[] args) throws Exception {
        
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int Q = sc.nextInt();
        
        ArrayList<Integer> exit_player = new ArrayList<Integer>();
        ArrayList<Integer> yellow_player = new ArrayList<Integer>();
        for(int i=0;i<Q;i++){
            int event_number = sc.nextInt();
            if(event_number == 1){
                int player_number = sc.nextInt();
                if(!yellow_player.contains(player_number)){ 
                    yellow_player.add(player_number);
                    continue;
                }
                int index = yellow_player.indexOf(player_number);
                yellow_player.remove(index);
                exit_player.add(player_number);
                
            }
            if(event_number == 2) exit_player.add(sc.nextInt());
            
            if(event_number == 3){
                if(!exit_player.contains(sc.nextInt())){
                    System.out.println(""NO"");
                    continue;
                }
                System.out.println(""YES"");
            }
            
        }
    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args) throws Exception {
        
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int Q = sc.nextInt();
        
        ArrayList<Integer> exit_player = new ArrayList<Integer>();
        ArrayList<Integer> yellow_player = new ArrayList<Integer>();
        for(int i=0;i<Q;i++){
            int event_number = sc.nextInt();
            if(event_number == 1){
                int player_number = sc.nextInt();
                if(!yellow_player.contains(player_number)){ 
                    yellow_player.add(player_number);
                    continue;
                }
                int index = yellow_player.indexOf(player_number);
                yellow_player.remove(index);
                exit_player.add(player_number);
                
            }
            if(event_number == 2) exit_player.add(sc.nextInt());
            
            if(event_number == 3){
                if(!exit_player.contains(sc.nextInt())){
                    System.out.println(""No"");
                    continue;
                }
                System.out.println(""Yes"");
            }
            
        }
    }
}
",WA
naru1990 ,abc292/B,Java,"import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {

  public static void main(String[] args) {

    
    

    
    Scanner sc = new Scanner(System.in);
    int N = Integer.parseInt(sc.next());
    int Q = Integer.parseInt(sc.next());
    Map<Integer,Integer> sensyu = new HashMap<Integer,Integer>();
    for(int i = 1; i <= N;i++) {
      sensyu.put(i,0);
    }
    for(int i = 0; i < Q;i++) {
      int kind = Integer.parseInt(sc.next());
      int num  = Integer.parseInt(sc.next());
      switch(kind) {
        case 1:
        case 2:
          sensyu.put(num, sensyu.get(num) + kind);
          break;
        case 3:
          if(sensyu.get(num) == 2) {
            System.out.println(""Yes"");
          } else {
            System.out.println(""No"");
          }
      }
    }
    sc.close();

    

    
  }

}
","import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {

  public static void main(String[] args) {

    
    

    
    Scanner sc = new Scanner(System.in);
    int N = Integer.parseInt(sc.next());
    int Q = Integer.parseInt(sc.next());
    Map<Integer,Integer> sensyu = new HashMap<Integer,Integer>();
    for(int i = 1; i <= N;i++) {
      sensyu.put(i,0);
    }
    for(int i = 0; i < Q;i++) {
      int kind = Integer.parseInt(sc.next());
      int num  = Integer.parseInt(sc.next());
      switch(kind) {
        case 1:
        case 2:
          sensyu.put(num, sensyu.get(num) + kind);
          break;
        case 3:
          if(sensyu.get(num) >= 2) {
            System.out.println(""Yes"");
          } else {
            System.out.println(""No"");
          }
      }
    }
    sc.close();

    

    
  }

}
",WA
Anondai ,abc292/B,Java,"import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
 
public class Main {
 
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int playerCounts = scanner.nextInt();
        int eventCounts = scanner.nextInt();
        Map<Integer, Integer> playerStatus = new HashMap<>();
 
        for (int i = 1; i <= playerCounts; i++) {
            playerStatus.put(i, 0);
        }
 
        for (int i = 0; i < eventCounts; i++) {
            for (int j = 0; j < 2; j++) {
                if (j == 0) {
                    int event = scanner.nextInt();
                    int player = scanner.nextInt();
                    switch (event) {
                        case 1:
                            int card1 = playerStatus.get(player);
                            card1 += 1;
                            playerStatus.replace(player, card1);
                            break;
                        case 2:
                            int card2 = playerStatus.get(player);
                            card2 += 2;
                            playerStatus.replace(player, card2);
                            break;
                        case 3:
                            int card3 = playerStatus.get(player);
                            if (card3 > 2) {
                                System.out.println(""Yes"");
                            } else {
                                System.out.println(""No"");
                            }
                    }
                }
            }
            break;
        }
    }
}
","import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int playerCounts = scanner.nextInt();
        int eventCounts = scanner.nextInt();
        Map<Integer, Integer> playerStatus = new HashMap<>();

        for (int i = 1; i <= playerCounts; i++) {
            playerStatus.put(i, 0);
        }

        for (int i = 0; i < eventCounts; i++) {
            for (int j = 0; j < 2; j++) {
                if (j == 0) {
                    int event = scanner.nextInt();
                    int player = scanner.nextInt();
                    switch (event) {
                        case 1:
                            int card1 = playerStatus.get(player);
                            card1 += 1;
                            playerStatus.replace(player, card1);
                            break;
                        case 2:
                            int card2 = playerStatus.get(player);
                            card2 += 2;
                            playerStatus.replace(player, card2);
                            break;
                        case 3:
                            int card3 = playerStatus.get(player);
                            if (card3 >= 2) {
                                System.out.println(""Yes"");
                            } else {
                                System.out.println(""No"");
                            }
                    }
                }
                break;
            }
        }
    }
}
",WA
sigure1 ,abc292/B,Java,"import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int Q = scanner.nextInt();
        int[] players = new int[N];
        
        for(int i=0; i<Q; i++) {
        	int type = scanner.nextInt();
        	int x = scanner.nextInt();
        	
        	
        	switch(type) {
        		case 1:
        			players[x]+=1;
        			break;
        			
        		case 2:
        			players[x]+=2;
        			break;
        			
        		case 3:
        			if(players[x]>1) {
        				System.out.println(""Yes"");
        			} else {
        				System.out.println(""No"");
        			}
        			break;
        			
        		default:
        			break;
        	}
        }
        
	}
}
","import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int Q = scanner.nextInt();
        int[] players = new int[N];
        
        for(int i=0; i<Q; i++) {
        	int type = scanner.nextInt();
        	int x = scanner.nextInt();
        	x -=1;
        	
        	switch(type) {
        		case 1:
        			players[x]+=1;
        			break;
        			
        		case 2:
        			players[x]+=2;
        			break;
        			
        		case 3:
        			if(players[x]>1) {
        				System.out.println(""Yes"");
        			} else {
        				System.out.println(""No"");
        			}
        			break;
        			
        		default:
        			break;
        	}
        }
        
	}
}
",RE
sigure1 ,abc292/B,Java,"public class Main {

	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int Q = scanner.nextInt();
        int[] players = new int[N];
        
        for(int i=0; i<Q; i++) {
        	int type = scanner.nextInt();
        	int x = scanner.nextInt();
        	
        	
        	switch(type) {
        		case 1:
        			players[x]+=1;
        			break;
        			
        		case 2:
        			players[x]+=2;
        			break;
        			
        		case 3:
        			if(players[x]>1) {
        				System.out.println(""Yes"");
        			} else {
        				System.out.println(""No"");
        			}
        			break;
        			
        		default:
        			break;
        	}
        }
        
	}
}
","import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int Q = scanner.nextInt();
        int[] players = new int[N];
        
        for(int i=0; i<Q; i++) {
        	int type = scanner.nextInt();
        	int x = scanner.nextInt();
        	x -=1;
        	
        	switch(type) {
        		case 1:
        			players[x]+=1;
        			break;
        			
        		case 2:
        			players[x]+=2;
        			break;
        			
        		case 3:
        			if(players[x]>1) {
        				System.out.println(""Yes"");
        			} else {
        				System.out.println(""No"");
        			}
        			break;
        			
        		default:
        			break;
        	}
        }
        
	}
}
",CE
sigure1 ,abc292/B,Java,"import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int Q = scanner.nextInt();
        int[] players = new int[Q];
        
        for(int i=0; i<Q; i++) {
        	int type = scanner.nextInt();
        	int x = scanner.nextInt();
        	
        	switch(type) {
        		case 1:
        			players[x]++;
        			break;
        			
        		case 2:
        			players[x]+=2;
        			break;
        			
        		case 3:
        			if(players[x]>1) {
        				System.out.println(""Yes"");
        			} else {
        				System.out.println(""No"");
        			}
        			break;
        			
        		default:
        	}
        }
        
	}
}
","import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int Q = scanner.nextInt();
        int[] players = new int[N];
        
        for(int i=0; i<Q; i++) {
        	int type = scanner.nextInt();
        	int x = scanner.nextInt();
        	x -=1;
        	
        	switch(type) {
        		case 1:
        			players[x]+=1;
        			break;
        			
        		case 2:
        			players[x]+=2;
        			break;
        			
        		case 3:
        			if(players[x]>1) {
        				System.out.println(""Yes"");
        			} else {
        				System.out.println(""No"");
        			}
        			break;
        			
        		default:
        			break;
        	}
        }
        
	}
}
",RE
sigure1 ,abc292/B,Java,"import java.util.Scanner;

public class B {

	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int Q = scanner.nextInt();
        int[] players = new int[Q];
        
        for(int i=0; i<Q; i++) {
        	int type = scanner.nextInt();
        	int x = scanner.nextInt();
        	
        	switch(type) {
        		case 1:
        			players[x]++;
        			break;
        			
        		case 2:
        			players[x]+=2;
        			break;
        			
        		case 3:
        			if(players[x]>1) {
        				System.out.println(""Yes"");
        			} else {
        				System.out.println(""No"");
        			}
        			break;
        			
        		default:
        	}
        }
        
	}
}
","import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int Q = scanner.nextInt();
        int[] players = new int[N];
        
        for(int i=0; i<Q; i++) {
        	int type = scanner.nextInt();
        	int x = scanner.nextInt();
        	x -=1;
        	
        	switch(type) {
        		case 1:
        			players[x]+=1;
        			break;
        			
        		case 2:
        			players[x]+=2;
        			break;
        			
        		case 3:
        			if(players[x]>1) {
        				System.out.println(""Yes"");
        			} else {
        				System.out.println(""No"");
        			}
        			break;
        			
        		default:
        			break;
        	}
        }
        
	}
}
",CE
ahnguye ,abc292/B,Java,"import java.util.*;
public class Main {
    public static void main(String[] args){




        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int q = sc.nextInt();

        int[] nScores = new int[n];

        for (int i = 0; i < q; ++i) {
            int c = sc.nextInt();
            int x = sc.nextInt();

            if (c == 1) {
                ++nScores[x];
            } else if (c == 2) {
                nScores[x] = 2;
            } else {
                if (nScores[x] > 1) System.out.println(""Yes"");
                else System.out.println(""No"");
            }
        }
    }
}
","import java.util.*;
public class Main {
    public static void main(String[] args){




        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int q = sc.nextInt();

        int[] nScores = new int[n+1];

        for (int i = 0; i < q; ++i) {
            int c = sc.nextInt();
            int x = sc.nextInt();

            if (c == 1) {
                ++nScores[x];
            } else if (c == 2) {
                nScores[x] = 2;
            } else {
                if (nScores[x] > 1) System.out.println(""Yes"");
                else System.out.println(""No"");
            }
        }
    }
}
",RE
yoshikyu ,abc292/B,Java,"package org.example;
import java.util.Scanner;

public class Main {
    public static void main(String[] args){
        Scanner scan = new java.util.Scanner(System.in);
        String [] a = scan.nextLine().trim().split("" "");
        int n = Integer.parseInt(a[0]);
        int q = Integer.parseInt(a[1]);
        int [] result = new int[n];
        for(int i = 0; i < q; i++){
            String [] event = scan.nextLine().trim().split("" "");
            int x = Integer.parseInt(event[1]);
            if(event[0].equals(""1"")){
                result[x-1] += 1;
            }else if(event[0].equals(""2"")){
                result[x-1] += 2;
            }else{
                if(result[x-1] >= 2){
                    System.out.println(""Yes"");
                }else{
                    System.out.println(""No"");
                }
            }
        }
    }
}

","import java.util.Scanner;
 
public class Main {
    public static void main(String[] args){
        Scanner scan = new java.util.Scanner(System.in);
        String [] a = scan.nextLine().trim().split("" "");
        int n = Integer.parseInt(a[0]);
        int q = Integer.parseInt(a[1]);
        int [] result = new int[n];
        for(int i = 0; i < q; i++){
            String [] event = scan.nextLine().trim().split("" "");
            int x = Integer.parseInt(event[1]);
            if(event[0].equals(""1"")){
                result[x-1] += 1;
            }else if(event[0].equals(""2"")){
                result[x-1] += 2;
            }else{
                if(result[x-1] >= 2){
                    System.out.println(""Yes"");
                }else{
                    System.out.println(""No"");
                }
            }
        }
    }
}
 
",RE
sui_sagawa ,abc292/B,Java,"import java.util.*;

public class Main{
    public static void main(String[] args){
      Scanner sc = new Scanner(System.in);
      int N = sc.nextInt();
      int Q = sc.nextInt();
      int status[] = new int[N];
      int ct = 0;
      
      for(int i=0; i<Q; i++){
        int que = sc.nextInt();
        int player = sc.nextInt();
        switch(que){
          case 1:
            status[player-1]+=1;
            break;
          case 2:
            status[player-1]+=2;
            break;
          case 3:
            if(ct != 0){
          		System.out.print(""\n"");
        	}
            ct+=1;
            if(status[player-1] >= 2){
              System.out.print(""No"");
            }else{
              System.out.print(""Yes"");
            }
            break;
        }
    }
    }
}
","import java.util.*;

public class Main{
    public static void main(String[] args){
      Scanner sc = new Scanner(System.in);
      int N = sc.nextInt();
      int Q = sc.nextInt();
      int status[] = new int[N];
      int ct = 0;
      
      for(int i=0; i<Q; i++){
        int que = sc.nextInt();
        int player = sc.nextInt();
        switch(que){
          case 1:
            status[player-1]+=1;
            break;
          case 2:
            status[player-1]+=2;
            break;
          case 3:
            if(ct != 0){
          		System.out.print(""\n"");
        	}
            ct+=1;
            if(status[player-1] >= 2){
              System.out.print(""Yes"");
            }else{
              System.out.print(""No"");
            }
            break;
        }
    }
    }
}
",WA
ukiy737 ,abc292/B,Java,"import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        StringBuilder sb = new StringBuilder();
        int N = sc.nextInt(), Q = sc.nextInt();
        int[] c = new int[N + 1];
        for(int i = 0; i < Q; i++) {
            int E = sc.nextInt();
            int x = sc.nextInt();
            if(E == 1) {
                c[x] += 1;
            }
            if(E == 2) {
                c[x] += 2;
            }
            if(E == 3) {
                if(c[x] == 2) {
                    System.out.println(""Yes"");
                } else {
                    System.out.println(""No"");
                }
            }
        }
    }
}
","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        StringBuilder sb = new StringBuilder();
        int N = sc.nextInt(), Q = sc.nextInt();
        int[] c = new int[N + 1];
        for(int i = 0; i < Q; i++) {
            int E = sc.nextInt();
            int x = sc.nextInt();
            if(E == 1) {
                c[x] += 1;
            }
            if(E == 2) {
                c[x] += 2;
            }
            if(E == 3) {
                if(c[x] >= 2) {
                    System.out.println(""Yes"");
                } else {
                    System.out.println(""No"");
                }
            }
        }
    }
}
",WA
swindster ,abc292/B,Java,"import java.util.*;

public class Main {
    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        
        int n = sc.nextInt();
        int q = sc.nextInt();
        
        int t[] = new int[n];
        boolean tf[] = new boolean[n];
        for(int i = 0; i < n; i++){
            tf[i] = true;
            t[i]  = 0;
        }
        
        
        for(int i = 0; i < q; i++){
            int s = sc.nextInt();
            int x = sc.nextInt();
            
            
            if(s == 1){
                t[x-1] += 1;
            }
            
            if(s == 2){
                t[x-1] += 2;
            }
            
            if(t[x-1] == 2){
                tf[x-1] = false; 
            }
            
            if(s == 3){
                if(tf[x-1] == false){
                    System.out.println(""Yes"");
                }else{
                    System.out.println(""No"");
                }
            }
            
        }
    
    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        
        int n = sc.nextInt();
        int q = sc.nextInt();
        
        int t[] = new int[n];
        boolean tf[] = new boolean[n];
        for(int i = 0; i < n; i++){
            tf[i] = true;
            t[i]  = 0;
        }
        
        
        for(int i = 0; i < q; i++){
            int s = sc.nextInt();
            int x = sc.nextInt();
            
            
            if(s == 1){
                t[x-1] += 1;
            }
            
            if(s == 2){
                t[x-1] += 2;
            }
            
            if(t[x-1] >= 2){
                tf[x-1] = false; 
            }
            
            if(s == 3){
                if(tf[x-1] == false){
                    System.out.println(""Yes"");
                }else{
                    System.out.println(""No"");
                }
            }
            
        }
    
    }
}
",WA
muxii ,abc292/B,Java,"import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;



public class Main{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Map<Integer, Integer> map = new HashMap<>();
        int N = sc.nextInt();
        int Q = sc.nextInt();
        for(int i = 0; i < N; i++){
            map.put(i + 1, 0);
        }
        int[][] arr = new int[Q][2];
        for (int i = 0; i < Q; i++){
            for(int j = 0; j < 2; j++){
                arr[i][j] = sc.nextInt();
            }
        }
        for (int i = 0; i < Q; i++){
            if(arr[i][0] == 1){
                int value = map.get(arr[i][1]);
                map.put(arr[i][1], value + 1);
            }else if(arr[i][0] == 2){
                int a = map.get(arr[i][1]);
                map.put(arr[i][1], a + 2);
            }else{
                int m = map.get(arr[i][1]);
                if(m >= 2){
                    System.out.println(""YES"");
                }else{
                    System.out.println(""NO"");
                }
            }
        }
    }
}
","import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;



public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Map<Integer, Integer> map = new HashMap<>();
        int N = sc.nextInt();
        int Q = sc.nextInt();
        for(int i = 0; i < N; i++){
            map.put(i + 1, 0);
        }
        int[][] arr = new int[Q][2];
        for (int i = 0; i < Q; i++){
            for(int j = 0; j < 2; j++){
                arr[i][j] = sc.nextInt();
            }
        }
        for (int i = 0; i < Q; i++){
            if(arr[i][0] == 1){
                int value = map.get(arr[i][1]);
                map.put(arr[i][1], value + 1);
            }else if(arr[i][0] == 2){
                int a = map.get(arr[i][1]);
                map.put(arr[i][1], a + 2);
            }else{
                int m = map.get(arr[i][1]);
                if(m >= 2){
                    System.out.println(""Yes"");
                }else{
                    System.out.println(""No"");
                }
            }
        }
    }
}
",WA
muxii ,abc292/B,Java,"import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;



public class Main{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Map<Integer, Integer> map = new HashMap<>();
        int N = sc.nextInt();
        int Q = sc.nextInt();
        for(int i = 0; i < N; i++){
            map.put(i + 1, 0);
        }
        int[][] arr = new int[Q][2];
        for (int i = 0; i < Q; i++){
            for(int j = 0; j < 2; j++){
                arr[i][j] = sc.nextInt();
            }
        }
        for (int i = 0; i < Q; i++){
            if(arr[i][0] == 1){
                int value = map.get(arr[i][1]);
                map.put(arr[i][1], value + 1);
            }else if(arr[i][0] == 2){
                int value = map.get(arr[i][1]);
                map.put(arr[i][1], value + 2);
            }else{
                int m = map.get(arr[i][1]);
                if(m >= 2){
                    System.out.println(""YES"");
                }else{
                    System.out.println(""NO"");
                }
            }
        }
    }
}
","import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;



public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Map<Integer, Integer> map = new HashMap<>();
        int N = sc.nextInt();
        int Q = sc.nextInt();
        for(int i = 0; i < N; i++){
            map.put(i + 1, 0);
        }
        int[][] arr = new int[Q][2];
        for (int i = 0; i < Q; i++){
            for(int j = 0; j < 2; j++){
                arr[i][j] = sc.nextInt();
            }
        }
        for (int i = 0; i < Q; i++){
            if(arr[i][0] == 1){
                int value = map.get(arr[i][1]);
                map.put(arr[i][1], value + 1);
            }else if(arr[i][0] == 2){
                int a = map.get(arr[i][1]);
                map.put(arr[i][1], a + 2);
            }else{
                int m = map.get(arr[i][1]);
                if(m >= 2){
                    System.out.println(""Yes"");
                }else{
                    System.out.println(""No"");
                }
            }
        }
    }
}
",WA
Masa19212 ,abc292/B,Java,"import java.util.Scanner;

public class CardCounter {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt(); 
        int q = sc.nextInt(); 

        int[] yellowCards = new int[n + 1]; 
        int[] redCards = new int[n + 1]; 
        boolean[] isSentOff = new boolean[n + 1]; 

        for (int i = 0; i < q; i++) {
            int c = sc.nextInt(); 
            int x = sc.nextInt(); 

            if (c == 1) { 
                yellowCards[x]++;
                if (yellowCards[x] == 2) { 
                    isSentOff[x] = true;
                }
            } else if (c == 2) { 
                redCards[x]++;
                isSentOff[x] = true; 
            } else if (c == 3) { 
                if (isSentOff[x]) { 
                    System.out.println(""Yes"");
                } else { 
                    System.out.println(""No"");
                }
            }
        }
    }
}




","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt(); 
        int q = sc.nextInt(); 

        int[] yellowCards = new int[n + 1]; 
        int[] redCards = new int[n + 1]; 
        boolean[] isSentOff = new boolean[n + 1]; 

        for (int i = 0; i < q; i++) {
            int c = sc.nextInt(); 
            int x = sc.nextInt(); 

            if (c == 1) { 
                yellowCards[x]++;
                if (yellowCards[x] == 2) { 
                    isSentOff[x] = true;
                }
            } else if (c == 2) { 
                redCards[x]++;
                isSentOff[x] = true; 
            } else if (c == 3) { 
                if (isSentOff[x]) { 
                    System.out.println(""Yes"");
                } else { 
                    System.out.println(""No"");
                }
            }
        }
    }
}




",CE
Masa19212 ,abc292/B,Java,"import java.util.Scanner;

public class CardCounter {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt(); 
        int q = sc.nextInt(); 

        int[] yellowCards = new int[n + 1]; 
        int[] redCards = new int[n + 1]; 
        boolean[] isSentOff = new boolean[n + 1]; 

        for (int i = 0; i < q; i++) {
            int c = sc.nextInt(); 
            int x = sc.nextInt(); 

            if (c == 1) { 
                yellowCards[x]++;
                if (yellowCards[x] == 2) { 
                    isSentOff[x] = true;
                }
            } else if (c == 2) { 
                redCards[x]++;
                isSentOff[x] = true; 
            } else if (c == 3) { 
                if (isSentOff[x]) { 
                    System.out.println(""Yes"");
                } else { 
                    System.out.println(""No"");
                }
            }
        }
    }
}
上記のコードでは、Scannerを使用して、入力から必要な情報を読み取ります。配列yellowCardsは、各選手のイエローカードの数を追跡し、redCardsは、各選手のレッドカードの数を追跡します。また、配列isSentOffは、各選手が退場処分を



","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt(); 
        int q = sc.nextInt(); 

        int[] yellowCards = new int[n + 1]; 
        int[] redCards = new int[n + 1]; 
        boolean[] isSentOff = new boolean[n + 1]; 

        for (int i = 0; i < q; i++) {
            int c = sc.nextInt(); 
            int x = sc.nextInt(); 

            if (c == 1) { 
                yellowCards[x]++;
                if (yellowCards[x] == 2) { 
                    isSentOff[x] = true;
                }
            } else if (c == 2) { 
                redCards[x]++;
                isSentOff[x] = true; 
            } else if (c == 3) { 
                if (isSentOff[x]) { 
                    System.out.println(""Yes"");
                } else { 
                    System.out.println(""No"");
                }
            }
        }
    }
}




",CE
one_line ,abc292/B,Java,"import java.util.*;
import java.io.*;
public class Main {
	
public static void main(String[] args) {
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
int n = in.nextInt();
int T = in.nextInt();
int[] num = new int[1000010];
while(T-->0)
{
	int k = in.nextInt();
	int x = in.nextInt();
	if(k == 1 && num[x]!=-1)
	{
		num[x] ++;
		if(num[x] == 2)
			num[x] = -1;
	}
	else if(k == 2 && num[x]!=-1)
	{
		num[x] += 2;
		num[x] = -1;
		
	}
	else if(k == 3)
		if( num[x]==-1)
		{
			num[x] = -1;
			out.println(""YES"");
			
		}
		else out.println(""NO"");
		
	
	
	
}


	out.flush();
}


}


class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() ? tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
","import java.util.*;
import java.io.*;
public class Main {
	
public static void main(String[] args) {
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
int n = in.nextInt();
int T = in.nextInt();
int[] num = new int[1000010];
while(T-->0)
{
	int k = in.nextInt();
	int x = in.nextInt();
	if(k == 1 && num[x]!=-1)
	{
		num[x] ++;
		if(num[x] == 2)
			num[x] = -1;
	}
	else if(k == 2 && num[x]!=-1)
	{
		num[x] += 2;
		num[x] = -1;
		
	}
	else if(k == 3)
		if( num[x]==-1)
		{
			num[x] = -1;
			out.println(""Yes"");
			
		}
		else out.println(""No"");
		
	
	
	
}


	out.flush();
}


}


class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() ? tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
",WA
one_line ,abc292/B,Java,"import java.util.*;
import java.io.*;
public class Main {
	
public static void main(String[] args) {
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
int n = in.nextInt();
int T = in.nextInt();
int[] num = new int[1000];
while(T-->0)
{
	int k = in.nextInt();
	int x = in.nextInt();
	if(k == 1 && num[x]!=-1)
	{
		num[x] ++;
		if(num[x] == 2)
			num[x] = -1;
	}
	else if(k == 2 && num[x]!=-1)
	{
		num[x] += 2;
		num[x] = -1;
		
	}
	else if(k == 3)
		if( num[x]==-1)
		{
			num[x] = -1;
			out.println(""YES"");
			
		}
		else out.println(""NO"");
		
	
	
	
}


	out.flush();
}


}


class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() ? tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
","import java.util.*;
import java.io.*;
public class Main {
	
public static void main(String[] args) {
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
int n = in.nextInt();
int T = in.nextInt();
int[] num = new int[1000010];
while(T-->0)
{
	int k = in.nextInt();
	int x = in.nextInt();
	if(k == 1 && num[x]!=-1)
	{
		num[x] ++;
		if(num[x] == 2)
			num[x] = -1;
	}
	else if(k == 2 && num[x]!=-1)
	{
		num[x] += 2;
		num[x] = -1;
		
	}
	else if(k == 3)
		if( num[x]==-1)
		{
			num[x] = -1;
			out.println(""Yes"");
			
		}
		else out.println(""No"");
		
	
	
	
}


	out.flush();
}


}


class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() ? tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
",WA
one_line ,abc292/B,Java,"import java.util.*;
import java.io.*;
public class Main {
	
public static void main(String[] args) {
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
int n = in.nextInt();
int T = in.nextInt();
int[] num = new int[1000];
while(T-->0)
{
	int k = in.nextInt();
	int x = in.nextInt();
	if(k == 1 && num[x]!=-1)
	{
		num[x] ++;
		if(num[x] == 2)
			num[x] = -1;
	}
	else if(k == 2 && num[x]!=-1)
	{
		num[x] += 2;
		num[x] = -1;
		
	}
	else if(k == 3)
		if( num[x]==-1)
		{
			num[x] = -1;
			out.println(""YES"");
			continue;
		}
		else out.println(""NO"");
		
	
	
	
}


	out.flush();
}


}


class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() ? tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
","import java.util.*;
import java.io.*;
public class Main {
	
public static void main(String[] args) {
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
int n = in.nextInt();
int T = in.nextInt();
int[] num = new int[1000010];
while(T-->0)
{
	int k = in.nextInt();
	int x = in.nextInt();
	if(k == 1 && num[x]!=-1)
	{
		num[x] ++;
		if(num[x] == 2)
			num[x] = -1;
	}
	else if(k == 2 && num[x]!=-1)
	{
		num[x] += 2;
		num[x] = -1;
		
	}
	else if(k == 3)
		if( num[x]==-1)
		{
			num[x] = -1;
			out.println(""Yes"");
			
		}
		else out.println(""No"");
		
	
	
	
}


	out.flush();
}


}


class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() ? tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
",WA
one_line ,abc292/B,Java,"import java.util.*;
import java.io.*;
public class Main {
	
public static void main(String[] args) {
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
int n = in.nextInt();
int T = in.nextInt();
int[] num = new int[n+10];
while(T-->0)
{
	int k = in.nextInt();
	int x = in.nextInt();
	if(k == 1 && num[x]!=-1)
	{
		num[x] ++;
		if(num[x] == 2)
			num[x] = -1;
	}
	else if(k == 2 && num[x]!=-1)
	{
		num[x] += 2;
		num[x] = -1;
		
	}
	else if(k == 3)
		if( num[x]==-1)
		{
			num[x] = -1;
			out.println(""YES"");
			continue;
		}
		else out.println(""NO"");
		
	
	
	
}


	out.flush();
}


}


class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() ? tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
","import java.util.*;
import java.io.*;
public class Main {
	
public static void main(String[] args) {
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
int n = in.nextInt();
int T = in.nextInt();
int[] num = new int[1000010];
while(T-->0)
{
	int k = in.nextInt();
	int x = in.nextInt();
	if(k == 1 && num[x]!=-1)
	{
		num[x] ++;
		if(num[x] == 2)
			num[x] = -1;
	}
	else if(k == 2 && num[x]!=-1)
	{
		num[x] += 2;
		num[x] = -1;
		
	}
	else if(k == 3)
		if( num[x]==-1)
		{
			num[x] = -1;
			out.println(""Yes"");
			
		}
		else out.println(""No"");
		
	
	
	
}


	out.flush();
}


}


class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() ? tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
",WA
muroshima ,abc292/B,Java,"import java.*;
public class Main {
  public static void main(String[] args){
  	Scanner s = new Scanner(System.in);
    int[] playersCardList = new int[s.nextInt()];
    int eventNum = s.nextInt();
    for(int i = 0;i < eventNum;i++){
      int event = s.nextInt();
      int player = s.nextInt();
      if(event == 3){
        if(playersCardList[player-1] == 2){
          System.out.println(""Yes"");
        }else{
          System.out.println(""No"");
        }
      }else if(event == 2){
        playersCardList[player-1] = 2;
      }else if(event == 1){
        playersCardList[player-1] ++;
      }
    }
  }
}
","import java.util.Scanner;
public class Main {
  public static void main(String[] args){
  	Scanner s = new Scanner(System.in);
    int[] playersCardList = new int[s.nextInt()];
    int eventNum = s.nextInt();
    for(int i = 0;i < eventNum;i++){
      int event = s.nextInt();
      int player = s.nextInt();
      if(event == 3){
        if(playersCardList[player-1] == 2){
          System.out.println(""Yes"");
        }else{
          System.out.println(""No"");
        }
      }else if(event == 2){
        playersCardList[player-1] = 2;
      }else if(event == 1){
        playersCardList[player-1] ++;
      }
    }
  }
}
",CE
buridaikon ,abc292/B,Java,"import java.util.Scanner;
public class Main {
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		int n = scan.nextInt();
		int q = scan.nextInt();
		int[] circumstance = new int[n];
		for (int i = 0; i < n; i++) {
			circumstance[i] = 0;
		}
		for (int k = 0; k < q; k++) {
			int query1 = scan.nextInt();
			int query2 = scan.nextInt();
			if (query1 == 1 || query1 == 2) {
				circumstance[query2-1] = circumstance[query2-1] + query1;
			} else {
				if (circumstance[query2-1] == 2) {
					System.out.println(""Yes"");
				} else {
					System.out.println(""No"");
				}
			}
		}
		scan.close();
	}
}
","import java.util.Scanner;
public class Main {
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		int n = scan.nextInt();
		int q = scan.nextInt();
		int[] circumstance = new int[n];
		for (int i = 0; i < n; i++) {
			circumstance[i] = 0;
		}
		for (int k = 0; k < q; k++) {
			int query1 = scan.nextInt();
			int query2 = scan.nextInt();
			if (query1 == 1 || query1 == 2) {
				circumstance[query2-1] = circumstance[query2-1] + query1;
			} else {
				if (circumstance[query2-1] >= 2) {
					System.out.println(""Yes"");
				} else {
					System.out.println(""No"");
				}
			}
		}
		scan.close();
	}
}
",WA
bing007 ,abc292/B,Java,"import java.util.*;
public class Main{
	public static void main(String[] args){
    	Scanner sc = new Scanner(System.in);
      	int n = sc.nextInt();
      	int q = sc.nextInt();
      	Set<Integer> set = new HashSet<>();
      	Map<Integer, Integer> map = new HashMap<>();
      	while(q>0){
        	q--;
          	int c = sc.nextInt(), x = sc.nextInt();
          	if(c == 1){
            	if(map.containsKey(x)){
                set.add(x); map.remove(x);
                }else map.put(x,1);
            }else if(c==2) set.add(x);
          	else if(c==3){
            	if(set.contains(x)) System.out.println(""No"");
              else System.out.println(""Yes"");
            }
        }
    }
}
","import java.util.*;
public class Main{
	public static void main(String[] args){
    	Scanner sc = new Scanner(System.in);
      	int n = sc.nextInt();
      	int q = sc.nextInt();
      	Set<Integer> set = new HashSet<>();
      	Map<Integer, Integer> map = new HashMap<>();
      	while(q>0){
        	q--;
          	int c = sc.nextInt(), x = sc.nextInt();
          	if(c == 1){
            	if(map.containsKey(x)){
                set.add(x); map.remove(x);
                }else map.put(x,1);
            }else if(c==2) set.add(x);
          	else if(c==3){
            	if(set.contains(x)) System.out.println(""Yes"");
              else System.out.println(""No"");
            }
        }
    }
}
",WA
bing007 ,abc292/B,Java,"import java.util.*;
public class Main{
	public static void main(String[] args){
    	Scanner sc = new scanner(System.in);
      	int n = sc.nextInt();
      	int q = sc.nextInt();
      	Set<Integer> set = new HashSet<>();
      	Map<Integer, Integer> map = new HashMap<>();
      	while(q>0){
        	q--;
          	int c = sc.nextInt(), x = sc.nextInt();
          	if(c == 1){
            	if(map.containsKey(x)){
                set.add(x); map.remove(x);
                }else map.put(x,1);
            }else if(c==2) set.add(x);
          	else if(c==3){
            	if(set.contains(x)) System.out.println(""No"");
              else System.out.println(""Yes"");
            }
        }
    }
}
","import java.util.*;
public class Main{
	public static void main(String[] args){
    	Scanner sc = new Scanner(System.in);
      	int n = sc.nextInt();
      	int q = sc.nextInt();
      	Set<Integer> set = new HashSet<>();
      	Map<Integer, Integer> map = new HashMap<>();
      	while(q>0){
        	q--;
          	int c = sc.nextInt(), x = sc.nextInt();
          	if(c == 1){
            	if(map.containsKey(x)){
                set.add(x); map.remove(x);
                }else map.put(x,1);
            }else if(c==2) set.add(x);
          	else if(c==3){
            	if(set.contains(x)) System.out.println(""Yes"");
              else System.out.println(""No"");
            }
        }
    }
}
",CE
bing007 ,abc292/B,Java,"import java.util.*;
public class Main{
	public static void main(String[] args){
    	Scanner sc = new scanner(System.in);
      	int n = sc.nextInt();
      	int q = sc.nextInt();
      	Set<Integer> set = new HashSet<>();
      	Map<Integer, Integer> map = new hashMap<>();
      	while(q>0){
        	q--;
          	int c = sc.nextInt(), x = sc.nextInt();
          	if(c == 1){
            	if(map.containsKey(x)){
                set.add(x); map.remove(x);
                }else map.put(x,1);
            }else if(c==2) set.add(x);
          	else if(c==3){
            	if(set.contains(x)) System.out.println(""No"");
              else System.out.println(""Yes"");
            }
        }
    }
}
","import java.util.*;
public class Main{
	public static void main(String[] args){
    	Scanner sc = new Scanner(System.in);
      	int n = sc.nextInt();
      	int q = sc.nextInt();
      	Set<Integer> set = new HashSet<>();
      	Map<Integer, Integer> map = new HashMap<>();
      	while(q>0){
        	q--;
          	int c = sc.nextInt(), x = sc.nextInt();
          	if(c == 1){
            	if(map.containsKey(x)){
                set.add(x); map.remove(x);
                }else map.put(x,1);
            }else if(c==2) set.add(x);
          	else if(c==3){
            	if(set.contains(x)) System.out.println(""Yes"");
              else System.out.println(""No"");
            }
        }
    }
}
",CE
haaara ,abc292/B,Java,"import java.util.*;

class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt(), q = sc.nextInt();
        int[] members = new int[n];
        for (int i = 0; i < q; i++) {
            int x1 = sc.nextInt();
            int x2 = sc.nextInt();
            if (x1 == 1) {
                members[x2 - 1] ++; 
            } else if (x1 == 2) {
                members[x2 - 1] += 2;
            } else {
                System.out.println(members[x2 - 1] == 2 ? ""Yes"" : ""No"");
            }
        }
    }
}
","import java.util.*;

class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt(), q = sc.nextInt();
        int[] members = new int[n];
        for (int i = 0; i < q; i++) {
            int x1 = sc.nextInt();
            int x2 = sc.nextInt();
            if (x1 == 1) {
                members[x2 - 1] ++; 
            } else if (x1 == 2) {
                members[x2 - 1] += 2;
            } else {
                System.out.println(members[x2 - 1] >= 2 ? ""Yes"" : ""No"");
            }
        }
    }
}
",WA
Jin373 ,abc292/B,Java,"import java.util.Scanner;
import java.util.HashMap;

class Main {
	public static void main(String[] args) {
      Scanner scan = new Scanner(System.in);
      int numPlayer = scan.nextInt();
      int numEvents = scan.nextInt();
      HashMap<Integer, Integer> player_card = new HashMap<Integer, Integer>();
      
      for (int i = 1; i < numPlayer + 1; ++i) {
      	player_card.put(i, 0);
      }
      
      for (int i = 0; i < numEvents; ++i) {
        int event = scan.nextInt();
        int player = scan.nextInt();
        
        if (event == 1) {
          player_card.put(player, player_card.get(player) + 1);
      } else if (event == 2) {
          player_card.put(player, player_card.get(player) + 2);
        } else {
          if (player_card.get(player) >= 2) {
          	System.out.println(""No"");
          } else {
            System.out.println(""Yes"");
          }
        }
    }
  }
}
","import java.util.Scanner;
import java.util.HashMap;
 
class Main {
	public static void main(String[] args) {
      Scanner scan = new Scanner(System.in);
      int numPlayer = scan.nextInt();
      int numEvents = scan.nextInt();
      HashMap<Integer, Integer> player_card = new HashMap<Integer, Integer>();
      
      for (int i = 1; i < numPlayer + 1; ++i) {
      	player_card.put(i, 0);
      }
      
      for (int i = 0; i < numEvents; ++i) {
        int event = scan.nextInt();
        int player = scan.nextInt();
        
        if (event == 1) {
          player_card.put(player, player_card.get(player) + 1);
      } else if (event == 2) {
          player_card.put(player, player_card.get(player) + 2);
        } else {
          if (player_card.get(player) >= 2) {
          	System.out.println(""Yes"");
          } else {
            System.out.println(""No"");
          }
        }
    }
  }
}
",WA
Jin373 ,abc292/B,Java,"import java.util.Scanner;
import java.util.HashMap;

class Main {
	public static void main(String[] args) {
      Scanner scan = new Scanner(System.in);
      int numPlayer = scan.nextInt();
      int numEvents = scan.nextInt();
      HashMap<Integer, Integer> player_card = new HashMap<Integer, Integer>();
      
      for (int i = 1; i < numPlayer + 1; ++i) {
      	player_card.put(i, 0);
      }
      
      for (int i = 0; i < numEvents; ++i) {
        int event = scan.nextInt();
        int player = scan.nextInt();
        
        if (event == 1) {
          player_card.put(player, player_card.get(player) + 1);
      } else if (event == 2) {
          player_card.put(player, player_card.get(player) + 2);
        } else {
          if (player_card.get(player) >= 2) {
          	System.out.println(""No"");
          } else {
            System.out.println(""Yes"");
          }
        }
    }
}
","import java.util.Scanner;
import java.util.HashMap;
 
class Main {
	public static void main(String[] args) {
      Scanner scan = new Scanner(System.in);
      int numPlayer = scan.nextInt();
      int numEvents = scan.nextInt();
      HashMap<Integer, Integer> player_card = new HashMap<Integer, Integer>();
      
      for (int i = 1; i < numPlayer + 1; ++i) {
      	player_card.put(i, 0);
      }
      
      for (int i = 0; i < numEvents; ++i) {
        int event = scan.nextInt();
        int player = scan.nextInt();
        
        if (event == 1) {
          player_card.put(player, player_card.get(player) + 1);
      } else if (event == 2) {
          player_card.put(player, player_card.get(player) + 2);
        } else {
          if (player_card.get(player) >= 2) {
          	System.out.println(""Yes"");
          } else {
            System.out.println(""No"");
          }
        }
    }
  }
}
",CE
miyamod ,abc292/B,Java,"import java.util.Scanner;
 
public class Main{
  public static void main(String[] args){
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int Q = scanner.nextInt();
    int cardPoint[] = new int[N];
    
    for(int i = 0; i < Q; i++){
      int kind = scanner.nextInt();
      int person = scanner.nextInt();
      switch(kind){
        case 1:
          cardPoint[person - 1] = cardPoint[person - 1] + 1;
          break;
        case 2:
          cardPoint[person - 1] = cardPoint[person - 1] + 2;
        case 3:
          if(cardPoint[person - 1] >= 2){
            System.out.println(""Yes"");
          }else{
            System.out.println(""No"");
          }
          break;
      }
    }
  }
}
","import java.util.Scanner;

public class Main{
  public static void main(String[] args){
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int Q = scanner.nextInt();
    int cardPoint[] = new int[N];

    for(int i = 0; i < Q; i++){
      int kind = scanner.nextInt();
      int person = scanner.nextInt();
      switch(kind){
        case 1:
          cardPoint[person - 1] = cardPoint[person - 1] + 1;
          break;
        case 2:
          cardPoint[person - 1] = cardPoint[person - 1] + 2;
          break;
        case 3:
          if(cardPoint[person - 1] >= 2){
            System.out.println(""Yes"");
          }else{
            System.out.println(""No"");
          }
          break;
      }
    }
  }
}
",WA
miyamod ,abc292/B,Java,"import java.util.Scanner;
 
public class Main{
  public static void main(String[] args){
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int Q = scanner.nextInt();
    int cardPoint[] = new int[N];
    
    for(int i = 0; i < Q; i++){
      int kind = scanner.nextInt();
      int person = scanner.nextInt();
      switch(kind){
        case 1:
          cardPoint[person - 1] = cardPoint[person - 1] + 1;
          break;
        case 2:
          cardPoint[person - 1] = cardPoint[person - 1] + 2;
        case 3:
          if(cardPoint[person - 1] == 2){
            System.out.println(""Yes"");
          }else{
            System.out.println(""No"");
          }
      }
    }
  }
}
","import java.util.Scanner;

public class Main{
  public static void main(String[] args){
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int Q = scanner.nextInt();
    int cardPoint[] = new int[N];

    for(int i = 0; i < Q; i++){
      int kind = scanner.nextInt();
      int person = scanner.nextInt();
      switch(kind){
        case 1:
          cardPoint[person - 1] = cardPoint[person - 1] + 1;
          break;
        case 2:
          cardPoint[person - 1] = cardPoint[person - 1] + 2;
          break;
        case 3:
          if(cardPoint[person - 1] >= 2){
            System.out.println(""Yes"");
          }else{
            System.out.println(""No"");
          }
          break;
      }
    }
  }
}
",WA
miyamod ,abc292/B,Java,"java.util.Scanner;
 
public class Main{
  public static void main(String[] args){
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int Q = scanner.nextInt();
    int cardPoint[] = new int[N];
    
    for(int i = 0; i < Q; i++){
      int kind = scanner.nextInt();
      int person = scanner.nextInt();
      switch(kind){
        case 1:
          cardPoint[person - 1] = cardPoint[person - 1] + 1;
          break;
        case 2:
          cardPoint[person - 1] = cardPoint[person - 1] + 2;
          break;
        case 3:
          if(cardPoint[person - 1] == 2){
            System.out.println(""Yes"");
          }else{
            System.out.println(""No"");
          }
      }
    }
  }
}
","import java.util.Scanner;

public class Main{
  public static void main(String[] args){
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int Q = scanner.nextInt();
    int cardPoint[] = new int[N];

    for(int i = 0; i < Q; i++){
      int kind = scanner.nextInt();
      int person = scanner.nextInt();
      switch(kind){
        case 1:
          cardPoint[person - 1] = cardPoint[person - 1] + 1;
          break;
        case 2:
          cardPoint[person - 1] = cardPoint[person - 1] + 2;
          break;
        case 3:
          if(cardPoint[person - 1] >= 2){
            System.out.println(""Yes"");
          }else{
            System.out.println(""No"");
          }
          break;
      }
    }
  }
}
",CE
yhakiri ,abc292/B,Java,"import java.util.ArrayList;
import java.util.Scanner;
public class Main {
		public static void main(String[] args){
			Scanner sc = new Scanner(System.in);
			ArrayList<Integer> x = new ArrayList<>();
			int N = sc.nextInt();
			int Q = sc.nextInt();
			int[] ev = new int[2*Q+1];
			int ct = 0;
			for(int i=1; i<=2*Q; i++) {
				ev[i] = sc.nextInt();
			}
			
			for(int i=2; i<=2*Q; i+=2) {
				if(ev[i-1]==2) {
					x.add(ev[i]);
					x.add(ev[i]);
				}else if(ev[i-1]==1) {
					x.add(ev[i]);
				}
				if(ev[i-1]==3) {
					for(int j=0; j<x.size(); j++) {
						if(x.get(j)==ev[i]) {
							
							ct++;
						}
					}
					if(ct==2) {
						System.out.println(""Yes"");
					}else {
						System.out.println(""No"");
					}
					ct = 0;
				}
			}
			
			
			
				
			
		}
}
","import java.util.ArrayList;
import java.util.Scanner;
public class Main {
		public static void main(String[] args){
			Scanner sc = new Scanner(System.in);
			ArrayList<Integer> x = new ArrayList<>();
			int N = sc.nextInt();
			int Q = sc.nextInt();
			int[] ev = new int[2*Q+1];
			int ct = 0;
			for(int i=1; i<=2*Q; i++) {
				ev[i] = sc.nextInt();
			}
			
			for(int i=2; i<=2*Q; i+=2) {
				if(ev[i-1]==2) {
					x.add(ev[i]);
					x.add(ev[i]);
				}else if(ev[i-1]==1) {
					x.add(ev[i]);
				}
				if(ev[i-1]==3) {
					for(int j=0; j<x.size(); j++) {
						if(x.get(j)==ev[i]) {
							
							ct++;
						}
					}
					if(ct>=2) {
						System.out.println(""Yes"");
					}else {
						System.out.println(""No"");
					}
					ct = 0;
				}
			}
			
			
			
				
			
		}
}
",WA
mzen ,abc292/B,Java,"import java.util.*;
class Main {
  public static void main(String[] args){
    
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int q = sc.nextInt();
    int[] status = new int[n+1];
    
    int player = 0;
    int card = 0;
    
    for(int i:status){
      status[i] = 0;
    }
    for(int i=0; i<q; i++){
      card = sc.nextInt();
      player = sc.nextInt();
      if(card>=3){
        if(status[player]==2) System.out.println(""Yes"");
        else System.out.println(""No"");
      }else{
        status[player] += card;
      }
    }
    sc.close();
  }
}
","import java.util.*;
class Main {
  public static void main(String[] args){
    
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int q = sc.nextInt();
    int[] status = new int[n+1];
    
    int player = 0;
    int card = 0;
    
    for(int i:status){
      status[i] = 0;
    }
    for(int i=0; i<q; i++){
      card = sc.nextInt();
      player = sc.nextInt();
      if(card==3){
        if(status[player]>=2) System.out.println(""Yes"");
        else System.out.println(""No"");
      }else{
        status[player] += card;
      }
    }
    sc.close();
  }
}
",WA
yaaka ,abc292/B,Java,"import java.util.Scanner;
import java.util.stream.IntStream;

public class Main {
    public static void main(String[] args) {
        final Scanner sc = new Scanner(System.in);

        final var n = sc.nextInt();
        final var q = sc.nextInt();

        int[] card = new int[n];

        IntStream.range(0, q)
                .forEach(i -> {
                    final var event = sc.nextInt();
                    final var player = sc.nextInt();
                    switch (event) {
                        case 1:
                            card[player - 1] += 1;
                            break;
                        case 2:
                            card[player - 1] += 2;
                            break;
                        case 3:
                            System.out.println(card[player - 1] == 2 ? ""Yes"" : ""No"");
                            break;
                        default:
                            break;
                    }
                });

        sc.close();
    }
}
","import java.util.Scanner;
import java.util.stream.IntStream;

public class Main {
    public static void main(String[] args) {
        final Scanner sc = new Scanner(System.in);

        final var n = sc.nextInt();
        final var q = sc.nextInt();

        int[] card = new int[n];

        IntStream.range(0, q)
                .forEach(i -> {
                    final var event = sc.nextInt();
                    final var player = sc.nextInt();
                    switch (event) {
                        case 1:
                            card[player - 1] += 1;
                            break;
                        case 2:
                            card[player - 1] += 2;
                            break;
                        case 3:
                            System.out.println(card[player - 1] >= 2 ? ""Yes"" : ""No"");
                            break;
                        default:
                            break;
                    }
                });

        sc.close();
    }
}
",WA
LearnToCode ,abc292/B,Java,"import java.util.*;

public class Main
{
    
    private static String getAnswers(int[][] queries, int N, int Q) {
        int[] cards = new int[N + 1];
        StringBuilder ans = new StringBuilder();
        
        for(int i = 0; i < Q; i += 1) {
            int c = queries[i][0], x = queries[i][1];
            if(c == 1) {
                
                cards[x] += 1;
            } else if(c == 2) {
                cards[x] += 10; 
            } else {
                if(cards[x] >= 2) {
                    ans.append(""YES"");
                } else {
                    ans.append(""NO"");
                }
                ans.append(""\n"");
            }
        }
        
        return ans.toString();
    }
    
	public static void main(String[] args) {
        Scanner sn = new Scanner(System.in);
        String[] arr = sn.nextLine().trim().split(""\\s+"");
        int N = Integer.valueOf(arr[0]), Q = Integer.valueOf(arr[1]);
        int[][] queries = new int[Q][2];
        for(int i = 0; i < Q; i += 1) {
            arr = sn.nextLine().trim().split(""\\s+"");
            queries[i] = new int[]{Integer.valueOf(arr[0]), Integer.valueOf(arr[1])};
        }
        System.out.print(getAnswers(queries, N, Q));
	}
}
","import java.util.*;

public class Main
{
    
    private static String getAnswers(int[][] queries, int N, int Q) {
        int[] cards = new int[N + 1];
        StringBuilder ans = new StringBuilder();
        
        for(int i = 0; i < Q; i += 1) {
            int c = queries[i][0], x = queries[i][1];
            if(c == 1) {
                
                cards[x] += 1;
            } else if(c == 2) {
                cards[x] += 10; 
            } else {
                if(cards[x] >= 2) {
                    ans.append(""Yes"");
                } else {
                    ans.append(""No"");
                }
                ans.append(""\n"");
            }
        }
        
        return ans.toString();
    }
    
	public static void main(String[] args) {
        Scanner sn = new Scanner(System.in);
        String[] arr = sn.nextLine().trim().split(""\\s+"");
        int N = Integer.valueOf(arr[0]), Q = Integer.valueOf(arr[1]);
        int[][] queries = new int[Q][2];
        for(int i = 0; i < Q; i += 1) {
            arr = sn.nextLine().trim().split(""\\s+"");
            queries[i] = new int[]{Integer.valueOf(arr[0]), Integer.valueOf(arr[1])};
        }
        System.out.print(getAnswers(queries, N, Q));
	}
}
",WA
wdasddsa ,abc292/B,Java,"import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Scanner;
import java.util.Set;
import java.util.Stack;






public class Main {
	static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	private static StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static Scanner sc = new Scanner(System.in);

	private static int Int() {
		try {
			st.nextToken();
			
		} catch (IOException e) {

			e.printStackTrace();
		}
		return (int) st.nval;
	}

	private static long Long() {
		try {
			st.nextToken();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return (long) st.nval;
	}

	private static String str() {
		try {
			st.nextToken();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return (String) st.sval;
	}

	static long gcd(long a, long b) {
		return b == 0 ? a : gcd(b, a % b);
	}

	static int[][] tu;
	static int ans,n,m,chen,jia;
	static int[]dp,color,bj,arr,down,pr,c,du;
	static Map<Integer, List<Integer>>map,ziyinziweiz;
	
	static int v1;
	static List<Long>list;
	static long []p;
	public static void main(String[] args) {
		
		int t =1;
		long mod=(long) (998244353);
		
		while (t-->0) {
			int n=Int();
			int[]arr=new int[n+1];
			int q=Int();
			for (int i = 0; i <q; i++) {
				int a=Int();
				int b=Int();
				if (a==3) {
					if (arr[b]>=2) {
						out.println(""YES"");
					}else {
						out.println(""NO"");
					}
				}else {
					arr[b]+=a;
				}
			}
		}
		
		out.close();
	}

}
","import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Scanner;
import java.util.Set;
import java.util.Stack;






public class Main {
	static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	private static StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static Scanner sc = new Scanner(System.in);

	private static int Int() {
		try {
			st.nextToken();
			
		} catch (IOException e) {

			e.printStackTrace();
		}
		return (int) st.nval;
	}

	private static long Long() {
		try {
			st.nextToken();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return (long) st.nval;
	}

	private static String str() {
		try {
			st.nextToken();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return (String) st.sval;
	}

	static long gcd(long a, long b) {
		return b == 0 ? a : gcd(b, a % b);
	}

	static int[][] tu;
	static int ans,n,m,chen,jia;
	static int[]dp,color,bj,arr,down,pr,c,du;
	static Map<Integer, List<Integer>>map,ziyinziweiz;
	
	static int v1;
	static List<Long>list;
	static long []p;
	public static void main(String[] args) {
		
		int t =1;
		long mod=(long) (998244353);
		
		while (t-->0) {
			int n=Int();
			int[]arr=new int[n+1];
			int q=Int();
			for (int i = 0; i <q; i++) {
				int a=Int();
				int b=Int();
				if (a==3) {
					if (arr[b]>=2) {
						out.println(""Yes"");
					}else {
						out.println(""No"");
					}
				}else {
					arr[b]+=a;
				}
			}
		}
		
		out.close();
	}

}
",WA
dramon ,abc292/B,Java,"import java.util.Arrays;
import java.util.Scanner;
 
import javax.naming.ldap.StartTlsRequest;
 
public class Main{
  public static void main(String[] args){
  	Scanner sc = new Scanner(System.in);
  	
  	int N = sc.nextInt();
  	int Q = sc.nextInt();
  	int ivent = 0;
  	int player = 0;
  	
  	int[] yellow = new int[N];
  	int[] red = new int[N];
  	
  	for(int i = 0; Q > i; i++) {
  		ivent = sc.nextInt();
  		player = sc.nextInt()-1;
  		
  		if(ivent == 1) {
  			yellow[player]++;
  		}
  		else if(ivent == 2) {
  			red[player] = 1;
  		}
  		else {
  			System.out.print(yellow[player] + ""→"");
  			if(yellow[player] >= 2 || red[player] == 1) System.out.println(""Yes"");
  			else System.out.println(""No"");
  		}
  	}
  	
  }
}
","import java.util.Arrays;
import java.util.Scanner;
 
import javax.naming.ldap.StartTlsRequest;
 
public class Main{
  public static void main(String[] args){
  	Scanner sc = new Scanner(System.in);
  	
  	int N = sc.nextInt();
  	int Q = sc.nextInt();
  	int ivent = 0;
  	int player = 0;
  	
  	int[] yellow = new int[N];
  	int[] red = new int[N];
  	
  	for(int i = 0; Q > i; i++) {
  		ivent = sc.nextInt();
  		player = sc.nextInt()-1;
  		
  		if(ivent == 1) {
  			yellow[player]++;
  		}
  		else if(ivent == 2) {
  			red[player] = 1;
  		}
  		else {
  			
  			if(yellow[player] >= 2 || red[player] == 1) System.out.println(""Yes"");
  			else System.out.println(""No"");
  		}
  	}
  	
  }
}
",WA
dramon ,abc292/B,Java,"import java.util.Arrays;
import java.util.Scanner;
 
import javax.naming.ldap.StartTlsRequest;
 
public class Main{
  public static void main(String[] args){
  	Scanner sc = new Scanner(System.in);
  	
  	int N = sc.nextInt();
  	int Q = sc.nextInt();
  	int ivent = 0;
  	int player = 0;
  	
  	int[] yellow = new int[N];
  	int[] red = new int[N];
  	
  	for(int i = 0; Q > i; i++) {
  		ivent = sc.nextInt();
  		player = sc.nextInt()-1;
  		
  		if(ivent == 1) {
  			yellow[player]++;
  		}
  		else if(ivent == 2) {
  			red[player] = 1;
  		}
  		else {
  			System.out.print(yellow[player] + ""→"");
  			if(yellow[player] == 2 || red[player] == 1) System.out.println(""Yes"");
  			else System.out.println(""No"");
  		}
  	}
  	
  }
}
","import java.util.Arrays;
import java.util.Scanner;
 
import javax.naming.ldap.StartTlsRequest;
 
public class Main{
  public static void main(String[] args){
  	Scanner sc = new Scanner(System.in);
  	
  	int N = sc.nextInt();
  	int Q = sc.nextInt();
  	int ivent = 0;
  	int player = 0;
  	
  	int[] yellow = new int[N];
  	int[] red = new int[N];
  	
  	for(int i = 0; Q > i; i++) {
  		ivent = sc.nextInt();
  		player = sc.nextInt()-1;
  		
  		if(ivent == 1) {
  			yellow[player]++;
  		}
  		else if(ivent == 2) {
  			red[player] = 1;
  		}
  		else {
  			
  			if(yellow[player] >= 2 || red[player] == 1) System.out.println(""Yes"");
  			else System.out.println(""No"");
  		}
  	}
  	
  }
}
",WA
MathavKrishnna ,abc292/B,Java,"import java.util.*;
class Main{
  public static int count = 0;
  public static void main(String[] args){
    Scanner obj = new Scanner(System.in);
    int n = obj.nextInt();
    int q = obj.nextInt();
    int[] players = new int[n];
    for(int i = 0;q>i;i++){
        int c = obj.nextInt();
        int p = obj.nextInt();
        if(c == 1){
            players[p]++;
        }
        else if(c == 2){
            players[p] = 2;
        }
        else{
            if(players[p]==2){
                System.out.println(""Yes"");
            }
            else{
                System.out.println(""No"");
            }
        }
    }
  }
}
","import java.util.*;
class Main{
  public static int count = 0;
  public static void main(String[] args){
    Scanner obj = new Scanner(System.in);
    int n = obj.nextInt();
    int q = obj.nextInt();
    int[] players = new int[n+1];
    for(int i = 0;q>i;i++){
        int c = obj.nextInt();
        int p = obj.nextInt();
        if(c == 1){
            players[p]++;
        }
        else if(c == 2){
            players[p] = 2;
        }
        else{
            if(players[p]>=2){
                System.out.println(""Yes"");
            }
            else{
                System.out.println(""No"");
            }
        }
    }
  }
}
",RE
MathavKrishnna ,abc292/B,Java,"import java.util.*;
class Main{
  public static int count = 0;
  public static void main(String[] args){
    Scanner obj = new Scanner(System.in);
    int n = obj.nextInt();
    int q = obj.nextInt();
    int[] players = new int[n+1];
    for(int i = 0;q>i;i++){
        int c = obj.nextInt();
        int p = obj.nextInt();
        if(c == 1){
            players[p]++;
        }
        else if(c == 2){
            players[p] += 2;
        }
        else{
            if(players[p]>1){
                System.out.println(""YES"");
            }
            else{
                System.out.println(""NO"");
            }
        }
    }
  }
}
","import java.util.*;
class Main{
  public static int count = 0;
  public static void main(String[] args){
    Scanner obj = new Scanner(System.in);
    int n = obj.nextInt();
    int q = obj.nextInt();
    int[] players = new int[n+1];
    for(int i = 0;q>i;i++){
        int c = obj.nextInt();
        int p = obj.nextInt();
        if(c == 1){
            players[p]++;
        }
        else if(c == 2){
            players[p] = 2;
        }
        else{
            if(players[p]>=2){
                System.out.println(""Yes"");
            }
            else{
                System.out.println(""No"");
            }
        }
    }
  }
}
",WA
MathavKrishnna ,abc292/B,Java,"import java.util.*;
class Main{
  public static int count = 0;
  public static void main(String[] args){
    Scanner obj = new Scanner(System.in);
    int n = obj.nextInt();
    int q = obj.nextInt();
    int[] players = new int[n];
    for(int i = 0;q>i;i++){
        int c = obj.nextInt();
        int p = obj.nextInt();
        if(c == 1){
            players[p]++;
        }
        else if(c == 2){
            players[p] += 2;
        }
        else{
            if(players[p]>1){
                System.out.println(""YES"");
            }
            else{
                System.out.println(""NO"");
            }
        }
    }
  }
}
","import java.util.*;
class Main{
  public static int count = 0;
  public static void main(String[] args){
    Scanner obj = new Scanner(System.in);
    int n = obj.nextInt();
    int q = obj.nextInt();
    int[] players = new int[n+1];
    for(int i = 0;q>i;i++){
        int c = obj.nextInt();
        int p = obj.nextInt();
        if(c == 1){
            players[p]++;
        }
        else if(c == 2){
            players[p] = 2;
        }
        else{
            if(players[p]>=2){
                System.out.println(""Yes"");
            }
            else{
                System.out.println(""No"");
            }
        }
    }
  }
}
",WA
LiCooer ,abc292/B,Java,"import jdk.swing.interop.SwingInterOpUtils;

import java.sql.SQLOutput;
import java.util.*;

import java.util.Scanner;
import java.lang.System;
enum Season{
    spring,summer,autumn,winter;
}
public class C{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);





















































































        Season x;





































        int n ; 
        int q;
        n = sc.nextInt();
        q = sc.nextInt();
        int [] a = new int[n + 1];
        while(q -- > 0){
            int op = sc.nextInt();
            if(op == 3){
                int num = sc.nextInt();
                if(a[num] >= 2){
                    System.out.println(""Yes"");
                }
                else{
                    System.out.println(""No"");
                }
            }
            if(op == 2){
                int num = sc.nextInt();
                a[num] += 2;
            }
            if(op == 1){
                int num=  sc.nextInt();
                a[num] ++ ;

            }
        }
    }
}
","import java.sql.SQLOutput;
import java.util.*;

import java.util.Scanner;
import java.lang.System;
enum Season{
    spring,summer,autumn,winter;
}
public class Main{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);





















































































        Season x;





































        int n ; 
        int q;
        n = sc.nextInt();
        q = sc.nextInt();
        int [] a = new int[n + 1];
        while(q -- > 0){
            int op = sc.nextInt();
            if(op == 3){
                int num = sc.nextInt();
                if(a[num] >= 2){
                    System.out.println(""Yes"");
                }
                else{
                    System.out.println(""No"");
                }
            }
            if(op == 2){
                int num = sc.nextInt();
                a[num] += 2;
            }
            if(op == 1){
                int num=  sc.nextInt();
                a[num] ++ ;

            }
        }
    }
}
",CE
junk237 ,abc292/B,Java,"import java.util.*;
 
public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int tmp = sc.nextInt();
        int[] n = new int[tmp];
        int q = sc.nextInt();
        for(int i=0;i<q;i++){
            int c = sc.nextInt();
            int x = sc.nextInt()-1;
            if(c==1){
                n[x]++;
            } else if(c==2){
                n[x]+=2;
            } else if(c==3){
                if(n[x]==2){
                    System.out.println(""Yes"");
                } else {
                    System.out.println(""No"");
                }
            }
        }
        sc.close();
    }
}
","import java.util.*;
 
public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int tmp = sc.nextInt();
        int[] n = new int[tmp];
        int q = sc.nextInt();
        for(int i=0;i<q;i++){
            int c = sc.nextInt();
            int x = sc.nextInt()-1;
            if(c==1){
                n[x]++;
            } else if(c==2){
                n[x]+=2;
            } else if(c==3){
                if(n[x]>1){
                    System.out.println(""Yes"");
                } else {
                    System.out.println(""No"");
                }
            }
        }
        sc.close();
    }
}
",WA
nikhilgarg ,abc292/B,Java,"import java.util.*;

public class Main {

	public static void main(String args[]) {
		Scanner scn = new Scanner(System.in);
		int x = scn.nextInt();
		int case1 = scn.nextInt();
		int arr[] = new int[case1+2];
		while (case1-- > 0) {
			int a = scn.nextInt();
			int b = scn.nextInt();
			if (a == 1) {
				if(arr[b]<2) {

				arr[b ] += 1;
				}
			} else if (a == 2) {
				if(arr[b]<2) {
					arr[b ] += 2;

				}
			} else {
				if (arr[b ] < 2) {
					System.out.println(""No"");
				} else {
					System.out.println(""Yes"");
				}
			}
		}

	}
}
","import java.util.*;

public class Main {

	public static void main(String args[]) {
		Scanner scn = new Scanner(System.in);
		int x = scn.nextInt();
		int case1 = scn.nextInt();
		int arr[] = new int[x+2];
		while (case1-- > 0) {
			int a = scn.nextInt();
			int b = scn.nextInt();
			if (a == 1) {
				if(arr[b]<2) {

				arr[b ] += 1;
				}
			} else if (a == 2) {
				if(arr[b]<2) {
					arr[b ] += 2;

				}
			} else {
				if (arr[b ] < 2) {
					System.out.println(""No"");
				} else {
					System.out.println(""Yes"");
				}
			}
		}

	}
}
",RE
v7fgg ,abc292/D,Java,"

import java.util.*;
import java.io.*;
import java.math.*;
import java.text.*;
public class Main{
    public static void main(String args[]) throws IOException{
        Read sc=new Read();
        int n=sc.nextInt();
        int m=sc.nextInt();
        int count[]=new int[n+5];
        List<Integer> path[]=new List[n+5];
        for(int i=1;i<=n;i++){
            path[i]=new ArrayList<>();
        }
        for(int i=0;i<m;i++){
            int a=sc.nextInt();
            int b=sc.nextInt();
            path[a].add(b);
            path[b].add(a);
        }
        boolean ans=true;
        boolean has[]=new boolean[n+5];
        for(int j=1;j<n;j++){
            if(!has[j]){
                int count1=1;
                int count2=0;
                Queue<Integer> q=new LinkedList<>();
                List<Integer> list=new ArrayList<>();
                q.add(j);
                list.add(j);
                has[j]=true;
                while(q.size()>0){
                    int a=q.poll();
                    for(int b:path[a]){
                        if(!has[b]){
                            q.add(b);
                            list.add(b);
                            has[b]=true;
                        }
                    }
                }
                count1=list.size();
                for(int a:list){
                    count2+=path[a].size();
                }
                if(count1!=count2/2){
                    ans=false;
                }
            }
        }
        sc.println(ans?""Yes"":""No"");
        
        sc.bw.flush();
        sc.bw.close();
    }
}



class Read{
    BufferedReader bf;
    StringTokenizer st;
    BufferedWriter bw;
    public Read(){
        bf=new BufferedReader(new InputStreamReader(System.in));
        st=new StringTokenizer("""");
        bw=new BufferedWriter(new OutputStreamWriter(System.out));
        
        
        
        
    }
    public String nextLine() throws IOException{
        return bf.readLine();
    }
    public String next() throws IOException{
        while(!st.hasMoreTokens()){
            st=new StringTokenizer(bf.readLine());
        }
        return st.nextToken();
    }
    public char nextChar() throws IOException{
        
        return next().charAt(0);
    }
    public int nextInt() throws IOException{
        return Integer.parseInt(next());
    }
    public long nextLong() throws IOException{
        return Long.parseLong(next());
    }
    public double nextDouble() throws IOException{
        return Double.parseDouble(next());
    }
    public float nextFloat() throws IOException{
        return Float.parseFloat(next());
    }
    public byte nextByte() throws IOException{
        return Byte.parseByte(next());
    }
    public short nextShort() throws IOException{
        return Short.parseShort(next());
    }
    public BigInteger nextBigInteger() throws IOException{
        return new BigInteger(next());
    }
    public void println(int a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(int a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(String a) throws IOException{
        bw.write(a);
        bw.newLine();
        return;
    }
    public void print(String a) throws IOException{
        bw.write(a);
        return;
    }
    public void println(long a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(long a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(double a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(double a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void print(BigInteger a) throws IOException{
        bw.write(a.toString());
        return;
    }
    public void print(char a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(char a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
}
","

import java.util.*;
import java.io.*;
import java.math.*;
import java.text.*;
public class Main{
    public static void main(String args[]) throws IOException{
        Read sc=new Read();
        int n=sc.nextInt();
        int m=sc.nextInt();
        int count[]=new int[n+5];
        List<Integer> path[]=new List[n+5];
        for(int i=1;i<=n;i++){
            path[i]=new ArrayList<>();
        }
        for(int i=0;i<m;i++){
            int a=sc.nextInt();
            int b=sc.nextInt();
            path[a].add(b);
            path[b].add(a);
        }
        boolean ans=true;
        boolean has[]=new boolean[n+5];
        for(int j=1;j<=n;j++){
            if(!has[j]){
                int count1=1;
                int count2=0;
                Queue<Integer> q=new LinkedList<>();
                List<Integer> list=new ArrayList<>();
                q.add(j);
                list.add(j);
                has[j]=true;
                while(q.size()>0){
                    int a=q.poll();
                    for(int b:path[a]){
                        if(!has[b]){
                            q.add(b);
                            list.add(b);
                            has[b]=true;
                        }
                    }
                }
                count1=list.size();
                for(int a:list){
                    count2+=path[a].size();
                }
                if(count1!=count2/2){
                    ans=false;
                }
            }
        }
        sc.println(ans?""Yes"":""No"");
        
        sc.bw.flush();
        sc.bw.close();
    }
}



class Read{
    BufferedReader bf;
    StringTokenizer st;
    BufferedWriter bw;
    public Read(){
        bf=new BufferedReader(new InputStreamReader(System.in));
        st=new StringTokenizer("""");
        bw=new BufferedWriter(new OutputStreamWriter(System.out));
        
        
        
        
    }
    public String nextLine() throws IOException{
        return bf.readLine();
    }
    public String next() throws IOException{
        while(!st.hasMoreTokens()){
            st=new StringTokenizer(bf.readLine());
        }
        return st.nextToken();
    }
    public char nextChar() throws IOException{
        
        return next().charAt(0);
    }
    public int nextInt() throws IOException{
        return Integer.parseInt(next());
    }
    public long nextLong() throws IOException{
        return Long.parseLong(next());
    }
    public double nextDouble() throws IOException{
        return Double.parseDouble(next());
    }
    public float nextFloat() throws IOException{
        return Float.parseFloat(next());
    }
    public byte nextByte() throws IOException{
        return Byte.parseByte(next());
    }
    public short nextShort() throws IOException{
        return Short.parseShort(next());
    }
    public BigInteger nextBigInteger() throws IOException{
        return new BigInteger(next());
    }
    public void println(int a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(int a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(String a) throws IOException{
        bw.write(a);
        bw.newLine();
        return;
    }
    public void print(String a) throws IOException{
        bw.write(a);
        return;
    }
    public void println(long a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(long a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(double a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(double a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void print(BigInteger a) throws IOException{
        bw.write(a.toString());
        return;
    }
    public void print(char a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(char a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
}
",WA
v7fgg ,abc292/D,Java,"

import java.util.*;
import java.io.*;
import java.math.*;
import java.text.*;
public class Main{
    public static void main(String args[]) throws IOException{
        Read sc=new Read();
        int n=sc.nextInt();
        int m=sc.nextInt();
        int count[]=new int[n+5];
        List<Integer> path[]=new List[n+5];
        for(int i=1;i<=n;i++){
            path[i]=new ArrayList<>();
        }
        for(int i=0;i<m;i++){
            int a=sc.nextInt();
            int b=sc.nextInt();
            path[a].add(b);
            path[b].add(a);
        }
        boolean ans=true;
        boolean has[]=new boolean[n+5];
        for(int j=1;j<n;j++){
            if(!has[j]){
                int count1=1;
                int count2=0;
                Queue<Integer> q=new LinkedList<>();
                List<Integer> list=new ArrayList<>();
                q.add(j);
                list.add(j);
                while(q.size()>0){
                    int a=q.poll();
                    for(int b:path[a]){
                        if(!has[b]){
                            q.add(b);
                            list.add(b);
                            has[b]=true;
                        }
                    }
                }
                count1=list.size();
                for(int a:list){
                    count2+=path[a].size();
                }
                if(count1!=count2/2){
                    ans=false;
                }
            }
        }
        sc.println(ans?""Yes"":""No"");
        
        sc.bw.flush();
        sc.bw.close();
    }
}



class Read{
    BufferedReader bf;
    StringTokenizer st;
    BufferedWriter bw;
    public Read(){
        bf=new BufferedReader(new InputStreamReader(System.in));
        st=new StringTokenizer("""");
        bw=new BufferedWriter(new OutputStreamWriter(System.out));
        
        
        
        
    }
    public String nextLine() throws IOException{
        return bf.readLine();
    }
    public String next() throws IOException{
        while(!st.hasMoreTokens()){
            st=new StringTokenizer(bf.readLine());
        }
        return st.nextToken();
    }
    public char nextChar() throws IOException{
        
        return next().charAt(0);
    }
    public int nextInt() throws IOException{
        return Integer.parseInt(next());
    }
    public long nextLong() throws IOException{
        return Long.parseLong(next());
    }
    public double nextDouble() throws IOException{
        return Double.parseDouble(next());
    }
    public float nextFloat() throws IOException{
        return Float.parseFloat(next());
    }
    public byte nextByte() throws IOException{
        return Byte.parseByte(next());
    }
    public short nextShort() throws IOException{
        return Short.parseShort(next());
    }
    public BigInteger nextBigInteger() throws IOException{
        return new BigInteger(next());
    }
    public void println(int a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(int a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(String a) throws IOException{
        bw.write(a);
        bw.newLine();
        return;
    }
    public void print(String a) throws IOException{
        bw.write(a);
        return;
    }
    public void println(long a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(long a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(double a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(double a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void print(BigInteger a) throws IOException{
        bw.write(a.toString());
        return;
    }
    public void print(char a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(char a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
}
","

import java.util.*;
import java.io.*;
import java.math.*;
import java.text.*;
public class Main{
    public static void main(String args[]) throws IOException{
        Read sc=new Read();
        int n=sc.nextInt();
        int m=sc.nextInt();
        int count[]=new int[n+5];
        List<Integer> path[]=new List[n+5];
        for(int i=1;i<=n;i++){
            path[i]=new ArrayList<>();
        }
        for(int i=0;i<m;i++){
            int a=sc.nextInt();
            int b=sc.nextInt();
            path[a].add(b);
            path[b].add(a);
        }
        boolean ans=true;
        boolean has[]=new boolean[n+5];
        for(int j=1;j<=n;j++){
            if(!has[j]){
                int count1=1;
                int count2=0;
                Queue<Integer> q=new LinkedList<>();
                List<Integer> list=new ArrayList<>();
                q.add(j);
                list.add(j);
                has[j]=true;
                while(q.size()>0){
                    int a=q.poll();
                    for(int b:path[a]){
                        if(!has[b]){
                            q.add(b);
                            list.add(b);
                            has[b]=true;
                        }
                    }
                }
                count1=list.size();
                for(int a:list){
                    count2+=path[a].size();
                }
                if(count1!=count2/2){
                    ans=false;
                }
            }
        }
        sc.println(ans?""Yes"":""No"");
        
        sc.bw.flush();
        sc.bw.close();
    }
}



class Read{
    BufferedReader bf;
    StringTokenizer st;
    BufferedWriter bw;
    public Read(){
        bf=new BufferedReader(new InputStreamReader(System.in));
        st=new StringTokenizer("""");
        bw=new BufferedWriter(new OutputStreamWriter(System.out));
        
        
        
        
    }
    public String nextLine() throws IOException{
        return bf.readLine();
    }
    public String next() throws IOException{
        while(!st.hasMoreTokens()){
            st=new StringTokenizer(bf.readLine());
        }
        return st.nextToken();
    }
    public char nextChar() throws IOException{
        
        return next().charAt(0);
    }
    public int nextInt() throws IOException{
        return Integer.parseInt(next());
    }
    public long nextLong() throws IOException{
        return Long.parseLong(next());
    }
    public double nextDouble() throws IOException{
        return Double.parseDouble(next());
    }
    public float nextFloat() throws IOException{
        return Float.parseFloat(next());
    }
    public byte nextByte() throws IOException{
        return Byte.parseByte(next());
    }
    public short nextShort() throws IOException{
        return Short.parseShort(next());
    }
    public BigInteger nextBigInteger() throws IOException{
        return new BigInteger(next());
    }
    public void println(int a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(int a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(String a) throws IOException{
        bw.write(a);
        bw.newLine();
        return;
    }
    public void print(String a) throws IOException{
        bw.write(a);
        return;
    }
    public void println(long a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(long a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(double a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(double a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void print(BigInteger a) throws IOException{
        bw.write(a.toString());
        return;
    }
    public void print(char a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(char a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
}
",WA
mizuki1215 ,abc292/D,Java,"import java.util.Arrays;
import java.util.Scanner;

public class UnicyclicComponents {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int N = scanner.nextInt();
        int M = scanner.nextInt();
        UnionFind unionFind = new UnionFind(N);
        int[] u = new int[M + 1];
        int[] v = new int[M + 1];
        for(int i = 1; i <= M; i ++) {
            u[i] = scanner.nextInt();
            v[i] = scanner.nextInt();
        }

        for(int i = 0; i < M; i ++) {
            unionFind.unite(u[i], v[i]);
        }
















        int[] a = unionFind.getSizeOfVertex(N);
        int[] b = unionFind.getSizeOfSide(M, u);
                for(int i = 1; i <= N; i ++) {
            if(a[i] != b[i]) {
                System.out.println(""No"");
                return;
            }
        }

        System.out.println(""Yes"");


    }
}
class UnionFind {

    
    int n;
    int[] parent;
    int[] size;

    
    int[] sizeOfVertex ;

    
    int[] sizeOfSide;

    
    public UnionFind(int n) {
        this.n = n;
        parent = new int[n + 1];
        size = new int[n + 1];
        sizeOfVertex = new int[n + 1];
        sizeOfSide = new int[n + 1];

        Arrays.fill(parent, -1); 
        Arrays.fill(size, 1); 
    }

    
    int root(int x) {
        while (true) {
            if (parent[x] == -1) {
                break;  
            }
            x = parent[x]; 
        }
        return x;
    }

    
    void unite(int u, int v) {
        int rootU = root(u);
        int rootV = root(v);

        if (rootU == rootV) {
            return; 
        }
        if (size[rootU] < size[rootV]) {
            parent[rootU] = rootV;
            size[rootV] += size[rootU];
        }
        else {
            parent[rootV] = rootU;
            size[rootU] += size[rootV];
        }
    }

    
    boolean same(int u, int v) {
        return root(u) == root(v);
    }

    
    int[] getSizeOfVertex(int n) {
        for(int i = 1; i <= n; i ++) {
            sizeOfVertex[root(i)] ++;
        }
        return sizeOfVertex;
    }

    
    int[] getSizeOfSide(int m, int u[]) {
        for(int i = 1; i <= m; i ++) {
            sizeOfSide[root(u[i])] ++;
        }
        return sizeOfSide;
    }
}

","import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int N = scanner.nextInt();
        int M = scanner.nextInt();
        UnionFind unionFind = new UnionFind(N);
        int[] u = new int[M + 1];
        int[] v = new int[M + 1];
        for(int i = 1; i <= M; i ++) {
            u[i] = scanner.nextInt();
            v[i] = scanner.nextInt();
        }

        for(int i = 0; i < M; i ++) {
            unionFind.unite(u[i], v[i]);
        }
















        int[] a = unionFind.getSizeOfVertex(N);
        int[] b = unionFind.getSizeOfSide(M, u);
                for(int i = 1; i <= N; i ++) {
            if(a[i] != b[i]) {
                System.out.println(""No"");
                return;
            }
        }

        System.out.println(""Yes"");


    }
}
class UnionFind {

    
    int n;
    int[] parent;
    int[] size;

    
    int[] sizeOfVertex ;

    
    int[] sizeOfSide;

    
    public UnionFind(int n) {
        this.n = n;
        parent = new int[n + 1];
        size = new int[n + 1];
        sizeOfVertex = new int[n + 1];
        sizeOfSide = new int[n + 1];

        Arrays.fill(parent, -1); 
        Arrays.fill(size, 1); 
    }

    
    int root(int x) {
        while (true) {
            if (parent[x] == -1) {
                break;  
            }
            x = parent[x]; 
        }
        return x;
    }

    
    void unite(int u, int v) {
        int rootU = root(u);
        int rootV = root(v);

        if (rootU == rootV) {
            return; 
        }
        if (size[rootU] < size[rootV]) {
            parent[rootU] = rootV;
            size[rootV] += size[rootU];
        }
        else {
            parent[rootV] = rootU;
            size[rootU] += size[rootV];
        }
    }

    
    boolean same(int u, int v) {
        return root(u) == root(v);
    }

    
    int[] getSizeOfVertex(int n) {
        for(int i = 1; i <= n; i ++) {
            sizeOfVertex[root(i)] ++;
        }
        return sizeOfVertex;
    }

    
    int[] getSizeOfSide(int m, int u[]) {
        for(int i = 1; i <= m; i ++) {
            sizeOfSide[root(u[i])] ++;
        }
        return sizeOfSide;
    }
}

",CE
gaps ,abc292/D,Java,"import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
      	int[][] pve = new int[n + 1][3];
        for (int i = 1; i <= n; i++) {
          	pve[i][0] = i;
          	pve[i][1] = 1;
        }
        int m = sc.nextInt();
        for (int i = 0; i < m; i++) {
            int u = sc.nextInt();
            int v = sc.nextInt();
          	union(pve, u, v);
        }
      
      	for (int i = 1; i <= n; i++) {
        	if (i == pve[i][0] && pve[i][1] != pve[i][2]) {
            	System.out.println(""No"");
              	return;
            }
        }
      	System.out.println(""Yes"");
    }
    
    private static void union(int[][] pve, int a, int b) {
        int pa = find(pve, a);
        int pb = find(pve, b);
      	pve[pa][2]++;
      	if (pa != pb) {
        	pve[pb][0] = pa;
          	pve[pa][1] += pve[pb][1];
          	pve[pb][1] = 0;
          	pve[pa][2] += pve[pb][2];
          	pve[pb][2] = 0;
        }
    }
    
    private static int find(int[][] pve, int n) {
      	if (n == pve[n][0]) {
        	return n;
        }
      	return pve[n] = find(pve, pve[n][0]);
    }
}
","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
      	int[][] pve = new int[n + 1][3];
        for (int i = 1; i <= n; i++) {
          	pve[i][0] = i;
          	pve[i][1] = 1;
        }
        int m = sc.nextInt();
        for (int i = 0; i < m; i++) {
            int u = sc.nextInt();
            int v = sc.nextInt();
          	union(pve, u, v);
        }
      
      	for (int i = 1; i <= n; i++) {
        	if (i == pve[i][0] && pve[i][1] != pve[i][2]) {
            	System.out.println(""No"");
              	return;
            }
        }
      	System.out.println(""Yes"");
    }
    
    private static void union(int[][] pve, int a, int b) {
        int pa = find(pve, a);
        int pb = find(pve, b);
      	pve[pa][2]++;
      	if (pa != pb) {
        	pve[pb][0] = pa;
          	pve[pa][1] += pve[pb][1];
          	pve[pb][1] = 0;
          	pve[pa][2] += pve[pb][2];
          	pve[pb][2] = 0;
        }
    }
    
    private static int find(int[][] pve, int n) {
      	if (n == pve[n][0]) {
        	return n;
        }
      	return pve[n][0] = find(pve, pve[n][0]);
    }
}
",CE
gaps ,abc292/D,Java,"import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
      	int[][] pve = new int[n + 1];
        for (int i = 1; i <= n; i++) {
          	pve[i][0] = i;
          	pve[i][1] = 1;
        }
        int m = sc.nextInt();
        for (int i = 0; i < m; i++) {
            int u = sc.nextInt();
            int v = sc.nextInt();
          	union(pve, u, v);
        }
      
      	for (int i = 1; i <= n; i++) {
        	if (i == pve[i][0] && pve[i][1] != pve[i][2]) {
            	System.out.println(""No"");
              	return;
            }
        }
      	System.out.println(""Yes"");
    }
    
    private static void union(int[][] pve, int a, int b) {
        int pa = find(pve, a);
        int pb = find(pve, b);
      	pve[pa][2]++;
      	if (pa != pb) {
        	pve[pb][0] = pa;
          	pve[pa][1] += pve[pb][1];
          	pve[pb][1] = 0;
          	pve[pa][2] += pve[pb][2];
          	pve[pb][2] = 0;
        }
    }
    
    private static int find(int[][] pve, int n) {
      	if (n == pve[n][0]) {
        	return n;
        }
      	return pve[n] = find(pve, pve[n][0]);
    }
}
","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
      	int[][] pve = new int[n + 1][3];
        for (int i = 1; i <= n; i++) {
          	pve[i][0] = i;
          	pve[i][1] = 1;
        }
        int m = sc.nextInt();
        for (int i = 0; i < m; i++) {
            int u = sc.nextInt();
            int v = sc.nextInt();
          	union(pve, u, v);
        }
      
      	for (int i = 1; i <= n; i++) {
        	if (i == pve[i][0] && pve[i][1] != pve[i][2]) {
            	System.out.println(""No"");
              	return;
            }
        }
      	System.out.println(""Yes"");
    }
    
    private static void union(int[][] pve, int a, int b) {
        int pa = find(pve, a);
        int pb = find(pve, b);
      	pve[pa][2]++;
      	if (pa != pb) {
        	pve[pb][0] = pa;
          	pve[pa][1] += pve[pb][1];
          	pve[pb][1] = 0;
          	pve[pa][2] += pve[pb][2];
          	pve[pb][2] = 0;
        }
    }
    
    private static int find(int[][] pve, int n) {
      	if (n == pve[n][0]) {
        	return n;
        }
      	return pve[n][0] = find(pve, pve[n][0]);
    }
}
",CE
kojiji ,abc292/D,Java,"import java.io.BufferedInputStream;
import java.util.Arrays;
import java.util.Scanner;

public class Main {

    static class Union {
        private final int[] root;
        private final int[] linkCounts;
        private final int[] nodeCounts;

        Union(int n) {
            root = new int[n + 1];
            linkCounts = new int[n + 1];
            nodeCounts = new int[n + 1];
            for (int i = 0; i < n + 1; i++) {
                root[i] = i;
                nodeCounts[i] = 1;
            }
        }

        public int union(int a, int b) {
            final int ra = findRoot(a);
            final int rb = findRoot(b);
            if (ra != rb) {
                root[rb] = ra;
                nodeCounts[ra] += nodeCounts[rb];
            }
            linkCounts[ra] += 1;
            return rb;
        }

        private int findRoot(int a) {
            int root = this.root[a];
            if (root != a) {
                root = findRoot(this.root[a]);
                this.root[a] = root;
            }
            return root;
        }

        @Override
        public String toString() {
            final StringBuilder sb = new StringBuilder(""Union{"");
            sb.append(""root="").append(Arrays.toString(root));
            sb.append("", linkCounts="").append(Arrays.toString(linkCounts));
            sb.append("", nodeCounts="").append(Arrays.toString(nodeCounts));
            sb.append('}');
            return sb.toString();
        }
    }

    public static void main(String[] args) {
        final Scanner in = new Scanner(new BufferedInputStream(System.in));
        final int n = in.nextInt();
        final int m = in.nextInt();
        if (m == 0) {
            System.out.println(""No"");
            return;
        }
        final Union union = new Union(n);
        for (int i = 0; i < m; i++) {
            final int u = in.nextInt();
            final int v = in.nextInt();
            union.union(u, v);
        }
        for (int i = 1; i <= n; i++) {
            final int root = union.findRoot(i);
            if (union.linkCounts[root] != union.nodeCounts[root]) {
                System.out.println(""No"");
                return;
            }
        }
        System.out.println(""Yes"");
    }
}
","import java.io.BufferedInputStream;
import java.util.Arrays;
import java.util.Scanner;

public class Main {

    static class Union {
        private final int[] root;
        private final int[] linkCounts;
        private final int[] nodeCounts;

        Union(int n) {
            root = new int[n + 1];
            linkCounts = new int[n + 1];
            nodeCounts = new int[n + 1];
            for (int i = 0; i < n + 1; i++) {
                root[i] = i;
                nodeCounts[i] = 1;
            }
        }

        public int union(int a, int b) {
            final int ra = findRoot(a);
            final int rb = findRoot(b);
            if (ra != rb) {
                root[rb] = ra;
                nodeCounts[ra] += nodeCounts[rb];
                linkCounts[ra] += linkCounts[rb];
            }
            linkCounts[ra] += 1;
            return rb;
        }

        private int findRoot(int a) {
            int root = this.root[a];
            if (root != a) {
                root = findRoot(this.root[a]);
                this.root[a] = root;
            }
            return root;
        }

        @Override
        public String toString() {
            final StringBuilder sb = new StringBuilder(""Union{"");
            sb.append(""root="").append(Arrays.toString(root));
            sb.append("", linkCounts="").append(Arrays.toString(linkCounts));
            sb.append("", nodeCounts="").append(Arrays.toString(nodeCounts));
            sb.append('}');
            return sb.toString();
        }
    }

    public static void main(String[] args) {
        final Scanner in = new Scanner(new BufferedInputStream(System.in));
        final int n = in.nextInt();
        final int m = in.nextInt();
        if (m == 0) {
            System.out.println(""No"");
            return;
        }
        final Union union = new Union(n);
        for (int i = 0; i < m; i++) {
            final int u = in.nextInt();
            final int v = in.nextInt();
            union.union(u, v);
        }
        for (int i = 1; i <= n; i++) {
            final int root = union.findRoot(i);
            if (union.linkCounts[root] != union.nodeCounts[root]) {
                System.out.println(""No"");
                return;
            }
        }
        System.out.println(""Yes"");
    }
}
",WA
kojiji ,abc292/D,Java,"import java.io.BufferedInputStream;
import java.util.Arrays;
import java.util.Scanner;

public class Main {

    static class Union {
        private final int[] root;
        private final int[] linkCounts;
        private final int[] nodeCounts;

        Union(int n) {
            root = new int[n + 1];
            linkCounts = new int[n + 1];
            nodeCounts = new int[n + 1];
            for (int i = 0; i < n + 1; i++) {
                root[i] = i;
                nodeCounts[i] = 1;
            }
        }

        public int union(int a, int b) {
            final int ra = findRoot(a);
            final int rb = findRoot(b);
            if (ra != rb) {
                root[b] = ra;
                nodeCounts[ra] += nodeCounts[rb];
            }
            linkCounts[ra] += 1;
            return rb;
        }

        private int findRoot(int a) {
            int root = this.root[a];
            if (root != a) {
                root = findRoot(this.root[a]);
                this.root[a] = root;
            }
            return root;
        }

        @Override
        public String toString() {
            final StringBuilder sb = new StringBuilder(""Union{"");
            sb.append(""root="").append(Arrays.toString(root));
            sb.append("", linkCounts="").append(Arrays.toString(linkCounts));
            sb.append("", nodeCounts="").append(Arrays.toString(nodeCounts));
            sb.append('}');
            return sb.toString();
        }
    }

    public static void main(String[] args) {
        final Scanner in = new Scanner(new BufferedInputStream(System.in));
        final int n = in.nextInt();
        final int m = in.nextInt();
        if (m == 0) {
            System.out.println(""No"");
            return;
        }
        final Union union = new Union(n);
        for (int i = 0; i < m; i++) {
            final int u = in.nextInt();
            final int v = in.nextInt();
            union.union(u, v);
        }
        for (int i = 1; i <= n; i++) {
            final int root = union.findRoot(i);
            if (union.linkCounts[root] != union.nodeCounts[root]) {
                System.out.println(""No"");
                return;
            }
        }
        System.out.println(""Yes"");
    }
}
","import java.io.BufferedInputStream;
import java.util.Arrays;
import java.util.Scanner;

public class Main {

    static class Union {
        private final int[] root;
        private final int[] linkCounts;
        private final int[] nodeCounts;

        Union(int n) {
            root = new int[n + 1];
            linkCounts = new int[n + 1];
            nodeCounts = new int[n + 1];
            for (int i = 0; i < n + 1; i++) {
                root[i] = i;
                nodeCounts[i] = 1;
            }
        }

        public int union(int a, int b) {
            final int ra = findRoot(a);
            final int rb = findRoot(b);
            if (ra != rb) {
                root[rb] = ra;
                nodeCounts[ra] += nodeCounts[rb];
                linkCounts[ra] += linkCounts[rb];
            }
            linkCounts[ra] += 1;
            return rb;
        }

        private int findRoot(int a) {
            int root = this.root[a];
            if (root != a) {
                root = findRoot(this.root[a]);
                this.root[a] = root;
            }
            return root;
        }

        @Override
        public String toString() {
            final StringBuilder sb = new StringBuilder(""Union{"");
            sb.append(""root="").append(Arrays.toString(root));
            sb.append("", linkCounts="").append(Arrays.toString(linkCounts));
            sb.append("", nodeCounts="").append(Arrays.toString(nodeCounts));
            sb.append('}');
            return sb.toString();
        }
    }

    public static void main(String[] args) {
        final Scanner in = new Scanner(new BufferedInputStream(System.in));
        final int n = in.nextInt();
        final int m = in.nextInt();
        if (m == 0) {
            System.out.println(""No"");
            return;
        }
        final Union union = new Union(n);
        for (int i = 0; i < m; i++) {
            final int u = in.nextInt();
            final int v = in.nextInt();
            union.union(u, v);
        }
        for (int i = 1; i <= n; i++) {
            final int root = union.findRoot(i);
            if (union.linkCounts[root] != union.nodeCounts[root]) {
                System.out.println(""No"");
                return;
            }
        }
        System.out.println(""Yes"");
    }
}
",WA
kojiji ,abc292/D,Java,"import java.io.BufferedInputStream;
import java.util.Arrays;
import java.util.Scanner;

public class Main {

    static class Union {
        private final int[] root;
        private final int[] linkCounts;
        private final int[] nodeCounts;

        Union(int n) {
            root = new int[n + 1];
            linkCounts = new int[n + 1];
            nodeCounts = new int[n + 1];
            for (int i = 0; i < n + 1; i++) {
                root[i] = i;
                nodeCounts[i] = 1;
            }
        }

        public int union(int a, int b) {
            final int ra = findRoot(a);
            final int rb = findRoot(b);
            if (ra != rb) {
                root[b] = ra;
                nodeCounts[ra] += nodeCounts[rb];
            }
            linkCounts[ra] += 1;
            return rb;
        }

        private int findRoot(int a) {
            int root = this.root[a];
            if (root != a) {
                root = findRoot(this.root[a]);
                this.root[a] = root;
            }
            return root;
        }

        @Override
        public String toString() {
            final StringBuilder sb = new StringBuilder(""Union{"");
            sb.append(""root="").append(Arrays.toString(root));
            sb.append("", linkCounts="").append(Arrays.toString(linkCounts));
            sb.append("", nodeCounts="").append(Arrays.toString(nodeCounts));
            sb.append('}');
            return sb.toString();
        }
    }

    public static void main(String[] args) {
        final Scanner in = new Scanner(new BufferedInputStream(System.in));
        final int n = in.nextInt();
        final int m = in.nextInt();
        if (m == 0) {
            System.out.println(""No"");
            return;
        }
        final Union union = new Union(n);
        for (int i = 0; i < m; i++) {
            final int u = in.nextInt();
            final int v = in.nextInt();
            union.union(u, v);
        }
        for (int i = 1; i <= m; i++) {
            final int root = union.findRoot(i);
            if (union.linkCounts[root] != union.nodeCounts[root]) {
                System.out.println(""No"");
                return;
            }
        }
        System.out.println(""Yes"");
    }
}
","import java.io.BufferedInputStream;
import java.util.Arrays;
import java.util.Scanner;

public class Main {

    static class Union {
        private final int[] root;
        private final int[] linkCounts;
        private final int[] nodeCounts;

        Union(int n) {
            root = new int[n + 1];
            linkCounts = new int[n + 1];
            nodeCounts = new int[n + 1];
            for (int i = 0; i < n + 1; i++) {
                root[i] = i;
                nodeCounts[i] = 1;
            }
        }

        public int union(int a, int b) {
            final int ra = findRoot(a);
            final int rb = findRoot(b);
            if (ra != rb) {
                root[rb] = ra;
                nodeCounts[ra] += nodeCounts[rb];
                linkCounts[ra] += linkCounts[rb];
            }
            linkCounts[ra] += 1;
            return rb;
        }

        private int findRoot(int a) {
            int root = this.root[a];
            if (root != a) {
                root = findRoot(this.root[a]);
                this.root[a] = root;
            }
            return root;
        }

        @Override
        public String toString() {
            final StringBuilder sb = new StringBuilder(""Union{"");
            sb.append(""root="").append(Arrays.toString(root));
            sb.append("", linkCounts="").append(Arrays.toString(linkCounts));
            sb.append("", nodeCounts="").append(Arrays.toString(nodeCounts));
            sb.append('}');
            return sb.toString();
        }
    }

    public static void main(String[] args) {
        final Scanner in = new Scanner(new BufferedInputStream(System.in));
        final int n = in.nextInt();
        final int m = in.nextInt();
        if (m == 0) {
            System.out.println(""No"");
            return;
        }
        final Union union = new Union(n);
        for (int i = 0; i < m; i++) {
            final int u = in.nextInt();
            final int v = in.nextInt();
            union.union(u, v);
        }
        for (int i = 1; i <= n; i++) {
            final int root = union.findRoot(i);
            if (union.linkCounts[root] != union.nodeCounts[root]) {
                System.out.println(""No"");
                return;
            }
        }
        System.out.println(""Yes"");
    }
}
",WA
sca1l ,abc292/D,Java,"import java.util.*;
import java.io.*;


class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = Integer.parseInt(sc.next());
        int m = Integer.parseInt(sc.next());
        int[] u = new int[m];
        int[] v = new int[m];
        
        UnionFind uf = new UnionFind(n);
        
        for(int i=0; i<m; i++){
            u[i] = Integer.parseInt(sc.next())-1;
            v[i] = Integer.parseInt(sc.next())-1;
            uf.unite(u[i], v[i]);
        }
        
        int[] a = new int[n];
        for(int i=0; i<m; i++){
            int par = uf.find(u[i]);
            a[par]++;
        }
        
        boolean ans = true;
        for(int i=0; i<m; i++){
            int par = uf.find(u[i]);
            int size = uf.size(u[i]);
            if(a[par] != size){
                ans = false;
            }
        }
        System.out.println(ans?""Yes"":""No"");
    }
}

class UnionFind{
    int n;
    int[] par;
    int[] size;
    
    public UnionFind(int n){
        this.n = n;
        par = new int[n];
        for(int i=0; i<n; i++){
            par[i] = i;
        }
        size = new int[n];
        Arrays.fill(size, 1);
    }
    
    public int find(int x){
        if(par[x] == x){
            return x;
        }else{
            par[x] = find(par[x]);
            return par[x];
        }
    }
    
    public boolean unite(int x, int y){
        x = find(x);
        y = find(y);
        if(x==y) return false;
        
        if(size[x]<size[y]){
            int tmp = x;
            x = y;
            y = tmp;
        }
        size[x] += size[y];
        par[y] = x;
        return true;
    }
    
    public boolean same(int x, int y){
        return find(x)==find(y);
    }
    
    public int size(int x){
        return size[find(x)];
    }
    
    public int groupCount(){
        Set<Integer> s = new HashSet<>();
        for(int i=0; i<n; i++){
            s.add(this.find(i));
        }
        return s.size();
    }
}
","import java.util.*;
import java.io.*;


class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = Integer.parseInt(sc.next());
        int m = Integer.parseInt(sc.next());
        int[] u = new int[m];
        int[] v = new int[m];
        
        UnionFind uf = new UnionFind(n);
        
        for(int i=0; i<m; i++){
            u[i] = Integer.parseInt(sc.next())-1;
            v[i] = Integer.parseInt(sc.next())-1;
            uf.unite(u[i], v[i]);
        }
        
        int[] a = new int[n];
        for(int i=0; i<m; i++){
            int par = uf.find(u[i]);
            a[par]++;
        }
        
        boolean ans = true;
        for(int i=0; i<n; i++){
            int par = uf.find(i);
            int size = uf.size(i);
            if(a[par] != size){
                ans = false;
            }
        }
        
        System.out.println(ans?""Yes"":""No"");
    }
}

class UnionFind{
    int n;
    int[] par;
    int[] size;
    
    public UnionFind(int n){
        this.n = n;
        par = new int[n];
        for(int i=0; i<n; i++){
            par[i] = i;
        }
        size = new int[n];
        Arrays.fill(size, 1);
    }
    
    public int find(int x){
        if(par[x] == x){
            return x;
        }else{
            par[x] = find(par[x]);
            return par[x];
        }
    }
    
    public boolean unite(int x, int y){
        x = find(x);
        y = find(y);
        if(x==y) return false;
        
        if(size[x]<size[y]){
            int tmp = x;
            x = y;
            y = tmp;
        }
        size[x] += size[y];
        par[y] = x;
        return true;
    }
    
    public boolean same(int x, int y){
        return find(x)==find(y);
    }
    
    public int size(int x){
        return size[find(x)];
    }
    
    public int groupCount(){
        Set<Integer> s = new HashSet<>();
        for(int i=0; i<n; i++){
            s.add(this.find(i));
        }
        return s.size();
    }
}
",WA
Erdos ,abc292/D,Java,"package tutorial1;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.Map;
import java.util.Queue;
import java.util.Set;
import java.util.StringTokenizer;

public class atcoder {
	public static class fastreader
    {
   	 BufferedReader br;
   	 StringTokenizer st;
   	 public fastreader() {
			br=new BufferedReader(new InputStreamReader(System.in));
			st=new StringTokenizer("" "");
			}
   	 public String read()
   	 {
   		 while((st==null)||(!st.hasMoreElements()))
   				 {
   			       try {
							st=new StringTokenizer(br.readLine());
						} 
   			       catch (IOException e) {
						   e.printStackTrace();
   			       }
						}
   			       return st.nextToken();
   				 }
   	 public int nextInt()
   	 {
   		 return Integer.parseInt(read());
   	 }
   	 public long nextLong()
   	 {
   	   return Long.parseLong(read());
   	 }
   	 public double nextDouble()
   	 {
   		return  Double.parseDouble(read());
   	 }
   	 public String readLine()
   	 {
   		 String s="" "";
   		 try {
   			 s=br.readLine();
   		 }
   		 catch(IOException e)
   		 {
   			 e.printStackTrace();
   		 }
   		 return s;
   	 }
   }
	
	public static class graph{
		HashMap<Integer,ArrayList<Integer>>  adjlist;
		HashMap<Integer,ArrayList<Integer>>  components;
		public graph() {
		 adjlist=new HashMap<>();
		 components=new HashMap<>();
		}
		public void addEdge(Integer src)
		{
			adjlist.put(src,new ArrayList<>());
		}
		public void addEdge(Integer src,Integer dest)
		{
			if(adjlist.containsKey(src))
				adjlist.get(src).add(dest);
			else 
			{
				adjlist.put(src,new ArrayList<>());
				adjlist.get(src).add(dest);
			}
		}
		public  Set<Integer> bfs(Integer source)
		{
	      Queue<Integer> queue=new LinkedList<>();
	      Set<Integer> visited=new HashSet<>();
	      visited.add(source);
	      queue.add(source);
	      int totvertex=0;
	      int totedges=0;
	      while(!queue.isEmpty())
	      {
	    	 totvertex++;
	    	 Integer vertex=queue.poll();
	    	 totedges+=adjlist.get(vertex).size();
	        	  if(adjlist.get(vertex)!=null) {
	        	 for(Integer ele:adjlist.get(vertex)) {
	        		 if(!visited.contains(ele))
	        		 queue.offer(ele);
	        		 visited.add(ele);
	        	 }
	        	
	          }
		}
	      components.put(source,new ArrayList());
	      components.get(source).add(totvertex);
	      components.get(source).add(totedges/2);
	      return visited;
	}
		 public void showall()
		 {
			  for(Integer ele:adjlist.keySet())
			  {
				  System.out.print(""vertex""+"" ""+ele+"" "");
					   for(Integer e:adjlist.get(ele))
						   System.out.print(e+"" "");
				   System.out.println();
			  }
		 }
		 public boolean unicyclic()
		 {
			boolean valid=true;
			int size=components.keySet().size();
		    int[][] comp=new int[size][2];
		    int i=0;
		    for(Integer ele:components.keySet())
		    {
		      comp[i][0]=components.get(ele).get(0);
		      comp[i++][1]=components.get(ele).get(1);
		    }
		    	for(i=0;i<size;++i)
		    	{
		    	   if(comp[i][0]==comp[i][1])
		    		   continue;
		    	   else { valid=false; break;}
		    	}
		    return valid;
		 }
	}
	public static void main(String[] args) {
		int n,m;
	fastreader fr=new fastreader();
	n=fr.nextInt();
	m=fr.nextInt();
	int src,dest;
	graph g=new graph();
	boolean[] vertexset=new boolean[n];
	Arrays.fill(vertexset,false);
	for(int i=0;i<m;++i)
	{
	 	src=fr.nextInt();
	 	dest=fr.nextInt();
	 	g.addEdge(src,dest);
	 	g.addEdge(dest,src);
	}
	for(int i=1;i<=n;++i)
	{
		if(!g.adjlist.keySet().contains(i))
          g.addEdge(i);
	}
	
    for(int i=0;i<n;++i)
    {
    	if(!vertexset[i]) {
    		Set<Integer> s=g.bfs(i+1);
    		
    	   for(int ele:s) {
    		   vertexset[ele-1]=true;
    	   }
    	}
    }
 
    if(g.unicyclic())
    	System.out.println(""Yes"");
    else System.out.println(""No"");
    
}
}

","
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.Map;
import java.util.Queue;
import java.util.Set;
import java.util.StringTokenizer;

public class Main {
	public static class fastreader
    {
   	 BufferedReader br;
   	 StringTokenizer st;
   	 public fastreader() {
			br=new BufferedReader(new InputStreamReader(System.in));
			st=new StringTokenizer("" "");
			}
   	 public String read()
   	 {
   		 while((st==null)||(!st.hasMoreElements()))
   				 {
   			       try {
							st=new StringTokenizer(br.readLine());
						} 
   			       catch (IOException e) {
						   e.printStackTrace();
   			       }
						}
   			       return st.nextToken();
   				 }
   	 public int nextInt()
   	 {
   		 return Integer.parseInt(read());
   	 }
   	 public long nextLong()
   	 {
   	   return Long.parseLong(read());
   	 }
   	 public double nextDouble()
   	 {
   		return  Double.parseDouble(read());
   	 }
   	 public String readLine()
   	 {
   		 String s="" "";
   		 try {
   			 s=br.readLine();
   		 }
   		 catch(IOException e)
   		 {
   			 e.printStackTrace();
   		 }
   		 return s;
   	 }
   }
	
	public static class graph{
		HashMap<Integer,ArrayList<Integer>>  adjlist;
		HashMap<Integer,ArrayList<Integer>>  components;
		public graph() {
		 adjlist=new HashMap<>();
		 components=new HashMap<>();
		}
		public void addEdge(Integer src)
		{
			adjlist.put(src,new ArrayList<>());
		}
		public void addEdge(Integer src,Integer dest)
		{
			if(adjlist.containsKey(src))
				adjlist.get(src).add(dest);
			else 
			{
				adjlist.put(src,new ArrayList<>());
				adjlist.get(src).add(dest);
			}
		}
		public  Set<Integer> bfs(Integer source)
		{
	      Queue<Integer> queue=new LinkedList<>();
	      Set<Integer> visited=new HashSet<>();
	      visited.add(source);
	      queue.add(source);
	      int totvertex=0;
	      int totedges=0;
	      while(!queue.isEmpty())
	      {
	    	 totvertex++;
	    	 Integer vertex=queue.poll();
	    	 totedges+=adjlist.get(vertex).size();
	        	  if(adjlist.get(vertex)!=null) {
	        	 for(Integer ele:adjlist.get(vertex)) {
	        		 if(!visited.contains(ele))
	        		 queue.offer(ele);
	        		 visited.add(ele);
	        	 }
	        	
	          }
		}
	      components.put(source,new ArrayList());
	      components.get(source).add(totvertex);
	      components.get(source).add(totedges/2);
	      return visited;
	}
		 public void showall()
		 {
			  for(Integer ele:adjlist.keySet())
			  {
				  System.out.print(""vertex""+"" ""+ele+"" "");
					   for(Integer e:adjlist.get(ele))
						   System.out.print(e+"" "");
				   System.out.println();
			  }
		 }
		 public boolean unicyclic()
		 {
			boolean valid=true;
			int size=components.keySet().size();
		    int[][] comp=new int[size][2];
		    int i=0;
		    for(Integer ele:components.keySet())
		    {
		      comp[i][0]=components.get(ele).get(0);
		      comp[i++][1]=components.get(ele).get(1);
		    }
		    	for(i=0;i<size;++i)
		    	{
		    	   if(comp[i][0]==comp[i][1])
		    		   continue;
		    	   else { valid=false; break;}
		    	}
		    return valid;
		 }
	}
	public static void main(String[] args) {
		int n,m;
	fastreader fr=new fastreader();
	n=fr.nextInt();
	m=fr.nextInt();
	int src,dest;
	graph g=new graph();
	boolean[] vertexset=new boolean[n];
	Arrays.fill(vertexset,false);
	for(int i=0;i<m;++i)
	{
	 	src=fr.nextInt();
	 	dest=fr.nextInt();
	 	g.addEdge(src,dest);
	 	g.addEdge(dest,src);
	}
	for(int i=1;i<=n;++i)
	{
		if(!g.adjlist.keySet().contains(i))
          g.addEdge(i);
	}
	
    for(int i=0;i<n;++i)
    {
    	if(!vertexset[i]) {
    		Set<Integer> s=g.bfs(i+1);
    		
    	   for(int ele:s) {
    		   vertexset[ele-1]=true;
    	   }
    	}
    }
 
    if(g.unicyclic())
    	System.out.println(""Yes"");
    else System.out.println(""No"");
    
}
}

",CE
Erdos ,abc292/D,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.Map;
import java.util.Queue;
import java.util.Set;
import java.util.StringTokenizer;

public class Main {
	public static class fastreader
    {
   	 BufferedReader br;
   	 StringTokenizer st;
   	 public fastreader() {
			br=new BufferedReader(new InputStreamReader(System.in));
			st=new StringTokenizer("" "");
			}
   	 public String read()
   	 {
   		 while((st==null)||(!st.hasMoreElements()))
   				 {
   			       try {
							st=new StringTokenizer(br.readLine());
						} 
   			       catch (IOException e) {
						   e.printStackTrace();
   			       }
						}
   			       return st.nextToken();
   				 }
   	 public int nextInt()
   	 {
   		 return Integer.parseInt(read());
   	 }
   	 public long nextLong()
   	 {
   	   return Long.parseLong(read());
   	 }
   	 public double nextDouble()
   	 {
   		return  Double.parseDouble(read());
   	 }
   	 public String readLine()
   	 {
   		 String s="" "";
   		 try {
   			 s=br.readLine();
   		 }
   		 catch(IOException e)
   		 {
   			 e.printStackTrace();
   		 }
   		 return s;
   	 }
   }
	
	public static class graph{
		HashMap<Integer,ArrayList<Integer>>  adjlist;
		HashMap<Integer,ArrayList<Integer>>  components;
		public graph() {
		 adjlist=new HashMap<>();
		 components=new HashMap<>();
		}
		public void addEdge(Integer src)
		{
			adjlist.put(src,new ArrayList<>());
		}
		public void addEdge(Integer src,Integer dest)
		{
			if(adjlist.containsKey(src))
				adjlist.get(src).add(dest);
			else 
			{
				adjlist.put(src,new ArrayList<>());
				adjlist.get(src).add(dest);
			}
		}
		public  Set<Integer> bfs(Integer source)
		{
	      Queue<Integer> queue=new LinkedList<>();
	      Set<Integer> visited=new HashSet<>();
	      visited.add(source);
	      queue.add(source);
	      int totvertex=0;
	      int totedges=0;
	      while(!queue.isEmpty())
	      {
	    	 totvertex++;
	    	 Integer vertex=queue.poll();
	    	 totedges+=adjlist.get(vertex).size();
	        	  if(adjlist.get(vertex)!=null) {
	        	 for(Integer ele:adjlist.get(vertex)) {
	        		 if(!visited.contains(ele))
	        		 queue.offer(ele);
	        		 visited.add(ele);
	        	 }
	        	
	          }
		}
	      components.put(source,new ArrayList());
	      components.get(source).add(totvertex);
	      components.get(source).add(totedges/2);
	      return visited;
	}
		 public void showall()
		 {
			  for(Integer ele:adjlist.keySet())
			  {
				  System.out.print(""vertex""+"" ""+ele+"" "");
					   for(Integer e:adjlist.get(ele))
						   System.out.print(e+"" "");
				   System.out.println();
			  }
		 }
		 public boolean unicyclic()
		 {
			boolean valid=true;
			int size=components.keySet().size();
		    int[][] comp=new int[size][2];
		    int i=0;
		    for(Integer ele:components.keySet())
		    {
		      comp[i][0]=components.get(ele).get(0);
		      comp[i++][1]=components.get(ele).get(1);
		    }
		    if(size>1) {
		    	for(i=0;i<size;++i)
		    	{
		    	   if(comp[i][0]==comp[i][1])
		    		   continue;
		    	   else { valid=false; break;}
		    	}
		    }
		    return valid;
		 }
	}
	public static void main(String[] args) {
		int n,m;
	fastreader fr=new fastreader();
	n=fr.nextInt();
	m=fr.nextInt();
	int src,dest;
	graph g=new graph();
	boolean[] vertexset=new boolean[n];
	Arrays.fill(vertexset,false);
	for(int i=0;i<m;++i)
	{
	 	src=fr.nextInt();
	 	dest=fr.nextInt();
	 	g.addEdge(src,dest);
	 	g.addEdge(dest,src);
	}
	for(int i=1;i<=n;++i)
	{
		if(!g.adjlist.keySet().contains(i))
          g.addEdge(i);
	}
	
    for(int i=0;i<n;++i)
    {
    	if(!vertexset[i]) {
    		Set<Integer> s=g.bfs(i+1);
    		
    	   for(int ele:s) {
    		   vertexset[ele-1]=true;
    	   }
    	}
    }
   
   
   
    if(g.unicyclic())
    	System.out.println(""Yes"");
    else System.out.println(""No"");
    
}
}

","
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.Map;
import java.util.Queue;
import java.util.Set;
import java.util.StringTokenizer;

public class Main {
	public static class fastreader
    {
   	 BufferedReader br;
   	 StringTokenizer st;
   	 public fastreader() {
			br=new BufferedReader(new InputStreamReader(System.in));
			st=new StringTokenizer("" "");
			}
   	 public String read()
   	 {
   		 while((st==null)||(!st.hasMoreElements()))
   				 {
   			       try {
							st=new StringTokenizer(br.readLine());
						} 
   			       catch (IOException e) {
						   e.printStackTrace();
   			       }
						}
   			       return st.nextToken();
   				 }
   	 public int nextInt()
   	 {
   		 return Integer.parseInt(read());
   	 }
   	 public long nextLong()
   	 {
   	   return Long.parseLong(read());
   	 }
   	 public double nextDouble()
   	 {
   		return  Double.parseDouble(read());
   	 }
   	 public String readLine()
   	 {
   		 String s="" "";
   		 try {
   			 s=br.readLine();
   		 }
   		 catch(IOException e)
   		 {
   			 e.printStackTrace();
   		 }
   		 return s;
   	 }
   }
	
	public static class graph{
		HashMap<Integer,ArrayList<Integer>>  adjlist;
		HashMap<Integer,ArrayList<Integer>>  components;
		public graph() {
		 adjlist=new HashMap<>();
		 components=new HashMap<>();
		}
		public void addEdge(Integer src)
		{
			adjlist.put(src,new ArrayList<>());
		}
		public void addEdge(Integer src,Integer dest)
		{
			if(adjlist.containsKey(src))
				adjlist.get(src).add(dest);
			else 
			{
				adjlist.put(src,new ArrayList<>());
				adjlist.get(src).add(dest);
			}
		}
		public  Set<Integer> bfs(Integer source)
		{
	      Queue<Integer> queue=new LinkedList<>();
	      Set<Integer> visited=new HashSet<>();
	      visited.add(source);
	      queue.add(source);
	      int totvertex=0;
	      int totedges=0;
	      while(!queue.isEmpty())
	      {
	    	 totvertex++;
	    	 Integer vertex=queue.poll();
	    	 totedges+=adjlist.get(vertex).size();
	        	  if(adjlist.get(vertex)!=null) {
	        	 for(Integer ele:adjlist.get(vertex)) {
	        		 if(!visited.contains(ele))
	        		 queue.offer(ele);
	        		 visited.add(ele);
	        	 }
	        	
	          }
		}
	      components.put(source,new ArrayList());
	      components.get(source).add(totvertex);
	      components.get(source).add(totedges/2);
	      return visited;
	}
		 public void showall()
		 {
			  for(Integer ele:adjlist.keySet())
			  {
				  System.out.print(""vertex""+"" ""+ele+"" "");
					   for(Integer e:adjlist.get(ele))
						   System.out.print(e+"" "");
				   System.out.println();
			  }
		 }
		 public boolean unicyclic()
		 {
			boolean valid=true;
			int size=components.keySet().size();
		    int[][] comp=new int[size][2];
		    int i=0;
		    for(Integer ele:components.keySet())
		    {
		      comp[i][0]=components.get(ele).get(0);
		      comp[i++][1]=components.get(ele).get(1);
		    }
		    	for(i=0;i<size;++i)
		    	{
		    	   if(comp[i][0]==comp[i][1])
		    		   continue;
		    	   else { valid=false; break;}
		    	}
		    return valid;
		 }
	}
	public static void main(String[] args) {
		int n,m;
	fastreader fr=new fastreader();
	n=fr.nextInt();
	m=fr.nextInt();
	int src,dest;
	graph g=new graph();
	boolean[] vertexset=new boolean[n];
	Arrays.fill(vertexset,false);
	for(int i=0;i<m;++i)
	{
	 	src=fr.nextInt();
	 	dest=fr.nextInt();
	 	g.addEdge(src,dest);
	 	g.addEdge(dest,src);
	}
	for(int i=1;i<=n;++i)
	{
		if(!g.adjlist.keySet().contains(i))
          g.addEdge(i);
	}
	
    for(int i=0;i<n;++i)
    {
    	if(!vertexset[i]) {
    		Set<Integer> s=g.bfs(i+1);
    		
    	   for(int ele:s) {
    		   vertexset[ele-1]=true;
    	   }
    	}
    }
 
    if(g.unicyclic())
    	System.out.println(""Yes"");
    else System.out.println(""No"");
    
}
}

",WA
ko1ynnky ,abc292/D,Java,"import java.util.LinkedHashMap;
import java.util.Scanner;
import java.util.TreeSet;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		int N = sc.nextInt();
		int M = sc.nextInt();
		int[] U = new int[M];
		int[] V = new int[M];

		UnionFindTree tree = new UnionFindTree(N + 1);

		for (int i = 0; i < M; i++) {
			int u = sc.nextInt();
			int v = sc.nextInt();
			U[i] = u;
			V[i] = v;
			tree.union(u, v);
		}
		LinkedHashMap<Integer, TreeSet<Integer>> nodeNumberMap = new LinkedHashMap<Integer, TreeSet<Integer>>();
		LinkedHashMap<Integer, Integer> edgeNumberMap = new LinkedHashMap<Integer, Integer>();
		for (int i = 0; i < M; i++) {
			int u = U[i];
			int v = V[i];
			int parent = tree.find(u);
			if (nodeNumberMap.containsKey(parent)) {
				nodeNumberMap.get(parent).add(u);
				nodeNumberMap.get(parent).add(v);
			} else {
				TreeSet<Integer> set = new TreeSet<Integer>();
				set.add(u);
				set.add(v);
				nodeNumberMap.put(parent, set);
			}
			if (edgeNumberMap.containsKey(parent)) {
				edgeNumberMap.put(parent, edgeNumberMap.get(parent) + 1);
			} else {
				edgeNumberMap.put(parent, 1);
			}
		}
		boolean flg = true;
		for (int i : nodeNumberMap.keySet()) {
			int nodeNum = nodeNumberMap.get(i).size();
			int edgeNum = edgeNumberMap.get(i);
			if (nodeNum != edgeNum) {
				flg = false;
				break;
			}
		}
		if (flg && nodeNumberMap.keySet().size() == edgeNumberMap.keySet().size()) {
			System.out.println(""Yes"");
		} else {
			System.out.println(""No"");
		}
	}
}

class UnionFindTree {

	int[] parent; 
	int[] rank; 

	public UnionFindTree(int size) {
		this.parent = new int[size];
		this.rank = new int[size];

		for (int i = 0; i < size; i++) {
			makeSet(i);
		}
	}

	public void makeSet(int i) {
		parent[i] = i;
		rank[i] = 0; 
	}

	public void union(int x, int y) {
		int xRoot = find(x);
		int yRoot = find(y);

		
		if (rank[xRoot] > rank[yRoot]) {
			parent[yRoot] = xRoot; 

		} else if (rank[xRoot] < rank[yRoot]) {
			parent[xRoot] = yRoot;

		} else if (xRoot != yRoot) {
			parent[yRoot] = xRoot;
			rank[xRoot]++; 
		}
	}

	
	public int find(int i) {
		if (i != parent[i]) {
			parent[i] = find(parent[i]);
		}
		return parent[i];
	}

	
	public boolean same(int x, int y) {
		return find(x) == find(y);
	}
}
","import java.util.LinkedHashMap;
import java.util.Scanner;
import java.util.TreeSet;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		int N = sc.nextInt();
		int M = sc.nextInt();
		int[] U = new int[M];
		int[] V = new int[M];

		UnionFindTree tree = new UnionFindTree(N + 1);

		for (int i = 0; i < M; i++) {
			int u = sc.nextInt();
			int v = sc.nextInt();
			U[i] = u;
			V[i] = v;
			tree.union(u, v);
		}
		LinkedHashMap<Integer, TreeSet<Integer>> nodeNumberMap = new LinkedHashMap<Integer, TreeSet<Integer>>();
		LinkedHashMap<Integer, Integer> edgeNumberMap = new LinkedHashMap<Integer, Integer>();
		for (int i = 0; i < M; i++) {
			int u = U[i];
			int v = V[i];
			int parent = tree.find(u);
			if (nodeNumberMap.containsKey(parent)) {
				nodeNumberMap.get(parent).add(u);
				nodeNumberMap.get(parent).add(v);
			} else {
				TreeSet<Integer> set = new TreeSet<Integer>();
				set.add(u);
				set.add(v);
				nodeNumberMap.put(parent, set);
			}
			if (edgeNumberMap.containsKey(parent)) {
				edgeNumberMap.put(parent, edgeNumberMap.get(parent) + 1);
			} else {
				edgeNumberMap.put(parent, 1);
			}
		}
		boolean flg = true;
		for (int i : nodeNumberMap.keySet()) {
			int nodeNum = nodeNumberMap.get(i).size();
			int edgeNum = edgeNumberMap.get(i);
			if (nodeNum != edgeNum) {
				flg = false;
				break;
			}
		}
		if (M > 0 && flg && nodeNumberMap.keySet().size() == edgeNumberMap.keySet().size()) {
			System.out.println(""Yes"");
		} else {
			System.out.println(""No"");
		}
	}
}

class UnionFindTree {

	int[] parent; 
	int[] rank; 

	public UnionFindTree(int size) {
		this.parent = new int[size];
		this.rank = new int[size];

		for (int i = 0; i < size; i++) {
			makeSet(i);
		}
	}

	public void makeSet(int i) {
		parent[i] = i;
		rank[i] = 0; 
	}

	public void union(int x, int y) {
		int xRoot = find(x);
		int yRoot = find(y);

		
		if (rank[xRoot] > rank[yRoot]) {
			parent[yRoot] = xRoot; 

		} else if (rank[xRoot] < rank[yRoot]) {
			parent[xRoot] = yRoot;

		} else if (xRoot != yRoot) {
			parent[yRoot] = xRoot;
			rank[xRoot]++; 
		}
	}

	
	public int find(int i) {
		if (i != parent[i]) {
			parent[i] = find(parent[i]);
		}
		return parent[i];
	}

	
	public boolean same(int x, int y) {
		return find(x) == find(y);
	}
}
",WA
TGSR ,abc298/C,Java,"import java.io.*;
import java.util.*;
import java.util.stream.Collectors;

public class Main {

  static BufferedReader br;

  public static void main(String[] args) {
    br = new BufferedReader(new InputStreamReader(System.in));
    try {
      br = new BufferedReader(new FileReader(""input.txt""));
    } catch (Exception e) {}

    int N = readInt();
    int Q = readInt();
    int[][] query = readMultiIntArray(Q);
    ArrayList<ArrayList<Integer>> box = new ArrayList<>(N + 1);
    ArrayList<HashSet<Integer>> card = new ArrayList<>(200001);
    for (int i = 0; i < N + 1; i++) {
      box.add(new ArrayList<>());
    }
    for (int i = 0; i < 200001; i++) {
      card.add(new HashSet<>());
    }
    for (int[] i : query) {
      if (i[0] == 1) {
        box.get(i[2]).add(i[1]);
        card.get(i[1]).add(i[2]);
      }
      if (i[0] == 2) {
        Collections.sort(box.get(i[1]), null);
        System.out.println(
          box
            .get(i[1])
            .stream()
            .map(Object::toString)
            .collect(Collectors.joining("" ""))
        );
      }
      if (i[0] == 3) {
        List<Integer> list = new ArrayList<>(card.get(i[1]));
        Collections.sort(list);
        System.out.println(
          card
            .get(i[1])
            .stream()
            .map(Object::toString)
            .collect(Collectors.joining("" ""))
        );
      }
    }

    try {
      br.close();
    } catch (IOException e) {
      e.printStackTrace();
    }
  }

  public static int[][] rotate90(int[][] matrix) {
    
    int n = matrix.length;
    int[][] rotated = new int[n][n];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        rotated[j][n - i - 1] = matrix[i][j];
      }
    }
    return rotated;
  }

  public static boolean check(int[][] A, int[][] B) {
    
    int n = A[0].length;
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (A[i][j] == 1) {
          if (B[i][j] == 0) {
            return false;
          }
        }
      }
    }
    return true;
  }

  public static int[] readIntArray() {
    
    int[] array = null;
    try {
      array =
        Arrays
          .stream(br.readLine().split("" ""))
          .mapToInt(Integer::parseInt)
          .toArray();
    } catch (IOException ex) {}
    return array;
  }

  public static int[][] readMultiIntArray(int num) {
    
    int[][] array = new int[num][];
    for (int i = 0; i < num; i++) {
      array[i] = readIntArray();
    }
    return array;
  }

  public static String[] readStringArray() {
    
    String[] array = null;
    try {
      array = br.readLine().split("" "");
    } catch (IOException ex) {}
    return array;
  }

  public static int readInt() {
    
    int num = 0;
    try {
      num = Integer.parseInt(br.readLine());
    } catch (IOException ex) {}
    return num;
  }

  public static String readString() {
    
    String str = null;
    try {
      str = br.readLine();
    } catch (IOException ex) {}
    return str;
  }
}
","import java.io.*;
import java.util.*;
import java.util.stream.Collectors;

public class Main {

  static BufferedReader br;

  public static void main(String[] args) {
    br = new BufferedReader(new InputStreamReader(System.in));
    try {
      br = new BufferedReader(new FileReader(""input.txt""));
    } catch (Exception e) {}

    int N = readInt();
    int Q = readInt();
    int[][] query = readMultiIntArray(Q);
    ArrayList<ArrayList<Integer>> box = new ArrayList<>(N + 1);
    ArrayList<HashSet<Integer>> card = new ArrayList<>(200001);
    for (int i = 0; i < N + 1; i++) {
      box.add(new ArrayList<>());
    }
    for (int i = 0; i < 200001; i++) {
      card.add(new HashSet<>());
    }
    for (int[] i : query) {
      if (i[0] == 1) {
        box.get(i[2]).add(i[1]);
        card.get(i[1]).add(i[2]);
      }
      if (i[0] == 2) {
        Collections.sort(box.get(i[1]), null);
        System.out.println(
          box
            .get(i[1])
            .stream()
            .map(Object::toString)
            .collect(Collectors.joining("" ""))
        );
      }
      if (i[0] == 3) {
        List<Integer> list = new ArrayList<>(card.get(i[1]));
        Collections.sort(list);
        System.out.println(
          list.stream().map(Object::toString).collect(Collectors.joining("" ""))
        );
      }
    }

    try {
      br.close();
    } catch (IOException e) {
      e.printStackTrace();
    }
  }

  public static int[][] rotate90(int[][] matrix) {
    
    int n = matrix.length;
    int[][] rotated = new int[n][n];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        rotated[j][n - i - 1] = matrix[i][j];
      }
    }
    return rotated;
  }

  public static boolean check(int[][] A, int[][] B) {
    
    int n = A[0].length;
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (A[i][j] == 1) {
          if (B[i][j] == 0) {
            return false;
          }
        }
      }
    }
    return true;
  }

  public static int[] readIntArray() {
    
    int[] array = null;
    try {
      array =
        Arrays
          .stream(br.readLine().split("" ""))
          .mapToInt(Integer::parseInt)
          .toArray();
    } catch (IOException ex) {}
    return array;
  }

  public static int[][] readMultiIntArray(int num) {
    
    int[][] array = new int[num][];
    for (int i = 0; i < num; i++) {
      array[i] = readIntArray();
    }
    return array;
  }

  public static String[] readStringArray() {
    
    String[] array = null;
    try {
      array = br.readLine().split("" "");
    } catch (IOException ex) {}
    return array;
  }

  public static int readInt() {
    
    int num = 0;
    try {
      num = Integer.parseInt(br.readLine());
    } catch (IOException ex) {}
    return num;
  }

  public static String readString() {
    
    String str = null;
    try {
      str = br.readLine();
    } catch (IOException ex) {}
    return str;
  }
}
",WA
watarimaycry2 ,abc298/C,Java,"import java.util.*; import java.io.*; import java.math.*;
public class Main{
	
	static class InputIterator{
		ArrayList<String> inputLine = new ArrayList<>(1024);
		int index = 0; int max; String read;
		InputIterator(){
			try{
				BufferedReader br = new BufferedReader(new InputStreamReader(System.in, ""UTF-8""));
				while((read = br.readLine()) != null){
					inputLine.addAll(Arrays.asList(read.split("" "")));
				}
			}catch(IOException e){}
			max = inputLine.size();
		}
		boolean hasNext(){return (index < max);}
		String next(){
			if(hasNext()){
				return inputLine.get(index++);
			}else{
				throw new IndexOutOfBoundsException(""There is no more input"");
			}
		}
	}
	static HashMap<Integer, String> CONVSTR = new HashMap<>();
	static InputIterator ii = new InputIterator();
	static PrintWriter out = new PrintWriter(System.out);
	static void flush(){out.flush();}
	static void myout(Object t){out.println(t);}
	static void myerr(Object... t){System.err.print(""debug:"");System.err.println(Arrays.deepToString(t));}
	static String next(){return ii.next();}
	static boolean hasNext(){return ii.hasNext();}
	static int nextInt(){return Integer.parseInt(next());}
	static long nextLong(){return Long.parseLong(next());}
	static double nextDouble(){return Double.parseDouble(next());}
	static ArrayList<String> nextCharArray(){return myconv(next(), 0);}
	static ArrayList<String> nextStrArray(int size){
		ArrayList<String> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(next());
		}
		return ret;
	}
	static ArrayList<Integer> nextIntArray(int size){
		ArrayList<Integer> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(Integer.parseInt(next()));
		}
		return ret;
	}
	static ArrayList<Long> nextLongArray(int size){
		ArrayList<Long> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(Long.parseLong(next()));
		}
		return ret;
	}
	@SuppressWarnings(""unchecked"")
	static String myconv(Object list, int no){
		StringBuilder sb = new StringBuilder("""");
		String joinString = CONVSTR.get(no);
		if(list instanceof String[]){
			return String.join(joinString, (String[])list);
		}else if(list instanceof long[]){
			long[] tmp = (long[])list;
			if(tmp.length == 0){
				return """";
			}
			sb.append(String.valueOf(tmp[0]));
			for(int i = 1; i < tmp.length; i++){
				sb.append(joinString).append(String.valueOf(tmp[i]));
			}
			return sb.toString();
		}else if(list instanceof int[]){
			int[] tmp = (int[])list;
			if(tmp.length == 0){
				return """";
			}
			sb.append(String.valueOf(tmp[0]));
			for(int i = 1; i < tmp.length; i++){
				sb.append(joinString).append(String.valueOf(tmp[i]));
			}
			return sb.toString();
		}else if(list instanceof ArrayList){
			ArrayList tmp = (ArrayList)list;
			if(tmp.size() == 0){
				return """";
			}
			sb.append(tmp.get(0));
			for(int i = 1; i < tmp.size(); i++){
				sb.append(joinString).append(tmp.get(i));
			}
			return sb.toString();
		}else{
			throw new ClassCastException(""Don't join"");
		}
	}
	static ArrayList<String> myconv(String str, int no){
		String splitString = CONVSTR.get(no);
		return new ArrayList<String>(Arrays.asList(str.split(splitString)));
	}
	static ArrayList<String> myconv(String str, String no){
		return new ArrayList<String>(Arrays.asList(str.split(no)));
	}
	public static void main(String[] args){
		CONVSTR.put(8, "" ""); CONVSTR.put(9, ""\n""); CONVSTR.put(0, """");
		solve();flush();
	}
	
	
	static void solve(){
		int N = nextInt();
		int Q = nextInt();
		HashMap<Integer, HashSet<Integer>> map = new HashMap<>();
		ArrayList<ArrayList<Integer>> list = new ArrayList<>();
		for(int i = 1; i <= 200000; i++){
			list.add(new ArrayList<Integer>());
			map.put(i, new HashSet<Integer>());
		}
		for(int i = 0; i < Q; i++){
			int t = nextInt();
			if(t == 1){
				int V = nextInt();
				int U = nextInt();
				map.get(V).add(U);
				list.get(U).add(V);
			}else if(t == 2){
				int V = nextInt();
				ArrayList<Integer> output = list.get(V);
				Collections.sort(output);
				myout(myconv(output, 8));
			}else{
				int V = nextInt();
				ArrayList<Integer> output = new ArrayList<>(map.get(V));
				Collections.sort(output);
				myout(myconv(output, 8));
			}
		}
	}
	



	
}
","import java.util.*; import java.io.*; import java.math.*;
public class Main{
	
	static class InputIterator{
		ArrayList<String> inputLine = new ArrayList<>(1024);
		int index = 0; int max; String read;
		InputIterator(){
			try{
				BufferedReader br = new BufferedReader(new InputStreamReader(System.in, ""UTF-8""));
				while((read = br.readLine()) != null){
					inputLine.addAll(Arrays.asList(read.split("" "")));
				}
			}catch(IOException e){}
			max = inputLine.size();
		}
		boolean hasNext(){return (index < max);}
		String next(){
			if(hasNext()){
				return inputLine.get(index++);
			}else{
				throw new IndexOutOfBoundsException(""There is no more input"");
			}
		}
	}
	static HashMap<Integer, String> CONVSTR = new HashMap<>();
	static InputIterator ii = new InputIterator();
	static PrintWriter out = new PrintWriter(System.out);
	static void flush(){out.flush();}
	static void myout(Object t){out.println(t);}
	static void myerr(Object... t){System.err.print(""debug:"");System.err.println(Arrays.deepToString(t));}
	static String next(){return ii.next();}
	static boolean hasNext(){return ii.hasNext();}
	static int nextInt(){return Integer.parseInt(next());}
	static long nextLong(){return Long.parseLong(next());}
	static double nextDouble(){return Double.parseDouble(next());}
	static ArrayList<String> nextCharArray(){return myconv(next(), 0);}
	static ArrayList<String> nextStrArray(int size){
		ArrayList<String> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(next());
		}
		return ret;
	}
	static ArrayList<Integer> nextIntArray(int size){
		ArrayList<Integer> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(Integer.parseInt(next()));
		}
		return ret;
	}
	static ArrayList<Long> nextLongArray(int size){
		ArrayList<Long> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(Long.parseLong(next()));
		}
		return ret;
	}
	@SuppressWarnings(""unchecked"")
	static String myconv(Object list, int no){
		StringBuilder sb = new StringBuilder("""");
		String joinString = CONVSTR.get(no);
		if(list instanceof String[]){
			return String.join(joinString, (String[])list);
		}else if(list instanceof long[]){
			long[] tmp = (long[])list;
			if(tmp.length == 0){
				return """";
			}
			sb.append(String.valueOf(tmp[0]));
			for(int i = 1; i < tmp.length; i++){
				sb.append(joinString).append(String.valueOf(tmp[i]));
			}
			return sb.toString();
		}else if(list instanceof int[]){
			int[] tmp = (int[])list;
			if(tmp.length == 0){
				return """";
			}
			sb.append(String.valueOf(tmp[0]));
			for(int i = 1; i < tmp.length; i++){
				sb.append(joinString).append(String.valueOf(tmp[i]));
			}
			return sb.toString();
		}else if(list instanceof ArrayList){
			ArrayList tmp = (ArrayList)list;
			if(tmp.size() == 0){
				return """";
			}
			sb.append(tmp.get(0));
			for(int i = 1; i < tmp.size(); i++){
				sb.append(joinString).append(tmp.get(i));
			}
			return sb.toString();
		}else{
			throw new ClassCastException(""Don't join"");
		}
	}
	static ArrayList<String> myconv(String str, int no){
		String splitString = CONVSTR.get(no);
		return new ArrayList<String>(Arrays.asList(str.split(splitString)));
	}
	static ArrayList<String> myconv(String str, String no){
		return new ArrayList<String>(Arrays.asList(str.split(no)));
	}
	public static void main(String[] args){
		CONVSTR.put(8, "" ""); CONVSTR.put(9, ""\n""); CONVSTR.put(0, """");
		solve();flush();
	}
	
	
	static void solve(){
		int N = nextInt();
		int Q = nextInt();
		HashMap<Integer, HashSet<Integer>> map = new HashMap<>();
		ArrayList<ArrayList<Integer>> list = new ArrayList<>();
		list.add(new ArrayList<Integer>());
		for(int i = 1; i <= 200000; i++){
			list.add(new ArrayList<Integer>());
			map.put(i, new HashSet<Integer>());
		}
		for(int i = 0; i < Q; i++){
			int t = nextInt();
			if(t == 1){
				int V = nextInt();
				int U = nextInt();
				map.get(V).add(U);
				list.get(U).add(V);
			}else if(t == 2){
				int V = nextInt();
				ArrayList<Integer> output = list.get(V);
				Collections.sort(output);
				myout(myconv(output, 8));
			}else{
				int V = nextInt();
				ArrayList<Integer> output = new ArrayList<>(map.get(V));
				Collections.sort(output);
				myout(myconv(output, 8));
			}
		}
	}
	



	
}
",RE
vlad_os ,abc298/E,Java,"
import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
	
	 	public static int psi(String n) {
	 		return Integer.parseInt(n);
	 	}

	    public static long psl(String n) {
	        return Long.parseLong(n);
	    }

	    public static String str_int(int n) {
	       return String.valueOf(n);
	    }

	   public static String str_lg(long n) {
	       return String.valueOf(n);
	   }
	   
	   
	   public static void dfs (List<List<Integer>> arr, boolean [] memo, int v) {
		   	memo[v] = true;
		   	
		   	for (int u : arr.get(v)) {
		   		if (memo[u]) continue;
		   		dfs(arr, memo, u);
		   	}
	   }
	   
	   
	   public static int bin_pw(int a, int p, int mod) {
		   	int ans = 1;
		   	
		   	while (p > 0) {
		   		if (p % 2 == 1) ans = (int) (((long) ans * a) % mod);
		   		
		   		p /= 2;
		   		a = (int) (((long) a * a) % mod);
		   	}
		   	
		   	return ans;
	   }
	   
	   
	   public static int div_mod(int a, int b, int mod) {
		   return (int) (((long) (a % mod) * bin_pw(b % mod, mod - 2, mod)) % mod);
	   }
	   
	   
	public static void main(String[] args) throws java.lang.Exception {
		BufferedReader rd = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(System.out);


        

        	
        	int mod = 998244353;
        	
        	String [] vals = rd.readLine().split("" "");
        	int n = psi(vals[0]);
        	int a = psi(vals[1]);
        	int b = psi(vals[2]);
        	int p = psi(vals[3]);
        	int q = psi(vals[4]);
        	
        	int prob_p = div_mod(1, p, mod);
        	int prob_q = div_mod(1, q, mod);
        	
        	int [][] dp1 = new int[n + 1][n + 1];
        	dp1[a][0] = 1;
        	
        	for (int i = a; i < n; i++) {
        		for (int j = 0; j < n; j++) {
        			for (int c = 1; c <= p; c++) {
        				int ind = Math.min(n, i + c);
        				
        				dp1[ind][j + 1] = (dp1[ind][j + 1] + (int) (((long) dp1[i][j] * prob_p) % mod)) % mod;
        				
        			}
        			
        		}
        	}
        	
        	int [][] dp2 = new int[n + 1][n + 1];
        	dp2[b][0] = 1;
        	
        	for (int i = b; i < n; i++) {
        		for (int j = 0; j < n; j++) {
        			for (int c = 1; c <= p; c++) {
        				int ind = Math.min(n, i + c);
        				
        				dp2[ind][j + 1] = (dp2[ind][j + 1] + (int) (((long) dp2[i][j] * prob_q) % mod)) % mod;
        				
        			}
        			
        		}
        	}
        	
        	int ans = 0;
        	
        	for (int i = 1; i <= n; i++) {
        		int p1 = dp1[n][i];
        		int p2 = 0;
        		
        		for (int j = b; j < n; j++) {
        			p2 = (p2 + dp2[j][i - 1]) % mod;
        		}
        		
        		p1 = (int) (((long) p1 * p2) % mod);
        		ans = (ans + p1) % mod;
        		
        	}
        	
        	out.println(ans);
        	

        
        out.flush();

	}

}
","
import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
	
	 	public static int psi(String n) {
	 		return Integer.parseInt(n);
	 	}

	    public static long psl(String n) {
	        return Long.parseLong(n);
	    }

	    public static String str_int(int n) {
	       return String.valueOf(n);
	    }

	   public static String str_lg(long n) {
	       return String.valueOf(n);
	   }
	   
	   
	   public static void dfs (List<List<Integer>> arr, boolean [] memo, int v) {
		   	memo[v] = true;
		   	
		   	for (int u : arr.get(v)) {
		   		if (memo[u]) continue;
		   		dfs(arr, memo, u);
		   	}
	   }
	   
	   
	   public static int bin_pw(int a, int p, int mod) {
		   	int ans = 1;
		   	
		   	while (p > 0) {
		   		if (p % 2 == 1) ans = (int) (((long) ans * a) % mod);
		   		
		   		p /= 2;
		   		a = (int) (((long) a * a) % mod);
		   	}
		   	
		   	return ans;
	   }
	   
	   
	   public static int div_mod(int a, int b, int mod) {
		   return (int) (((long) (a % mod) * bin_pw(b % mod, mod - 2, mod)) % mod);
	   }
	   
	   
	public static void main(String[] args) throws java.lang.Exception {
		BufferedReader rd = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(System.out);


        

        	
        	int mod = 998244353;
        	
        	String [] vals = rd.readLine().split("" "");
        	int n = psi(vals[0]);
        	int a = psi(vals[1]);
        	int b = psi(vals[2]);
        	int p = psi(vals[3]);
        	int q = psi(vals[4]);
        	
        	int prob_p = div_mod(1, p, mod);
        	int prob_q = div_mod(1, q, mod);
        	
        	int [][] dp1 = new int[n + 1][n + 1];
        	dp1[a][0] = 1;
        	
        	for (int i = a; i < n; i++) {
        		for (int j = 0; j < n; j++) {
        			for (int c = 1; c <= p; c++) {
        				int ind = Math.min(n, i + c);
        				
        				dp1[ind][j + 1] = (dp1[ind][j + 1] + (int) (((long) dp1[i][j] * prob_p) % mod)) % mod;
        				
        			}
        			
        		}
        	}
        	
        	int [][] dp2 = new int[n + 1][n + 1];
        	dp2[b][0] = 1;
        	
        	for (int i = b; i < n; i++) {
        		for (int j = 0; j < n; j++) {
        			for (int c = 1; c <= q; c++) {
        				int ind = Math.min(n, i + c);
        				
        				dp2[ind][j + 1] = (dp2[ind][j + 1] + (int) (((long) dp2[i][j] * prob_q) % mod)) % mod;
        				
        			}
        			
        		}
        	}
        	
        	int ans = 0;
        	
        	for (int i = 1; i <= n; i++) {
        		int p1 = dp1[n][i];
        		int p2 = 0;
        		
        		for (int j = b; j < n; j++) {
        			p2 = (p2 + dp2[j][i - 1]) % mod;
        		}
        		
        		p1 = (int) (((long) p1 * p2) % mod);
        		ans = (ans + p1) % mod;
        		
        	}
        	
        	out.println(ans);
        	

        
        out.flush();

	}

}
",WA
yukikazer ,abc298/E,Java,"import java.util.Scanner;

public class Main {
	static long MOD = 998244353;
	
	public static void main(String[] args) {
	    Scanner sc = new Scanner(System.in);
	    int N = sc.nextInt();
	    int A = sc.nextInt();
	    int B = sc.nextInt();
	    int P = sc.nextInt();
	    int Q = sc.nextInt();
		
	    long dp[][][] = new long[2][101][101];
	    long win = 0;
	    long invP = Main.modPow(P, MOD - 2);
	    long invQ = Main.modPow(P, MOD - 2);
	    
	    dp[0][A][B] = 1;
	    for(int i=1; i<=N; i++) {
		    for(int j=1; j<=N; j++) {
		    	if(dp[0][i][j] != 0) {
		    		for(int k=1; k<=P;k++) {
		    			if(i+k >= N) { 
		    				win += dp[0][i][j] * invP % MOD;
		    				win %= MOD;
		    			} else {
		    				dp[1][i+k][j] += dp[0][i][j] * invP % MOD;
		    				dp[1][i+k][j] %= MOD;
		    			}
		    		}
		    	}
		    	if(dp[1][i][j] != 0) {
		    		for(int k=1; k<=Q;k++) {
		    			if(j+k >= N) {
		    			} else {
		    				dp[0][i][j+k] += dp[1][i][j] * invQ % MOD;
		    				dp[0][i][j+k] %= MOD;
		    			}
		    		}
		    	}
		    }
	    }
	    System.out.println(win);
	}
	
	
    static long modPow(long base, long exponent) {
    	long result = 1;
    	long current = base;

        while (exponent > 0) {
            if ((exponent & 1) == 1) {
                result = (result * current) % MOD;
            }
            current = (current * current) % MOD;
            exponent >>= 1;
        }

        return result;
    }
}
","import java.util.Scanner;

public class Main {
	static long MOD = 998244353;
	
	public static void main(String[] args) {
	    Scanner sc = new Scanner(System.in);
	    int N = sc.nextInt();
	    int A = sc.nextInt();
	    int B = sc.nextInt();
	    int P = sc.nextInt();
	    int Q = sc.nextInt();
		
	    long dp[][][] = new long[2][101][101];
	    long win = 0;
	    long invP = Main.modPow(P, MOD - 2);
	    long invQ = Main.modPow(Q, MOD - 2);
	    
	    dp[0][A][B] = 1;
	    for(int i=1; i<=N; i++) {
		    for(int j=1; j<=N; j++) {
		    	if(dp[0][i][j] != 0) {
		    		for(int k=1; k<=P;k++) {
		    			if(i+k >= N) { 
		    				win += dp[0][i][j] * invP % MOD;
		    				win %= MOD;
		    			} else {
		    				dp[1][i+k][j] += dp[0][i][j] * invP % MOD;
		    				dp[1][i+k][j] %= MOD;
		    			}
		    		}
		    	}
		    	if(dp[1][i][j] != 0) {
		    		for(int k=1; k<=Q;k++) {
		    			if(j+k >= N) {
		    			} else {
		    				dp[0][i][j+k] += dp[1][i][j] * invQ % MOD;
		    				dp[0][i][j+k] %= MOD;
		    			}
		    		}
		    	}
		    }
	    }
	    System.out.println(win);
	}
	
	
    static long modPow(long base, long exponent) {
    	long result = 1;
    	long current = base;

        while (exponent > 0) {
            if ((exponent & 1) == 1) {
                result = (result * current) % MOD;
            }
            current = (current * current) % MOD;
            exponent >>= 1;
        }

        return result;
    }
}
",WA
iis2023255 ,abc298/A,Java,"以下は、問題を解くJavaのコード例です。

java
Copy code
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = scanner.nextInt();
        String s = scanner.next();

        boolean goodExist = false;
        boolean badExist = false;
        for (int i = 0; i < n; i++) {
            if (s.charAt(i) == 'o') {
                goodExist = true;
            } else if (s.charAt(i) == 'x') {
                badExist = true;
            }
        }

        if (goodExist && !badExist) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}
","import java.util.Scanner;
 
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
 
        int n = scanner.nextInt();
        String s = scanner.next();
 
        boolean goodExist = false;
        boolean badExist = false;
        for (int i = 0; i < n; i++) {
            if (s.charAt(i) == 'o') {
                goodExist = true;
            } else if (s.charAt(i) == 'x') {
                badExist = true;
            }
        }
 
        if (goodExist && !badExist) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}
",CE
vjudge4 ,abc298/A,Java,"import java.io.*;

public class JobInterview {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        int n;
        String str;

        n = Integer.valueOf(br.readLine());
        str = br.readLine();


        if (str.contains(""o"") && !str.contains(""x""))
            bw.write(""Yes\n"");
        else
            bw.write(""No\n"");

        br.close();
        bw.close();
    }
}

","import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        int n;
        String str;

        n = Integer.valueOf(br.readLine());
        str = br.readLine();


        if (str.contains(""o"") && !str.contains(""x""))
            bw.write(""Yes\n"");
        else
            bw.write(""No\n"");

        br.close();
        bw.close();
    }
}

",CE
ss_0156 ,abc298/A,Java,"import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		
		
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		String S = sc.next();

		boolean hasGood = false; 
		boolean hasBad = false; 

		
		for (int i = 0; i < N; i++) {
			if (S.charAt(i) == 'o') {
				hasGood = true; 
			} else if (S.charAt(i) == 'x') {
				hasBad = true; 
			}
		}
		if (hasGood && !hasBad) {
			System.out.println(""合格"");
		} else {
			System.out.println(""不合格"");
		}
	}
}
","import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		
		
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		String S = sc.next();

		boolean hasGood = false; 
		boolean hasBad = false; 

		
		for (int i = 0; i < N; i++) {
			if (S.charAt(i) == 'o') {
				hasGood = true; 
			} else if (S.charAt(i) == 'x') {
				hasBad = true; 
			}
		}
		if (hasGood && !hasBad) {
			System.out.println(""Yes"");
		} else {
			System.out.println(""No"");
		}
	}
}
",WA
ss_0156 ,abc298/A,Java,"import java.util.Scanner;

public class Atcoder1 {
	public static void main(String[] args) {
		
		
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		String S = sc.next();

		boolean hasGood = false; 
		boolean hasBad = false; 

		
		for (int i = 0; i < N; i++) {
			if (S.charAt(i) == 'o') {
				hasGood = true; 
			} else if (S.charAt(i) == 'x') {
				hasBad = true; 
			}
		}
		if (hasGood && !hasBad) {
			System.out.println(""合格"");
		} else {
			System.out.println(""不合格"");
		}
	}
}
","import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		
		
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		String S = sc.next();

		boolean hasGood = false; 
		boolean hasBad = false; 

		
		for (int i = 0; i < N; i++) {
			if (S.charAt(i) == 'o') {
				hasGood = true; 
			} else if (S.charAt(i) == 'x') {
				hasBad = true; 
			}
		}
		if (hasGood && !hasBad) {
			System.out.println(""Yes"");
		} else {
			System.out.println(""No"");
		}
	}
}
",CE
ss_0156 ,abc298/A,Java,"public class Main {
	public static void main(String[] args) {
		
		
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		String S = sc.next();

		boolean hasGood = false; 
		boolean hasBad = false; 

		
		for (int i = 0; i < N; i++) {
			if (S.charAt(i) == 'o') {
				hasGood = true; 
			} else if (S.charAt(i) == 'x') {
				hasBad = true; 
			}
		}
		if (hasGood && !hasBad) {
			System.out.println(""合格"");
		} else {
			System.out.println(""不合格"");
		}
	}
}
","import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		
		
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		String S = sc.next();

		boolean hasGood = false; 
		boolean hasBad = false; 

		
		for (int i = 0; i < N; i++) {
			if (S.charAt(i) == 'o') {
				hasGood = true; 
			} else if (S.charAt(i) == 'x') {
				hasBad = true; 
			}
		}
		if (hasGood && !hasBad) {
			System.out.println(""Yes"");
		} else {
			System.out.println(""No"");
		}
	}
}
",CE
ppt260352 ,abc298/A,Java,"import java.util.Scanner;
      public class Main{
          public static void main(String[] ags){
              Scanner get = new Scanner(System.in);
              int N = get.nextInt();
              String S = get.next();
              get.close();
              System.out.println(S);
              
              String A = "" "";
              int a, b;
              a = b = 0;
              for(int i = 0; i < N; i++){
                  
                   A = S.substring(i,i + 1);  
                   
                   if(A.equals(""x"")){
                        b = 1;
                        break;
                   }else if(A.equals(""o"")) a += 1;
              }
              if(a > 0 && b != 1) A = ""Yes"";
              else A = ""No"";
              System.out.println(A);
          }
  }
","import java.util.Scanner;
      public class Main{
          public static void main(String[] ags){
              Scanner get = new Scanner(System.in);
              int N = get.nextInt();
              String S = get.next();
              get.close();
              
              String A = "" "";
              int a, b;
              a = b = 0;
              for(int i = 0; i < N; i++){
                  
                   A = S.substring(i,i + 1);  
                   
                   if(A.equals(""x"")){
                        b = 1;
                        break;
                   }else if(A.equals(""o"")) a += 1;
              }
              if(a > 0 && b != 1) A = ""Yes"";
              else A = ""No"";
              System.out.println(A);
          }
  }
",WA
ukiy737 ,abc298/A,Java,"import java.util.*;
public class Main {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    String S = sc.next();
    String[] s = new String[N + 1];
    for(int i = 1; i <= N; i++) s[i] = S.substring(i - 1, i);
    
    boolean ans = false;
    
    for(int i = 1; i <= N; i++) {
      if(s[i].equals(""x"")) {
        ans = false;
      } else if(s[i].equals(""o"")) {
        ans = true;
      }
    }
    
    if(ans) {
      System.out.println(""Yes"");
    } else {
      System.out.println(""No"");
    }
  }
}
","import java.util.*;
public class Main {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    String S = sc.next();
    String[] s = new String[N + 1];
    for(int i = 1; i <= N; i++) s[i] = S.substring(i - 1, i);
    
    boolean ans = false;
    
    for(int i = 1; i <= N; i++) {
      if(s[i].equals(""x"")) {
        ans = false;
        break;
      } 
      if(s[i].equals(""o"")) {
        ans = true;
      }
    }
    
    if(ans) {
      System.out.println(""Yes"");
    } else {
      System.out.println(""No"");
    }
  }
}
",WA
white__walker ,abc298/A,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.util.StringTokenizer;

import static java.lang.Integer.parseInt;
import static java.lang.Long.parseLong;
import static java.lang.System.in;
import static java.lang.System.out;

public class q1 {
    public static void main(String[] args) {
        InputStream inputStream = in;
        OutputStream outputStream = out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        Task solver = new Task();
        solver.solve(1, in, out);
        out.close();
    }

    static class Task {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n=in.nextInt();
            StringBuilder s = new StringBuilder(in.next());
            int good=0, poor=0;
            for (int i=0;i<n;i++) {
                if (s.charAt(i)=='o') {
                    good++;
                }
                else if (s.charAt(i)=='x') {
                    poor++;
                }
            }
            if (good>=1&&poor==0) {
                out.println(""Yes"");
            }
            else {
                out.println(""No"");
            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public int nextInt() {
            return parseInt(next());
        }

        public long nextLong() {
            return parseLong(next());
        }
    }
}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.util.StringTokenizer;

import static java.lang.Integer.parseInt;
import static java.lang.Long.parseLong;
import static java.lang.System.in;
import static java.lang.System.out;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = in;
        OutputStream outputStream = out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        Task solver = new Task();
        solver.solve(1, in, out);
        out.close();
    }

    static class Task {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n=in.nextInt();
            StringBuilder s = new StringBuilder(in.next());
            int good=0, poor=0;
            for (int i=0;i<n;i++) {
                if (s.charAt(i)=='o') {
                    good++;
                }
                else if (s.charAt(i)=='x') {
                    poor++;
                }
            }
            if (good>=1&&poor==0) {
                out.println(""Yes"");
            }
            else {
                out.println(""No"");
            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public int nextInt() {
            return parseInt(next());
        }

        public long nextLong() {
            return parseLong(next());
        }
    }
}
",CE
Ashwani_sahani ,abc298/A,Java,"import java.util.*;
public class Main {
  public static void main(String args[]) {
      Scanner sc = new Scanner(System.in);
      int n = sc.nextInt();
     String s = sc.nextLine();

  int good = 0;
  boolean poor = false;
    for(int i=0;i<n;i++) {
      if(s.charAt(i)=='o'){
        good++; 
      }
      if(s.charAt(i)=='x') {
      poor = true;
      }
    }
    if(good>0 && !poor) {
      System.out.println(""Yes"");
    } else {
     System.out.println(""No""); 
    }
  }
}
","import java.util.*;
public class Main {
  public static void main(String args[]) {
      Scanner sc = new Scanner(System.in);
      int n = sc.nextInt();
     
          sc.nextLine();
           String s = sc.next();
    
    
    
    

  int good = 0;
  boolean poor = false;
    for(int i=0;i<n;i++) {
      if(s.charAt(i)=='o'){
        good++; 
      }
      if(s.charAt(i)=='x') {
      poor = true;
      }
    }
    if(good>0 && !poor) {
      System.out.println(""Yes"");
    } else {
     System.out.println(""No""); 
    }
  }
}
",RE
Kaushik09 ,abc298/A,Java,"


import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int length   = scan.nextInt();
        String s = scan.next();
        int count=0,count1=0;
        for(int i =0;i<length;i++) {

            if(s.charAt(i) == 'o' ){
                count++;

            }

            if(s.charAt(i) == 'x'){
               count1++;
            }


        }

        if( count == 1  && count1 ==0){
            System.out.println(""Yes"");
        }
        System.out.println(""No"");
    }
}
","


import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int length   = scan.nextInt();
        String s = scan.next();
        int count=0,count1=0;
        for(int i =0;i<length;i++) {

            if(s.charAt(i) == 'o' ){
                count++;

            }

            if(s.charAt(i) == 'x'){
               count1++;
            }


        }

        if( count >= 1  && count1 < 1){
            System.out.println(""Yes"");
        }
        else{
        System.out.println(""No"");}
    }
}
",WA
Yoshi_zen ,abc298/A,Java,"import java.util.*;

public class App {
    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();
        
        if (s.contains(""o"") && !s.contains(""x"")) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
        sc.close();
    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();
        
        if (s.contains(""o"") && !s.contains(""x"")) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
        sc.close();
    }
}
",CE
ChaloCodeKare ,abc298/A,Java,"import java.util.Scanner;

public class MyClass {
  
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    
    int num = scanner.nextInt();
    scanner.nextLine();
    
    String str = scanner.nextLine();
    char[] arr = str.toCharArray();

    boolean good=false;
    boolean poor=false;
    for(int i=0;i<num;i++)
    {
        if(arr[i]=='o')
        {
            good=true;
        }
        if(arr[i]=='x')
        {
            poor=true;
            break;
        }
    }
    if(good==true && poor==false){
        System.out.println(""Yes"");
    }
    else{ System.out.println(""No"");}

    
    
    
    scanner.close();
  }
}
","import java.util.Scanner;

public class Main {
  
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    
    int num = scanner.nextInt();
    scanner.nextLine();
    
    String str = scanner.nextLine();
    char[] arr = str.toCharArray();

    boolean good=false;
    boolean poor=false;
    for(int i=0;i<num;i++)
    {
        if(arr[i]=='o')
        {
            good=true;
        }
        if(arr[i]=='x')
        {
            poor=true;
            break;
        }
    }
    if(good==true && poor==false){
        System.out.println(""Yes"");
    }
    else{ System.out.println(""No"");}

    
    
    
    scanner.close();
  }
}
",CE
Sachin6038 ,abc298/A,Java,"import java.util.*;
public class Main{

public static void main(String[] args) {
    

    Scanner sc=new Scanner(System.in);

    int N=sc.nextInt();

    String s=sc.next();

    int len=s.length();

    String ans=""NO"";
    int good=0;
    int poor=1;

    for(int i=0;i<len;i++){
        char c=s.charAt(i);
        if(c=='o')
        good=1;
        if(c=='x')
        poor=0;
    }

    if(good==1 && poor==1)
    System.out.println(""YES"");
    else
    System.out.println(""NO"");
}

}
","import java.util.*;
public class Main{

public static void main(String[] args) {
    

    Scanner sc=new Scanner(System.in);

    int N=sc.nextInt();

    String s=sc.next();

    int len=s.length();

    String ans=""NO"";
    int good=0;
    int poor=1;

    for(int i=0;i<len;i++){
        char c=s.charAt(i);
        if(c=='o')
        good=1;
        if(c=='x')
        poor=0;
    }

    if(good==1 && poor==1)
    System.out.println(""Yes"");
    else
    System.out.println(""No"");
}

}
",WA
Sachin6038 ,abc298/A,Java,"import java.util.*;
public class Atcoder{

public static void main(String[] args) {
    

    Scanner sc=new Scanner(System.in);

    int N=sc.nextInt();

    String s=sc.next();

    int len=s.length();

    String ans=""NO"";
    int good=0;
    int poor=1;

    for(int i=0;i<len;i++){
        char c=s.charAt(i);
        if(c=='o')
        good=1;
        if(c=='x')
        poor=0;
    }

    if(good==1 && poor==1)
    System.out.println(""YES"");
    else
    System.out.println(""NO"");
}

}
","import java.util.*;
public class Main{

public static void main(String[] args) {
    

    Scanner sc=new Scanner(System.in);

    int N=sc.nextInt();

    String s=sc.next();

    int len=s.length();

    String ans=""NO"";
    int good=0;
    int poor=1;

    for(int i=0;i<len;i++){
        char c=s.charAt(i);
        if(c=='o')
        good=1;
        if(c=='x')
        poor=0;
    }

    if(good==1 && poor==1)
    System.out.println(""Yes"");
    else
    System.out.println(""No"");
}

}
",CE
Sachin6038 ,abc298/A,Java,"import java.util.*;
public class Atcoder.java{

public static void main(String[] args) {
    

    Scanner sc=new Scanner(System.in);

    int N=sc.nextInt();

    String s=sc.next();

    int len=s.length();

    String ans=""NO"";
    int good=0;
    int poor=1;

    for(int i=0;i<len;i++){
        char c=s.charAt(i);
        if(c=='o')
        good=1;
        if(c=='x')
        poor=0;
    }

    if(good==1 && poor==1)
    System.out.println(""YES"");
    else
    System.out.println(""NO"");
}

}
","import java.util.*;
public class Main{

public static void main(String[] args) {
    

    Scanner sc=new Scanner(System.in);

    int N=sc.nextInt();

    String s=sc.next();

    int len=s.length();

    String ans=""NO"";
    int good=0;
    int poor=1;

    for(int i=0;i<len;i++){
        char c=s.charAt(i);
        if(c=='o')
        good=1;
        if(c=='x')
        poor=0;
    }

    if(good==1 && poor==1)
    System.out.println(""Yes"");
    else
    System.out.println(""No"");
}

}
",CE
naminoriJohnny ,abc298/A,Java,"import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = Integer.parseInt(sc.next());
        sc.nextLine();
        String s = sc.next();
        char[] chars = s.toString().toCharArray();

        int cnt = 0;
        boolean disabled = false;
        for (int i = 0; i > chars.length; i++) {
            char c = chars[i];
            if (c == 'o') {
                cnt++;
            }

            if (c == 'x') {
                disabled = true;
                break;
            }
        }

        if (!disabled && cnt > 0) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}
","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = Integer.parseInt(sc.next());
        sc.nextLine();
        String s = sc.next();
        char[] chars = s.toString().toCharArray();

        int cnt = 0;
        boolean disabled = false;
        for (int i = 0; chars.length > i; i++) {
            char c = chars[i];
            if (c == 'o') {
                cnt++;
            }

            if (c == 'x') {
                disabled = true;
                break;
            }
        }

        if (!disabled && cnt > 0) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}
",WA
restart ,abc298/A,Java,"import java.util.*;
public class Main{
  public static void main(String[] args){
    Scanner sc =new Scanner(System.in);
    int N = sc.nextInt();
    String S = sc.next();
    String t [] = S.split("""");
    int m =0;
    for(int i=0;i<N;i++){
      if(t[i].equals(""x"")){System.out.println(""No"");System.exit(0);}
      else{
        if(t[i].equals(""o"")){m=m+1;}
      }
    }
    if(m>0){System.out.println(""Yes"");
           }
  }
}
","import java.util.*;
public class Main{
  public static void main(String[] args){
    Scanner sc =new Scanner(System.in);
    int N = sc.nextInt();
    String S = sc.next();
    String t [] = S.split("""");
    int m =0;
    for(int i=0;i<N;i++){
      if(t[i].equals(""x"")){System.out.println(""No"");System.exit(0);}
      else{
        if(t[i].equals(""o"")){m=m+1;}
      }
    }
    if(m>0){System.out.println(""Yes"");
           }
    else{System.out.println(""No"");}
  }
}
",WA
restart ,abc298/A,Java,"import java.util.*;
public class Main{
  public static void main(String[] args){
    Scanner sc =new Scanner(System.in);
    int N = sc.nextInt();
    String S = sc.next();
    String t [] = S.split("""");
    int m =0;
    for(int i=0;i<N;i++){
      if(t[i].equals(""x"")){System.out.println(""No"");System.exit(0);}
      else{
        if(t[i].equals(""o"")){m==m+1;}
      }
    }
    if(m>0){System.out.println(""Yes"");
           }
  }
}
","import java.util.*;
public class Main{
  public static void main(String[] args){
    Scanner sc =new Scanner(System.in);
    int N = sc.nextInt();
    String S = sc.next();
    String t [] = S.split("""");
    int m =0;
    for(int i=0;i<N;i++){
      if(t[i].equals(""x"")){System.out.println(""No"");System.exit(0);}
      else{
        if(t[i].equals(""o"")){m=m+1;}
      }
    }
    if(m>0){System.out.println(""Yes"");
           }
    else{System.out.println(""No"");}
  }
}
",CE
ChandraShekhar ,abc298/A,Java,"import java.util.*;

class Main{
	public static void main (String args){
    	Scanner sc = new Scanner(System.in);
      	int n = sc.nextInt();
      	String s = sc.nextLine();
      	int countGood = 0;
      	int countPoor = 0;
      	for(int i=0; i<n; i++){
        	if(s.charAt(i) == 'o'){
            	countGood++;
            }
          	else if(s.charAt(i) == 'x'){
            	countPoor++;
            }
        }
      	if(countGood > 0 && countPoor == 0){
        	System.out.println(""Yes"");
        }
      	else{
        	System.out.println(""No"");
        }
    }
}
","import java.util.*;

class Main{
	public static void main (String[] args){
    	Scanner sc = new Scanner(System.in);
      	int n = sc.nextInt();
      	sc.nextLine();
      	String s = sc.nextLine();
      	int countGood = 0;
      	int countPoor = 0;
      	for(int i=0; i<n; i++){
        	if(s.charAt(i) == 'o'){
            	countGood++;
            }
          	else if(s.charAt(i) == 'x'){
            	countPoor++;
            }
        }
      	if(countGood > 0 && countPoor == 0){
        	System.out.println(""Yes"");
        }
      	else{
        	System.out.println(""No"");
        }
    }
}
",RE
ChandraShekhar ,abc298/A,Java,"class Main{
	public static void main (String args){
    	Scanner sc = new Scanner(System.in);
      	int n = sc.nextInt();
      	String s = sc.nextString();
      	int countGood = 0;
      	int countPoor = 0;
      	for(int i=0; i<n; i++){
        	if(s.charAt(i) == 'o'){
            	countGood++;
            }
          	else if(s.charAt(i) == 'x'){
            	countPoor++;
            }
        }
      	if(countGood > 0 && countPoor == 0){
        	System.out.println(""Yes"");
        }
      	else{
        	System.out.println(""No"");
        }
    }
}
","import java.util.*;

class Main{
	public static void main (String[] args){
    	Scanner sc = new Scanner(System.in);
      	int n = sc.nextInt();
      	sc.nextLine();
      	String s = sc.nextLine();
      	int countGood = 0;
      	int countPoor = 0;
      	for(int i=0; i<n; i++){
        	if(s.charAt(i) == 'o'){
            	countGood++;
            }
          	else if(s.charAt(i) == 'x'){
            	countPoor++;
            }
        }
      	if(countGood > 0 && countPoor == 0){
        	System.out.println(""Yes"");
        }
      	else{
        	System.out.println(""No"");
        }
    }
}
",CE
awasinka ,abc298/A,Java,"import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		final int N = sc.nextInt();
		String str = sc.next();
		
		boolean good = false;
		boolean bad = false;
		
		System.out.println(str);
		if(str.contains(""o"")) good = true;
		if(str.contains(""x"")) bad = true;
		
		System.out.println(good && !bad ? ""Yes"" : ""No"");
	}
}
","import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		final int N = sc.nextInt();
		String str = sc.next();
		
		boolean good = false;
		boolean bad = false;
		
		if(str.contains(""o"")) good = true;
		if(str.contains(""x"")) bad = true;
		
		System.out.println(good && !bad ? ""Yes"" : ""No"");
	}
}
",WA
awasinka ,abc298/A,Java,"import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		final int N = sc.nextInt();
		String str = sc.nextLine();
		
		boolean good = false;
		boolean bad = false;
		
		if(str.contains(""o"")) good = true;
		if(str.contains(""x"")) bad = true;
		
		System.out.println(good && !bad ? ""Yes"" : ""No"");
	}
}
","import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		final int N = sc.nextInt();
		String str = sc.next();
		
		boolean good = false;
		boolean bad = false;
		
		if(str.contains(""o"")) good = true;
		if(str.contains(""x"")) bad = true;
		
		System.out.println(good && !bad ? ""Yes"" : ""No"");
	}
}
",WA
awasinka ,abc298/A,Java,"import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		final int N = sc.nextInt();
		String str = sc.nextLine();
		
		boolean good = false;
		boolean bad = false;
		
		if(str.contains(""o"")) good = true;
		if(str.contains(""-"")) bad = true;
		
		System.out.println(good && !bad ? ""Yes"" : ""No"");
	}
}
","import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		final int N = sc.nextInt();
		String str = sc.next();
		
		boolean good = false;
		boolean bad = false;
		
		if(str.contains(""o"")) good = true;
		if(str.contains(""x"")) bad = true;
		
		System.out.println(good && !bad ? ""Yes"" : ""No"");
	}
}
",WA
Rinshanone ,abc298/A,Java,"import java.util.Scanner;

public class Main {

    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        String S = sc.next();

        boolean f1 = false;
        boolean f2 = true;

        for(int i=0;i<N;i++){
            if(S[i]=='o'){
              f1 = true;
            }
            if(S[i]=='x'){
              f2 = false;
            }
        }
		if(f1 && f2){
          System.out.println(""Yes"");
        }else{
          System.out.println(""No"");
        }
    }
}
","import java.util.Scanner;

public class Main {

    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        String S = sc.next();

        boolean f1 = false;
        boolean f2 = true;

        for(int i=0;i<N;i++){
            if(S.charAt(i)=='o'){
              f1 = true;
            }
            if(S.charAt(i)=='x'){
              f2 = false;
            }
        }
		if(f1 && f2){
          System.out.println(""Yes"");
        }else{
          System.out.println(""No"");
        }
    }
}
",CE
Rinshanone ,abc298/A,Java,"import java.util.Scanner;

public class Main {

    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        String S = sc.next();

        boolean f1 = false;
        boolean f2 = true;

        for(int i=0;i<N;i++){
            if(S[i]=='o')f1 = true;
            if(S[i]=='x')f2 = false;
        }
		if(f1 && f2){
          System.out.println(""Yes"");
        }else{
          System.out.println(""No"");
        }
    }
}
","import java.util.Scanner;

public class Main {

    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        String S = sc.next();

        boolean f1 = false;
        boolean f2 = true;

        for(char c:S.toCharArray()){
            if(c=='o')f1 = true;
            if(c=='x')f2 = false;
        }
		if(f1 && f2){
          System.out.println(""Yes"");
        }else{
          System.out.println(""No"");
        }
    }
}
",CE
Rinshanone ,abc298/A,Java,"import java.util.Scanner;

public class Main {

    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        String S = sc.next();

        boolean f1 = false;
        boolean f2 = true;

        for(int i=0;i<N;i++){
            if(S[i]=='o')f1 = true;
            if(S[i]=='x')f2 = false;
        }
		if(f1 && f2){
          System.out.println(""Yes"");
        }else{
          System.out.println(""No"");
        }
    }
}
","import java.util.Scanner;

public class Main {

    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        String S = sc.next();

        boolean f1 = false;
        boolean f2 = true;

        for(int i=0;i<N;i++){
            if(S.charAt(i)=='o'){
              f1 = true;
            }
            if(S.charAt(i)=='x'){
              f2 = false;
            }
        }
		if(f1 && f2){
          System.out.println(""Yes"");
        }else{
          System.out.println(""No"");
        }
    }
}
",CE
S_cui ,abc298/A,Java,"import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {
	public static void main(String args[]) {
		Scanner stdin = new Scanner(System.in);
		System.out.println(""Please type..."");
				
		int num = stdin.nextInt();
		String values = stdin.next();
		List<String> value = new ArrayList();
		
		for (int i = 0; i < num; i++){
			String str = String.valueOf(values.charAt(i));
			value.add(str);
		}
		
		if(value.contains(""x"")) {
			System.out.println(""No"");
			return;
		} else if (value.contains(""o"")) {
			System.out.println(""Yes"");
			return;
		} else {
			System.out.println(""No"");
			return;
		}		
	}
}
","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {
	public static void main(String args[]) {
		Scanner stdin = new Scanner(System.in);
				
		int num = stdin.nextInt();
		String values = stdin.next();
		List<String> value = new ArrayList();
		
		for (int i = 0; i < num; i++){
			String str = String.valueOf(values.charAt(i));
			value.add(str);
		}
		
		if(value.contains(""x"")) {
			System.out.println(""No"");
			return;
		} else if (value.contains(""o"")) {
			System.out.println(""Yes"");
			return;
		} else {
			System.out.println(""No"");
			return;
		}		
	}
}
",WA
yiyz ,abc298/A,Java,"import java.nio.charset.StandardCharsets;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in, StandardCharsets.UTF_8);
        int n = scanner.nextInt();
        String s = scanner.next();
        System.out.println(solve(n, s));
    }

    private static String solve(int n, String s) {
        if (s.contains(""o"") && !s.contains(""x"")) {
            return ""Yes"";
        }
        return ""NO"";
    }
}

","import java.nio.charset.StandardCharsets;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in, StandardCharsets.UTF_8);
        int n = scanner.nextInt();
        String s = scanner.next();
        System.out.println(solve(n, s));
    }

    private static String solve(int n, String s) {
        if (s.contains(""o"") && !s.contains(""x"")) {
            return ""Yes"";
        }
        return ""No"";
    }
}

",WA
toru_suzuki ,abc298/A,Java,"import java.util.Scanner;

public class ABC298A{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        int input_interviewees_num = Integer.parseInt(sc.next());
        
        String input_evaluation_list = sc.next();
        char[] evaluation_list = input_evaluation_list.toCharArray();
        
        int good_num=0;
        int passable_num=0;
        int impassable_num=0;
        boolean result_flg=false;
        for (char evaluation: evaluation_list){
            switch(evaluation){
                case 'o':
                    good_num++;
                    break;
                case '-':
                    passable_num++;
                    break;
                case 'x':
                    impassable_num++;
                    break;
            }
        }
        if (good_num>=1 && impassable_num==0){
            System.out.println(""Yes"");
        }
        else{
            System.out.println(""No"");
        }
    }
}
","import java.util.Scanner;

public class Main{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        int input_interviewees_num = Integer.parseInt(sc.next());
        
        String input_evaluation_list = sc.next();
        char[] evaluation_list = input_evaluation_list.toCharArray();
        
        int good_num=0;
        int passable_num=0;
        int impassable_num=0;
        boolean result_flg=false;
        for (char evaluation: evaluation_list){
            switch(evaluation){
                case 'o':
                    good_num++;
                    break;
                case '-':
                    passable_num++;
                    break;
                case 'x':
                    impassable_num++;
                    break;
            }
        }
        if (good_num>=1 && impassable_num==0){
            System.out.println(""Yes"");
        }
        else{
            System.out.println(""No"");
        }
    }
}
",CE
nao0214 ,abc298/A,Java,"import java.util.Scanner;

public class atcoder {

    public static void main(String[] args) {
        
        Scanner sc = new Scanner(System.in);
        
        int n = sc.nextInt();
        
        String hyoka = sc.next();
        if (hyoka.contains(""x"")) {
            System.out.println(""No"");
        } else if (hyoka.contains(""o"")) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }

    }

}
","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        
        Scanner sc = new Scanner(System.in);
        
        int n = sc.nextInt();
        
        String hyoka = sc.next();
        if (hyoka.contains(""x"")) {
            System.out.println(""No"");
        } else if (hyoka.contains(""o"")) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }

    }

}
",CE
nao0214 ,abc298/A,Java,"import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        
        Scanner sc = new Scanner(System.in);
        
        int n = sc.nextInt();
        
        String hyoka = sc.next();
        if (hyoka.contains(""x"")) {
            System.out.println(""No"");
        } else if (hyoka.contains(""o"")) {
            System.out.println(""Yes"");
        }

    }

}
","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        
        Scanner sc = new Scanner(System.in);
        
        int n = sc.nextInt();
        
        String hyoka = sc.next();
        if (hyoka.contains(""x"")) {
            System.out.println(""No"");
        } else if (hyoka.contains(""o"")) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }

    }

}
",WA
Arkafu ,abc298/A,Java,"import java.util.*;
public class Main {
	public static void main(String[] args){
		Scanner sc = new Scanner(System.in);
        int manCount = sc.nextInt();
        String judge = sc.next();
        boolean good = false;
        boolean bad = false;
        for (int count = 0; count<manCount;count++ ){
          if(judge.charAt(count) == 'o'){
              good = true;
          }else if (judge.charAt(count) == 'x'){
              bad = true;
          }
        }
        if (good == true && bad == false){
            System.out.println(""yes"");
        }else{
            System.out.println(""no"");
        }
        }
}
","import java.util.*;
public class Main {
	public static void main(String[] args){
		Scanner sc = new Scanner(System.in);
        int manCount = sc.nextInt();
        String judge = sc.next();
        boolean good = false;
        boolean bad = false;
        for (int count = 0; count<manCount;count++ ){
          if(judge.charAt(count) == 'o'){
              good = true;
          }else if (judge.charAt(count) == 'x'){
              bad = true;
          }
        }
        if (good == true && bad == false){
            System.out.println(""Yes"");
        }else{
            System.out.println(""No"");
        }
        }
}
",WA
Autunomy ,abc298/A,Java,"import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();
        boolean flag = false;
        for(int i=0;i<n;++i){
            if(s.charAt(i) == 'o') {
                flag = true;
            }else if(s.charAt(i) == 'x'){
                System.out.println(""NO"");
                return;
            }
        }
        if(flag) System.out.println(""YES"");
        else System.out.println(""NO"");
    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();
        boolean flag = false;
        for(int i=0;i<n;++i){
            if(s.charAt(i) == 'o') {
                flag = true;
            }else if(s.charAt(i) == 'x'){
                System.out.println(""No"");
                return;
            }
        }
        if(flag) System.out.println(""Yes"");
        else System.out.println(""No"");
    }
}
",WA
Autunomy ,abc298/A,Java,"import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();
        boolean flag = false;
        for(int i=0;i<n;++i){
            if(s.charAt(i) == 'o') {
                flag = true;
                return;
            }else if(s.charAt(i) == 'x'){
                System.out.println(""NO"");
                return;
            }
        }
        if(flag) System.out.println(""YES"");
        else System.out.println(""NO"");
    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();
        boolean flag = false;
        for(int i=0;i<n;++i){
            if(s.charAt(i) == 'o') {
                flag = true;
            }else if(s.charAt(i) == 'x'){
                System.out.println(""No"");
                return;
            }
        }
        if(flag) System.out.println(""Yes"");
        else System.out.println(""No"");
    }
}
",WA
k1800ban ,abc297/B,Java,"import java.util.Scanner;

public class Main {
  public static void main(String[] args) {
    try (Scanner sc = new Scanner(System.in)) {
      String S = sc.next();

      
      int B1 = S.indexOf('B');
      int B2 = S.lastIndexOf('B');
      boolean condition1 = (B1 % 2 == 0) != (B2 % 2 == 0);

      
      int K = S.indexOf('K');
      
      int R1 = S.indexOf('R');
      int R2 = S.lastIndexOf('R');
      
      boolean condition2 = (R1 < K) && (K < R2);
      System.out.println(condition1);
      System.out.println(condition2);

      if (condition1 && condition2) {
        System.out.println(""Yes"");
      } else {
        System.out.println(""No"");
      }
    }
  }
}
","import java.util.Scanner;

public class Main {
  public static void main(String[] args) {
    try (Scanner sc = new Scanner(System.in)) {
      String S = sc.next();

      
      int B1 = S.indexOf('B');
      int B2 = S.lastIndexOf('B');
      boolean condition1 = (B1 % 2 == 0) != (B2 % 2 == 0);

      
      int K = S.indexOf('K');
      
      int R1 = S.indexOf('R');
      int R2 = S.lastIndexOf('R');
      
      boolean condition2 = (R1 < K) && (K < R2);
      
      if (condition1 && condition2) {
        System.out.println(""Yes"");
      } else {
        System.out.println(""No"");
      }
    }
  }
}
",WA
naru1990 ,abc297/B,Java,"import java.util.Scanner;

public class Main {

  public static void main(String[] args) {

    
    

    
    Scanner sc = new Scanner(System.in);
    String S = sc.next();
    sc.close();

    
    int x = S.indexOf('B');
    int y = S.lastIndexOf('B');
    if((x % 2 != 0 && y % 2 != 0) || (x % 2 == 0 && y % 2 == 0)) {
      System.out.println(""No"");
      return;
    }

    x = S.indexOf('R');
    y = S.lastIndexOf('R');
    int z = S.indexOf('K');
    if(x < z && z < y) {
      System.out.println(""Yes"");
    } else {
      System.out.println(""No"");
    }7

    
    
  }

}
","import java.util.Scanner;

public class Main {

  public static void main(String[] args) {

    
    

    
    Scanner sc = new Scanner(System.in);
    String S = sc.next();
    sc.close();

    
    int x = S.indexOf('B');
    int y = S.lastIndexOf('B');
    if((x % 2 != 0 && y % 2 != 0) || (x % 2 == 0 && y % 2 == 0)) {
      System.out.println(""No"");
      return;
    }

    x = S.indexOf('R');
    y = S.lastIndexOf('R');
    int z = S.indexOf('K');
    if(x < z && z < y) {
      System.out.println(""Yes"");
    } else {
      System.out.println(""No"");
    }

    
    
  }

}
",CE
emilyli1072 ,abc297/B,Java,"import java.util.*;
import java.io.*;
public class Main {
    public static void main(String[] args) throws IOException{
        br = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(System.out);
        String S = nextToken();
        int R1 = -1;
        int R2 = -1;
        int B = -1;
        boolean test = true;
        for (int i = 0; i < S.length(); i++) {
            if (S.charAt(i)=='R'){
               if (R1==-1) R1 = i+1;
               else R2 = i; 
            }
            if (S.charAt(i)=='B'){
                if (B==-1) B = i+1;
                else if ((i+1+B) % 2==0) test = false;  
            }
            if (S.charAt(i)=='K' && R1*R2 > 0) test = false;
        }
        if (test) out.println(""YES"");
        else out.println(""NO"");
        out.close();
    }
    static BufferedReader br;
    static PrintWriter out;
    static StringTokenizer in = new StringTokenizer("""");

    public static String nextToken() throws IOException {
        while (!in.hasMoreTokens()) {
            in = new StringTokenizer(br.readLine());
        }
        return in.nextToken();
    }

    public static int nextInt() throws IOException {
        return Integer.parseInt(nextToken());
    }
}
","import java.util.*;
import java.io.*;
public class Main {
    public static void main(String[] args) throws IOException{
        br = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(System.out);
        String S = nextToken();
        int R1 = -1;
        int R2 = -1;
        int B = -1;
        boolean test = true;
        for (int i = 0; i < S.length(); i++) {
            if (S.charAt(i)=='R'){
               if (R1==-1) R1 = i+1;
               else R2 = i; 
            }
            if (S.charAt(i)=='B'){
                if (B==-1) B = i+1;
                else if ((i+1+B) % 2==0) test = false;  
            }
            if (S.charAt(i)=='K' && R1*R2 > 0) test = false;
        }
        if (test) out.println(""Yes"");
        else out.println(""No"");
        out.close();
    }
    static BufferedReader br;
    static PrintWriter out;
    static StringTokenizer in = new StringTokenizer("""");

    public static String nextToken() throws IOException {
        while (!in.hasMoreTokens()) {
            in = new StringTokenizer(br.readLine());
        }
        return in.nextToken();
    }

    public static int nextInt() throws IOException {
        return Integer.parseInt(nextToken());
    }
}
",WA
emilyli1072 ,abc297/B,Java,"package AtCoder;
import java.util.*;
import java.io.*;
public class Main {
    public static void main(String[] args) throws IOException{
        br = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(System.out);
        String S = nextToken();
        int R1 = -1;
        int R2 = -1;
        int B = -1;
        boolean test = true;
        for (int i = 0; i < S.length(); i++) {
            if (S.charAt(i)=='R'){
               if (R1==-1) R1 = i+1;
               else R2 = i; 
            }
            if (S.charAt(i)=='B'){
                if (B==-1) B = i+1;
                else if ((i+1+B) % 2==0) test = false;  
            }
            if (S.charAt(i)=='K' && R1*R2 > 0) test = false;
        }
        if (test) out.println(""YES"");
        else out.println(""NO"");
        out.close();
    }
    static BufferedReader br;
    static PrintWriter out;
    static StringTokenizer in = new StringTokenizer("""");

    public static String nextToken() throws IOException {
        while (!in.hasMoreTokens()) {
            in = new StringTokenizer(br.readLine());
        }
        return in.nextToken();
    }

    public static int nextInt() throws IOException {
        return Integer.parseInt(nextToken());
    }
}
","import java.util.*;
import java.io.*;
public class Main {
    public static void main(String[] args) throws IOException{
        br = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(System.out);
        String S = nextToken();
        int R1 = -1;
        int R2 = -1;
        int B = -1;
        boolean test = true;
        for (int i = 0; i < S.length(); i++) {
            if (S.charAt(i)=='R'){
               if (R1==-1) R1 = i+1;
               else R2 = i; 
            }
            if (S.charAt(i)=='B'){
                if (B==-1) B = i+1;
                else if ((i+1+B) % 2==0) test = false;  
            }
            if (S.charAt(i)=='K' && R1*R2 > 0) test = false;
        }
        if (test) out.println(""Yes"");
        else out.println(""No"");
        out.close();
    }
    static BufferedReader br;
    static PrintWriter out;
    static StringTokenizer in = new StringTokenizer("""");

    public static String nextToken() throws IOException {
        while (!in.hasMoreTokens()) {
            in = new StringTokenizer(br.readLine());
        }
        return in.nextToken();
    }

    public static int nextInt() throws IOException {
        return Integer.parseInt(nextToken());
    }
}
",RE
shino0307 ,abc297/B,Java,"import java.util.*;
public class Main {
public static void main(String[] args) {
    Scanner scan = new Scanner(System.in);
    String s = scan.next();
    int b_num[] = new int[2];
    int r_num[] = new int[2];
    int k = 0;
    int b = 0;
    int r = 0;
  
    for(int i=0; i<8; i++){
      if(s.charAt(i) == 'B'){
        b_num[b] = i;
        b++;
      }else if(s.charAt(i) == 'R'){
        r_num[r] = i;
        r++;
      }else if(s.charAt(i) == 'K'){
        k = i;
      }
    }
  
    if(b_num[0] % 2 != b_num[1] % 2 && r_num[0] < k && k < r_num[1]){
      System.out.println(""Yes"");
    }else{
      System.out.println(""No"")
    }
  
  }
}
","import java.util.*;
public class Main {
public static void main(String[] args) {
    Scanner scan = new Scanner(System.in);
    String s = scan.next();
    int b_num[] = new int[2];
    int r_num[] = new int[2];
    int k = 0;
    int b = 0;
    int r = 0;
  
    for(int i=0; i<8; i++){
      if(s.charAt(i) == 'B'){
        b_num[b] = i;
        b++;
      }else if(s.charAt(i) == 'R'){
        r_num[r] = i;
        r++;
      }else if(s.charAt(i) == 'K'){
        k = i;
      }
    }
  
    if(b_num[0] % 2 != b_num[1] % 2 && r_num[0] < k && k < r_num[1]){
      System.out.println(""Yes"");
    }else{
      System.out.println(""No"");
    }
  
  }
}
",CE
shino0307 ,abc297/B,Java,"import java.util.*;
public class Main {
public static void main(String[] args) {
    Scanner scan = new Scanner(System.in);
    String s = scan.next();
    int b_num[] = new int[2];
    int r_num[] = new int[2];
    int k = 0;
    int b = 0;
    int r = 0;
  
    for(int i=0; i＜8; i++){
      if(s.charAt(i) == 'B'){
        b_num[b] = i;
        b++;
      }else if(s.charAt(i) == 'R'){
        r_num[r] = i;
        r++;
      }else if(s.charAt(i) == 'K'){
        k = i;
      }
    }
  
    if(b_num[0] % 2 != b_num[1] % 2 && r_num[0] ＜ k && k ＜ r_num[1]){
      System.out.println(""Yes"");
    }else{
      System.out.println(""No"")
    }
  
  }
}
","import java.util.*;
public class Main {
public static void main(String[] args) {
    Scanner scan = new Scanner(System.in);
    String s = scan.next();
    int b_num[] = new int[2];
    int r_num[] = new int[2];
    int k = 0;
    int b = 0;
    int r = 0;
  
    for(int i=0; i<8; i++){
      if(s.charAt(i) == 'B'){
        b_num[b] = i;
        b++;
      }else if(s.charAt(i) == 'R'){
        r_num[r] = i;
        r++;
      }else if(s.charAt(i) == 'K'){
        k = i;
      }
    }
  
    if(b_num[0] % 2 != b_num[1] % 2 && r_num[0] < k && k < r_num[1]){
      System.out.println(""Yes"");
    }else{
      System.out.println(""No"");
    }
  
  }
}
",CE
morobukkomiAXE ,abc297/B,Java,"import java.util.*;

public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int bf = s.indexOf(""B"");
        int bl = s.lastIndexOf(""B"");
        int rf = s.indexOf(""R"");
        int rl = s.lastIndexOf(""R"");
        int k = s.lastIndexOf(""B"");

        if(bf % 2 != bl % 2){
            if(rf < k && k < rl){
                System.out.println(""Yes"");
                return;
            }
        }
        System.out.println(""No"");
    }
    
}
","import java.util.*;

public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int bf = s.indexOf(""B"");
        int bl = s.lastIndexOf(""B"");
        int rf = s.indexOf(""R"");
        int rl = s.lastIndexOf(""R"");
        int k = s.indexOf(""K"");

        if(bf % 2 != bl % 2){
            if(rf < k && k < rl){
                System.out.println(""Yes"");
                return;
            }
        }
        System.out.println(""No"");
    }
    
}
",WA
hiyo123 ,abc297/B,Java,"import java.util.ArrayList;
import java.util.Scanner;

public class App {
    public static void main(String[] args) throws Exception {
        pro2();
    }

    private static void pro1(){
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int D = scanner.nextInt();
        int[] T = new int[N];

        for(int i = 0; i < N; i++){
            T[i] = scanner.nextInt();
        }
        scanner.close();

        for(int i = 1; i < N; i++){
            if(T[i]-T[i-1] <= D){
                System.out.println(T[i]);
                return;
            }
        }
        System.out.println(-1);
    }

    private static void pro2(){
        Scanner scanner = new Scanner(System.in);
        int[] b = new int[2];
        int b_cnt = 0;
        String rkr = ""RKR"";
        String rkr_ans = """";

        String S = scanner.nextLine();
        for (int i = 1; i < 9; i++){
            if(S.charAt(i-1) == 'B'){
                b[b_cnt] = i % 2;
                b_cnt++;
            }
            if(S.charAt(i-1) == 'K' || S.charAt(i-1) == 'R'){
                rkr_ans += S.charAt(i-1);
            }
        }

        if(b[0] != b[1] && rkr_ans.equals(rkr))
            System.out.println(""Yes"");
        else
            System.out.println(""No"");
    }

    private static void arr2(){
        ArrayList<ArrayList<Integer>> temp = new ArrayList<ArrayList<Integer>>();
        for (int i=0; i< 10; i++){
            temp.add(new ArrayList<Integer>());
            for (int j=0; j< 10; j++){
                temp.get(i).add(j);
                System.out.println(temp.get(i).get(j));
            }
        }
    }

    private static void Bfs(){
        Scanner scanner = new Scanner(System.in);
        int N, M;
        N = scanner.nextInt();
        M = scanner.nextInt();

        ArrayList<Integer>[] G = new ArrayList[N];
        for (int i = 0; i < N; i++) {
            G[i] = new ArrayList<Integer>();
        }

        for(int i = 0; i < M; i++){
            int a = scanner.nextInt();
            int b = scanner.nextInt();
            G[a].add(b);
            G[b].add(a);
        }
        scanner.close();

        int[] dist = new int[N];
        java.util.Arrays.fill(dist, -1);

        ArrayList<Integer>[] nodes = new ArrayList[N];
        for (int i = 0; i < N; i++) {
            nodes[i] = new ArrayList<Integer>();
        }

        dist[0] = 0;
        nodes[0].add(0);

        for (int i = 0; i < N; i++){
            for(int node: nodes[i]){
                for (int g: G[node]){

                    if (dist[g] != -1)
                        continue;
                    
                    dist[g] = i + 1;
                    nodes[i + 1].add(g);
                }
            }
        }

        for (int d: dist){
            System.out.println(d);
        }
    }
}
","import java.util.ArrayList;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) throws Exception {
        pro2();
    }

    private static void pro1(){
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int D = scanner.nextInt();
        int[] T = new int[N];

        for(int i = 0; i < N; i++){
            T[i] = scanner.nextInt();
        }
        scanner.close();

        for(int i = 1; i < N; i++){
            if(T[i]-T[i-1] <= D){
                System.out.println(T[i]);
                return;
            }
        }
        System.out.println(-1);
    }

    private static void pro2(){
        Scanner scanner = new Scanner(System.in);
        int[] b = new int[2];
        int b_cnt = 0;
        String rkr = ""RKR"";
        String rkr_ans = """";

        String S = scanner.nextLine();
        for (int i = 1; i < 9; i++){
            if(S.charAt(i-1) == 'B'){
                b[b_cnt] = i % 2;
                b_cnt++;
            }
            if(S.charAt(i-1) == 'K' || S.charAt(i-1) == 'R'){
                rkr_ans += S.charAt(i-1);
            }
        }

        if(b[0] != b[1] && rkr_ans.equals(rkr))
            System.out.println(""Yes"");
        else
            System.out.println(""No"");
    }

    private static void arr2(){
        ArrayList<ArrayList<Integer>> temp = new ArrayList<ArrayList<Integer>>();
        for (int i=0; i< 10; i++){
            temp.add(new ArrayList<Integer>());
            for (int j=0; j< 10; j++){
                temp.get(i).add(j);
                System.out.println(temp.get(i).get(j));
            }
        }
    }

    private static void Bfs(){
        Scanner scanner = new Scanner(System.in);
        int N, M;
        N = scanner.nextInt();
        M = scanner.nextInt();

        ArrayList<Integer>[] G = new ArrayList[N];
        for (int i = 0; i < N; i++) {
            G[i] = new ArrayList<Integer>();
        }

        for(int i = 0; i < M; i++){
            int a = scanner.nextInt();
            int b = scanner.nextInt();
            G[a].add(b);
            G[b].add(a);
        }
        scanner.close();

        int[] dist = new int[N];
        java.util.Arrays.fill(dist, -1);

        ArrayList<Integer>[] nodes = new ArrayList[N];
        for (int i = 0; i < N; i++) {
            nodes[i] = new ArrayList<Integer>();
        }

        dist[0] = 0;
        nodes[0].add(0);

        for (int i = 0; i < N; i++){
            for(int node: nodes[i]){
                for (int g: G[node]){

                    if (dist[g] != -1)
                        continue;
                    
                    dist[g] = i + 1;
                    nodes[i + 1].add(g);
                }
            }
        }

        for (int d: dist){
            System.out.println(d);
        }
    }
}
",CE
ikmi ,abc297/B,Java,"import java.util.Arrays;
import java.util.Scanner;
import java.util.Objects;

public class Main {
    public static void main(String[] args) {
    
    Scanner sc1 = new Scanner(System.in);
    String str1 = sc1.next(); 
    char[] ch1 = str1.toCharArray();

    String chk1 = """";
    String chk2 = """";

    int x = 99;
    int y = 99;
    int z = 99;


        for (int i = 0; i < 8;i++){
            if(ch1[i]=='B'){
                if(i%2==1&&chk1==""""){
                    chk1 = ""ok"";
                }else if(i%2==0&&chk1=="""")
                    chk2 = ""ok"";
            }
            if(ch1[i]=='K'){
                z = i;
            }
            if(ch1[i]=='R'&& x==99){
                x = i;
            }else if(ch1[i]=='R'&& x!=99){
                y = i;
            }
        }

        if( x<z && z<y && chk1==""ok"" && chk2==""ok""){
            System.out.println(""Yes"");
        }else {
            System.out.println(""No"");
        }
    }
}
","import java.util.Arrays;
import java.util.Scanner;
import java.util.Objects;

public class Main {
    public static void main(String[] args) {
    
    Scanner sc1 = new Scanner(System.in);
    String str1 = sc1.next(); 
    char[] ch1 = str1.toCharArray();

    String chk1 = """";
    String chk2 = """";

    int x = 99;
    int y = 99;
    int z = 99;


        for (int i = 0; i < 8;i++){
            if(ch1[i]=='B'){
                if(i%2==1&&chk1==""""){
                    chk1 = ""ok"";
                }else if(i%2==0&&chk2=="""")
                    chk2 = ""ok"";
            }
            if(ch1[i]=='K'){
                z = i;
            }
            if(ch1[i]=='R'&& x==99){
                x = i;
            }else if(ch1[i]=='R'&& x!=99){
                y = i;
            }
        }

        if( x<z && z<y && chk1==""ok"" && chk2==""ok""){
            System.out.println(""Yes"");
        }else {
            System.out.println(""No"");
        }
    }
}
",WA
yamachansonic ,abc297/B,Java,"import java.io.IOException;
import java.io.InputStream;
import java.util.NoSuchElementException;

public class Main {

	public static void main(String[] args) {
		FastScanner sc = new FastScanner();
		String S = sc.next();
		int index1 = S.indexOf(""B"");
		int index2 = S.lastIndexOf(""B"");
		if((index1 % 2 == 0 && index2 % 2 == 0) || (index1 % 2 != 0 && index2 % 2 != 0)){
			System.out.println(""No"");
			return;
		}

		int index3 = S.indexOf(""R"");
		int index4 = S.indexOf(""K"");
		int index5 = S.lastIndexOf(""R"");
		if(!(index3 < index4) && (index4 < index5)) {
			System.out.println(""No"");
			return;
		}
		System.out.println(""Yes"");
	}
}

class FastScanner {
	private final InputStream in = System.in;
	private final byte[] buffer = new byte[1024];
	private int ptr = 0;
	private int buflen = 0;

	private boolean hasNextByte() {
		if (ptr < buflen) {
			return true;
		} else {
			ptr = 0;
			try {
				buflen = in.read(buffer);
			} catch (IOException e) {
				e.printStackTrace();
			}
			if (buflen <= 0) {
				return false;
			}
		}
		return true;
	}

	private int readByte() {
		if (hasNextByte())
			return buffer[ptr++];
		else
			return -1;
	}

	private static boolean isPrintableChar(int c) {
		return 33 <= c && c <= 126;
	}

	public boolean hasNext() {
		while (hasNextByte() && !isPrintableChar(buffer[ptr]))
			ptr++;
		return hasNextByte();
	}

	public String next() {
		if (!hasNext())
			throw new NoSuchElementException();
		StringBuilder sb = new StringBuilder();
		int b = readByte();
		while (isPrintableChar(b)) {
			sb.appendCodePoint(b);
			b = readByte();
		}
		return sb.toString();
	}

	public long nextLong() {
		if (!hasNext())
			throw new NoSuchElementException();
		long n = 0;
		boolean minus = false;
		int b = readByte();
		if (b == '-') {
			minus = true;
			b = readByte();
		}
		if (b < '0' || '9' < b) {
			throw new NumberFormatException();
		}
		while (true) {
			if ('0' <= b && b <= '9') {
				n *= 10;
				n += b - '0';
			} else if (b == -1 || !isPrintableChar(b)) {
				return minus ? -n : n;
			} else {
				throw new NumberFormatException();
			}
			b = readByte();
		}
	}

	public int nextInt() {
		long nl = nextLong();
		if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE)
			throw new NumberFormatException();
		return (int) nl;
	}

	public double nextDouble() {
		return Double.parseDouble(next());
	}
}
","import java.io.IOException;
import java.io.InputStream;
import java.util.NoSuchElementException;

public class Main {

	public static void main(String[] args) {
		FastScanner sc = new FastScanner();
		String S = sc.next();
		int index1 = S.indexOf(""B"");
		int index2 = S.lastIndexOf(""B"");
		if((index1 % 2 == 0 && index2 % 2 == 0) || (index1 % 2 != 0 && index2 % 2 != 0)){
			System.out.println(""No"");
			return;
		}

		int index3 = S.indexOf(""R"");
		int index4 = S.indexOf(""K"");
		int index5 = S.lastIndexOf(""R"");
		if(!((index3 < index4) && (index4 < index5))) {
			System.out.println(""No"");
			return;
		}
		System.out.println(""Yes"");
	}
}

class FastScanner {
	private final InputStream in = System.in;
	private final byte[] buffer = new byte[1024];
	private int ptr = 0;
	private int buflen = 0;

	private boolean hasNextByte() {
		if (ptr < buflen) {
			return true;
		} else {
			ptr = 0;
			try {
				buflen = in.read(buffer);
			} catch (IOException e) {
				e.printStackTrace();
			}
			if (buflen <= 0) {
				return false;
			}
		}
		return true;
	}

	private int readByte() {
		if (hasNextByte())
			return buffer[ptr++];
		else
			return -1;
	}

	private static boolean isPrintableChar(int c) {
		return 33 <= c && c <= 126;
	}

	public boolean hasNext() {
		while (hasNextByte() && !isPrintableChar(buffer[ptr]))
			ptr++;
		return hasNextByte();
	}

	public String next() {
		if (!hasNext())
			throw new NoSuchElementException();
		StringBuilder sb = new StringBuilder();
		int b = readByte();
		while (isPrintableChar(b)) {
			sb.appendCodePoint(b);
			b = readByte();
		}
		return sb.toString();
	}

	public long nextLong() {
		if (!hasNext())
			throw new NoSuchElementException();
		long n = 0;
		boolean minus = false;
		int b = readByte();
		if (b == '-') {
			minus = true;
			b = readByte();
		}
		if (b < '0' || '9' < b) {
			throw new NumberFormatException();
		}
		while (true) {
			if ('0' <= b && b <= '9') {
				n *= 10;
				n += b - '0';
			} else if (b == -1 || !isPrintableChar(b)) {
				return minus ? -n : n;
			} else {
				throw new NumberFormatException();
			}
			b = readByte();
		}
	}

	public int nextInt() {
		long nl = nextLong();
		if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE)
			throw new NumberFormatException();
		return (int) nl;
	}

	public double nextDouble() {
		return Double.parseDouble(next());
	}
}
",WA
jamjam1229 ,abc297/B,Java,"import java.util.*;
public class Main{
	public static void main(String[] args){
    	Scanner sc= new Scanner(System.in);
      	String str= sc.next();
      	String result=""No"";
      	int num=0;
      	int kp=0;
      	int[] rs= new int[2];
      	int rnum=0;
      	String[] strs= new String[8];
      	for(int i=0; i<8; i++){
        	strs[i]=str.substring(i,i+1);
          	if(strs[i].equals(""B""))num+=i;
        }
      	if(num%2==1){
        	for(int i=0; i<8; i++){
        		if(strs[i].equals(""R"")){
                	rnum++;
                  	if(rnum==0){
                    	rs[0]=i;
                    }else if(rnum==1){
                    	rs[1]=i;
                    }
                }else if(strs[i].equals(""K"")){
                	kp=i;
                }
              
            }
          	if(rs[0]<kp && rs[1]>kp){
              	result=""Yes"";
             }
        }
      	System.out.println(result);
    }
}
","import java.util.*;
public class Main{
	public static void main(String[] args){
    	Scanner sc= new Scanner(System.in);
      	String str= sc.next();
      	String result=""No"";
      	int num=0;
      	int kp=0;
      	int[] rs= new int[2];
      	int rnum=0;
      	String[] strs= new String[8];
      	for(int i=0; i<8; i++){
        	strs[i]=str.substring(i,i+1);
          	if(strs[i].equals(""B""))num+=i;
        }
      	if(num%2==1){
        	for(int i=0; i<8; i++){
        		if(strs[i].equals(""R"")){
                  	if(rnum==0){
                    	rs[0]=i;
                    }else if(rnum==1){
                    	rs[1]=i;
                    }
                  	rnum++;
                }else if(strs[i].equals(""K"")){
                	kp=i;
                }
              
            }
          	if(rs[0]<kp && rs[1]>kp){
              	result=""Yes"";
             }
        }
      	System.out.println(result);
    }
}
",WA
Swinub ,abc297/B,Java,"import java.util.*;

class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        String token = sc.next();

        int[] chess = new int[9];
        for (int i = 1; i < 9; i++) chess[i] = token.charAt(i - 1);

        int flag = 0;
        int i;
        int first_B = 0;
        int second_B = 0;
        for (i = 1; i < 9; i++) {
            if (chess[i] == 'B') {
                first_B = i;
                break;
            }
        }
        for (int j = i + 1; j < 9; j++) {
            if (chess[j] == 'B') {
                second_B = j;
                break;
            }
        }
        if ((second_B - first_B) % 2 != 0) flag++;

        int k, l;
        int first_R = 0;
        int K = 0;
        int second_R = 0;
        for (k = 1; k < 9; k++) {
            if (chess[k] == 'R') {
                first_R = i;
                break;
            }
        }
        for (l = k + 1; l < 9; l++) {
            if (chess[l] == 'R') {
                second_R = l;
                break;
            }
        }
        for (int m = 1; m < 9; m++) {
            if (chess[m] == 'K') {
                K = m;
                break;
            }
        }
        if ((first_R < K) && (K < second_R)) flag++;

        if (flag == 2) System.out.println(""Yes"");
        else System.out.println(""No"");
    }
}
","import java.util.*;

class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        String token = sc.next();

        int[] chess = new int[9];
        for (int i = 1; i < 9; i++) chess[i] = token.charAt(i - 1);

        int flag = 0;
        int i;
        int first_B = 0;
        int second_B = 0;
        for (i = 1; i < 9; i++) {
            if (chess[i] == 'B') {
                first_B = i;
                break;
            }
        }
        for (int j = i + 1; j < 9; j++) {
            if (chess[j] == 'B') {
                second_B = j;
                break;
            }
        }
        if ((second_B - first_B) % 2 != 0) flag++;

        int k, l;
        int first_R = 0;
        int K = 0;
        int second_R = 0;
        for (k = 1; k < 9; k++) {
            if (chess[k] == 'R') {
                first_R = k;
                break;
            }
        }
        for (l = k + 1; l < 9; l++) {
            if (chess[l] == 'R') {
                second_R = l;
                break;
            }
        }
        for (int m = 1; m < 9; m++) {
            if (chess[m] == 'K') {
                K = m;
                break;
            }
        }
        if ((first_R < K) && (K < second_R)) flag++;

        if (flag == 2) System.out.println(""Yes"");
        else System.out.println(""No"");
    }
}
",WA
Moldir ,abc297/B,Java,"import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        boolean left = false;
        boolean btw = false;
        HashMap<Character, List<Integer>> map = new HashMap<>();
        int i = 0;
        char[] arr = s.toCharArray();
        for(char c: s.toCharArray()){
            if(map.containsKey(c)){
                map.get(c).add(i);
            }
            else{
                map.put(c, new ArrayList<>());
                map.get(c).add(i);
            }
            i++;

        }




        int idx_R1 = 0;
        int idx_R2 = 0;
        int idx_B1 = 0;
        int idx_B2 = 0;
        int idx_K = 0;

        for(Character c: map.keySet()){
            if(c == 'R'){
                idx_R1 = map.get(c).get(0);
                idx_R2 = map.get(c).get(1);
            }
            else if (c == 'B'){
                idx_B1 = map.get(c).get(0);
                idx_B2 = map.get(c).get(1);
            }
            else if (c == 'K'){
                idx_K = map.get(c).get(0);
            }
        }
        if(((idx_B1 % 2 == 0 && idx_B1 % 2 ==1) ||  (idx_B1 % 2 == 1 && idx_B1 % 2 == 0)) && idx_B1 < idx_B2){
            left = true;
        }
        if(idx_R1 < idx_K && idx_R2 > idx_K){
            btw = true;
        }
        System.out.println(left && btw ? ""Yes"" : ""No"");
    }
}
","
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        boolean left = false;
        boolean btw = false;
        HashMap<Character, List<Integer>> map = new HashMap<>();
        int i = 0;
        char[] arr = s.toCharArray();
        for(char c: s.toCharArray()){
            if(map.containsKey(c)){
                map.get(c).add(i);
            }
            else{
                map.put(c, new ArrayList<>());
                map.get(c).add(i);
            }
            i++;

        }




        int idx_R1 = 0;
        int idx_R2 = 0;
        int idx_B1 = 0;
        int idx_B2 = 0;
        int idx_K = 0;

        for(Character c: map.keySet()){
            if(c == 'R'){
                idx_R1 = map.get(c).get(0);
                idx_R2 = map.get(c).get(1);
            }
            else if (c == 'B'){
                idx_B1 = map.get(c).get(0);
                idx_B2 = map.get(c).get(1);
            }
            else if (c == 'K'){
                idx_K = map.get(c).get(0);
            }
        }
        if(((idx_B1 % 2 == 0 && idx_B2 % 2 ==1) ||  (idx_B1 % 2 == 1 && idx_B2 % 2 == 0)) && idx_B1 < idx_B2){
            left = true;
        }
        if(idx_R1 < idx_K && idx_R2 > idx_K){
            btw = true;
        }
        
        System.out.println(left && btw ? ""Yes"" : ""No"");
    }
}
",WA
american_eagle ,abc297/B,Java,"import java.util.*;

public class Main {
  public static void main(String args[]) {
    Scanner sc = new Scanner(System.in);
      String s = sc.next(); String ans = ""YES"";
      int countr=0;
      int x=0;int ii=0;
      for (int i = 0; i < 8; i++) {
        if(s.charAt(i)=='B'&&x==0){
           ii=i;x=1;
        }
       else if(s.charAt(i)=='B'&&x==1){
             if((i%2==0&&ii%2==0)||(i%2==1&&ii%2==1)){
              ans=""NO"";
             }
       }
      }
      countr=0;
      for (int i = 0; i < 8; i++) {
        if(s.charAt(i)=='K'){
            if(countr!=1){
              ans=""NO"";
            }
        }
        if(s.charAt(i)=='R'){
          countr++;
        }
      }
      System.out.println(ans);
    
  }
}
","import java.util.*;

public class Main {
  public static void main(String args[]) {
    Scanner sc = new Scanner(System.in);
      String s = sc.next(); String ans = ""Yes"";
      int countr=0;
      int x=0;int ii=0;
      for (int i = 0; i < 8; i++) {
        if(s.charAt(i)=='B'&&x==0){
           ii=i;x=1;
        }
       else if(s.charAt(i)=='B'&&x==1){
             if((i%2==0&&ii%2==0)||(i%2==1&&ii%2==1)){
              ans=""No"";
             }
       }
      }
      countr=0;
      for (int i = 0; i < 8; i++) {
        if(s.charAt(i)=='K'){
            if(countr!=1){
              ans=""No"";
            }
        }
        if(s.charAt(i)=='R'){
          countr++;
        }
      }
      System.out.println(ans);
    
  }
}
",WA
tamagosushi ,abc297/B,Java,"import java.util.*;

public class Main {
    public static void main(String[] args) throws Exception{
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int pre = -1;
        for(int i=0; i<8; i++){
            if(pre == -1 && s.charAt(i) == 'B'){
                pre = i;
            }else if(pre != -1 && s.charAt(i) == 'B'){
                if(pre % 2 == 0 && i % 2 == 0 ||
                pre % 2 == 1 && i % 2 == 1){
                    System.out.println(""No"");
                    return;
                }
            }
        }
        boolean flg = false;
        for(int i=0; i<8; i++){
            if(!flg && s.charAt(i)=='R'){
                flg = true;
            }else if(flg && s.charAt(i) == 'K'){
                flg = false;
            }else if(!flg && s.charAt(i) == 'K'){
                System.out.println(""No"");
                return;
            }
        }
        System.out.println(""Yes"");
    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args) throws Exception{
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int pre = -1;
        for(int i=0; i<8; i++){
            if(pre == -1 && s.charAt(i) == 'B'){
                pre = i;
            }else if(pre != -1 && s.charAt(i) == 'B'){
                if(pre % 2 == 0 && i % 2 == 0 ||
                pre % 2 == 1 && i % 2 == 1){
                    System.out.println(""No"");
                    return;
                }
            }
        }
        boolean flg = false;
        for(int i=0; i<8; i++){
            if(!flg && s.charAt(i)=='R'){
                flg = true;
            }else if(flg && s.charAt(i) == 'R'){
                flg = false;
            }else if(!flg && s.charAt(i) == 'K'){
                System.out.println(""No"");
                return;
            }
        }
        System.out.println(""Yes"");
    }
}
",WA
ChoiHyeonSeong ,abc297/B,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
        String input = bf.readLine();

        char[] sample = new char[input.length()];
        for(int i=0; i<input.length(); i++){
            sample[i] = input.charAt(i);
        }

        ArrayList<Integer> Bs = new ArrayList();
        ArrayList<Integer> Rs = new ArrayList();
        ArrayList<Integer> Ns = new ArrayList();
        int K=-1;
        int Q=-1;

        for(int i=0; i<sample.length; i++){
            if(sample[i]=='B'){
                Bs.add(i);
            }
            else if(sample[i]=='R'){
                Rs.add(i);
            }
            else if(sample[i]=='N'){
                Ns.add(i);
            }
            else if(sample[i]=='K'){
                K=i;
            }
            else if(sample[i]=='Q'){
                Q=i;
            }
        }

        boolean condition1 = false;
        boolean condition2 = false;

        if((Bs.get(0)+Bs.get(1)%2!=0)){
            condition1 = true;
        }
        if(K>Rs.get(0) && K<Rs.get(1)){
            condition2 = true;
        }

        if(condition1 && condition2){
            System.out.print(""Yes"");
        }
        else {
            System.out.print(""No"");
        }
    }
}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
        String input = bf.readLine();

        char[] sample = new char[input.length()];
        for(int i=0; i<input.length(); i++){
            sample[i] = input.charAt(i);
        }

        ArrayList<Integer> Bs = new ArrayList();
        ArrayList<Integer> Rs = new ArrayList();
        ArrayList<Integer> Ns = new ArrayList();
        int K=-1;
        int Q=-1;

        for(int i=0; i<sample.length; i++){
            if(sample[i]=='B'){
                Bs.add(i);
            }
            else if(sample[i]=='R'){
                Rs.add(i);
            }
            else if(sample[i]=='N'){
                Ns.add(i);
            }
            else if(sample[i]=='K'){
                K=i;
            }
            else if(sample[i]=='Q'){
                Q=i;
            }
        }

        boolean condition1 = false;
        boolean condition2 = false;

        if((Bs.get(0)+Bs.get(1))%2!=0){
            condition1 = true;
        }
        if(K>Rs.get(0) && K<Rs.get(1)){
            condition2 = true;
        }

        if(condition1 && condition2){
            System.out.print(""Yes"");
        }
        else {
            System.out.print(""No"");
        }
    }
}
",WA
watarimaycry2 ,abc297/B,Java,"import java.util.*; import java.io.*; import java.math.*;
public class Main{
	
	static class InputIterator{
		ArrayList<String> inputLine = new ArrayList<>(1024);
		int index = 0; int max; String read;
		InputIterator(){
			try{
				BufferedReader br = new BufferedReader(new InputStreamReader(System.in, ""UTF-8""));
				while((read = br.readLine()) != null){
					inputLine.addAll(Arrays.asList(read.split("" "")));
				}
			}catch(IOException e){}
			max = inputLine.size();
		}
		boolean hasNext(){return (index < max);}
		String next(){
			if(hasNext()){
				return inputLine.get(index++);
			}else{
				throw new IndexOutOfBoundsException(""There is no more input"");
			}
		}
	}
	static HashMap<Integer, String> CONVSTR = new HashMap<>();
	static InputIterator ii = new InputIterator();
	static PrintWriter out = new PrintWriter(System.out);
	static void flush(){out.flush();}
	static void myout(Object t){out.println(t);}
	static void myerr(Object... t){System.err.print(""debug:"");System.err.println(Arrays.deepToString(t));}
	static String next(){return ii.next();}
	static boolean hasNext(){return ii.hasNext();}
	static int nextInt(){return Integer.parseInt(next());}
	static long nextLong(){return Long.parseLong(next());}
	static double nextDouble(){return Double.parseDouble(next());}
	static ArrayList<String> nextCharArray(){return myconv(next(), 0);}
	static ArrayList<String> nextStrArray(int size){
		ArrayList<String> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(next());
		}
		return ret;
	}
	static ArrayList<Integer> nextIntArray(int size){
		ArrayList<Integer> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(Integer.parseInt(next()));
		}
		return ret;
	}
	static ArrayList<Long> nextLongArray(int size){
		ArrayList<Long> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(Long.parseLong(next()));
		}
		return ret;
	}
	@SuppressWarnings(""unchecked"")
	static String myconv(Object list, int no){
		StringBuilder sb = new StringBuilder("""");
		String joinString = CONVSTR.get(no);
		if(list instanceof String[]){
			return String.join(joinString, (String[])list);
		}else if(list instanceof long[]){
			long[] tmp = (long[])list;
			if(tmp.length == 0){
				return """";
			}
			sb.append(String.valueOf(tmp[0]));
			for(int i = 1; i < tmp.length; i++){
				sb.append(joinString).append(String.valueOf(tmp[i]));
			}
			return sb.toString();
		}else if(list instanceof int[]){
			int[] tmp = (int[])list;
			if(tmp.length == 0){
				return """";
			}
			sb.append(String.valueOf(tmp[0]));
			for(int i = 1; i < tmp.length; i++){
				sb.append(joinString).append(String.valueOf(tmp[i]));
			}
			return sb.toString();
		}else if(list instanceof ArrayList){
			ArrayList tmp = (ArrayList)list;
			if(tmp.size() == 0){
				return """";
			}
			sb.append(tmp.get(0));
			for(int i = 1; i < tmp.size(); i++){
				sb.append(joinString).append(tmp.get(i));
			}
			return sb.toString();
		}else{
			throw new ClassCastException(""Don't join"");
		}
	}
	static ArrayList<String> myconv(String str, int no){
		String splitString = CONVSTR.get(no);
		return new ArrayList<String>(Arrays.asList(str.split(splitString)));
	}
	static ArrayList<String> myconv(String str, String no){
		return new ArrayList<String>(Arrays.asList(str.split(no)));
	}
	public static void main(String[] args){
		CONVSTR.put(8, "" ""); CONVSTR.put(9, ""\n""); CONVSTR.put(0, """");
		solve();flush();
	}
	
	
	static void solve(){
		String S = next();
		int N = S.length();
		ArrayList<Integer> rs = new ArrayList<>();
		int k = -1;
		for(int i = 0; i < N; i++){
			if(S.charAt(i) == 'K'){
				k = i;
			}else if(S.charAt(i) == 'R'){
				rs.add(i);
			}
			for(int j = i + 1; j < N; j++){
				if(S.charAt(i) == 'B' && S.charAt(i) == 'B'){
					if(i % 2 == j % 2){
						myout(""No"");
						return;
					}
				}
			}
		}
		if(rs.get(0) < k && k < rs.get(1)){
			myout(""Yes"");
		}else{
			myout(""No"");
		}
	}
	



	
}
","import java.util.*; import java.io.*; import java.math.*;
public class Main{
	
	static class InputIterator{
		ArrayList<String> inputLine = new ArrayList<>(1024);
		int index = 0; int max; String read;
		InputIterator(){
			try{
				BufferedReader br = new BufferedReader(new InputStreamReader(System.in, ""UTF-8""));
				while((read = br.readLine()) != null){
					inputLine.addAll(Arrays.asList(read.split("" "")));
				}
			}catch(IOException e){}
			max = inputLine.size();
		}
		boolean hasNext(){return (index < max);}
		String next(){
			if(hasNext()){
				return inputLine.get(index++);
			}else{
				throw new IndexOutOfBoundsException(""There is no more input"");
			}
		}
	}
	static HashMap<Integer, String> CONVSTR = new HashMap<>();
	static InputIterator ii = new InputIterator();
	static PrintWriter out = new PrintWriter(System.out);
	static void flush(){out.flush();}
	static void myout(Object t){out.println(t);}
	static void myerr(Object... t){System.err.print(""debug:"");System.err.println(Arrays.deepToString(t));}
	static String next(){return ii.next();}
	static boolean hasNext(){return ii.hasNext();}
	static int nextInt(){return Integer.parseInt(next());}
	static long nextLong(){return Long.parseLong(next());}
	static double nextDouble(){return Double.parseDouble(next());}
	static ArrayList<String> nextCharArray(){return myconv(next(), 0);}
	static ArrayList<String> nextStrArray(int size){
		ArrayList<String> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(next());
		}
		return ret;
	}
	static ArrayList<Integer> nextIntArray(int size){
		ArrayList<Integer> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(Integer.parseInt(next()));
		}
		return ret;
	}
	static ArrayList<Long> nextLongArray(int size){
		ArrayList<Long> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(Long.parseLong(next()));
		}
		return ret;
	}
	@SuppressWarnings(""unchecked"")
	static String myconv(Object list, int no){
		StringBuilder sb = new StringBuilder("""");
		String joinString = CONVSTR.get(no);
		if(list instanceof String[]){
			return String.join(joinString, (String[])list);
		}else if(list instanceof long[]){
			long[] tmp = (long[])list;
			if(tmp.length == 0){
				return """";
			}
			sb.append(String.valueOf(tmp[0]));
			for(int i = 1; i < tmp.length; i++){
				sb.append(joinString).append(String.valueOf(tmp[i]));
			}
			return sb.toString();
		}else if(list instanceof int[]){
			int[] tmp = (int[])list;
			if(tmp.length == 0){
				return """";
			}
			sb.append(String.valueOf(tmp[0]));
			for(int i = 1; i < tmp.length; i++){
				sb.append(joinString).append(String.valueOf(tmp[i]));
			}
			return sb.toString();
		}else if(list instanceof ArrayList){
			ArrayList tmp = (ArrayList)list;
			if(tmp.size() == 0){
				return """";
			}
			sb.append(tmp.get(0));
			for(int i = 1; i < tmp.size(); i++){
				sb.append(joinString).append(tmp.get(i));
			}
			return sb.toString();
		}else{
			throw new ClassCastException(""Don't join"");
		}
	}
	static ArrayList<String> myconv(String str, int no){
		String splitString = CONVSTR.get(no);
		return new ArrayList<String>(Arrays.asList(str.split(splitString)));
	}
	static ArrayList<String> myconv(String str, String no){
		return new ArrayList<String>(Arrays.asList(str.split(no)));
	}
	public static void main(String[] args){
		CONVSTR.put(8, "" ""); CONVSTR.put(9, ""\n""); CONVSTR.put(0, """");
		solve();flush();
	}
	
	
	static void solve(){
		String S = next();
		int N = S.length();
		ArrayList<Integer> rs = new ArrayList<>();
		int k = -1;
		for(int i = 0; i < N; i++){
			if(S.charAt(i) == 'K'){
				k = i;
			}else if(S.charAt(i) == 'R'){
				rs.add(i);
			}
			for(int j = i + 1; j < N; j++){
				if(S.charAt(i) == 'B' && S.charAt(j) == 'B'){
					if(i % 2 == j % 2){
						myout(""No"");
						return;
					}
				}
			}
		}
		if(rs.get(0) < k && k < rs.get(1)){
			myout(""Yes"");
		}else{
			myout(""No"");
		}
	}
	



	
}
",WA
watarimaycry2 ,abc297/B,Java,"import java.util.*; import java.io.*; import java.math.*;
public class Main{
	
	static class InputIterator{
		ArrayList<String> inputLine = new ArrayList<>(1024);
		int index = 0; int max; String read;
		InputIterator(){
			try{
				BufferedReader br = new BufferedReader(new InputStreamReader(System.in, ""UTF-8""));
				while((read = br.readLine()) != null){
					inputLine.addAll(Arrays.asList(read.split("" "")));
				}
			}catch(IOException e){}
			max = inputLine.size();
		}
		boolean hasNext(){return (index < max);}
		String next(){
			if(hasNext()){
				return inputLine.get(index++);
			}else{
				throw new IndexOutOfBoundsException(""There is no more input"");
			}
		}
	}
	static HashMap<Integer, String> CONVSTR = new HashMap<>();
	static InputIterator ii = new InputIterator();
	static PrintWriter out = new PrintWriter(System.out);
	static void flush(){out.flush();}
	static void myout(Object t){out.println(t);}
	static void myerr(Object... t){System.err.print(""debug:"");System.err.println(Arrays.deepToString(t));}
	static String next(){return ii.next();}
	static boolean hasNext(){return ii.hasNext();}
	static int nextInt(){return Integer.parseInt(next());}
	static long nextLong(){return Long.parseLong(next());}
	static double nextDouble(){return Double.parseDouble(next());}
	static ArrayList<String> nextCharArray(){return myconv(next(), 0);}
	static ArrayList<String> nextStrArray(int size){
		ArrayList<String> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(next());
		}
		return ret;
	}
	static ArrayList<Integer> nextIntArray(int size){
		ArrayList<Integer> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(Integer.parseInt(next()));
		}
		return ret;
	}
	static ArrayList<Long> nextLongArray(int size){
		ArrayList<Long> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(Long.parseLong(next()));
		}
		return ret;
	}
	@SuppressWarnings(""unchecked"")
	static String myconv(Object list, int no){
		StringBuilder sb = new StringBuilder("""");
		String joinString = CONVSTR.get(no);
		if(list instanceof String[]){
			return String.join(joinString, (String[])list);
		}else if(list instanceof long[]){
			long[] tmp = (long[])list;
			if(tmp.length == 0){
				return """";
			}
			sb.append(String.valueOf(tmp[0]));
			for(int i = 1; i < tmp.length; i++){
				sb.append(joinString).append(String.valueOf(tmp[i]));
			}
			return sb.toString();
		}else if(list instanceof int[]){
			int[] tmp = (int[])list;
			if(tmp.length == 0){
				return """";
			}
			sb.append(String.valueOf(tmp[0]));
			for(int i = 1; i < tmp.length; i++){
				sb.append(joinString).append(String.valueOf(tmp[i]));
			}
			return sb.toString();
		}else if(list instanceof ArrayList){
			ArrayList tmp = (ArrayList)list;
			if(tmp.size() == 0){
				return """";
			}
			sb.append(tmp.get(0));
			for(int i = 1; i < tmp.size(); i++){
				sb.append(joinString).append(tmp.get(i));
			}
			return sb.toString();
		}else{
			throw new ClassCastException(""Don't join"");
		}
	}
	static ArrayList<String> myconv(String str, int no){
		String splitString = CONVSTR.get(no);
		return new ArrayList<String>(Arrays.asList(str.split(splitString)));
	}
	static ArrayList<String> myconv(String str, String no){
		return new ArrayList<String>(Arrays.asList(str.split(no)));
	}
	public static void main(String[] args){
		CONVSTR.put(8, "" ""); CONVSTR.put(9, ""\n""); CONVSTR.put(0, """");
		solve();flush();
	}
	
	
	static void solve(){
		String S = next();
		int N = S.length();
		ArrayList<Integer> rs = new ArrayList<>();
		int k = -1;
		for(int i = 0; i < N; i++){
			if(S.charAt(i) == 'K'){
				k = i;
			}else if(S.charAt(i) == 'R'){
				rs.add(i);
			}
			for(int j = i + 1; j < N; j++){
				if(S.charAt(i) == 'B' && S.charAt(i) == 'B'){
					if(i % 2 == j % 2){
						myout(""No"");
						return;
					}
				}
			}
		}
		if(rs.get(0) < k && k < rs.get(0)){
			myout(""Yes"");
		}else{
			myout(""No"");
		}
	}
	



	
}
","import java.util.*; import java.io.*; import java.math.*;
public class Main{
	
	static class InputIterator{
		ArrayList<String> inputLine = new ArrayList<>(1024);
		int index = 0; int max; String read;
		InputIterator(){
			try{
				BufferedReader br = new BufferedReader(new InputStreamReader(System.in, ""UTF-8""));
				while((read = br.readLine()) != null){
					inputLine.addAll(Arrays.asList(read.split("" "")));
				}
			}catch(IOException e){}
			max = inputLine.size();
		}
		boolean hasNext(){return (index < max);}
		String next(){
			if(hasNext()){
				return inputLine.get(index++);
			}else{
				throw new IndexOutOfBoundsException(""There is no more input"");
			}
		}
	}
	static HashMap<Integer, String> CONVSTR = new HashMap<>();
	static InputIterator ii = new InputIterator();
	static PrintWriter out = new PrintWriter(System.out);
	static void flush(){out.flush();}
	static void myout(Object t){out.println(t);}
	static void myerr(Object... t){System.err.print(""debug:"");System.err.println(Arrays.deepToString(t));}
	static String next(){return ii.next();}
	static boolean hasNext(){return ii.hasNext();}
	static int nextInt(){return Integer.parseInt(next());}
	static long nextLong(){return Long.parseLong(next());}
	static double nextDouble(){return Double.parseDouble(next());}
	static ArrayList<String> nextCharArray(){return myconv(next(), 0);}
	static ArrayList<String> nextStrArray(int size){
		ArrayList<String> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(next());
		}
		return ret;
	}
	static ArrayList<Integer> nextIntArray(int size){
		ArrayList<Integer> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(Integer.parseInt(next()));
		}
		return ret;
	}
	static ArrayList<Long> nextLongArray(int size){
		ArrayList<Long> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(Long.parseLong(next()));
		}
		return ret;
	}
	@SuppressWarnings(""unchecked"")
	static String myconv(Object list, int no){
		StringBuilder sb = new StringBuilder("""");
		String joinString = CONVSTR.get(no);
		if(list instanceof String[]){
			return String.join(joinString, (String[])list);
		}else if(list instanceof long[]){
			long[] tmp = (long[])list;
			if(tmp.length == 0){
				return """";
			}
			sb.append(String.valueOf(tmp[0]));
			for(int i = 1; i < tmp.length; i++){
				sb.append(joinString).append(String.valueOf(tmp[i]));
			}
			return sb.toString();
		}else if(list instanceof int[]){
			int[] tmp = (int[])list;
			if(tmp.length == 0){
				return """";
			}
			sb.append(String.valueOf(tmp[0]));
			for(int i = 1; i < tmp.length; i++){
				sb.append(joinString).append(String.valueOf(tmp[i]));
			}
			return sb.toString();
		}else if(list instanceof ArrayList){
			ArrayList tmp = (ArrayList)list;
			if(tmp.size() == 0){
				return """";
			}
			sb.append(tmp.get(0));
			for(int i = 1; i < tmp.size(); i++){
				sb.append(joinString).append(tmp.get(i));
			}
			return sb.toString();
		}else{
			throw new ClassCastException(""Don't join"");
		}
	}
	static ArrayList<String> myconv(String str, int no){
		String splitString = CONVSTR.get(no);
		return new ArrayList<String>(Arrays.asList(str.split(splitString)));
	}
	static ArrayList<String> myconv(String str, String no){
		return new ArrayList<String>(Arrays.asList(str.split(no)));
	}
	public static void main(String[] args){
		CONVSTR.put(8, "" ""); CONVSTR.put(9, ""\n""); CONVSTR.put(0, """");
		solve();flush();
	}
	
	
	static void solve(){
		String S = next();
		int N = S.length();
		ArrayList<Integer> rs = new ArrayList<>();
		int k = -1;
		for(int i = 0; i < N; i++){
			if(S.charAt(i) == 'K'){
				k = i;
			}else if(S.charAt(i) == 'R'){
				rs.add(i);
			}
			for(int j = i + 1; j < N; j++){
				if(S.charAt(i) == 'B' && S.charAt(j) == 'B'){
					if(i % 2 == j % 2){
						myout(""No"");
						return;
					}
				}
			}
		}
		if(rs.get(0) < k && k < rs.get(1)){
			myout(""Yes"");
		}else{
			myout(""No"");
		}
	}
	



	
}
",WA
sugimoto3207 ,abc297/B,Java,"import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;


public class MainSamole {
	
	public static void main(String[] args) {
	Scanner sc=new Scanner(System.in);
	
	char[] s=sc.next().toCharArray();
	boolean bool=false;
	
	
	List<Integer> blist=new ArrayList<>();
	List<Integer> rlist=new ArrayList<>();
	
	int k=0;
	
	for(int i=0;i<8;i++) {
		if(s[i]=='B')blist.add(i);
		if(s[i]=='R')rlist.add(i);
		if(s[i]=='K')k=i;
			
	}
	
	if((blist.get(1)-blist.get(0))%2==1 && rlist.get(0)<k && k<rlist.get(1)) {
			bool=true;
		}
	
	
	
	
	
	if(bool) {
		System.out.println(""Yes"");
	}else {
		System.out.println(""No"");
	}
	
	
	}
}
","import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;


public class Main {
	
	public static void main(String[] args) {
	Scanner sc=new Scanner(System.in);
	
	char[] s=sc.next().toCharArray();
	boolean bool=false;
	
	
	List<Integer> blist=new ArrayList<>();
	List<Integer> rlist=new ArrayList<>();
	
	int k=0;
	
	for(int i=0;i<8;i++) {
		if(s[i]=='B')blist.add(i);
		if(s[i]=='R')rlist.add(i);
		if(s[i]=='K')k=i;
			
	}
	
	if((blist.get(1)-blist.get(0))%2==1 && rlist.get(0)<k && k<rlist.get(1)) {
			bool=true;
		}
	
	
	
	
	
	if(bool) {
		System.out.println(""Yes"");
	}else {
		System.out.println(""No"");
	}
	
	
	}
}
",CE
izqnqi1142 ,abc297/B,Java,"public class Main {
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		
		String str=scan.next();
		int []p=new int[2];
		int []p2=new int[2];
		
		int cnt, cnt2, k=0;

		cnt=0;
		cnt2=0;
		for(int i = 0; i<str.length();i++) {
			if(str.charAt(i)=='B') {
				p[cnt]=i+1;
				cnt++;
			}
			if(str.charAt(i)=='R') {
				p2[cnt2]=i+1;
				cnt2++;
			}
			if(str.charAt(i)=='K') {
				k=i+1;
			}
		}
		
		if(p[0]%2==p[1]%2) {
			System.out.print(""No"");
			return;
		}
		
		if(!(p2[0]< k && k< p2[1])) {
			System.out.print(""No"");
			return;
		}
		
		System.out.print(""Yes"");
	}
}
","import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		
		String str=scan.next();
		int []p=new int[2];
		int []p2=new int[2];
		
		int cnt, cnt2, k=0;

		cnt=0;
		cnt2=0;
		for(int i = 0; i<str.length();i++) {
			if(str.charAt(i)=='B') {
				p[cnt]=i+1;
				cnt++;
			}
			if(str.charAt(i)=='R') {
				p2[cnt2]=i+1;
				cnt2++;
			}
			if(str.charAt(i)=='K') {
				k=i+1;
			}
		}
		
		if(p[0]%2==p[1]%2) {
			System.out.print(""No"");
			return;
		}
		
		if(!(p2[0]< k && k< p2[1])) {
			System.out.print(""No"");
			return;
		}
		
		System.out.print(""Yes"");
	}
}
",CE
izqnqi1142 ,abc297/B,Java,"import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		
		String str=scan.next();
		int []p=new int[2];
		int []p2=new int[2];
		
		int cnt, cnt2, k=0;

		cnt=0;
		cnt2=0;
		for(int i = 0; i<str.length();i++) {
			if(str.charAt(i)=='B') {
				p[cnt]=i+1;
				cnt++;
			}
			if(str.charAt(i)=='R') {
				p2[cnt2]=i+1;
				cnt2++;
			}
			if(str.charAt(i)=='K') {
				k=i+1;
			}
		}
		
		if(p[0]%2==p[1]%2) {
			System.out.print(""No"");
			return;
		}
		
		if(!(p[0]< k && k< p[1])) {
			System.out.print(""No"");
			return;
		}
		
		System.out.print(""Yes"");
	}
}
","import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		
		String str=scan.next();
		int []p=new int[2];
		int []p2=new int[2];
		
		int cnt, cnt2, k=0;

		cnt=0;
		cnt2=0;
		for(int i = 0; i<str.length();i++) {
			if(str.charAt(i)=='B') {
				p[cnt]=i+1;
				cnt++;
			}
			if(str.charAt(i)=='R') {
				p2[cnt2]=i+1;
				cnt2++;
			}
			if(str.charAt(i)=='K') {
				k=i+1;
			}
		}
		
		if(p[0]%2==p[1]%2) {
			System.out.print(""No"");
			return;
		}
		
		if(!(p2[0]< k && k< p2[1])) {
			System.out.print(""No"");
			return;
		}
		
		System.out.print(""Yes"");
	}
}
",WA
Nisemirei ,abc297/B,Java,"import java.util.Scanner;

public class Main{
	public static void main(String[] args){
    	Scanner sc = new Scanner(System.in);
      	String str = sc.nextLine();
      	boolean odd_b = false;
      	boolean even_b = false;
      	int x=-1;
      	int y=-1;
      	int z=-1;
      	for (int i=0; i<8; i++){
          	char c = str.charAt(i);
        	if (c == 'B'){
            	if (i%2 == 0) even_b =  true;
              	else odd_b = true;
            }
          	else if (c == 'K') z = i;
          	else if (c == 'R'){
            	if (x == -1) x = i;
              	else z = i;
            }
        }
      	if (odd_b && even_b && x < z && z < y) System.out.println(""Yes"");
      	else System.out.println(""No"");
    }
}
","import java.util.Scanner;

public class Main{
	public static void main(String[] args){
    	Scanner sc = new Scanner(System.in);
      	String str = sc.nextLine();
      	boolean odd_b = false;
      	boolean even_b = false;
      	int x=-1;
      	int y=-1;
      	int z=-1;
      	for (int i=0; i<8; i++){
          	char c = str.charAt(i);
        	if (c == 'B'){
            	if (i%2 == 0) even_b =  true;
              	else odd_b = true;
            }
          	else if (c == 'K') z = i;
          	else if (c == 'R'){
            	if (x == -1) x = i;
              	else y = i;
            }
        }
      	if (odd_b && even_b && x < z && z < y) System.out.println(""Yes"");
      	else System.out.println(""No"");
    }
}
",WA
kotyam ,abc297/B,Java,"import java.util.*;
public class Main {
  public static void main(String[] args){
    Scanner s = new Scanner(System.in);
    String a = s.next();
    String answer = ""No"";
    int R = 0;
    int B = 0;
    int N = 0;
    int K = 0;
    int Q = 0;
    int indexRf = 0;
    int indexRs = 0;
    int indexBf = 0;
    int indexBs = 0;
    int indexK = 0;
    if(a.length() == 8){
      for(int i = 0; i < 8;i++){
        char c = a.charAt(i);
        if(c =='R'){
          R++;
          if(R==1){
            indexRf = i;
          }else{
            indexRs = i;
          }
        }else if(c =='B'){
          B++;
          if(B==1){
            indexBf = i;
          }else{
            indexBs = i;
          }
        }else if(c =='N'){
          N++;
        }else if(c =='K'){
          K++;
          indexK = i;
        }else if(c =='Q'){
          Q++;
        }
      }
      if(R==2 && B==2 && N==2 && K==1 && Q==1 && (indexRf < K) && (K < indexRs)
        && (indexBf % 2 == 1 || indexBs % 2 == 1 ) && (indexBf % 2 == 0 || indexBs % 2 == 0)){
        answer = ""Yes"";
      }
    }
    System.out.print(answer);
  }
}
","import java.util.*;
public class Main {
  public static void main(String[] args){
    Scanner s = new Scanner(System.in);
    String a = s.next();
    String answer = ""No"";
    int R = 0;
    int B = 0;
    int N = 0;
    int K = 0;
    int Q = 0;
    int indexRf = 0;
    int indexRs = 0;
    int indexBf = 0;
    int indexBs = 0;
    int indexK = 0;
    if(a.length() == 8){
      for(int i = 0; i < 8;i++){
        char c = a.charAt(i);
        if(c =='R'){
          R++;
          if(R==1){
            indexRf = i;
          }else{
            indexRs = i;
          }
        }else if(c =='B'){
          B++;
          if(B==1){
            indexBf = i;
          }else{
            indexBs = i;
          }
        }else if(c =='N'){
          N++;
        }else if(c =='K'){
          K++;
          indexK = i;
        }else if(c =='Q'){
          Q++;
        }
      }
      
      if(R==2 && B==2 && N==2 && K==1 && Q==1 && (indexRf < indexK) && (indexK < indexRs)
        && (indexBf % 2 == 1 || indexBs % 2 == 1 ) && (indexBf % 2 == 0 || indexBs % 2 == 0)){
        answer = ""Yes"";
      }
    }
    System.out.print(answer);
  }
}
",WA
zzlzhou ,abc297/B,Java,"import java.util.Scanner;

public class Main{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int x = s.indexOf('B'), y = s.indexOf('B', x + 1);
        if(x % 2 + y % 2 != 1) {
            System.out.println(""NO"");
            return;
        }
        x = s.indexOf('R'); y = s.indexOf('R', x + 1);
        int z = s.indexOf('K');
        if(x < z && z < y){
            System.out.println(""YES"");
            return;
        }
        System.out.println(""NO"");
    }
}
","import java.util.Scanner;

public class Main{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int x = s.indexOf('B'), y = s.indexOf('B', x + 1);
        if(x % 2 + y % 2 != 1) {
            System.out.println(""No"");
            return;
        }
        x = s.indexOf('R'); y = s.indexOf('R', x + 1);
        int z = s.indexOf('K');
        if(x < z && z < y){
            System.out.println(""Yes"");
            return;
        }
        System.out.println(""No"");
    }
}
",WA
zakizaki777 ,abc297/B,Java,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner kbs = new Scanner(System.in);
        String s1 = kbs.next();
        int b =0;
        int k = 0;
        int r1 = 0;
        int r2 = 0;
        for (int i = 0; i < s1.length(); i++) {
            if(s1.charAt(i)=='B'){
                b+=i+1;
            } else if(s1.charAt(i)=='R'){
                if(r1==0){
                    r1=i;
                }else {
                    r2=i;
                }
            } else if(s1.charAt(i)=='K') {
                k += i;
            }
        }
        if(b%2==0){
            System.out.println(""No"");
        } else if(r1<k&&k<r2){
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner kbs = new Scanner(System.in);
        String s1 = kbs.next();
        int b =0;
        int k = 0;
        int r1 = -1;
        int r2 = 0;
        for (int i = 0; i < s1.length(); i++) {
            if(s1.charAt(i)=='B'){
                b+=i+1;
            } else if(s1.charAt(i)=='R'){
                if(r1==-1){
                    r1=i;
                }else {
                    r2=i;
                }
            } else if(s1.charAt(i)=='K') {
                k = i;
            }
        }
        if(b%2==0){
            System.out.println(""No"");
        } else if(r1<k&&k<r2){
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}
",WA
zakizaki777 ,abc297/B,Java,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner kbs = new Scanner(System.in);
        String s1 = kbs.next();
        int b =0;
        int k = 0;
        int r1 = 0;
        int r2 = 0;
        for (int i = 0; i < s1.length(); i++) {
            if(s1.charAt(i)=='B'){
                b+=i+1;
            } else if(s1.charAt(i)=='R'){
                if(r1==0){
                    r2+=i;
                }else {
                    r1+=i;
                }
            } else if(s1.charAt(i)=='K') {
                k += i;
            }
        }
        if(b%2==0){
            System.out.println(""No"");
        } else if(r1<k&&k<r2){
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner kbs = new Scanner(System.in);
        String s1 = kbs.next();
        int b =0;
        int k = 0;
        int r1 = -1;
        int r2 = 0;
        for (int i = 0; i < s1.length(); i++) {
            if(s1.charAt(i)=='B'){
                b+=i+1;
            } else if(s1.charAt(i)=='R'){
                if(r1==-1){
                    r1=i;
                }else {
                    r2=i;
                }
            } else if(s1.charAt(i)=='K') {
                k = i;
            }
        }
        if(b%2==0){
            System.out.println(""No"");
        } else if(r1<k&&k<r2){
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}
",WA
zakizaki777 ,abc297/B,Java,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner kbs = new Scanner(System.in);
        String s1 = kbs.next();
        int b =0;
        int k = 0;
        int r1 = 0;
        int r2 = 0;
        for (int i = 0; i < s1.length(); i++) {
            if(s1.charAt(i)=='B'){
                b+=i;
            } else if(s1.charAt(i)=='R'){
                if(r1==0){
                    r2+=i;
                }else {
                    r1+=i;
                }
            } else if(s1.charAt(i)=='K') {
                k += i;
            }
        }
        if(b%2==0){
            System.out.println(""No"");
        } else if(r1<k&&k<r2){
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner kbs = new Scanner(System.in);
        String s1 = kbs.next();
        int b =0;
        int k = 0;
        int r1 = -1;
        int r2 = 0;
        for (int i = 0; i < s1.length(); i++) {
            if(s1.charAt(i)=='B'){
                b+=i+1;
            } else if(s1.charAt(i)=='R'){
                if(r1==-1){
                    r1=i;
                }else {
                    r2=i;
                }
            } else if(s1.charAt(i)=='K') {
                k = i;
            }
        }
        if(b%2==0){
            System.out.println(""No"");
        } else if(r1<k&&k<r2){
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}
",WA
seyjs ,abc297/D,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.List;
import java.util.stream.Stream;

import static java.util.stream.Collectors.toList;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        List<Long> arr = Stream.of(bufferedReader.readLine().replaceAll(""\\s+$"", """").split("" ""))
                .map(Long::parseLong)
                .collect(toList());
        long A = arr.get(0);
        long B = arr.get(1);
        long res = 0;
        while (A != B){
            if (A < B) {
                long tmp = A;
                A = B;
                B = tmp;
            }
            long diff = A - B;
            diff += (B - (diff % B));
            A -= diff;
            res += diff/B;
        }
        System.out.println(res);
    }
}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.List;
import java.util.stream.Stream;

import static java.util.stream.Collectors.toList;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        List<Long> arr = Stream.of(bufferedReader.readLine().replaceAll(""\\s+$"", """").split("" ""))
                .map(Long::parseLong)
                .collect(toList());
        long A = arr.get(0);
        long B = arr.get(1);
        long res = 0;
        while (A != B){
            if (A < B) {
                long tmp = A;
                A = B;
                B = tmp;
            }
            long diff = A - B;
            if (diff % B != 0)
                diff += (B - (diff % B));
            A -= diff;
            res += diff/B;
        }
        System.out.println(res);
    }
}
",RE
azul89blue ,abc297/D,Java,"import java.io.PrintWriter;
import java.awt.*;
import java.lang.reflect.Array;
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc      = new Scanner(System.in);
        PrintWriter out = new PrintWriter(System.out);
        Output op       = new Output(sc, out);

        long a = op.nextLong();
        long b = op.nextLong();

        int count = 0;
        while (a >= 1 && b >= 1) {
            if (a >= b) {
                count += a / b;
                a = a % b;
            } else {
                count += b / a;
                b = b % a;
            }
        }
        System.out.println(count - 1);
    }
}

class Output {
    private final Scanner sc;
    private final PrintWriter out;

    Output(Scanner sc, PrintWriter out) {
        this.sc = sc;
        this.out = out;
    }

    public void flush() {
        this.out.flush();
    }

    public void outPutInt(int x) {
        this.out.println(x);
    }

    public void outPutString(String x) {
        this.out.println(x);
    }

    public int nextInt() {
        return Integer.parseInt(sc.next());
    }

    public char nextChar() {
        return sc.next().charAt(0);
    }

    public char[] nextCharArray() {
        return sc.next().toCharArray();
    }

    public long nextLong() {
        return Long.parseLong(sc.next());
    }

    public double nextDouble() {
        return Double.parseDouble(sc.next());
    }

    public String next() {
        return sc.next();
    }

    public void intResult(int value) {
        out.println(value);
        out.flush();
    }

    public void strResult(String value) {
        out.println(value);
        out.flush();
    }
}
","import java.io.PrintWriter;
import java.awt.*;
import java.lang.reflect.Array;
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc      = new Scanner(System.in);
        PrintWriter out = new PrintWriter(System.out);
        Output op       = new Output(sc, out);

        long a = op.nextLong();
        long b = op.nextLong();

        long count = 0;
        while (a >= 1 && b >= 1) {
            if (a >= b) {
                count += a / b;
                a = a % b;
            } else {
                count += b / a;
                b = b % a;
            }
        }
        System.out.println(count - 1);
    }
}

class Output {
    private final Scanner sc;
    private final PrintWriter out;

    Output(Scanner sc, PrintWriter out) {
        this.sc = sc;
        this.out = out;
    }

    public void flush() {
        this.out.flush();
    }

    public void outPutInt(int x) {
        this.out.println(x);
    }

    public void outPutString(String x) {
        this.out.println(x);
    }

    public int nextInt() {
        return Integer.parseInt(sc.next());
    }

    public char nextChar() {
        return sc.next().charAt(0);
    }

    public char[] nextCharArray() {
        return sc.next().toCharArray();
    }

    public long nextLong() {
        return Long.parseLong(sc.next());
    }

    public double nextDouble() {
        return Double.parseDouble(sc.next());
    }

    public String next() {
        return sc.next();
    }

    public void intResult(int value) {
        out.println(value);
        out.flush();
    }

    public void strResult(String value) {
        out.println(value);
        out.flush();
    }
}
",WA
azul89blue ,abc297/D,Java,"import java.io.PrintWriter;
import java.awt.*;
import java.lang.reflect.Array;
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc      = new Scanner(System.in);
        PrintWriter out = new PrintWriter(System.out);
        Output op       = new Output(sc, out);

        long a = op.nextLong();
        long b = op.nextLong();

        int count = 0;
        while (a > 0 && b > 0) {
            if (a > b) {
                count += a / b;
                a = a % b;
            } else {
                count += b / a;
                b = b % a;
            }
        }
        System.out.println(count - 1);
    }
}

class Output {
    private final Scanner sc;
    private final PrintWriter out;

    Output(Scanner sc, PrintWriter out) {
        this.sc = sc;
        this.out = out;
    }

    public void flush() {
        this.out.flush();
    }

    public void outPutInt(int x) {
        this.out.println(x);
    }

    public void outPutString(String x) {
        this.out.println(x);
    }

    public int nextInt() {
        return Integer.parseInt(sc.next());
    }

    public char nextChar() {
        return sc.next().charAt(0);
    }

    public char[] nextCharArray() {
        return sc.next().toCharArray();
    }

    public long nextLong() {
        return Long.parseLong(sc.next());
    }

    public double nextDouble() {
        return Double.parseDouble(sc.next());
    }

    public String next() {
        return sc.next();
    }

    public void intResult(int value) {
        out.println(value);
        out.flush();
    }

    public void strResult(String value) {
        out.println(value);
        out.flush();
    }
}
","import java.io.PrintWriter;
import java.awt.*;
import java.lang.reflect.Array;
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc      = new Scanner(System.in);
        PrintWriter out = new PrintWriter(System.out);
        Output op       = new Output(sc, out);

        long a = op.nextLong();
        long b = op.nextLong();

        long count = 0;
        while (a >= 1 && b >= 1) {
            if (a >= b) {
                count += a / b;
                a = a % b;
            } else {
                count += b / a;
                b = b % a;
            }
        }
        System.out.println(count - 1);
    }
}

class Output {
    private final Scanner sc;
    private final PrintWriter out;

    Output(Scanner sc, PrintWriter out) {
        this.sc = sc;
        this.out = out;
    }

    public void flush() {
        this.out.flush();
    }

    public void outPutInt(int x) {
        this.out.println(x);
    }

    public void outPutString(String x) {
        this.out.println(x);
    }

    public int nextInt() {
        return Integer.parseInt(sc.next());
    }

    public char nextChar() {
        return sc.next().charAt(0);
    }

    public char[] nextCharArray() {
        return sc.next().toCharArray();
    }

    public long nextLong() {
        return Long.parseLong(sc.next());
    }

    public double nextDouble() {
        return Double.parseDouble(sc.next());
    }

    public String next() {
        return sc.next();
    }

    public void intResult(int value) {
        out.println(value);
        out.flush();
    }

    public void strResult(String value) {
        out.println(value);
        out.flush();
    }
}
",WA
shoji9x9 ,abc297/D,Java,"import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long A = sc.nextInt();
        long B = sc.nextInt();

        if (A > B) {
            long tmp = B;
            B = A;
            A = tmp;
        }

        long ans = solve(A, B);
        System.out.println(ans);
    }

    private static long solve(long A, long B) {
        if(A == B) {
            return 0;
        }
        long cnt = B / A;
        long mod = B % A;
        if(mod == 0) {
            return cnt - 1;
        }
        return solve(mod, A) + cnt;
    }
}
","import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        long B = sc.nextLong();

        if (A > B) {
            long tmp = B;
            B = A;
            A = tmp;
        }

        long ans = solve(A, B);
        System.out.println(ans);
    }

    private static long solve(long A, long B) {
        if(A == B) {
            return 0;
        }
        long cnt = B / A;
        long mod = B % A;
        if(mod == 0) {
            return cnt - 1;
        }
        return solve(mod, A) + cnt;
    }
}
",RE
ZZOL ,abc297/D,Java,"package solve;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner reader = new Scanner(System.in);
        long a = reader.nextLong();
        long b = reader.nextLong();
        long cnt = 0;
        while (a != b) {
            if (a > b) {
                cnt += a / b;
                a %= b;
            } else {
                cnt += b / a;
                b %= a;
            }
            if (a == 0 || b == 0) {
                --cnt;
                break;
            }
        }
        System.out.println(cnt);
    }

    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(
                    new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = """";
            try {
                if (st.hasMoreTokens()) {
                    str = st.nextToken(""\n"");
                } else {
                    str = br.readLine();
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }

}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner reader = new Scanner(System.in);
        long a = reader.nextLong();
        long b = reader.nextLong();
        long cnt = 0;
        while (a != b) {
            if (a > b) {
                cnt += a / b;
                a %= b;
            } else {
                cnt += b / a;
                b %= a;
            }
            if (a == 0 || b == 0) {
                --cnt;
                break;
            }
        }
        System.out.println(cnt);
    }

    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(
                    new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = """";
            try {
                if (st.hasMoreTokens()) {
                    str = st.nextToken(""\n"");
                } else {
                    str = br.readLine();
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }

}
",RE
ZZOL ,abc297/D,Java,"package solve;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class Main {

    public static void main(String[] args) {
        FastReader reader = new FastReader();
        long a = reader.nextLong();
        long b = reader.nextLong();
        long cnt = 0;
        while (a != b) {
            if (a > b) {
                cnt += a / b;
                a %= b;
            } else {
                cnt += b / a;
                b %= a;
            }
            if (a == 0 || b == 0) {
                --cnt;
                break;
            }
        }
        System.out.println(cnt);
    }

    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(
                    new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = """";
            try {
                if (st.hasMoreTokens()) {
                    str = st.nextToken(""\n"");
                } else {
                    str = br.readLine();
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }

}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner reader = new Scanner(System.in);
        long a = reader.nextLong();
        long b = reader.nextLong();
        long cnt = 0;
        while (a != b) {
            if (a > b) {
                cnt += a / b;
                a %= b;
            } else {
                cnt += b / a;
                b %= a;
            }
            if (a == 0 || b == 0) {
                --cnt;
                break;
            }
        }
        System.out.println(cnt);
    }

    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(
                    new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = """";
            try {
                if (st.hasMoreTokens()) {
                    str = st.nextToken(""\n"");
                } else {
                    str = br.readLine();
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }

}
",RE
mepiusagi ,abc297/D,Java,"import java.util.*;
 
public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        Long A = sc.nextLong();
        Long B = sc.nextLong();
        int ans = 0;
        if(A>B){
            if(A==1){
                ans += B-1;
            }
            else if (B==1){
                ans += A-1;
            }
            else{
            ans += A/B;
            A = A % B;
            while(true){
                if(A==B){
                    break;
                }
                else if(A==0){
                    ans -= 1;
                    A=B;
                }
                else if(B==0){
                    ans -= 1;
                    B=A;
                }
                else{
                    if(A ==1){
                        ans += B-1;
                        break;
                    }
                    else if (B==1){
                        ans += A-1;
                        break;
                    }
                    else if(A>B){
                        ans += A/B;
                        A = A % B;
                        if(A==0){
                            ans -= 1;
                            A =B;
                        }
                    }
                    else if(B>A){
                        ans += B/A;
                        B = B % A;
                        if(B==0){
                            ans -= 1;
                            B =A;
                        }
                    }
                }
            }
            }
        }
        else if(A<B){
            if(A==1){
                ans += B-1;
            }
            else if (B==1){
                ans += A-1;
            }
            else {
            ans += B/A;
            B = B % A;
            while(true){
                if(A==B){
                    break;
                }
                else if(A==0){
                    ans -= 1;
                    A=B;
                }
                else if(B==0){
                    ans -= 1;
                    B=A;
                }
                else{
                    if(A ==1){
                        ans += B-1;
                        break;
                    }
                    else if (B==1){
                        ans += A-1;
                        break;
                    }
                    else if(A>B){
                        ans += A/B;
                        A = A % B;
                        if(A==0){
                            ans -= 1;
                            A =B;
                        }
                    }
                    else if(B>A){
                        ans += B/A;
                        B = B % A;
                        if(B==0){
                            ans -= 1;
                            B=A;
                        }
                    }
                }
            }}
        }
        System.out.println(ans);
        }}
","import java.util.*;
 
public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        Long A = sc.nextLong();
        Long B = sc.nextLong();
        int l = 0;
        long ans = (long)l;
        if(A>B){
            if(A==1){
                ans += B-1;
            }
            else if (B==1){
                ans += A-1;
            }
            else{
            ans += A/B;
            A = A % B;
            while(true){
                if(A==B){
                    break;
                }
                else if(A==0){
                    ans -= 1;
                    A=B;
                }
                else if(B==0){
                    ans -= 1;
                    B=A;
                }
                else{
                    if(A ==1){
                        ans += B-1;
                        break;
                    }
                    else if (B==1){
                        ans += A-1;
                        break;
                    }
                    else if(A>B){
                        ans += A/B;
                        A = A % B;
                        if(A==0){
                            ans -= 1;
                            A =B;
                        }
                    }
                    else if(B>A){
                        ans += B/A;
                        B = B % A;
                        if(B==0){
                            ans -= 1;
                            B =A;
                        }
                    }
                }
            }
            }
        }
        else if(A<B){
            if(A==1){
                ans += B-1;
            }
            else if (B==1){
                ans += A-1;
            }
            else {
            ans += B/A;
            B = B % A;
            while(true){
                if(A==B){
                    break;
                }
                else if(A==0){
                    ans -= 1;
                    A=B;
                }
                else if(B==0){
                    ans -= 1;
                    B=A;
                }
                else{
                    if(A ==1){
                        ans += B-1;
                        break;
                    }
                    else if (B==1){
                        ans += A-1;
                        break;
                    }
                    else if(A>B){
                        ans += A/B;
                        A = A % B;
                        if(A==0){
                            ans -= 1;
                            A =B;
                        }
                    }
                    else if(B>A){
                        ans += B/A;
                        B = B % A;
                        if(B==0){
                            ans -= 1;
                            B=A;
                        }
                    }
                }
            }}
        }
        System.out.println(ans);
        }}
",WA
klno ,abc297/D,Java,"import java.util.ArrayList;
import java.util.Scanner;

public class Main {

	public static void printArray(int[]a) {
		for(int i=0;i<a.length-1;i++) {
			System.out.print(a[i]+"" "");
		}
		System.out.println(a[a.length-1]);
	}
	public static long lmax(long a,long b) {
		if(a<b)return b;
		else return a;
	}
	public static long lmin(long a,long b) {
		if(a>b)return b;
		else return a;
	}
	public static int max(int a,int b) {
		if(a<b)return b;
		else return a;
	}
	public static int min(int a,int b) {
		if(a>b)return b;
		else return a;
	}
	static Scanner scan=new Scanner(System.in);
	static int ans=0;
	public static void main(String[] args) {
		long a=scan.nextLong();
		long b=scan.nextLong();
		gcd(lmin(a,b),lmax(a,b));
		System.out.println(ans);
	}
	public static void gcd(long a,long b) {
		
		if(a==b)return;
		ans+=(b/a);
		if(b%a==0) {
			ans--;
			return;
		}
		gcd(b%a,a);
	}
}
","import java.util.ArrayList;
import java.util.Scanner;

public class Main {

	public static void printArray(int[]a) {
		for(int i=0;i<a.length-1;i++) {
			System.out.print(a[i]+"" "");
		}
		System.out.println(a[a.length-1]);
	}
	public static long lmax(long a,long b) {
		if(a<b)return b;
		else return a;
	}
	public static long lmin(long a,long b) {
		if(a>b)return b;
		else return a;
	}
	public static int max(int a,int b) {
		if(a<b)return b;
		else return a;
	}
	public static int min(int a,int b) {
		if(a>b)return b;
		else return a;
	}
	static Scanner scan=new Scanner(System.in);
	static long ans=0;
	public static void main(String[] args) {
		long a=scan.nextLong();
		long b=scan.nextLong();
		gcd(lmin(a,b),lmax(a,b));
		System.out.println(ans);
	}
	public static void gcd(long a,long b) {
		
		if(a==b)return;
		ans+=(b/a);
		if(b%a==0) {
			ans--;
			return;
		}
		gcd(b%a,a);
	}
}
",WA
harad1010 ,abc297/D,Java,"import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		long A = sc.nextLong();
		long B = sc.nextLong();
		long counter = 0;

		while (A != B) {
			if (A > 1 && B > 1) {
				if (A > B * 2) {
					long wari = A / B;
					counter += wari;
					A -= B * wari;
				} else if (B > A * 2) {
					long wari = B / A;
					counter += wari;
					B -= A * wari;
				}
			}
			if (A > B) {
				counter++;
				A -= B;
			} else if (A < B) {
				counter++;
				B -= A;
			}
		}

		System.out.println(counter);
	}

}
","import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		long A = sc.nextLong();
		long B = sc.nextLong();
		long counter = 0;

		while (A != B) {
			if (A > 0 && B > 0) {
				if (A > B * 2) {
					long wari = (A / B)-1;
					counter += wari;
					A -= B * wari;
				} else if (B > A * 2) {
					long wari = (B / A)-1;
					counter += wari;
					B -= A * wari;
				}
			}
			if (A > B) {
				counter++;
				A -= B;
			} else if (A < B) {
				counter++;
				B -= A;
			}
		}

		System.out.println(counter);
	}

}
",TLE
suika874 ,abc297/D,Java,"import java.util.*;
class Main {
    public static void main(String args[]){
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        long B = sc.nextLong();
        int cnt = 0;
        while(A!=B){
            if(A>B){
                long div = A/B;
                A = A-B*div;
                if(A==0){
                    div += -1;
                    cnt += div;
                    break;
                }
                cnt += div;
                continue;
            }else if(A<B){
                long div = B/A;
                B = B-A*div;
                if(B==0){
                    div += -1;
                    cnt += div;
                    break;
                }
                cnt += div;
                continue;
            }
        }
        System.out.println(cnt);
    }
}
","import java.util.*;
class Main {
    public static void main(String args[]){
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        long B = sc.nextLong();
        long cnt = 0;
        while(A!=B){
            if(A>B){
                long div = A/B;
                A = A-B*div;
                if(A==0){
                    div += -1;
                    cnt += div;
                    break;
                }
                cnt += div;
                continue;
            }else if(A<B){
                long div = B/A;
                B = B-A*div;
                if(B==0){
                    div += -1;
                    cnt += div;
                    break;
                }
                cnt += div;
                continue;
            }
        }
        System.out.println(cnt);
    }
}
",WA
suika874 ,abc297/D,Java,"import java.util.*;
class Main {
    public static void main(String args[]){
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        long B = sc.nextLong();
        int cnt = 0;
        while(A!=B){
            if(A>B){
                long div = A/B;
                A = A-B*div;
                if(A==0){
                    div += -1;
                    cnt += div;
                    break;
                }
                cnt += div;
            }else{
                long div = B/A;
                B = B-A*div;
                if(B==0){
                    div += -1;
                    cnt += div;
                    break;
                }
                cnt += div;
            }
        }
        System.out.println(cnt);
    }
}
","import java.util.*;
class Main {
    public static void main(String args[]){
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        long B = sc.nextLong();
        long cnt = 0;
        while(A!=B){
            if(A>B){
                long div = A/B;
                A = A-B*div;
                if(A==0){
                    div += -1;
                    cnt += div;
                    break;
                }
                cnt += div;
                continue;
            }else if(A<B){
                long div = B/A;
                B = B-A*div;
                if(B==0){
                    div += -1;
                    cnt += div;
                    break;
                }
                cnt += div;
                continue;
            }
        }
        System.out.println(cnt);
    }
}
",WA
neo82 ,abc297/D,Java,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        long A = scanner.nextLong();
        long B = scanner.nextLong();

        if (B > A) {
            long temp = B;
            B = A;
            A = temp;
        }

        if (A == B) {
            System.out.println(0);
            return;
        }

        long p = A;
        long q = B;
        long res = 0;

        while (p % q != 0) {
            res += p / q;

            long temp = q;
            q = p % q;
            p = temp;
        }

        System.out.println(res + 1);
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        long A = scanner.nextLong();
        long B = scanner.nextLong();

        if (B > A) {
            long temp = B;
            B = A;
            A = temp;
        }

        if (A == B) {
            System.out.println(0);
            return;
        }

        long p = A;
        long q = B;
        long res = 0;

        while (q > 0) {
            res += p / q;

            long temp = q;
            q = p % q;
            p = temp;
        }

        System.out.println(res - 1);
    }
}
",WA
chiaki1 ,abc297/D,Java,"import java.util.Scanner;

public class Main {
	
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		long a = sc.nextInt();
		long b = sc.nextInt();
		long ans = 0;
		
		if(a == b) {
			System.out.println(ans);
		} else {
			do {
				if(a > b) {
					ans += a/b;
					a = a%b;
				} else {
					ans += b/a;
					b = b%a;
				}
			} while(a != 0 && b != 0 && a != b);
			System.out.println(ans-1);
		}
		
		sc.close();
	}

}
","import java.util.Scanner;

public class Main {
	
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		long a = sc.nextLong();
		long b = sc.nextLong();
		long ans = 0;
		
		if(a == b) {
			System.out.println(ans);
		} else {
			do {
				if(a > b) {
					ans += a/b;
					a = a%b;
				} else {
					ans += b/a;
					b = b%a;
				}
			} while(a != 0 && b != 0 && a != b);
			System.out.println(ans-1);
		}
		
		sc.close();
	}

}
",RE
moritap ,abc297/D,Java,"import java.io.File;
import java.net.URLDecoder;
import java.util.Scanner;

public class Main {

	private static final boolean test = true ;

	public static void main(String[] args) throws Exception {
		Scanner sc;
		if (!test) {
			sc = new Scanner(System.in);
		} else {
			String file = URLDecoder.decode(Main.class.getClassLoader().getResource(""input.txt"").getFile(), ""utf-8"");
			sc = new Scanner(new File(file));
		}
		StringBuilder sb = new StringBuilder();

		long a = sc.nextLong();
		long b = sc.nextLong();

		long c =0;
		while(a!=b && a>0 && b>0) {

			
			if(a>b) {
				c = c + a/b;
				a = a % b;
			}else {
				c = c + b/a;
				b = b % a;
			}

		}
		
		if(a!=b) {
			c=c-1;
		}
		
		System.out.println(c);
	}
}
","import java.io.File;
import java.net.URLDecoder;
import java.util.Scanner;

public class Main {

	private static final boolean test = false ;

	public static void main(String[] args) throws Exception {
		Scanner sc;
		if (!test) {
			sc = new Scanner(System.in);
		} else {
			String file = URLDecoder.decode(Main.class.getClassLoader().getResource(""input.txt"").getFile(), ""utf-8"");
			sc = new Scanner(new File(file));
		}
		StringBuilder sb = new StringBuilder();

		long a = sc.nextLong();
		long b = sc.nextLong();

		long c =0;
		while(a!=b && a>0 && b>0) {

			
			if(a>b) {
				c = c + a/b;
				a = a % b;
			}else {
				c = c + b/a;
				b = b % a;
			}

		}
		
		if(a!=b) {
			c=c-1;
		}
		
		System.out.println(c);
	}
}
",RE
okusaro ,abc297/D,Java,"import java.util.Scanner;

public class Main {




	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		long A=sc.nextInt();
		long B=sc.nextInt();
		long sum=0;
		while(A!=0 &&B!=0) {
			if (A<B) {
				long tmp=A;
				A=B;
				B=tmp;
			}

			
			sum+=A/B;
			A=A%B;
		}
		System.out.println(sum-1);



	}

}
","import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		long A=sc.nextLong();
		long B=sc.nextLong();
		long sum=0;
		while(A!=0 &&B!=0) {
			if (A<B) {
				long tmp=A;
				A=B;
				B=tmp;
			}

			
			sum+=A/B;
			A=A%B;
		}
		System.out.println(sum-1);



	}

}
",RE
Linzs ,abc297/D,Java,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long a = sc.nextInt();
        long b = sc.nextInt();
        long cnt = 0;
        while (a != b) {
            if (a > b) {
                cnt += (a - 1) / b;
                a -= (a - 1) / b * b;
            } else {
                cnt += (b - 1) / a;
                b -= (b - 1) / a * a;
            }
        }
        System.out.println(cnt);
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long a = sc.nextLong();
        long b = sc.nextLong();
        long cnt = 0;
        while (a != b) {
            if (a > b) {
                cnt += (a - 1) / b;
                a -= (a - 1) / b * b;
            } else {
                cnt += (b - 1) / a;
                b -= (b - 1) / a * a;
            }
        }
        System.out.println(cnt);
    }
}
",RE
Linzs ,abc297/D,Java,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long a = sc.nextInt();
        long b = sc.nextInt();
        long cnt = 0;
        while (a != b) {
            cnt ++;
            if (a > b) {
                cnt += (a - 1) / b;
                a -= (a - 1) / b * b;
            } else {
                cnt += (b - 1) / a;
                b -= (b - 1) / a * a;
            }
        }
        System.out.println(cnt);
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long a = sc.nextLong();
        long b = sc.nextLong();
        long cnt = 0;
        while (a != b) {
            if (a > b) {
                cnt += (a - 1) / b;
                a -= (a - 1) / b * b;
            } else {
                cnt += (b - 1) / a;
                b -= (b - 1) / a * a;
            }
        }
        System.out.println(cnt);
    }
}
",RE
Linzs ,abc297/D,Java,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long a = sc.nextInt();
        long b = sc.nextInt();
        int cnt = 0;
        while (a != b) {
            cnt ++;
            if (a > b) {
                cnt += (a - 1) / b;
                a -= (a - 1) / b * b;
            } else {
                cnt += (b - 1) / a;
                b -= (b - 1) / a * a;
            }
        }
        System.out.println(cnt);
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long a = sc.nextLong();
        long b = sc.nextLong();
        long cnt = 0;
        while (a != b) {
            if (a > b) {
                cnt += (a - 1) / b;
                a -= (a - 1) / b * b;
            } else {
                cnt += (b - 1) / a;
                b -= (b - 1) / a * a;
            }
        }
        System.out.println(cnt);
    }
}
",RE
kaihong ,abc297/D,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.StringTokenizer;

public class Main {
    public static void main(String[] args) {
        FastScanner fs = new FastScanner();
        PrintWriter out = new PrintWriter(System.out);

        long[] a = {fs.nextLong(), fs.nextLong()};
        swap(a);

        int count = 0;
        while (a[0] != a[1]) {
            count += (a[0] - 1) / a[1];
            a[0] -= (a[0] - 1) / a[1] * a[1];
            swap(a);
        }
        
        out.println(count);
        out.close();
    }

    static void swap(long[] a) {
        if (a[0] < a[1]) {
            long temp = a[0];
            a[0] = a[1];
            a[1] = temp;
        }
    }

    static class FastScanner {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;

        String next() {
            while (st == null || !st.hasMoreTokens()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }
    }
}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.StringTokenizer;

public class Main {
    public static void main(String[] args) {
        FastScanner fs = new FastScanner();
        PrintWriter out = new PrintWriter(System.out);

        long[] a = {fs.nextLong(), fs.nextLong()};
        swap(a);

        long count = 0;
        while (a[0] != a[1]) {
            count += (a[0] - 1) / a[1];
            a[0] -= (a[0] - 1) / a[1] * a[1];
            swap(a);
        }

        out.println(count);
        out.close();
    }

    static void swap(long[] a) {
        if (a[0] < a[1]) {
            long temp = a[0];
            a[0] = a[1];
            a[1] = temp;
        }
    }

    static class FastScanner {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;

        String next() {
            while (st == null || !st.hasMoreTokens()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }
    }
}
",WA
Daydreamer_ ,abc297/D,Java,"public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        long a = scanner.nextLong();
        long b = scanner.nextLong();
        long ans = 0;

        while (a != b){
            
            if(a > b){
                if(a % b != 0){
                    ans += a / b;
                    a = a % b;

                }else {
                    ans += a / b -1;
                    a = b;
                }

            } else {
                if(b%a != 0){
                    ans += b/a;
                    b = b % a;

                }else {
                    ans += b/a -1 ;
                    b = a;
                }
            }
        }

        System.out.println(ans);
    }
}
","import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
 
        long a = scanner.nextLong();
        long b = scanner.nextLong();
        long ans = 0;
 
        while (a != b){
            
            if(a > b){
                if(a % b != 0){
                    ans += a / b;
                    a = a % b;
 
                }else {
                    ans += a / b -1;
                    a = b;
                }
 
            } else {
                if(b%a != 0){
                    ans += b/a;
                    b = b % a;
 
                }else {
                    ans += b/a -1 ;
                    b = a;
                }
            }
        }
 
        System.out.println(ans);
    }
}
",CE
VIVEK_8877 ,abc297/D,Java,"import java.util.*;
import java.io.*;

public class Main {
    public static void main(String args[]) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        
        
            String[] s1 = br.readLine().split("" "");
            long a = Long.parseLong(s1[0]);
            long b = Long.parseLong(s1[1]);
            int ans=0;
            
            while(a!=b) {
                
                
                
                
                
                
                if(a<b) {
                    long dif=b-a;
                    ans+=(dif/a);
                    if(dif/a==0) {
                        ans++;
                        b-=a;
                        continue;
                    }
                    b-=((dif/a)*a);
                } else {
                    long dif = a-b;
                    ans+=(dif/b);
                    if(dif/b==0) {
                        ans++;
                        a-=b;
                        continue;
                    }
                    a-=((dif/b)*b);
                }
                
            }
            
            System.out.println(ans);
        
        
    }
}
","import java.util.*;
import java.io.*;

public class Main {
    public static void main(String args[]) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        
        
            String[] s1 = br.readLine().split("" "");
            long a = Long.parseLong(s1[0]);
            long b = Long.parseLong(s1[1]);
            long ans=0;
            
            while(a!=b) {
                
                
                
                
                
                
                if(a<b) {
                    long dif=b-a;
                    ans+=(dif/a);
                    if(dif/a==0) {
                        ans++;
                        b-=a;
                        continue;
                    }
                    b-=((dif/a)*a);
                } else {
                    long dif = a-b;
                    ans+=(dif/b);
                    if(dif/b==0) {
                        ans++;
                        a-=b;
                        continue;
                    }
                    a-=((dif/b)*b);
                }
                
            }
            
            System.out.println(ans);
        
        
    }
}
",WA
donjames ,abc292/A,Java,"package com.qqy.myclass;
import java.util.*;

public class Main {
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        StringBuffer sb = new StringBuffer();
        for(int i = 0; i < s.length(); i++)
        {
            sb.append((char)(s.charAt(i) - 32));
        }
        System.out.println(sb);
    }
}
","
import java.util.*;

public class Main {
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        StringBuffer sb = new StringBuffer();
        for(int i = 0; i < s.length(); i++)
        {
            sb.append((char)(s.charAt(i) - 32));
        }
        System.out.println(sb);
    }
}
",RE
arpurush ,abc292/A,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class AtCoderCapsLock {

	public static void main(String[] args) {
		
		FastScanner fs = new FastScanner();
		String s = fs.nextString();
		System.out.println(s.toUpperCase());

	}
	
	static class FastScanner {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer("""");

		String next() {
			while (!st.hasMoreTokens())
				try {
					st = new StringTokenizer(br.readLine());
				} catch (IOException e) {
				}
			return st.nextToken();
		}

		int nextInt() {
			return Integer.parseInt(next());
		}

		long nextLong() {
			return Long.parseLong(next());
		}

		String nextString() {
			return next();
		}
	}

}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {

	public static void main(String[] args) {
		
		FastScanner fs = new FastScanner();
		String s = fs.nextString();
		System.out.println(s.toUpperCase());

	}
	
	static class FastScanner {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer("""");

		String next() {
			while (!st.hasMoreTokens())
				try {
					st = new StringTokenizer(br.readLine());
				} catch (IOException e) {
				}
			return st.nextToken();
		}

		int nextInt() {
			return Integer.parseInt(next());
		}

		long nextLong() {
			return Long.parseLong(next());
		}

		String nextString() {
			return next();
		}
	}

}
",CE
Ryosuke212 ,abc292/A,Java,"import java.util.*;

public class Main {
	public static void main(String[] args) {
    	Scanner sc = new Scanner(System.in);
      	String str = sc.nextInt();
      	System.out.println(str.toUpperCase());
    }
}
","import java.util.*;

public class Main {
	public static void main(String[] args) {
    	Scanner sc = new Scanner(System.in);
      	String str = sc.nextLine();
      	System.out.println(str.toUpperCase());
    }
}
",CE
kjkjk ,abc292/A,Java,"import java.util.Scanner;

public class a{
	public static void main(String[] args){
    	Scanner sc = new Scanner(System.in);
      	String S = sc.next();
      
      	System.out.println(S.toUpperCase());
    }
}
","import java.util.Scanner;

public class Main{
	public static void main(String[] args){
    	Scanner sc = new Scanner(System.in);
      	String S = sc.next();
      
      	System.out.println(S.toUpperCase());
    }
}
",CE
kjkjk ,abc292/A,Java,"import Java.util.Scanner;

public class Main{
	public static void main(String[] args){
    	Scanner sc = new Scanner(System.in);
      	String S = sc.next();
      
      	System.out.println(S.toUpperCase());
    }
}
","import java.util.Scanner;

public class Main{
	public static void main(String[] args){
    	Scanner sc = new Scanner(System.in);
      	String S = sc.next();
      
      	System.out.println(S.toUpperCase());
    }
}
",CE
batyaaa ,abc292/A,Java,"import java.util.*;


public class Code {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println(sc.next().toUpperCase());
    }
}


















","import java.util.*;


public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println(sc.next().toUpperCase());
    }
}


















",CE
Andymywang ,abc292/A,Java,"import java.io.*;
import java.util.*;

public class Main{
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        Task solver = new Task();
        solver.solve(in, out);
        out.close();
    }

    static class Task {
       

        public void solve(InputReader in, PrintWriter out) {
            String S = in.next();
             StringBuilder T = new StringBuilder();

       
            for (int i = 0; i < S.length(); i++) {
            
                char ch = S.charAt(i);
            
                T.append(Character.toUpperCase(ch));

            }

        System.out.println(T.toString());
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }
Main
","import java.io.*;
import java.util.*;

public class Main{
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        Task solver = new Task();
        solver.solve(in, out);
        out.close();
    }

    static class Task {
       

        public void solve(InputReader in, PrintWriter out) {
            String S = in.next();
             StringBuilder T = new StringBuilder();

       
            for (int i = 0; i < S.length(); i++) {
            
                char ch = S.charAt(i);
            
                T.append(Character.toUpperCase(ch));

            }

        System.out.println(T.toString());
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }
    }

}
",CE
Andymywang ,abc292/A,Java,"import java.io.*;
import java.util.*;

public class Main{
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        Task solver = new Task();
        solver.solve(in, out);
        out.close();
    }

    static class Task {
       

        public void solve(InputReader in, PrintWriter out) {
            int s = in.nextInt();
            StringBuilder T = new StringBuilder();
             for (int i = 0; i < S.length(); i++) {
                char ch = S.charAt(i);
                T.append(Character.toUpperCase(ch));
            }

        }

        System.out.println(T.toString());
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }
    }

","import java.io.*;
import java.util.*;

public class Main{
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        Task solver = new Task();
        solver.solve(in, out);
        out.close();
    }

    static class Task {
       

        public void solve(InputReader in, PrintWriter out) {
            String S = in.next();
             StringBuilder T = new StringBuilder();

       
            for (int i = 0; i < S.length(); i++) {
            
                char ch = S.charAt(i);
            
                T.append(Character.toUpperCase(ch));

            }

        System.out.println(T.toString());
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }
    }

}
",CE
Ashraf_Ali ,abc292/A,Java,"import java.io.BufferedReader;
import java.io.InputStreamReader;

public class toUpper {
    public static void main(String[] args) {
        try {
            BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
            String s = reader.readLine();
            System.out.println(s.toUpperCase());
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }
}
","import java.io.BufferedReader;
import java.io.InputStreamReader;

public class Main {
    public static void main(String[] args) {
        try {
            BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
            String s = reader.readLine();
            System.out.println(s.toUpperCase());
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }
}
",CE
ZZQ323 ,abc292/A,Java,"import java.util.Scanner;

public class Main {
	
	public static void main(String[] args) {
		Scanner cin =new Scanner(System.in);
		String str=cin.next();
		System.out.print(str);
		cin.close();
	}

}
","import java.util.Scanner;

public class Main {
	
	public static void main(String[] args) {
		Scanner cin =new Scanner(System.in);
		String str=cin.next();
		System.out.print(str.toUpperCase());
		cin.close();
	}

}
",WA
ZZQ323 ,abc292/A,Java,"package acm;

import java.util.Scanner;

public class Main {
	
	public static void main(String[] args) {
		Scanner cin =new Scanner(System.in);
		String str=cin.next();
		System.out.print(str.toUpperCase());
		cin.close();
	}

}
","import java.util.Scanner;

public class Main {
	
	public static void main(String[] args) {
		Scanner cin =new Scanner(System.in);
		String str=cin.next();
		System.out.print(str.toUpperCase());
		cin.close();
	}

}
",RE
ZZQ323 ,abc292/A,Java,"package acm;

import java.util.Scanner;

public class Main {
	
	public static void main(String[] args) {
		Scanner cin =new Scanner(System.in);
		String str=cin.next();
		System.out.print(str);
		cin.close();
	}

}
","import java.util.Scanner;

public class Main {
	
	public static void main(String[] args) {
		Scanner cin =new Scanner(System.in);
		String str=cin.next();
		System.out.print(str.toUpperCase());
		cin.close();
	}

}
",RE
ekansh_miet ,abc292/A,Java,"import java.util.*;
class Main{
  public static void main(){
    Scanner sc=new Scanner(System.in);
    String s=sc.nextLine();
    System.out.println(s.toUpperCase());
  }
}
","import java.util.*;
class Main{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        String s=sc.nextLine();
        System.out.println(s.toUpperCase());
    }
}
",RE
HassanU ,abc292/A,Java,"import java.io.*;
import java.util.*;
import java.math.BigInteger;
public class A {
	static PrintWriter out=new PrintWriter(System.out);
	static Scanner sc=new Scanner(System.in);
	
	public static void main(String[] args) throws Exception {
		String s=sc.next();
		out.println(s.toUpperCase());
		out.close();
		
	}
		
	
	static class Pair implements Comparable<Pair>{
		int x;
		int y;
		public Pair(int x,int y) {
			this.x=x;
			this.y=y;
		}
		public int compareTo(Pair o) {
			return this.x-o.x;
		}
		public String toString() {
			return ""(""+this.x+"",""+this.y+"")"";
		}
		
	}
	static class Scanner {
		StringTokenizer st;
		BufferedReader br;
		public Scanner(InputStream s) {
			br = new BufferedReader(new InputStreamReader(s));
		}
		public Scanner(String file) throws FileNotFoundException {
			br = new BufferedReader(new FileReader(file));
		}
		
		public String next() throws IOException {
			while (st == null || !st.hasMoreTokens())
				st = new StringTokenizer(br.readLine());
			return st.nextToken();
		}
		public int nextInt() throws IOException {
			return Integer.parseInt(next());
		}
		public long nextLong() throws IOException {
			return Long.parseLong(next());
		}
		public String nextLine() throws IOException {
			return br.readLine();
		}
		public double nextDouble() throws IOException {
			return Double.parseDouble(next());
		}
		public boolean ready() throws IOException {
			return br.ready();
		}
		public int[] nextIntArr(int n) throws IOException{
			int arr[]=new int[n];
			for(int i=0;i<n;i++)arr[i]=nextInt();
			return arr;
		}
		public BigInteger BigInteger(String s) throws IOException{
			BigInteger a=new BigInteger(s);
			return a;
		}
	}
}
","import java.io.*;
import java.util.*;
import java.math.BigInteger;
public class Main {
	static PrintWriter out=new PrintWriter(System.out);
	static Scanner sc=new Scanner(System.in);
	
	public static void main(String[] args) throws Exception {
		String s=sc.next();
		out.println(s.toUpperCase());
		out.close();
		
	}
		
	
	static class Pair implements Comparable<Pair>{
		int x;
		int y;
		public Pair(int x,int y) {
			this.x=x;
			this.y=y;
		}
		public int compareTo(Pair o) {
			return this.x-o.x;
		}
		public String toString() {
			return ""(""+this.x+"",""+this.y+"")"";
		}
		
	}
	static class Scanner {
		StringTokenizer st;
		BufferedReader br;
		public Scanner(InputStream s) {
			br = new BufferedReader(new InputStreamReader(s));
		}
		public Scanner(String file) throws FileNotFoundException {
			br = new BufferedReader(new FileReader(file));
		}
		
		public String next() throws IOException {
			while (st == null || !st.hasMoreTokens())
				st = new StringTokenizer(br.readLine());
			return st.nextToken();
		}
		public int nextInt() throws IOException {
			return Integer.parseInt(next());
		}
		public long nextLong() throws IOException {
			return Long.parseLong(next());
		}
		public String nextLine() throws IOException {
			return br.readLine();
		}
		public double nextDouble() throws IOException {
			return Double.parseDouble(next());
		}
		public boolean ready() throws IOException {
			return br.ready();
		}
		public int[] nextIntArr(int n) throws IOException{
			int arr[]=new int[n];
			for(int i=0;i<n;i++)arr[i]=nextInt();
			return arr;
		}
		public BigInteger BigInteger(String s) throws IOException{
			BigInteger a=new BigInteger(s);
			return a;
		}
	}
}
",CE
yoshikyu ,abc292/A,Java,"public class Main{
  	public static void main (String[] args){
      String a = new java.util.Scanner(System.in).nextLine();
      System.out.println(a.trim().upperCase());
    }
}
","public class Main {
    public static void main(String[] args){
        String a = new java.util.Scanner(System.in).nextLine();
        System.out.println(a.trim().toUpperCase());
    }
}
",CE
seyjs ,abc292/A,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.IntStream;
import java.util.stream.Stream;


public class A_CAPSLOCK {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        String str = bufferedReader.readLine().trim();
        System.out.println(str.toUpperCase());
        bufferedReader.close();

    }
}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.IntStream;
import java.util.stream.Stream;


public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        String str = bufferedReader.readLine().trim();
        System.out.println(str.toUpperCase());
        bufferedReader.close();

    }
}
",CE
numacci ,abc292/A,Java,"package abc292.a;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.*;

public class Main {

    
    static void solve() {
        String S = fr.next();
        println(S.toUpperCase());
    }

    
    public static void main(String[] args) {
        solve();
        flush();
    }

    
    static FastReader fr = new FastReader();

    static class FastReader {

        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        char nextChar() {
            return next().charAt(0);
        }

        String nextLine() {
            String str = """";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }

    
    static PrintWriter out = new PrintWriter(System.out);

    static void println(Object o) {
        out.println(o);
    }

    static void flush() {
        out.flush();
    }
}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.*;

public class Main {

    
    static void solve() {
        String S = fr.next();
        println(S.toUpperCase());
    }

    
    public static void main(String[] args) {
        solve();
        flush();
    }

    
    static FastReader fr = new FastReader();

    static class FastReader {

        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        char nextChar() {
            return next().charAt(0);
        }

        String nextLine() {
            String str = """";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }

    
    static PrintWriter out = new PrintWriter(System.out);

    static void println(Object o) {
        out.println(o);
    }

    static void flush() {
        out.flush();
    }
}
",RE
TusharMishra22 ,abc292/A,Java,"import java.io.*;
import java.util.*;
public class Main
{
public static void main(String[] args)
{
	BufferedReader reader=new BufferedReader(new InputStreamReader(System.in));
  	String s=reader.readLine();
  	
  
  	StringBuilder sb=new StringBuilder();
  	for(char c:s.toCharArray())
    {
    	sb.append(Character.toUpperCase(c));
    }
  
  
  	System.out.println(sb.toString());
}

}
","import java.io.*;
import java.util.*;
public class Main
{
public static void main(String[] args) throws IOException
{
	BufferedReader reader=new BufferedReader(new InputStreamReader(System.in));
  	String s=reader.readLine();
  	
  
  	StringBuilder sb=new StringBuilder();
  	for(char c:s.toCharArray())
    {
    	sb.append(Character.toUpperCase(c));
    }
  
  
  	System.out.println(sb.toString());
}

}
",CE
zyuwaaaa ,abc292/A,Java,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String str = Integer.parseInt(sc.next());
      　System.out.println(str.toUpperCase());
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String str = sc.next();
      System.out.println(str.toUpperCase());
    }
}
",CE
nidhi123 ,abc292/A,Java,"

import java.util.Scanner;

public class q2 {

	public static void main(String[] args) {
		 Scanner sc= new Scanner(System.in);
		    String str= sc.next();
		    System.out.println(str.toUpperCase());

	}

}
","import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		 Scanner sc= new Scanner(System.in);
		    String str= sc.next();
		    System.out.println(str.toUpperCase());

	}

}
",CE
maverick1729 ,abc292/A,Java,"import java.io.*;
import java.util.*;

public class AtBC292E {
    static final boolean debug = false;

    public static void main(String[] args) {
        FastScanner fs = new FastScanner();
        PrintWriter out = new PrintWriter(System.out);
        String s=fs.next();
        System.out.println(s.toUpperCase());
        out.close();
    }

    static boolean inRange(int lookingFor, int[] indexesOf, int curL, int curR) {
        int index = indexesOf[lookingFor];
        return index >= curL && index <= curR;
    }

    static long nC2(long n) {
        return n * (n + 1) / 2;
    }

    static final Random random = new Random();
    static final int mod = 1_000_000_007;

    static void ruffleSort(int[] a) {
        int n = a.length;
        for (int i = 0; i < n; i++) {
            int oi = random.nextInt(n), temp = a[oi];
            a[oi] = a[i];
            a[i] = temp;
        }
        Arrays.sort(a);
    }

    static long add(long a, long b) {
        return (a + b) % mod;
    }

    static long sub(long a, long b) {
        return ((a - b) % mod + mod) % mod;
    }

    static long mul(long a, long b) {
        return (a * b) % mod;
    }

    static long exp(long base, long exp) {
        if (exp == 0) return 1;
        long half = exp(base, exp / 2);
        if (exp % 2 == 0) return mul(half, half);
        return mul(half, mul(half, base));
    }

    static long[] factorials = new long[2_000_001];
    static long[] invFactorials = new long[2_000_001];

    static void precompFacts() {
        factorials[0] = invFactorials[0] = 1;
        for (int i = 1; i < factorials.length; i++) factorials[i] = mul(factorials[i - 1], i);
        invFactorials[factorials.length - 1] = exp(factorials[factorials.length - 1], mod - 2);
        for (int i = invFactorials.length - 2; i >= 0; i--)
            invFactorials[i] = mul(invFactorials[i + 1], i + 1);
    }

    static long nCk(int n, int k) {
        return mul(factorials[n], mul(invFactorials[k], invFactorials[n - k]));
    }

    static void sort(int[] a) {
        ArrayList<Integer> l = new ArrayList<>();
        for (int i : a) l.add(i);
        Collections.sort(l);
        for (int i = 0; i < a.length; i++) a[i] = l.get(i);
    }


    static class FastScanner {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer("""");

        public FastScanner() {
            try {
                br = new BufferedReader(new FileReader(new File(""data.in"")));
            } catch (Throwable e) {
                br = new BufferedReader(new InputStreamReader(System.in));
                st = new StringTokenizer("""");
            }
        }

        String next() {
            while (!st.hasMoreTokens())
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        int[] readArray(int n) {
            int[] a = new int[n];
            for (int i = 0; i < n; i++) a[i] = nextInt();
            return a;
        }

        long nextLong() {
            return Long.parseLong(next());
        }
    }


}

","import java.io.*;
import java.util.*;

public class Main {
    static final boolean debug = false;

    public static void main(String[] args) {
        FastScanner fs = new FastScanner();
        PrintWriter out = new PrintWriter(System.out);
        String s=fs.next();
        System.out.println(s.toUpperCase());
        out.close();
    }

    static boolean inRange(int lookingFor, int[] indexesOf, int curL, int curR) {
        int index = indexesOf[lookingFor];
        return index >= curL && index <= curR;
    }

    static long nC2(long n) {
        return n * (n + 1) / 2;
    }

    static final Random random = new Random();
    static final int mod = 1_000_000_007;

    static void ruffleSort(int[] a) {
        int n = a.length;
        for (int i = 0; i < n; i++) {
            int oi = random.nextInt(n), temp = a[oi];
            a[oi] = a[i];
            a[i] = temp;
        }
        Arrays.sort(a);
    }

    static long add(long a, long b) {
        return (a + b) % mod;
    }

    static long sub(long a, long b) {
        return ((a - b) % mod + mod) % mod;
    }

    static long mul(long a, long b) {
        return (a * b) % mod;
    }

    static long exp(long base, long exp) {
        if (exp == 0) return 1;
        long half = exp(base, exp / 2);
        if (exp % 2 == 0) return mul(half, half);
        return mul(half, mul(half, base));
    }

    static long[] factorials = new long[2_000_001];
    static long[] invFactorials = new long[2_000_001];

    static void precompFacts() {
        factorials[0] = invFactorials[0] = 1;
        for (int i = 1; i < factorials.length; i++) factorials[i] = mul(factorials[i - 1], i);
        invFactorials[factorials.length - 1] = exp(factorials[factorials.length - 1], mod - 2);
        for (int i = invFactorials.length - 2; i >= 0; i--)
            invFactorials[i] = mul(invFactorials[i + 1], i + 1);
    }

    static long nCk(int n, int k) {
        return mul(factorials[n], mul(invFactorials[k], invFactorials[n - k]));
    }

    static void sort(int[] a) {
        ArrayList<Integer> l = new ArrayList<>();
        for (int i : a) l.add(i);
        Collections.sort(l);
        for (int i = 0; i < a.length; i++) a[i] = l.get(i);
    }


    static class FastScanner {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer("""");

        public FastScanner() {
            try {
                br = new BufferedReader(new FileReader(new File(""data.in"")));
            } catch (Throwable e) {
                br = new BufferedReader(new InputStreamReader(System.in));
                st = new StringTokenizer("""");
            }
        }

        String next() {
            while (!st.hasMoreTokens())
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        int[] readArray(int n) {
            int[] a = new int[n];
            for (int i = 0; i < n; i++) a[i] = nextInt();
            return a;
        }

        long nextLong() {
            return Long.parseLong(next());
        }
    }


}

",CE
ArchWizard7 ,abc292/A,Java,"public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        System.out.println(S.toUpperCase());
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        System.out.println(S.toUpperCase());
    }
}
",CE
ayman01287985950 ,abc292/A,Java,"import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;



public class Main {
  public static void main(String[] args) {
   Scanner sc = new Scanner(System.in);
    sin = sc.nextLine();
    System.out.println(sin.toUpperCase());
  }
}
","import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;



public class Main {
  public static void main(String[] args) {
   Scanner sc = new Scanner(System.in);
 String   sin = sc.nextLine();
    System.out.println(sin.toUpperCase());
  }
}
",CE
ayman01287985950 ,abc292/A,Java,"import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {
	
    
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
        String sin = sc.nextLine();
      	System.out.println(sin.toUpperCase());
    }
}
","import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;



public class Main {
  public static void main(String[] args) {
   Scanner sc = new Scanner(System.in);
 String   sin = sc.nextLine();
    System.out.println(sin.toUpperCase());
  }
}
",CE
ayman01287985950 ,abc292/A,Java,"import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;



public class Main {
  public static void main(String[] args) {
  String Scanner sc = new Scanner(System.in);
    sin = sc.nextLine();
    System.out.println(sin.toUpperCase());
  }
}
","import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;



public class Main {
  public static void main(String[] args) {
   Scanner sc = new Scanner(System.in);
 String   sin = sc.nextLine();
    System.out.println(sin.toUpperCase());
  }
}
",CE
ayman01287985950 ,abc292/A,Java,"import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;



public class Main {
  public static void main(String[] args) {
   Scanner sc = new Scanner();
    sin = sc.nextLine();
    System.out.println(sin.toUpperCase());
  }
}
","import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;



public class Main {
  public static void main(String[] args) {
   Scanner sc = new Scanner(System.in);
 String   sin = sc.nextLine();
    System.out.println(sin.toUpperCase());
  }
}
",CE
ayman01287985950 ,abc292/A,Java,"import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {
	
    
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
        String sin = sc.nextLine();
      	System.out.println(sin.toUpperCase());
    	
}
","import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;



public class Main {
  public static void main(String[] args) {
   Scanner sc = new Scanner(System.in);
 String   sin = sc.nextLine();
    System.out.println(sin.toUpperCase());
  }
}
",CE
ayman01287985950 ,abc292/A,Java,"import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;


	
    
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
        String sin = sc.nextLine();
      	System.out.println(sin.toUpperCase());
    }
","import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;



public class Main {
  public static void main(String[] args) {
   Scanner sc = new Scanner(System.in);
 String   sin = sc.nextLine();
    System.out.println(sin.toUpperCase());
  }
}
",CE
gaps ,abc292/A,Java,"import java.util.* 

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        System.out.println(s.toUpperCase());
    }
}
","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        System.out.println(s.toUpperCase());
    }
}
",CE
buridaikon ,abc292/A,Java,"import java.util.*;
public class Main {
  public static void main(String[] args) {
    Scanner scan = new Scanner(System.in);
    String string = scan.next();
    string = string + ('a'-'A');
    System.out.println(string);
    scan.close();
  }
}
","import java.util.*;
public class Main {
  public static void main(String[] args) {
    Scanner scan = new Scanner(System.in);
    String string = scan.next();
    string = string.toUpperCase();
    System.out.println(string);
    scan.close();
  }
}
",WA
Pretzelisa ,abc292/A,Java,"import java.util.*;
public class Main {
  public static void main(String[] args){
    Scanner sc = new Scanner(System.in);
    String str1 = sc.nextString();
    System.out.println(str1.toUpperCase());
  }
}
","import java.util.*;
public class Main {
  public static void main(String[] args){
    Scanner sc = new Scanner(System.in);
    String str1 = sc.nextLine();
    System.out.println(str1.toUpperCase());
  }
}
",CE
Pretzelisa ,abc292/A,Java,"import java.util.*;
public class Main {
  public static void main(String[] args){
    Scanner sc = new Scanner(System.in);
    String str1 = sc.nextString();
    
    System.out.println(str1.toUpperCase());
  }
}
","import java.util.*;
public class Main {
  public static void main(String[] args){
    Scanner sc = new Scanner(System.in);
    String str1 = sc.nextLine();
    System.out.println(str1.toUpperCase());
  }
}
",CE
Pretzelisa ,abc292/A,Java,"import java.util.*;
public class Main {
  public static void main(String[] args){
    Scanner sc = new Scanner(System.in);\
    String str1 = sc.nextString();
    System.out.println(str1.toUpperCase());
  }
}
","import java.util.*;
public class Main {
  public static void main(String[] args){
    Scanner sc = new Scanner(System.in);
    String str1 = sc.nextLine();
    System.out.println(str1.toUpperCase());
  }
}
",CE
Pretzelisa ,abc292/A,Java,"import java.util.*;
public class Main {
  public static void main(String[] args){
    Scanner sc = new Scanner(System.in);
    String str1 = sc.nextString();
    
    System.out.println(str1.toUpperCase());
","import java.util.*;
public class Main {
  public static void main(String[] args){
    Scanner sc = new Scanner(System.in);
    String str1 = sc.nextLine();
    System.out.println(str1.toUpperCase());
  }
}
",CE
Nissi1 ,abc292/A,Java,"

import java.awt.*;
import java.lang.*;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Optional;
import java.util.Scanner;
import java.util.Set;
import java.util.Stack;
import java.util.regex.Pattern;
import java.io.*;
import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.OptionalInt;
import java.util.stream.IntStream;

import javax.swing.JOptionPane;

import static java.lang.Math.*;
import java.util.OptionalInt;
import java.util.stream.IntStream;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;
import java.math.BigInteger;
import java.util.Queue;

public class Main {
	static Scanner sc = new Scanner(System.in);
	

	

	public static void solve() {
		String s=sc.next();
		s.toUpperCase();
		System.out.println(s);
	}


	public static void main(String[] args) throws java.lang.Exception {
		Main e = new Main();
		Scanner sc = new Scanner(System.in);
		int t=1;
		
		
		while (t-- > 0) {
			solve();
			System.out.flush();
		}
	}
}

","

import java.awt.*;
import java.lang.*;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Optional;
import java.util.Scanner;
import java.util.Set;
import java.util.Stack;
import java.util.regex.Pattern;
import java.io.*;
import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.OptionalInt;
import java.util.stream.IntStream;

import javax.swing.JOptionPane;

import static java.lang.Math.*;
import java.util.OptionalInt;
import java.util.stream.IntStream;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;
import java.math.BigInteger;
import java.util.Queue;

public class Main {
	static Scanner sc = new Scanner(System.in);
	

	

	public static void solve() {
		String s=sc.next();
		s =s.toUpperCase();
		System.out.println(s);
	}


	public static void main(String[] args) throws java.lang.Exception {
		Main e = new Main();
		Scanner sc = new Scanner(System.in);
		int t=1;
		
		
		while (t-- > 0) {
			solve();
			System.out.flush();
		}
	}
}

",WA
AXZ ,abc292/A,Java,"import java.util.*;

public class main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        String line = sc.nextLine();
        
        System.out.println(line.toUpperCase());
    }
}
","import java.util.*;

public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        String line = sc.nextLine();
        
        System.out.println(line.toUpperCase());
    }
}
",CE
miyamod ,abc292/A,Java,"import java.util.Scanner;
 
public class Main {
  public static void main(String[] args){
    Scanner scanner = new.Scanner(System.in);
    String array = scanner.next();
    System.out.println(array.toUpperCase());
  }
}
","import java.util.Scanner;
 
public class Main {
  public static void main(String[] args){
    Scanner scanner = new Scanner(System.in);
    String array = scanner.next();
    System.out.println(array.toUpperCase());
  }
}
",CE
miyamod ,abc292/A,Java,"public class Main {
  public static void main(String[] args){
    Scanner scanner = new Scanner(System.in);
    String array = scanner.next();
    System.out.println(array.toUpperCase());
  }
}
","import java.util.Scanner;
 
public class Main {
  public static void main(String[] args){
    Scanner scanner = new Scanner(System.in);
    String array = scanner.next();
    System.out.println(array.toUpperCase());
  }
}
",CE
miyamod ,abc292/A,Java,"public class Main{
  public static void main{
    Scanner scanner = new Scanner(System.in);
    String array = scanner.next();
    System.out.println(array.toUpperCase());
  }
}
","import java.util.Scanner;
 
public class Main {
  public static void main(String[] args){
    Scanner scanner = new Scanner(System.in);
    String array = scanner.next();
    System.out.println(array.toUpperCase());
  }
}
",CE
bananann ,abc292/A,Java,"import java.util.Scanner;
public class Main {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		
		String s=sc.next();
		String []t=s.split("""");
		for(int i=0;i<t.length;i++) {
			char a=s.charAt(i& 0x5f);
			 a&= 0x5f;
			System.out.print(a);
		}
		

	}

}
","import java.util.Scanner;
public class Main {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		
		String s=sc.next();
		String []t=s.split("""");
		for(int i=0;i<t.length;i++) {
			char a=s.charAt(i);
			 a&= 0x5f;
			System.out.print(a);
		}
		

	}

}
",WA
bananann ,abc292/A,Java,"import java.util.Scanner;
public class Main {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		
		String s=sc.next();
		String []t=s.split("""");
		for(int i=0;i<t.length;i++) {
			char a=s.charAt(i& 0x5f);
			 a&= 0x5f;
			System.out.println(a);
		}
		

	}

}
","import java.util.Scanner;
public class Main {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		
		String s=sc.next();
		String []t=s.split("""");
		for(int i=0;i<t.length;i++) {
			char a=s.charAt(i);
			 a&= 0x5f;
			System.out.print(a);
		}
		

	}

}
",WA
JCrossover_14 ,abc292/A,Java,"import java.util.Scanner;

public class Lol
{
    public static void main(String[] args)
    {
        Scanner input = new Scanner(System.in);
        String theIn = input.nextLine();
        System.out.println(theIn.toUpperCase());
    }
}
","import java.util.Scanner;

public class Main
{
    public static void main(String[] args)
    {
        Scanner input = new Scanner(System.in);
        String theIn = input.nextLine();
        System.out.println(theIn.toUpperCase());
    }
}
",CE
JCrossover_14 ,abc292/A,Java,"import java.util.Scanner;

public class Lol 
{
    public static void main(String[] args) 
    {
        Scanner input = new Scanner(System.in);
        String theIn = input.nextLine();
        System.out.println(theIn.toUpperCase())        
    }
}
","import java.util.Scanner;

public class Main
{
    public static void main(String[] args)
    {
        Scanner input = new Scanner(System.in);
        String theIn = input.nextLine();
        System.out.println(theIn.toUpperCase());
    }
}
",CE
Mossholder ,abc292/A,Java,"import java.util.*;
import java.io.*;

public class Main {
	public static void main(String[] args) {
		Kattio io = new Kattio();
		new A().solution(io);
		io.flush();
	}
}


class A {
	public void solution(Kattio io) {
		String str = io.next();
		String ans = """";
		for(char c : str.toCharArray())
			ans += c - 'a' + 'A';
		io.println(ans);
	}
}

class Kattio extends PrintWriter {
    private BufferedReader r;
    private StringTokenizer st;
    
    public Kattio() { this(System.in, System.out); }
    public Kattio(InputStream i, OutputStream o) {
        super(o);
        r = new BufferedReader(new InputStreamReader(i));
    }
    
    public Kattio(String intput, String output) throws IOException {
        super(output);
        r = new BufferedReader(new FileReader(intput));
    }
    
    public String next() {
        try {
            while (st == null || !st.hasMoreTokens())
                st = new StringTokenizer(r.readLine());
            return st.nextToken();
        } catch (Exception e) {}
        return null;
    }
    public int nextInt() { return Integer.parseInt(next()); }
    public double nextDouble() { return Double.parseDouble(next()); }
    public long nextLong() { return Long.parseLong(next()); }
}
","import java.util.*;
import java.io.*;
public class Main {
	public static void main(String[] args) {
		Kattio io = new Kattio();
		new A().solution(io);
		io.flush();
	}
}
class A {
	public void solution(Kattio io) {
		String str = io.next();
		String ans = """";
		for(char c : str.toCharArray())
			ans += (char) (c - 'a' + 'A');
		io.println(ans);
	}
}


class Kattio extends PrintWriter {
    private BufferedReader r;
    private StringTokenizer st;
    
    public Kattio() { this(System.in, System.out); }
    public Kattio(InputStream i, OutputStream o) {
        super(o);
        r = new BufferedReader(new InputStreamReader(i));
    }
    
    public Kattio(String intput, String output) throws IOException {
        super(output);
        r = new BufferedReader(new FileReader(intput));
    }
    
    public String next() {
        try {
            while (st == null || !st.hasMoreTokens())
                st = new StringTokenizer(r.readLine());
            return st.nextToken();
        } catch (Exception e) {}
        return null;
    }
    public int nextInt() { return Integer.parseInt(next()); }
    public double nextDouble() { return Double.parseDouble(next()); }
    public long nextLong() { return Long.parseLong(next()); }
}
",WA
TianZ_Tm ,abc292/A,Java,"public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String n = scanner.next();
        String s = n.toUpperCase();
        System.out.println(s);
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String n = scanner.next();
        String s = n.toUpperCase();
        System.out.println(s);
    }
}
",CE
Willow_ ,abc292/A,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.StringTokenizer;
 
public class  main{
    public static void main(String[] args) throws IOException {
        FastScanner sc = new FastScanner();
        PrintWriter pw = new PrintWriter(System.out);
        String s = sc.nextToken();
        String s1 = """";
        for (char c : s.toCharArray()) s1 += Character.toUpperCase(c);
        System.out.println(s1);
        pw.flush();
    }
 
 
    static class FastScanner {
        BufferedReader in;
        StringTokenizer st;
 
        public FastScanner() {
            this.in = new BufferedReader(new InputStreamReader(System.in));
        }
 
        public String nextToken() {
            while (st == null || !st.hasMoreTokens()) {
                try {
                    st = new StringTokenizer(in.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }
 
        public int nextInt() {
            return Integer.parseInt(nextToken());
        }
 
        public long nextLong() {
            return Long.parseLong(nextToken());
        }
 
        public double nextDouble() {
            return Double.parseDouble(nextToken());
        }
 
        public void close() throws IOException {
            in.close();
        }
    }
}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.StringTokenizer;
 
public class  Main{
    public static void main(String[] args) throws IOException {
        FastScanner sc = new FastScanner();
        PrintWriter pw = new PrintWriter(System.out);
        String s = sc.nextToken();
        String s1 = """";
        for (char c : s.toCharArray()) s1 += Character.toUpperCase(c);
        System.out.println(s1);
        pw.flush();
    }
 
 
    static class FastScanner {
        BufferedReader in;
        StringTokenizer st;
 
        public FastScanner() {
            this.in = new BufferedReader(new InputStreamReader(System.in));
        }
 
        public String nextToken() {
            while (st == null || !st.hasMoreTokens()) {
                try {
                    st = new StringTokenizer(in.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }
 
        public int nextInt() {
            return Integer.parseInt(nextToken());
        }
 
        public long nextLong() {
            return Long.parseLong(nextToken());
        }
 
        public double nextDouble() {
            return Double.parseDouble(nextToken());
        }
 
        public void close() throws IOException {
            in.close();
        }
    }
}
",CE
eY0 ,abc292/A,Java,"import java.util.Scanner;

public class A {
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		String s = scanner.next();
		System.out.println(s.toUpperCase());
		scanner.close();
	}

}
","import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		String s = scanner.next();
		System.out.println(s.toUpperCase());
		scanner.close();
	}

}
",CE
eY0 ,abc292/A,Java,"import java.util.Scanner;


public class A {
	

	public static void main(String[] args) {
		
		Scanner scanner = new Scanner(System.in);
		String s = scanner.next();
		System.out.println(s.toUpperCase());
		
	}

}
","import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		String s = scanner.next();
		System.out.println(s.toUpperCase());
		scanner.close();
	}

}
",CE
minhmdl48 ,abc292/A,Java,"import java.util.Scanner;

public class java1 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String str = sc.nextLine();
        System.out.println(str.toUpperCase());
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String str = sc.nextLine();
        System.out.println(str.toUpperCase());
    }
}
",CE
Rohitpandey ,abc292/A,Java,"import java.util.*;
public class WordCapitalization{
    public static void main(String[]args){
        Scanner sc=new Scanner(System.in);
        String str=sc.nextLine();
        System.out.print(str.toUpperCase());
    }
}
","import java.util.*;
public class Main{
    public static void main(String[]args){
        Scanner sc=new Scanner(System.in);
        String str=sc.nextLine();
        System.out.print(str.toUpperCase());
    }
}
",CE
Bollam_shiva_07 ,abc292/A,Java,"import java.util.Scanner;

public class Main{
public static void name(String Word) {
    if(Word != null){
        System.out.println(Word.toUpperCase());
    }
}

public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    System.out.println((""Enter String:""));
    String string1 = scanner.next();
    name(string1);
    
}}
","import java.util.Scanner;

public class Main{
public static void name(String Word) {
    if(Word != null){
        System.out.println(Word.toUpperCase());
    }
}

public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String string1 = scanner.next();
    name(string1);
    
}}

",WA
Bollam_shiva_07 ,abc292/A,Java,"import java.util.Scanner;

class Main{
public static void name(String Word) {
    if(Word != null){
        System.out.println(Word.toUpperCase());
    }
}
public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    System.out.println((""Enter String:""));
    String string1 = scanner.next();
    name(string1);
    
}}
","import java.util.Scanner;

public class Main{
public static void name(String Word) {
    if(Word != null){
        System.out.println(Word.toUpperCase());
    }
}

public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String string1 = scanner.next();
    name(string1);
    
}}

",WA
Bollam_shiva_07 ,abc292/A,Java,"import java.util.Scanner;

public class A_caps_lock{
public static void name(String Word) {
    if(Word != null){
        System.out.println(Word.toUpperCase());
    }
}
public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    System.out.println((""Enter String:""));
    String string1 = scanner.next();
    name(string1);
    
}}
","import java.util.Scanner;

public class Main{
public static void name(String Word) {
    if(Word != null){
        System.out.println(Word.toUpperCase());
    }
}

public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String string1 = scanner.next();
    name(string1);
    
}}

",CE
Nanthakumar ,abc292/A,Java,"import java.io.*;
import java.util.*;
public class Main
{
  public static void main(String[] args)
  {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    String inp = br.readLine();
    System.out.println(inp.toUpperCase());
  }
}
","import java.io.*;
import java.util.*;
public class Main
{
  public static void main(String[] args) throws IOException
  {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    String inp = br.readLine();
    System.out.println(inp.toUpperCase());
  }
}
",CE
Fusor ,abc292/A,Java,"package Atcoder;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

class Main{
    public static void main(String[] args) throws IOException {
        BufferedReader reader= new BufferedReader(new InputStreamReader(System.in));
        String s = reader.readLine();
        System.out.println(s.toUpperCase());

    }
}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
 
class Main{
    public static void main(String[] args) throws IOException {
        BufferedReader reader= new BufferedReader(new InputStreamReader(System.in));
        String s = reader.readLine();
        System.out.println(s.toUpperCase());
 
    }
}
",RE
starlove ,abc292/A,Java,"import java.util.Scanner;

public class Hello {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        String ans = s.toUpperCase();
        System.out.println(ans);
    }
}
","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        String ans = s.toUpperCase();
        System.out.println(ans);
    }
}
",CE
kero0331 ,abc293/C,Java,"import java.util.*;
public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int H = Integer.parseInt(sc.next());
        int W = Integer.parseInt(sc.next());
        int[][] A = new int[H+1][W+1];
        for(int i = 1; i<=H; i++){
            for(int j = 1; j<=W; j++){
                A[i][j] = Integer.parseInt(sc.next());
            }
        }
        long ans = 0;
        int HW2 = H + W -2;
        for(int i = 1; i<1<<HW2; i++){
        Set<Integer> set = new HashSet<>();
            set.add(A[1][1]);
            int x = 1;
            int y = 1;
            String bit = Integer.toBinaryString(i);
            String Bit = String.format(""%"" + HW2 + ""s"", bit).replace("" "",""0"");
            int ct1 = 0;
            for(int j = 0; j<HW2; j++){
                if(Bit.charAt(j) == '1'){
                    ct1++;
                }
            }
            if(ct1 == W-1){
                for(int k = 0; k<HW2; k++){
                    if(Bit.charAt(k) == '1'){
                        x++;
                    }
                    else{
                        y++;
                    }
                    if(!(set.contains(A[y][x]))){
                        set.add(A[y][x]);
                    }
                    else{
                        break;
                    }
                    if(set.size() == HW2){
                        ans++;
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
","import java.util.*;
public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int H = Integer.parseInt(sc.next());
        int W = Integer.parseInt(sc.next());
        int[][] A = new int[H+1][W+1];
        for(int i = 1; i<=H; i++){
            for(int j = 1; j<=W; j++){
                A[i][j] = Integer.parseInt(sc.next());
            }
        }
        long ans = 0;
        int HW2 = H + W -2;
        for(int i = 1; i<1<<HW2; i++){
        Set<Integer> set = new HashSet<>();
            set.add(A[1][1]);
            int x = 1;
            int y = 1;
            String bit = Integer.toBinaryString(i);
            String Bit = String.format(""%"" + HW2 + ""s"", bit).replace("" "",""0"");
            int ct1 = 0;
            for(int j = 0; j<HW2; j++){
                if(Bit.charAt(j) == '1'){
                    ct1++;
                }
            }
            if(ct1 == W-1){
                for(int k = 0; k<HW2; k++){
                    if(Bit.charAt(k) == '1'){
                        x++;
                    }
                    else{
                        y++;
                    }
                    if(!(set.contains(A[y][x]))){
                        set.add(A[y][x]);
                    }
                    else{
                        break;
                    }
                    if(set.size() == HW2+1){
                        ans++;
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
",WA
kero0331 ,abc293/C,Java,"import java.util.*;
public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int H = Integer.parseInt(sc.next());
        int W = Integer.parseInt(sc.next());
        int[][] A = new int[H+1][W+1];
        for(int i = 1; i<=H; i++){
            for(int j = 1; j<=W; j++){
                A[i][j] = Integer.parseInt(sc.next());
            }
        }
        long ans = 0;
        int HW2 = H + W -2;
        for(int i = 1; i<1<<HW2; i++){
        Set<Integer> set = new HashSet<>();
            set.add(A[1][1]);
            int x = 1;
            int y = 1;
            String bit = Integer.toBinaryString(i);
            String Bit = String.format(""%"" + HW2 + ""s"", bit).replace("" "",""0"");
            int ct1 = 0;
            for(int j = 0; j<HW2; j++){
                if(Bit.charAt(j) == '1'){
                    ct1++;
                }
            }
            if(ct1 == W-1){
                for(int k = HW2; k>0; k--){
                    if(Bit.charAt(k-1) == '1'){
                        x++;
                    }
                    else{
                        y++;
                    }
                    if(!(set.contains(A[y][x]))){
                        set.add(A[y][x]);
                    }
                    else{
                        break;
                    }
                    if(set.size() == HW2){
                        ans++;
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
","import java.util.*;
public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int H = Integer.parseInt(sc.next());
        int W = Integer.parseInt(sc.next());
        int[][] A = new int[H+1][W+1];
        for(int i = 1; i<=H; i++){
            for(int j = 1; j<=W; j++){
                A[i][j] = Integer.parseInt(sc.next());
            }
        }
        long ans = 0;
        int HW2 = H + W -2;
        for(int i = 1; i<1<<HW2; i++){
        Set<Integer> set = new HashSet<>();
            set.add(A[1][1]);
            int x = 1;
            int y = 1;
            String bit = Integer.toBinaryString(i);
            String Bit = String.format(""%"" + HW2 + ""s"", bit).replace("" "",""0"");
            int ct1 = 0;
            for(int j = 0; j<HW2; j++){
                if(Bit.charAt(j) == '1'){
                    ct1++;
                }
            }
            if(ct1 == W-1){
                for(int k = 0; k<HW2; k++){
                    if(Bit.charAt(k) == '1'){
                        x++;
                    }
                    else{
                        y++;
                    }
                    if(!(set.contains(A[y][x]))){
                        set.add(A[y][x]);
                    }
                    else{
                        break;
                    }
                    if(set.size() == HW2+1){
                        ans++;
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
",WA
Kimu_1024 ,abc293/C,Java,"import java.util.HashSet;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;
import java.util.Set;

public class Main {
	public static int[][] a;

	public static void main(String[] args) {
		try (Scanner sc = new Scanner(System.in)) {
			int h = sc.nextInt();
			int w = sc.nextInt();
			a = new int[h][w];
			for (int i = 0; i < h; i++) {
				for (int j = 0; j < w; j++) {
					a[i][j] = sc.nextInt();
				}
			}

			Queue<Path> q = new LinkedList<>();
			q.add(new Path(0, 0, new HashSet<>()));

			int ans = 0;
			while (q.size() > 0) {
				Path tmp = q.poll();
				if (tmp.x + 1 < w) {
					if (!tmp.numbers.contains(a[tmp.x + 1][tmp.y])) {
						q.add(new Path(tmp.x + 1, tmp.y, tmp.numbers));
					}
				}
				if (tmp.y + 1 < h) {
					if (!tmp.numbers.contains(a[tmp.x][tmp.y + 1])) {
						q.add(new Path(tmp.x, tmp.y + 1, tmp.numbers));
					}
				}
				if (tmp.x == w - 1 && tmp.y == h - 1) {
					ans++;
				}
			}
			System.out.println(ans);
		}
	}

	public static class Path {
		int x;
		int y;
		Set<Integer> numbers;

		public Path(int x, int y, Set<Integer> past) {
			this.x = x;
			this.y = y;
			numbers = new HashSet<>(past);
			numbers.add(a[x][y]);
		}
	}
}
","import java.util.HashSet;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;
import java.util.Set;

public class Main {
	public static int[][] a;

	public static void main(String[] args) {
		try (Scanner sc = new Scanner(System.in)) {
			int h = sc.nextInt();
			int w = sc.nextInt();
			a = new int[h][w];
			for (int i = 0; i < h; i++) {
				for (int j = 0; j < w; j++) {
					a[i][j] = sc.nextInt();
				}
			}

			Queue<Path> q = new LinkedList<>();
			q.add(new Path(0, 0, new HashSet<>()));

			int ans = 0;
			while (q.size() > 0) {
				Path tmp = q.poll();
				if (tmp.x + 1 < h) {
					if (!tmp.numbers.contains(a[tmp.x + 1][tmp.y])) {
						q.add(new Path(tmp.x + 1, tmp.y, tmp.numbers));
					}
				}
				if (tmp.y + 1 < w) {
					if (!tmp.numbers.contains(a[tmp.x][tmp.y + 1])) {
						q.add(new Path(tmp.x, tmp.y + 1, tmp.numbers));
					}
				}
				if (tmp.x == h - 1 && tmp.y == w - 1) {
					ans++;
				}
			}
			System.out.println(ans);
		}
	}

	public static class Path {
		int x;
		int y;
		Set<Integer> numbers;

		public Path(int x, int y, Set<Integer> past) {
			this.x = x;
			this.y = y;
			numbers = new HashSet<>(past);
			numbers.add(a[x][y]);
		}
	}
}
",RE
HassanU ,abc293/C,Java,"import java.io.*;
import java.util.*;
import java.math.BigInteger;
public class D {
	static PrintWriter out=new PrintWriter(System.out);
	static Scanner sc=new Scanner(System.in);
	static int dx[]=new int[] {1,0},dy[]=new int[] {0,1};
	static Map<Integer,Integer>hm=new HashMap<>();
	static int[][]mat;
	public static boolean isValid(int x,int y) {
		return x<mat.length&&y<mat[0].length;
	}
	public static void add(int a) {
		if(hm.containsKey(a))hm.put(a, hm.get(a)+1);
		else hm.put(a, 1);
	}
	public static void remove(int b) {
		if(hm.get(b)==1)hm.remove(b);
		else hm.put(b, hm.get(b)-1);
	}
	public static boolean check() {
		return hm.size()==mat.length+mat[0].length-1;
	}
	public static int dfs(int i,int j) {
		if(i==mat.length-1&&j==mat[0].length-1) {
			add(mat[i][j]);
			if(check())return 1;
			else return 0;
		}
		int right=0,down=0;
		if(isValid(i+1,j)) {
			add(mat[i][j]);
			right=dfs(i+1,j);
			remove(mat[i][j]);
		}
		if(isValid(i,j+1)) {
			add(mat[i][j]);
			down=dfs(i,j+1);
			remove(mat[i][j]);
		}
		return right+down;
	}
	public static void main(String[] args) throws Exception {
		int n=sc.nextInt(),m=sc.nextInt();
		mat=new int[n][m];
		for(int i=0;i<n;i++) {
			for(int j=0;j<m;j++) {
				mat[i][j]=sc.nextInt();
			}
		}
		out.println(dfs(0,0));
		
		out.close();
	}
	
	
	static class Pair implements Comparable<Pair>{
		int x;
		int y;
		public Pair(int x,int y) {
			this.x=x;
			this.y=y;
		}
		public int compareTo(Pair o) {
			return this.x-o.x;
		}
		public String toString() {
			return ""(""+this.x+"",""+this.y+"")"";
		}
		
	}
	static class Scanner {
		StringTokenizer st;
		BufferedReader br;
		public Scanner(InputStream s) {
			br = new BufferedReader(new InputStreamReader(s));
		}
		public Scanner(String file) throws FileNotFoundException {
			br = new BufferedReader(new FileReader(file));
		}
		
		public String next() throws IOException {
			while (st == null || !st.hasMoreTokens())
				st = new StringTokenizer(br.readLine());
			return st.nextToken();
		}
		public int nextInt() throws IOException {
			return Integer.parseInt(next());
		}
		public long nextLong() throws IOException {
			return Long.parseLong(next());
		}
		public String nextLine() throws IOException {
			return br.readLine();
		}
		public double nextDouble() throws IOException {
			return Double.parseDouble(next());
		}
		public boolean ready() throws IOException {
			return br.ready();
		}
		public int[] nextIntArr(int n) throws IOException{
			int arr[]=new int[n];
			for(int i=0;i<n;i++)arr[i]=nextInt();
			return arr;
		}
		public BigInteger BigInteger(String s) throws IOException{
			BigInteger a=new BigInteger(s);
			return a;
		}
	}
}
","import java.io.*;
import java.util.*;
import java.math.BigInteger;
public class Main {
	static PrintWriter out=new PrintWriter(System.out);
	static Scanner sc=new Scanner(System.in);
	static int dx[]=new int[] {1,0},dy[]=new int[] {0,1};
	static Map<Integer,Integer>hm=new HashMap<>();
	static int[][]mat;
	public static boolean isValid(int x,int y) {
		return x<mat.length&&y<mat[0].length;
	}
	public static void add(int a) {
		if(hm.containsKey(a))hm.put(a, hm.get(a)+1);
		else hm.put(a, 1);
	}
	public static void remove(int b) {
		if(hm.get(b)==1)hm.remove(b);
		else hm.put(b, hm.get(b)-1);
	}
	public static boolean check() {
		return hm.size()==mat.length+mat[0].length-1;
	}
	public static int dfs(int i,int j) {
		if(i==mat.length-1&&j==mat[0].length-1) {
			add(mat[i][j]);
			if(check())return 1;
			else return 0;
		}
		int right=0,down=0;
		if(isValid(i+1,j)) {
			add(mat[i][j]);
			right=dfs(i+1,j);
			remove(mat[i][j]);
		}
		if(isValid(i,j+1)) {
			add(mat[i][j]);
			down=dfs(i,j+1);
			remove(mat[i][j]);
		}
		return right+down;
	}
	public static void main(String[] args) throws Exception {
		int n=sc.nextInt(),m=sc.nextInt();
		mat=new int[n][m];
		for(int i=0;i<n;i++) {
			for(int j=0;j<m;j++) {
				mat[i][j]=sc.nextInt();
			}
		}
		out.println(dfs(0,0));
		
		out.close();
	}
	
	
	static class Pair implements Comparable<Pair>{
		int x;
		int y;
		public Pair(int x,int y) {
			this.x=x;
			this.y=y;
		}
		public int compareTo(Pair o) {
			return this.x-o.x;
		}
		public String toString() {
			return ""(""+this.x+"",""+this.y+"")"";
		}
		
	}
	static class Scanner {
		StringTokenizer st;
		BufferedReader br;
		public Scanner(InputStream s) {
			br = new BufferedReader(new InputStreamReader(s));
		}
		public Scanner(String file) throws FileNotFoundException {
			br = new BufferedReader(new FileReader(file));
		}
		
		public String next() throws IOException {
			while (st == null || !st.hasMoreTokens())
				st = new StringTokenizer(br.readLine());
			return st.nextToken();
		}
		public int nextInt() throws IOException {
			return Integer.parseInt(next());
		}
		public long nextLong() throws IOException {
			return Long.parseLong(next());
		}
		public String nextLine() throws IOException {
			return br.readLine();
		}
		public double nextDouble() throws IOException {
			return Double.parseDouble(next());
		}
		public boolean ready() throws IOException {
			return br.ready();
		}
		public int[] nextIntArr(int n) throws IOException{
			int arr[]=new int[n];
			for(int i=0;i<n;i++)arr[i]=nextInt();
			return arr;
		}
		public BigInteger BigInteger(String s) throws IOException{
			BigInteger a=new BigInteger(s);
			return a;
		}
	}
}
",CE
noon2525 ,abc293/C,Java,"public class Main {
	static int H,W,count;

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		H = sc.nextInt();
		W = sc.nextInt();
		count=0;
		int[][] map = new int[H][W];
		
		for(int i=0;i<H;i++) {
			for(int j=0;j<W;j++) {
				map[i][j] = sc.nextInt();
			}
		}
		
		sc.close();
		
		bit(new HashSet<Integer>(),0,0,map);
		System.out.println(count);
		
	}
	
	public static void bit(HashSet<Integer> set,int h,int w,int[][] map) {
		set.add(map[h][w]);
		if(h==H-1&&w==W-1) {
			count++;
		}
		
		
		
			if(h<H-1) {
				if(!set.contains(map[h+1][w])) {
					bit(set,h+1,w,map);
				}
			}
			if(w<W-1) {
				if(!set.contains(map[h][w+1])) {
					bit(set,h,w+1,map);
				}
			}
		
		set.remove(map[h][w]);
	}
}
","import java.util.HashSet;
import java.util.Scanner;

public class Main {
	static int H,W,count;

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		H = sc.nextInt();
		W = sc.nextInt();
		count=0;
		int[][] map = new int[H][W];
		
		for(int i=0;i<H;i++) {
			for(int j=0;j<W;j++) {
				map[i][j] = sc.nextInt();
			}
		}
		
		sc.close();
		
		bit(new HashSet<Integer>(),0,0,map);
		System.out.println(count);
		
	}
	
	public static void bit(HashSet<Integer> set,int h,int w,int[][] map) {
		set.add(map[h][w]);
		if(h==H-1&&w==W-1) {
			count++;
		}
		
		
		
			if(h<H-1) {
				if(!set.contains(map[h+1][w])) {
					bit(set,h+1,w,map);
				}
			}
			if(w<W-1) {
				if(!set.contains(map[h][w+1])) {
					bit(set,h,w+1,map);
				}
			}
		
		set.remove(map[h][w]);
	}
}
",CE
muxii ,abc293/C,Java,"import java.util.Arrays;
import java.util.HashSet;
import java.util.Scanner;


public class Main {
    static int H, W;
    static Set<Integer> set = new HashSet<>();
    static boolean[][] visited;
    static int count = 0;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        H = sc.nextInt();
        W = sc.nextInt();
        int[][] a = new int[H][W];
        visited = new boolean[H][W];
        for (int i = 0; i < H; i++) {
            for (int j = 0; j < W; j++) {
                a[i][j] = sc.nextInt();
            }
        }

        System.out.println(count);
    }

    public static void dfs(int i, int j, int[][] a) {
        set.add(a[i][j]);
        visited[i][j] = true;

        if (i == H - 1 && j == W - 1) {
            count++;
        } else {
            if (i + 1 < H && !visited[i + 1][j] && !set.contains(a[i + 1][j])) {
                dfs(i + 1, j, a);
            }
            if (j + 1 < W && !visited[i][j + 1] && !set.contains(a[i][j + 1])) {
                dfs(i, j + 1, a);
            }
        }

        set.remove(a[i][j]);
        visited[i][j] = false;
    }
","import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;


public class Main {
    static int H, W;
    static Set<Integer> set = new HashSet<>();
    static boolean[][] visited;
    static int count = 0;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        H = sc.nextInt();
        W = sc.nextInt();
        int[][] a = new int[H][W];
        visited = new boolean[H][W];
        for (int i = 0; i < H; i++) {
            for (int j = 0; j < W; j++) {
                a[i][j] = sc.nextInt();
            }
        }
        dfs(0,0,a);
        System.out.println(count);
    }

    public static void dfs(int i, int j, int[][] a) {
        set.add(a[i][j]);
        visited[i][j] = true;

        if (i == H - 1 && j == W - 1) {
            count++;
        } else {
            
            if (i + 1 < H && !visited[i + 1][j] && !set.contains(a[i + 1][j])) {
                dfs(i + 1, j, a);
            }
            if (j + 1 < W && !visited[i][j + 1] && !set.contains(a[i][j + 1])) {
                dfs(i, j + 1, a);
            }
        }
        
        set.remove(a[i][j]);   
        visited[i][j] = false;
    }
}
",CE
Masa19212 ,abc293/C,Java,"import java.util.Arrays;
import java.util.Scanner;

public class Test {
    static int[][] matrix; 
    static int W, H; 
    static int count; 

    public static void main(String[] args) {
        
        Scanner scanner = new Scanner(System.in);
        W = scanner.nextInt();
        H = scanner.nextInt();
        matrix = new int[W][H];
        for (int i = 0; i < W; i++) {
            for (int j = 0; j < H; j++) {
                matrix[i][j] = scanner.nextInt();
            }
        }

        
        count = 0;

        
        traverse(0, 0, new int[]{matrix[0][0]});

        
        System.out.println(count);
    }

    
    static void traverse(int x, int y, int[] path) {
        
        if (x == W - 1 && y == H - 1) {
            count++;
            return;
        }

        
        if (x + 1 < W && !contains(path, matrix[x + 1][y])) {
            int[] newPath = Arrays.copyOf(path, path.length + 1);
            newPath[newPath.length - 1] = matrix[x + 1][y];
            traverse(x + 1, y, newPath);
        }

        
        if (y + 1 < H && !contains(path, matrix[x][y + 1])) {
            int[] newPath = Arrays.copyOf(path, path.length + 1);
            newPath[newPath.length - 1] = matrix[x][y + 1];
            traverse(x, y + 1, newPath);
        }
    }

    
    static boolean contains(int[] arr, int val) {
        for (int num : arr) {
            if (num == val) {
                return true;
            }
        }
        return false;
    }
}



","import java.util.Arrays;
import java.util.Scanner;

public class Main {
    static int[][] matrix; 
    static int W, H; 
    static int count; 

    public static void main(String[] args) {
        
        Scanner scanner = new Scanner(System.in);
        W = scanner.nextInt();
        H = scanner.nextInt();
        matrix = new int[W][H];
        for (int i = 0; i < W; i++) {
            for (int j = 0; j < H; j++) {
                matrix[i][j] = scanner.nextInt();
            }
        }

        
        count = 0;

        
        traverse(0, 0, new int[]{matrix[0][0]});

        
        System.out.println(count);
    }

    
    static void traverse(int x, int y, int[] path) {
        
        if (x == W - 1 && y == H - 1) {
            count++;
            return;
        }

        
        if (x + 1 < W && !contains(path, matrix[x + 1][y])) {
            int[] newPath = Arrays.copyOf(path, path.length + 1);
            newPath[newPath.length - 1] = matrix[x + 1][y];
            traverse(x + 1, y, newPath);
        }

        
        if (y + 1 < H && !contains(path, matrix[x][y + 1])) {
            int[] newPath = Arrays.copyOf(path, path.length + 1);
            newPath[newPath.length - 1] = matrix[x][y + 1];
            traverse(x, y + 1, newPath);
        }
    }

    
    static boolean contains(int[] arr, int val) {
        for (int num : arr) {
            if (num == val) {
                return true;
            }
        }
        return false;
    }
}



",CE
fuky ,abc293/C,Java,"import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();
        int[][] a = new int[H][W];
        for (int i = 0; i < H; i++) {
            for (int j = 0; j < W; j++) {
                a[i][j] = sc.nextInt();
            }
        }

        int n = H + W - 2;
        int cnt = 0;
        for (int i = 0; i < (1 << n); i++) {
            int cnt0 = 0;
            for (int j = 0; j < n; j++) {
                
                if ((i & (1 << j)) == 0) cnt0++;
            }

            if (cnt0 == H - 1) { 
                Set<Integer> rootNum = new HashSet<>();
                int h = 0;
                int w = 0;
                rootNum.add(a[h][w]);
                boolean ok = true;
                for (int j = 0; j < n; j++) {
                    
                    if ((i & (1 << j)) == 0) h++;
                    else    w++;

                    if (rootNum.contains(a[h][w])) ok = false;
                }

                if (ok) cnt++;
            }
        }

        System.out.print(cnt);

    }
}


","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();
        int[][] a = new int[H][W];
        for (int i = 0; i < H; i++) {
            for (int j = 0; j < W; j++) {
                a[i][j] = sc.nextInt();
            }
        }

        int n = H + W - 2;
        int cnt = 0;
        for (int i = 0; i < (1 << n); i++) {
            int cnt0 = 0;
            for (int j = 0; j < n; j++) {
                
                if ((i & (1 << j)) == 0) cnt0++;
            }

            if (cnt0 == H - 1) { 
                Set<Integer> rootNum = new HashSet<>();
                int h = 0;
                int w = 0;
                rootNum.add(a[h][w]);
                boolean ok = true;
                for (int j = 0; j < n; j++) {
                    
                    if ((i & (1 << j)) == 0) h++;
                    else  w++;

                    if (rootNum.contains(a[h][w])) ok = false;
                    else rootNum.add(a[h][w]);
                }

                if (ok) cnt++;
            }
        }

        System.out.print(cnt);

    }
}


",WA
iron_3 ,abc293/C,Java,"import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
	static int ans = 0;
	static int h = 0;
	static int w = 0;
	static int A[][];
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		h = sc.nextInt();
		w = sc.nextInt();
		A = new int[h + 1][w + 1];
		for(int i = 1 ; i <= h ; i ++) {
			for(int k = 1 ; k <= w ; k++) {
				A[i][k] = sc.nextInt();
			}
		}
		f(1 , 1 , new HashSet<Integer>());
		System.out.println(ans);
		sc.close();
	}
	
	static void f(int x , int y , Set <Integer> num) {
		if(x < h || y < w) {
			if(!num.contains(A[x][y])) {
				num.add(A[x][y]);
				if(x < h)f(x + 1 , y , new HashSet<Integer>(num));
				if(y < w)f(x  , y + 1 , new HashSet<Integer>(num));
			}
		}
		if(x == h && y == w)ans++;
	}
}
","import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
	static int ans = 0;
	static int h = 0;
	static int w = 0;
	static int A[][];
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		h = sc.nextInt();
		w = sc.nextInt();
		A = new int[h + 1][w + 1];
		for(int i = 1 ; i <= h ; i ++) {
			for(int k = 1 ; k <= w ; k++) {
				A[i][k] = sc.nextInt();
			}
		}
		f(1 , 1 , new HashSet<Integer>());
		System.out.println(ans);
		sc.close();
	}
	
	static void f(int x , int y , Set <Integer> num) {
		if(x <= h || y <= w) {
			if(!num.contains(A[x][y])) {
				num.add(A[x][y]);
				if(x < h)f(x + 1 , y , new HashSet<Integer>(num));
				if(y < w)f(x  , y + 1 , new HashSet<Integer>(num));
				if(x == h && y == w)ans++;
			}
		}
	}
}
",WA
mori_shi_ta ,abc293/C,Java,"import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
	
	static int res = 0;
	
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int H = sc.nextInt();
		int W = sc.nextInt();
		int[][] A = new int[H][W];
		for (int i = 0; i < H; i++) {
			for (int j = 0; j < W; j++) {
				A[i][j] = sc.nextInt();
			}
		}
		Set<Integer> set = new HashSet<Integer>();
		dfs(A, set, 0, 0);
		System.out.println(res);
	}
	
	static void dfs(int[][] A, Set<Integer> set, int x, int y) {
		if (x >= 0 && x < A.length && y >= 0 && y < A[0].length) {

			if (x == A.length-1 && y == A[0].length-1) {
				res++;
				return;
			}
			if (!set.contains(A[x][y])) {
				set.add(A[x][y]);
				dfs(A, set, x+1, y);
				dfs(A, set, x, y+1);
				set.remove(A[x][y]);
			}
		}
	}
}
","import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
	
	static int res = 0;
	
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int H = sc.nextInt();
		int W = sc.nextInt();
		int[][] A = new int[H][W];
		for (int i = 0; i < H; i++) {
			for (int j = 0; j < W; j++) {
				A[i][j] = sc.nextInt();
			}
		}
		Set<Integer> set = new HashSet<Integer>();
		dfs(A, set, 0, 0);
		System.out.println(res);
	}
	
	static void dfs(int[][] A, Set<Integer> set, int x, int y) {
		if (x >= 0 && x < A.length && y >= 0 && y < A[0].length) {

			if (!set.contains(A[x][y])) {
				if (x == A.length-1 && y == A[0].length-1) {
					res++;
					return;
				}
				set.add(A[x][y]);
				dfs(A, set, x+1, y);
				dfs(A, set, x, y+1);
				set.remove(A[x][y]);
			}
		}
	}
}
",WA
gaps ,abc293/C,Java,"import java.util.*;

public class Main {

	public static void main(String[] args) {
    	Scanner sc = new Scanner(System.in);
      	int h = sc.nextInt();
      	int w = sc.nextInt();
      	List<Set<Integer>> up = new List[w];
      	for (int i = 0; i < w; i++) {
        	up[i] = new ArrayList<>();
        }
      	up[0].add(new HashSet<>());
      	List<Set<Integer>> left = new ArrayList<>();
      	for (int i = 0; i < h; i++) {
          	left = new ArrayList<>();
        	for (int j = 0; j < w; j++) {
            	int n = sc.nextInt();
              	List<Set<Integer>> t = new ArrayList<>();
              	for (Set<Integer> u : up[j]) {
                	if (!u.contains(n)) {
                    	Set<Integer> set = new HashSet<>(u);
                      	set.add(n);
                      	t.add(set);
                    }
                }
             	for (Set<Integer> l : left) {
                	if (!l.contains(n)) {
                    	Set<Integer> set = new HashSet<>(l);
                      	set.add(n);
                      	t.add(set);
                    }
                }
              	up[j] = left = t;
            }
        }
      	System.out.println(left.size());
    }
}
","import java.util.*;

public class Main {

	public static void main(String[] args) {
    	Scanner sc = new Scanner(System.in);
      	int h = sc.nextInt();
      	int w = sc.nextInt();
      	List<Set<Integer>>[] up = new List[w];
      	for (int i = 0; i < w; i++) {
        	up[i] = new ArrayList<>();
        }
      	up[0].add(new HashSet<>());
      	List<Set<Integer>> left = new ArrayList<>();
      	for (int i = 0; i < h; i++) {
          	left = new ArrayList<>();
        	for (int j = 0; j < w; j++) {
            	int n = sc.nextInt();
              	List<Set<Integer>> t = new ArrayList<>();
              	for (Set<Integer> u : up[j]) {
                	if (!u.contains(n)) {
                    	Set<Integer> set = new HashSet<>(u);
                      	set.add(n);
                      	t.add(set);
                    }
                }
             	for (Set<Integer> l : left) {
                	if (!l.contains(n)) {
                    	Set<Integer> set = new HashSet<>(l);
                      	set.add(n);
                      	t.add(set);
                    }
                }
              	up[j] = left = t;
            }
        }
      	System.out.println(left.size());
    }
}
",CE
yuct ,abc293/C,Java,"import java.util.*;
public class Main {
    static int ans;
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();
        int[][] A = new int[H][W];
        for(int i = 0; i < H; i++){
            for(int j = 0; j < W; j++){
                A[i][j] = sc.nextInt();
            }
        }
        Set<Integer> happy = new HashSet<>();
        idou(A, 0, 0, happy);
        System.out.println(ans);
    }
    public static void idou(int[][] a, int H, int W, Set<Integer> Happy){
        if(H + 1 == a.length && W + 1 == a[0].length){
            ans++;
        }
        Set<Integer> happyH = new HashSet<>(Happy);
        if(H < a.length-1 && !Happy.contains(a[H+1][W])){
            happyH.add(a[H][W]);
            idou(a, H+1, W, happyH);
        }
        Set<Integer> happyW = new HashSet<>(Happy);
        if(W < a[0].length-1 && !Happy.contains(a[H][W+1])){
            happyW.add(a[H][W]);
            idou(a, H, W+1, happyW);
        }
    }
}
","import java.util.*;
public class Main {
    static int ans = 0;
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();
        int[][] A = new int[H][W];
        for(int i = 0; i < H; i++){
            for(int j = 0; j < W; j++){
                A[i][j] = sc.nextInt();
            }
        }
        Set<Integer> happy = new HashSet<>();
        happy.add(A[0][0]);
        idou(A, 0, 0, happy);
        System.out.println(ans);
    }
    public static void idou(int[][] a, int H, int W, Set<Integer> Happy){
        if(H + 1 == a.length && W + 1 == a[0].length){
            ans++;
        }
        Set<Integer> happyH = new HashSet<>(Happy);
        if(H < a.length-1 && !Happy.contains(a[H+1][W])){
            happyH.add(a[H+1][W]);
            idou(a, H+1, W, happyH);
        }
        Set<Integer> happyW = new HashSet<>(Happy);
        if(W < a[0].length-1 && !Happy.contains(a[H][W+1])){
            happyW.add(a[H][W+1]);
            idou(a, H, W+1, happyW);
        }
    }
}
",WA
yadavdipesh ,abc293/C,Java,"




import java.io.*;
import java.util.*;
import java.lang.*;
public class Main{
    
  static PrintWriter out = new PrintWriter(System.out);
  static FastReader in = new FastReader();
  static int ans =0 , m = 0 , n = 0;
  static Set<Integer> set = new HashSet<>();
  public static void main(String[] args) throws IOException{
    
    
    int ntc = 1;
    for(int tno = 1 ; tno <= ntc ; tno++) solve();
    
    out.flush();
  } 
  public static void solve(){
         n = inp();
         m = inp();
        int[][] arr = new int[n][m];
        for(int i = 0 ; i < n ; i++){
        	for(int j = 0 ; j < m ; j++){
        		arr[i][j] = in.nextInt();
        	}
        }
		dfs(0 , 0 , arr);
		out.println(ans);



  }
  public static void dfs(int i , int j , int[][] arr){
  		if(set.contains(arr[i][j])){
  			return;
  		}
  		if(i == m-1 && j == n-1){	
  			ans++;
  			return;
  		}
  		set.add(arr[i][j]);
  		if(i < n-1) dfs(i+1 , j , arr);
  		if(j < m-1) dfs(i , j+1 , arr);
  		set.remove(arr[i][j]);
  		return;
  }


      
	public static int[] ia(int n){
		int[] arr = new int[n];
		for(int i = 0 ; i < n ; i++){
			arr[i] = in.nextInt();
		}
		return arr;
	}
	public static int inp(){return in.nextInt();}
	public static String inps(){return in.next();}
	public static int[] radixSort2(int[] a){
		int n = a.length;
		int[] c0 = new int[0x101];
		int[] c1 = new int[0x101];
		int[] c2 = new int[0x101];
		int[] c3 = new int[0x101];
		for(int v : a) {
			c0[(v&0xff)+1]++;
			c1[(v>>>8&0xff)+1]++;
			c2[(v>>>16&0xff)+1]++;
			c3[(v>>>24^0x80)+1]++;
		}
		for(int i = 0;i < 0xff;i++) {
			c0[i+1] += c0[i];
			c1[i+1] += c1[i];
			c2[i+1] += c2[i];
			c3[i+1] += c3[i];
		}
		int[] t = new int[n];
		for(int v : a)t[c0[v&0xff]++] = v;
		for(int v : t)a[c1[v>>>8&0xff]++] = v;
		for(int v : a)t[c2[v>>>16&0xff]++] = v;
		for(int v : t)a[c3[v>>>24^0x80]++] = v;
		return a;
	}
   static long mod = 1000000007;
   public static long pow(long a, long b ) {
    long res = 1;
    while (b > 0) {
        if ((b & 1) == 0) {
            a  = (a*a) ;
            b = b >> 1;
        } else {
            res = (res*a) ;
            b--;
        }
    }
    return res;
   }
 public static void no(){out.println(""No"");}
 public static void yes(){out.println(""Yes"");}
  static long gcd(long a, long b) {
        while (b != 0) {
          long t = a;
          a = b;  
          b = t % b;
        } 
        return a;
  }    
  static class FastReader {
      BufferedReader br;
      StringTokenizer st;
      public FastReader() {
        br = new BufferedReader(new InputStreamReader(System.in));
      }
      String next() {
        while (st == null || !st.hasMoreTokens()) {
          try {
            st = new StringTokenizer(br.readLine());
          } catch (IOException e) {
            e.printStackTrace();
          }
        }
        return st.nextToken();
      }
      int nextInt() {
        return Integer.parseInt(next());
      }
      long nextLong() {
        return Long.parseLong(next());
      }
      double nextDouble() {
        return Double.parseDouble(next());
      }
      String nextLine() {
        String str = """";
        try {
          str = br.readLine().trim();
        } catch (Exception e) {
          e.printStackTrace();
        }
        return str;
      }
    }
}


","




import java.io.*;
import java.util.*;
import java.lang.*;
public class Main{
    
  static PrintWriter out = new PrintWriter(System.out);
  static FastReader in = new FastReader();
  static int ans =0 , m = 0 , n = 0;
  static Set<Integer> set = new HashSet<>();
  public static void main(String[] args) throws IOException{
    
    
    int ntc = 1;
    for(int tno = 1 ; tno <= ntc ; tno++) solve();
    
    out.flush();
  } 
  public static void solve(){
         n = inp();
         m = inp();
        int[][] arr = new int[n][m];
        for(int i = 0 ; i < n ; i++){
        	for(int j = 0 ; j < m ; j++){
        		arr[i][j] = in.nextInt();
        	}
        }
		dfs(0 , 0 , arr);
		out.println(ans);



  }
  public static void dfs(int i , int j , int[][] arr){
  		if(set.contains(arr[i][j])){
  			return;
  		}
  		if(i == n-1 && j == m-1){	
  			ans++;
  			return;
  		}
  		set.add(arr[i][j]);
  		if(i < n-1) dfs(i+1 , j , arr);
  		if(j < m-1) dfs(i , j+1 , arr);
  		set.remove(arr[i][j]);
  		return;
  }


      
	public static int[] ia(int n){
		int[] arr = new int[n];
		for(int i = 0 ; i < n ; i++){
			arr[i] = in.nextInt();
		}
		return arr;
	}
	public static int inp(){return in.nextInt();}
	public static String inps(){return in.next();}
	public static int[] radixSort2(int[] a){
		int n = a.length;
		int[] c0 = new int[0x101];
		int[] c1 = new int[0x101];
		int[] c2 = new int[0x101];
		int[] c3 = new int[0x101];
		for(int v : a) {
			c0[(v&0xff)+1]++;
			c1[(v>>>8&0xff)+1]++;
			c2[(v>>>16&0xff)+1]++;
			c3[(v>>>24^0x80)+1]++;
		}
		for(int i = 0;i < 0xff;i++) {
			c0[i+1] += c0[i];
			c1[i+1] += c1[i];
			c2[i+1] += c2[i];
			c3[i+1] += c3[i];
		}
		int[] t = new int[n];
		for(int v : a)t[c0[v&0xff]++] = v;
		for(int v : t)a[c1[v>>>8&0xff]++] = v;
		for(int v : a)t[c2[v>>>16&0xff]++] = v;
		for(int v : t)a[c3[v>>>24^0x80]++] = v;
		return a;
	}
   static long mod = 1000000007;
   public static long pow(long a, long b ) {
    long res = 1;
    while (b > 0) {
        if ((b & 1) == 0) {
            a  = (a*a) ;
            b = b >> 1;
        } else {
            res = (res*a) ;
            b--;
        }
    }
    return res;
   }
 public static void no(){out.println(""No"");}
 public static void yes(){out.println(""Yes"");}
  static long gcd(long a, long b) {
        while (b != 0) {
          long t = a;
          a = b;  
          b = t % b;
        } 
        return a;
  }    
  static class FastReader {
      BufferedReader br;
      StringTokenizer st;
      public FastReader() {
        br = new BufferedReader(new InputStreamReader(System.in));
      }
      String next() {
        while (st == null || !st.hasMoreTokens()) {
          try {
            st = new StringTokenizer(br.readLine());
          } catch (IOException e) {
            e.printStackTrace();
          }
        }
        return st.nextToken();
      }
      int nextInt() {
        return Integer.parseInt(next());
      }
      long nextLong() {
        return Long.parseLong(next());
      }
      double nextDouble() {
        return Double.parseDouble(next());
      }
      String nextLine() {
        String str = """";
        try {
          str = br.readLine().trim();
        } catch (Exception e) {
          e.printStackTrace();
        }
        return str;
      }
    }
}


",WA
yadavdipesh ,abc293/C,Java,"




import java.io.*;
import java.util.*;
import java.lang.*;
public class Main{
    
  static PrintWriter out = new PrintWriter(System.out);
  static FastReader in = new FastReader();
  static int ans =0 , m = 0 , n = 0;
  static Set<Integer> set = new HashSet<>();
  public static void main(String[] args) throws IOException{
    
    
    int ntc = 1;
    for(int tno = 1 ; tno <= ntc ; tno++) solve();
    
    out.flush();
  } 
  public static void solve(){
         n = inp();
         m = inp();
        int[][] arr = new int[n][m];
        for(int i = 0 ; i < n ; i++){
        	for(int j = 0 ; j < m ; j++){
        		arr[i][j] = in.nextInt();
        	}
        }
		dfs(0 , 0 , arr);
		out.println(ans);



  }
  public static void dfs(int i , int j , int[][] arr){
  		if(set.contains(arr[i][j])){
  			return;
  		}
  		if(i == m-1 && j == n-1){	
  			ans++;
  			return;
  		}
  		set.add(arr[i][j]);
  		if(i < n-1) dfs(i+1 , j , arr);
  		if(j < m-1) dfs(i , j+1 , arr);
  		set.remove(arr[i][j]);
  }


      
	public static int[] ia(int n){
		int[] arr = new int[n];
		for(int i = 0 ; i < n ; i++){
			arr[i] = in.nextInt();
		}
		return arr;
	}
	public static int inp(){return in.nextInt();}
	public static String inps(){return in.next();}
	public static int[] radixSort2(int[] a){
		int n = a.length;
		int[] c0 = new int[0x101];
		int[] c1 = new int[0x101];
		int[] c2 = new int[0x101];
		int[] c3 = new int[0x101];
		for(int v : a) {
			c0[(v&0xff)+1]++;
			c1[(v>>>8&0xff)+1]++;
			c2[(v>>>16&0xff)+1]++;
			c3[(v>>>24^0x80)+1]++;
		}
		for(int i = 0;i < 0xff;i++) {
			c0[i+1] += c0[i];
			c1[i+1] += c1[i];
			c2[i+1] += c2[i];
			c3[i+1] += c3[i];
		}
		int[] t = new int[n];
		for(int v : a)t[c0[v&0xff]++] = v;
		for(int v : t)a[c1[v>>>8&0xff]++] = v;
		for(int v : a)t[c2[v>>>16&0xff]++] = v;
		for(int v : t)a[c3[v>>>24^0x80]++] = v;
		return a;
	}
   static long mod = 1000000007;
   public static long pow(long a, long b ) {
    long res = 1;
    while (b > 0) {
        if ((b & 1) == 0) {
            a  = (a*a) ;
            b = b >> 1;
        } else {
            res = (res*a) ;
            b--;
        }
    }
    return res;
   }
 public static void no(){out.println(""No"");}
 public static void yes(){out.println(""Yes"");}
  static long gcd(long a, long b) {
        while (b != 0) {
          long t = a;
          a = b;  
          b = t % b;
        } 
        return a;
  }    
  static class FastReader {
      BufferedReader br;
      StringTokenizer st;
      public FastReader() {
        br = new BufferedReader(new InputStreamReader(System.in));
      }
      String next() {
        while (st == null || !st.hasMoreTokens()) {
          try {
            st = new StringTokenizer(br.readLine());
          } catch (IOException e) {
            e.printStackTrace();
          }
        }
        return st.nextToken();
      }
      int nextInt() {
        return Integer.parseInt(next());
      }
      long nextLong() {
        return Long.parseLong(next());
      }
      double nextDouble() {
        return Double.parseDouble(next());
      }
      String nextLine() {
        String str = """";
        try {
          str = br.readLine().trim();
        } catch (Exception e) {
          e.printStackTrace();
        }
        return str;
      }
    }
}


","




import java.io.*;
import java.util.*;
import java.lang.*;
public class Main{
    
  static PrintWriter out = new PrintWriter(System.out);
  static FastReader in = new FastReader();
  static int ans =0 , m = 0 , n = 0;
  static Set<Integer> set = new HashSet<>();
  public static void main(String[] args) throws IOException{
    
    
    int ntc = 1;
    for(int tno = 1 ; tno <= ntc ; tno++) solve();
    
    out.flush();
  } 
  public static void solve(){
         n = inp();
         m = inp();
        int[][] arr = new int[n][m];
        for(int i = 0 ; i < n ; i++){
        	for(int j = 0 ; j < m ; j++){
        		arr[i][j] = in.nextInt();
        	}
        }
		dfs(0 , 0 , arr);
		out.println(ans);



  }
  public static void dfs(int i , int j , int[][] arr){
  		if(set.contains(arr[i][j])){
  			return;
  		}
  		if(i == n-1 && j == m-1){	
  			ans++;
  			return;
  		}
  		set.add(arr[i][j]);
  		if(i < n-1) dfs(i+1 , j , arr);
  		if(j < m-1) dfs(i , j+1 , arr);
  		set.remove(arr[i][j]);
  		return;
  }


      
	public static int[] ia(int n){
		int[] arr = new int[n];
		for(int i = 0 ; i < n ; i++){
			arr[i] = in.nextInt();
		}
		return arr;
	}
	public static int inp(){return in.nextInt();}
	public static String inps(){return in.next();}
	public static int[] radixSort2(int[] a){
		int n = a.length;
		int[] c0 = new int[0x101];
		int[] c1 = new int[0x101];
		int[] c2 = new int[0x101];
		int[] c3 = new int[0x101];
		for(int v : a) {
			c0[(v&0xff)+1]++;
			c1[(v>>>8&0xff)+1]++;
			c2[(v>>>16&0xff)+1]++;
			c3[(v>>>24^0x80)+1]++;
		}
		for(int i = 0;i < 0xff;i++) {
			c0[i+1] += c0[i];
			c1[i+1] += c1[i];
			c2[i+1] += c2[i];
			c3[i+1] += c3[i];
		}
		int[] t = new int[n];
		for(int v : a)t[c0[v&0xff]++] = v;
		for(int v : t)a[c1[v>>>8&0xff]++] = v;
		for(int v : a)t[c2[v>>>16&0xff]++] = v;
		for(int v : t)a[c3[v>>>24^0x80]++] = v;
		return a;
	}
   static long mod = 1000000007;
   public static long pow(long a, long b ) {
    long res = 1;
    while (b > 0) {
        if ((b & 1) == 0) {
            a  = (a*a) ;
            b = b >> 1;
        } else {
            res = (res*a) ;
            b--;
        }
    }
    return res;
   }
 public static void no(){out.println(""No"");}
 public static void yes(){out.println(""Yes"");}
  static long gcd(long a, long b) {
        while (b != 0) {
          long t = a;
          a = b;  
          b = t % b;
        } 
        return a;
  }    
  static class FastReader {
      BufferedReader br;
      StringTokenizer st;
      public FastReader() {
        br = new BufferedReader(new InputStreamReader(System.in));
      }
      String next() {
        while (st == null || !st.hasMoreTokens()) {
          try {
            st = new StringTokenizer(br.readLine());
          } catch (IOException e) {
            e.printStackTrace();
          }
        }
        return st.nextToken();
      }
      int nextInt() {
        return Integer.parseInt(next());
      }
      long nextLong() {
        return Long.parseLong(next());
      }
      double nextDouble() {
        return Double.parseDouble(next());
      }
      String nextLine() {
        String str = """";
        try {
          str = br.readLine().trim();
        } catch (Exception e) {
          e.printStackTrace();
        }
        return str;
      }
    }
}


",WA
Nanthakumar ,abc293/C,Java,"import java.util.*;
import java.io.*;
public class Main
{
  public static void main(String[] args) throws IOException
  {
   Scanner sc = new Scanner(System.in);
    int m =sc.nextInt();
    int n = sc.nextInt();
    int mat[][] = new int[m][n];
    for(int i=0;i<m;i++)
    {
      for(int j=0;j<n;j++)
      {
        mat[i][j] = sc.nextInt();
      }
    }
    Set<Integer> hs = new HashSet<>();
   int ans = ways(mat,hs,0,0,m,n);
    System.out.println(ans); 
  }
  public static int ways(int[][] mat,Set<Integer> hs,int i,int j,int m,int n)
  {
    if(i>=m || j>=n) return 0;
    if(i==m-1&&j==n-1) 
    {
     hs.remove(mat[i][j]);
     return 1;
    }
    if(!hs.add(mat[i][j])) return 0;
    int ans =  ways(mat,hs,i+1,j,m,n)+ways(mat,hs,i,j+1,m,n);
    hs.remove(mat[i][j]);
    return ans;
  }
}
","import java.util.*;
import java.io.*;
public class Main
{
  public static void main(String[] args) throws IOException
  {
   Scanner sc = new Scanner(System.in);
    int m =sc.nextInt();
    int n = sc.nextInt();
    int mat[][] = new int[m][n];
    for(int i=0;i<m;i++)
    {
      for(int j=0;j<n;j++)
      {
        mat[i][j] = sc.nextInt();
      }
    }
    Set<Integer> hs = new HashSet<>();
   int ans = ways(mat,hs,0,0,m,n);
    System.out.println(ans); 
  }
  public static int ways(int[][] mat,Set<Integer> hs,int i,int j,int m,int n)
  {
    if(i>=m || j>=n) return 0;
    if(!hs.add(mat[i][j])) return 0;
    if(i==m-1&&j==n-1) 
    {
     hs.remove(mat[i][j]);
     return 1;
    }

    int ans =  ways(mat,hs,i+1,j,m,n)+ways(mat,hs,i,j+1,m,n);
    hs.remove(mat[i][j]);
    return ans;
  }
}
",WA
fune3 ,abc295/B,Java,"import java.util.*;



import java.io.*;

public class Main{
	public static void main(String[] args) {
		FastScanner str=new FastScanner(System.in);
	  PrintWriter out=new PrintWriter(System.out);
    int r=str.nextInt();
		int c=str.nextInt();
		char[][] b=new char[r][c];
		for(int i=0;i<r;i++){
			String s=str.next();
			for(int j=0;j<c;j++){
        b[i][j]=s.charAt(j);
			}
		}
		for(int i=0;i<r;i++){
			for(int j=0;j<c;j++){
				if(b[i][j]!='.'&&b[i][j]!='#'){
					int x=Character.getNumericValue(b[i][j]);
					for(int k=0;k<r;k++){
						for(int l=0;l<c;l++){
							if((Math.abs(i-k)+Math.abs(j-l))<=x){
                b[k][l]='.';
							}
						}
					}
				}
			}
		}
		for(int i=0;i<r;i++){
			for(int j=0;j<c;j++){
				out.print(b[i][j]);
			}
			out.println();
		}
		out.flush();
	}
}






	class FastScanner implements Closeable {
	private final InputStream in;
	private final byte[] buffer = new byte[1024];
	private int ptr = 0;
	private int buflen = 0;
	public FastScanner(InputStream in) {
		this.in = in;
	}
	private boolean hasNextByte() {
		if (ptr < buflen) {
			return true;
		}else{
			ptr = 0;
			try {
				buflen = in.read(buffer);
			} catch (IOException e) {
				e.printStackTrace();
			}
			if (buflen <= 0) {
				return false;
			}
		}
		return true;
	}
	private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
	private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
	public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
	public String next() {
		if (!hasNext()) throw new NoSuchElementException();
		StringBuilder sb = new StringBuilder();
		int b = readByte();
		while(isPrintableChar(b)) {
			sb.appendCodePoint(b);
			b = readByte();
		}
		return sb.toString();
	}
	public long nextLong() {
		if (!hasNext()) throw new NoSuchElementException();
		long n = 0;
		boolean minus = false;
		int b = readByte();
		if (b == '-') {
			minus = true;
			b = readByte();
		}
		if (b < '0' || '9' < b) {
			throw new NumberFormatException();
		}
		while(true){
			if ('0' <= b && b <= '9') {
				n *= 10;
				n += b - '0';
			}else if(b == -1 || !isPrintableChar(b)){
				return minus ? -n : n;
			}else{
				throw new NumberFormatException();
			}
			b = readByte();
		}
	}
	public int nextInt() {
		long nl = nextLong();
		if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
		return (int) nl;
	}
	public double nextDouble() { return Double.parseDouble(next());}
	public void close() {
		try {
			in.close();
		} catch (IOException e) {
		}
	}

		}
","import java.util.*;



import java.io.*;

public class Main{
	public static void main(String[] args) {
		FastScanner str=new FastScanner(System.in);
	  PrintWriter out=new PrintWriter(System.out);
    int r=str.nextInt();
		int c=str.nextInt();
		char[][] b=new char[r][c];
		for(int i=0;i<r;i++){
			String s=str.next();
			for(int j=0;j<c;j++){
        b[i][j]=s.charAt(j);
				
			}
		}
		
		for(int i=0;i<r;i++){
			for(int j=0;j<c;j++){
				if(b[i][j]!='.'&&b[i][j]!='#'){
					int x=Character.getNumericValue(b[i][j]);
					b[i][j]='.';
					for(int k=0;k<r;k++){
						for(int l=0;l<c;l++){
							if((Math.abs(i-k)+Math.abs(j-l))<=x&&b[k][l]=='#'){
                b[k][l]='.';
							}
						}
					}
				
				}
			}
		}
	
		for(int i=0;i<r;i++){
			for(int j=0;j<c;j++){
				out.print(b[i][j]);
			}
			out.println();
		}
		out.flush();
	}
}






	class FastScanner implements Closeable {
	private final InputStream in;
	private final byte[] buffer = new byte[1024];
	private int ptr = 0;
	private int buflen = 0;
	public FastScanner(InputStream in) {
		this.in = in;
	}
	private boolean hasNextByte() {
		if (ptr < buflen) {
			return true;
		}else{
			ptr = 0;
			try {
				buflen = in.read(buffer);
			} catch (IOException e) {
				e.printStackTrace();
			}
			if (buflen <= 0) {
				return false;
			}
		}
		return true;
	}
	private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
	private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
	public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
	public String next() {
		if (!hasNext()) throw new NoSuchElementException();
		StringBuilder sb = new StringBuilder();
		int b = readByte();
		while(isPrintableChar(b)) {
			sb.appendCodePoint(b);
			b = readByte();
		}
		return sb.toString();
	}
	public long nextLong() {
		if (!hasNext()) throw new NoSuchElementException();
		long n = 0;
		boolean minus = false;
		int b = readByte();
		if (b == '-') {
			minus = true;
			b = readByte();
		}
		if (b < '0' || '9' < b) {
			throw new NumberFormatException();
		}
		while(true){
			if ('0' <= b && b <= '9') {
				n *= 10;
				n += b - '0';
			}else if(b == -1 || !isPrintableChar(b)){
				return minus ? -n : n;
			}else{
				throw new NumberFormatException();
			}
			b = readByte();
		}
	}
	public int nextInt() {
		long nl = nextLong();
		if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
		return (int) nl;
	}
	public double nextDouble() { return Double.parseDouble(next());}
	public void close() {
		try {
			in.close();
		} catch (IOException e) {
		}
	}

		}
",WA
igirisu ,abc295/B,Java,"import java.util.Scanner;

public class Main {

    static String[][] grid;

    static int R;

    static int C;

    public static void main( String[] args) {
        Scanner scn = new Scanner( System.in);
        R = scn.nextInt();
        C = scn.nextInt();
        grid = new String[R][C];
        for ( int i = 0; i < R; i++) {
            grid[i] = scn.next().split( """");
        }
        for ( int j = 0; j < R; j++) {
            for ( int k = 0; k < C; k++) {
                switch ( grid[j][k]) {
                    case ""#"":
                    case ""."":
                        break;
                    default:
                        int power = Integer.parseInt( grid[j][k]);
                        grid[j][k] = ""."";
                        for ( int a = 0; a < R; a++) {
                            for ( int b = 0; b < C; b++) {
                                if ( Math.abs( a - j) + Math.abs( b - k) <= power) {
                                    grid[a][b] = ""."";
                                }
                            }
                        }
                        break;
                }
            }
        }
        for ( int l = 0; l < R; l++) {
            for ( int m = 0; m < C; m++) {
                System.out.print( grid[l][m]);
            }
            System.out.println();
        }
    }
}
","import java.util.Scanner;

public class Main {

    static String[][] grid;

    static int R;

    static int C;

    public static void main( String[] args) {
        Scanner scn = new Scanner( System.in);
        R = scn.nextInt();
        C = scn.nextInt();
        grid = new String[R][C];
        for ( int i = 0; i < R; i++) {
            grid[i] = scn.next().split( """");
        }
        for ( int j = 0; j < R; j++) {
            for ( int k = 0; k < C; k++) {
                switch ( grid[j][k]) {
                    case ""#"":
                    case ""."":
                        break;
                    default:
                        int power = Integer.parseInt( grid[j][k]);
                        grid[j][k] = ""."";
                        for ( int a = 0; a < R; a++) {
                            for ( int b = 0; b < C; b++) {
                                if ( grid[a][b].equals( ""#"") && Math.abs( a - j) + Math.abs( b - k) <= power) {
                                    grid[a][b] = ""."";
                                }
                            }
                        }
                        break;
                }
            }
        }
        for ( int l = 0; l < R; l++) {
            for ( int m = 0; m < C; m++) {
                System.out.print( grid[l][m]);
            }
            System.out.println();
        }
    }
}
",WA
fuyou ,abc295/B,Java,"import  java.util.*;
public class Main {
    static Scanner sc=new Scanner(System.in);
    static  int r,c;
    static  char [][] borad;
    public static void main(String[] args) {
        r=sc.nextInt();c=sc.nextInt();
        borad=new char[r][c];
        for(int i=0;i<r;i++){
            char []cur=sc.next().toCharArray();
            for(int j=0;j<c;j++) {
                borad[i][j]=cur[j];
            }
        }
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                if(borad[i][j]<='9'&&borad[i][j]>='1') {
                    int cur=borad[i][j]-'0';
                    borad[i][j]='.';
                    dfs(i,j,cur);
                }
            }
        }
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                System.out.print(borad[i][j]);
                System.out.print(' ');
            }
            System.out.println();
        }
    }
    static int[][]dirs={{-1,0},{1,0},{0,-1},{0,1}};
    static  void dfs(int i,int j,int target){
        if(target<0) return;
        if(borad[i][j]=='#')borad[i][j]='.';
        for(int []d:dirs){
            int nx=i+d[0],ny=j+d[1];
            if(nx<0||nx>=r||ny<0||ny>=c) continue;
            dfs(nx,ny,target-1);
        }
    }
}
","import  java.util.*;
public class Main {
    static Scanner sc=new Scanner(System.in);
    static  int r,c;
    static  char [][] borad;
    public static void main(String[] args) {
        r=sc.nextInt();c=sc.nextInt();
        borad=new char[r][c];
        for(int i=0;i<r;i++){
            char []cur=sc.next().toCharArray();
            for(int j=0;j<c;j++) {
                borad[i][j]=cur[j];
            }
        }
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                if(borad[i][j]<='9'&&borad[i][j]>='1') {
                    int cur=borad[i][j]-'0';
                    borad[i][j]='.';
                    dfs(i,j,cur);
                }
            }
        }
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                System.out.print(borad[i][j]);
            }
            System.out.println();
        }
    }
    static int[][]dirs={{-1,0},{1,0},{0,-1},{0,1}};
    static  void dfs(int i,int j,int target){
        if(target<0) return;
        if(borad[i][j]=='#')borad[i][j]='.';
        for(int []d:dirs){
            int nx=i+d[0],ny=j+d[1];
            if(nx<0||nx>=r||ny<0||ny>=c) continue;
            dfs(nx,ny,target-1);
        }
    }
}
",WA
fuyou ,abc295/B,Java,"import java.net.StandardSocketOptions;
import  java.util.*;
public class Main {
    static Scanner sc=new Scanner(System.in);
    static  int r,c;
    static  char [][] borad;
    public static void main(String[] args) {
        r=sc.nextInt();c=sc.nextInt();
        borad=new char[r][c];
        for(int i=0;i<r;i++){
            char []cur=sc.next().toCharArray();
            for(int j=0;j<c;j++) {
                borad[i][j]=cur[j];
            }
        }
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                if(borad[i][j]<='9'&&borad[i][j]>='1') {
                    int cur=borad[i][j]-'0';
                    borad[i][j]='.';
                    dfs(i,j,cur);
                }
            }
        }
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                System.out.print(borad[i][j]);
                System.out.print(' ');
            }
            System.out.println();
        }
    }
    static int[][]dirs={{-1,0},{1,0},{0,-1},{0,1}};
    static  void dfs(int i,int j,int target){
        if(target<0) return;
        if(borad[i][j]=='#')borad[i][j]='.';
        for(int []d:dirs){
            int nx=i+d[0],ny=j+d[1];
            if(nx<0||nx>=r||ny<0||ny>=c) continue;
            dfs(nx,ny,target-1);
        }
    }
}
","import  java.util.*;
public class Main {
    static Scanner sc=new Scanner(System.in);
    static  int r,c;
    static  char [][] borad;
    public static void main(String[] args) {
        r=sc.nextInt();c=sc.nextInt();
        borad=new char[r][c];
        for(int i=0;i<r;i++){
            char []cur=sc.next().toCharArray();
            for(int j=0;j<c;j++) {
                borad[i][j]=cur[j];
            }
        }
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                if(borad[i][j]<='9'&&borad[i][j]>='1') {
                    int cur=borad[i][j]-'0';
                    borad[i][j]='.';
                    dfs(i,j,cur);
                }
            }
        }
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                System.out.print(borad[i][j]);
            }
            System.out.println();
        }
    }
    static int[][]dirs={{-1,0},{1,0},{0,-1},{0,1}};
    static  void dfs(int i,int j,int target){
        if(target<0) return;
        if(borad[i][j]=='#')borad[i][j]='.';
        for(int []d:dirs){
            int nx=i+d[0],ny=j+d[1];
            if(nx<0||nx>=r||ny<0||ny>=c) continue;
            dfs(nx,ny,target-1);
        }
    }
}
",WA
ahnguye ,abc295/B,Java,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int R = sc.nextInt();
        int C = sc.nextInt();

        char[][] charArray = new char[R][C];

        for(int i = 0; i < R; ++i) {
            String input = sc.next();
            for (int j = 0; j < C; ++j) {
                charArray[i][j] = input.charAt(j);
            }
        }

        for(int i = 0; i < R; ++i) {
            for (int j = 0; j < C; ++j) {
                if (Character.isDigit(charArray[i][j])) {
                    int bombValue = Character.getNumericValue(charArray[i][j]);
                    System.out.println(bombValue);
                    for (int k = 0; k < R; ++k) {
                        for (int l = 0; l < C; ++l) {

                            if (bombValue >= Math.abs(i - k) + Math.abs(j - l)) {
                                if (!Character.isDigit(charArray[k][l])) {
                                    charArray[k][l] = '.';
                                }
                            }
                        }
                    }
                }
            }
        }

        for (int i = 0; i < R; ++i) {
            for (int j = 0; j < C; ++j) {
                if (Character.isDigit(charArray[i][j])) {
                    charArray[i][j] = '.';
                }
            }
            System.out.println(new String(charArray[i]));
        }
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int R = sc.nextInt();
        int C = sc.nextInt();

        char[][] charArray = new char[R][C];

        for(int i = 0; i < R; ++i) {
            String input = sc.next();
            for (int j = 0; j < C; ++j) {
                charArray[i][j] = input.charAt(j);
            }
        }

        for(int i = 0; i < R; ++i) {
            for (int j = 0; j < C; ++j) {
                if (Character.isDigit(charArray[i][j])) {
                    int bombValue = Character.getNumericValue(charArray[i][j]);

                    for (int k = 0; k < R; ++k) {
                        for (int l = 0; l < C; ++l) {

                            if (bombValue >= Math.abs(i - k) + Math.abs(j - l)) {
                                if (!Character.isDigit(charArray[k][l])) {
                                    charArray[k][l] = '.';
                                }
                            }
                        }
                    }
                }
            }
        }

        for (int i = 0; i < R; ++i) {
            for (int j = 0; j < C; ++j) {
                if (Character.isDigit(charArray[i][j])) {
                    charArray[i][j] = '.';
                }
            }
            System.out.println(new String(charArray[i]));
        }
    }
}
",WA
yehara ,abc295/B,Java,"import java.io.*;
import java.util.*;

public class Main {

    static Scanner sc;
    static PrintWriter out;

    public static void main(String[] args) {
        sc = new Scanner(System.in);
        out = new PrintWriter(System.out);
        new Main().solve();
        out.flush();
    }

    public void solve() {
        int r = sc.nextInt();
        int c = sc.nextInt();
        char[][] g = new char[r][c];
        char[][] res = new char[r][c];
        for(int i=0; i<r; i++) {
            g[i] = sc.next().toCharArray();
            Arrays.fill(res[i], '.');
        }
        for(int i=0; i<r; i++) {
            A: for(int j=0; j<c; j++) {
                if(g[i][j] != '#') continue;
                for(int ii = 0; ii<r; ii++) {
                    for(int jj=0; jj<r; jj++) {
                        if('1'<=g[ii][jj] && g[ii][jj] <='9') {
                            int d = g[ii][jj]-'0';
                            if(Math.abs(ii-i) + Math.abs(jj-j) <= d) continue A;
                        }
                    }
                }
                res[i][j] = '#';
            }
        }
        for(int i=0; i<r; i++) {
            out.println(new String(res[i]));
        }

    }

}
","import java.io.*;
import java.util.*;

public class Main {

    static Scanner sc;
    static PrintWriter out;

    public static void main(String[] args) {
        sc = new Scanner(System.in);
        out = new PrintWriter(System.out);
        new Main().solve();
        out.flush();
    }

    public void solve() {
        int r = sc.nextInt();
        int c = sc.nextInt();
        char[][] g = new char[r][c];
        char[][] res = new char[r][c];
        for(int i=0; i<r; i++) {
            g[i] = sc.next().toCharArray();
            Arrays.fill(res[i], '.');
        }
        for(int i=0; i<r; i++) {
            A: for(int j=0; j<c; j++) {
                if(g[i][j] != '#') continue;
                for(int ii = 0; ii<r; ii++) {
                    for(int jj=0; jj<c; jj++) {
                        if('1'<=g[ii][jj] && g[ii][jj] <='9') {
                            int d = g[ii][jj]-'0';
                            if(Math.abs(ii-i) + Math.abs(jj-j) <= d) continue A;
                        }
                    }
                }
                res[i][j] = '#';
            }
        }
        for(int i=0; i<r; i++) {
            out.println(new String(res[i]));
        }

    }

}
",RE
kts_20 ,abc295/B,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
    public static void main(String[] args) {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        try{
            String RC = br.readLine();
            int R = Integer.parseInt(RC.split("" "")[0]);
            int C = Integer.parseInt(RC.split("" "")[1]);
            if(R < 1 || C > 20){
                throw new NumberFormatException();
            }

            char[][] bMatrix = new char[R][C];
            for(int i = 0; i < R; i++){
                bMatrix[i] = br.readLine().toCharArray();
            }

            boolean[][] marks = new boolean[R][C];
            for(int r = 0; r < R; r++){
                for(int c = 0; c < C; c++){
                    if(bMatrix[r][c] == '.' || bMatrix[r][c] == '#'){
                        continue;
                    }
                    int tmpBo = Integer.parseInt(String.valueOf(bMatrix[r][c]));
                    marks[r][c] = true;
                    for(int t = -tmpBo; t < tmpBo + 1; t++) {
                        for (int s = -tmpBo; s < tmpBo + 1; s++) {

                                if(Math.abs(s +t) > tmpBo) {
                                    continue;
                                }
                                if(r + t <0 || r+t > R-1||c+s <0 || c+s > C-1) {
                                    continue;
                                }
                                marks[r + t][c + s] = true;
                        }

                    }
                }
            }

            for(int r = 0; r < R; r++){
                for(int c = 0; c < C; c++){
                   if(marks[r][c]){
                       System.out.print('.');
                   } else if(!marks[r][c] && bMatrix[r][c] == '#'){
                       System.out.print(""#"");
                   } else {
                       System.out.print(bMatrix[r][c]);
                   }
                }
                System.out.println("""");
            }

        }catch (IOException | NumberFormatException e){
            System.out.println(e);
        }
    }
}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
    public static void main(String[] args) {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        try{
            String RC = br.readLine();
            int R = Integer.parseInt(RC.split("" "")[0]);
            int C = Integer.parseInt(RC.split("" "")[1]);
            if(R < 1 || C > 20){
                throw new NumberFormatException();
            }

            char[][] bMatrix = new char[R][C];
            for(int i = 0; i < R; i++){
                bMatrix[i] = br.readLine().toCharArray();
            }

            boolean[][] marks = new boolean[R][C];
            for(int r = 0; r < R; r++){
                for(int c = 0; c < C; c++){
                    if(bMatrix[r][c] == '.' || bMatrix[r][c] == '#'){
                        continue;
                    }
                    int tmpBo = Integer.parseInt(String.valueOf(bMatrix[r][c]));
                    marks[r][c] = true;
                    for(int t = -tmpBo; t < tmpBo + 1; t++) {
                        for (int s = -tmpBo; s < tmpBo + 1; s++) {

                                if(Math.abs(s) + Math.abs(t) > tmpBo) {
                                    continue;
                                }
                                if(r + t <0 || r+t > R-1||c+s <0 || c+s > C-1) {
                                    continue;
                                }
                                marks[r + t][c + s] = true;
                        }

                    }
                }
            }

            for(int r = 0; r < R; r++){
                for(int c = 0; c < C; c++){
                   if(marks[r][c]){
                       System.out.print('.');
                   } else if(!marks[r][c] && bMatrix[r][c] == '#'){
                       System.out.print(""#"");
                   } else {
                       System.out.print(bMatrix[r][c]);
                   }
                }
                System.out.println("""");
            }

        }catch (IOException | NumberFormatException e){
            System.out.println(e);
        }
    }
}
",WA
orangefly ,abc295/B,Java,"import java.util.*;
class Main{
    static int q=0,count=0;
    public static void main(String[] args){
        Scanner in=new Scanner(System.in);
        int n=in.nextInt();
        int m=in.nextInt();
        int[][] ele=new int[n][2];
        char[][] s=new char[n][m];
        int[] k=new int[n+m];

        String t=in.nextLine();
        for(int i=0;i<n;i++){
            t=in.nextLine();
            for(int j=0;j<m;j++){
                s[i][j]=t.charAt(j);
                if(s[i][j]<='9'&&s[i][j]>='0'){
                    ele[q][0]=i;
                    ele[q][1]=j;
                    k[q]=s[i][j]-'0';
                    q++;
                    count++;
                }
            }
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(s[i][j]!='.'&&isep(i,j,ele,k)==true){
                    s[i][j]='.';
                }
                System.out.print(s[i][j]);
            }
            System.out.println();
        }
    }
    public static boolean isep(int n,int m,int[][] ele,int[] k){
        for(int i=0;i<q;i++){

                if(Math.abs(n-ele[i][0])+Math.abs(m-ele[i][1])<=k[i]){
                    return true;
                }

        }
        return false;
    }
}
","import java.util.*;
class Main{
    static int q=0,count=0;
    public static void main(String[] args){
        Scanner in=new Scanner(System.in);
        int n=in.nextInt();
        int m=in.nextInt();
        int[][] ele=new int[n*m][2];
        char[][] s=new char[n][m];
        int[] k=new int[n*m];

        String t=in.nextLine();
        for(int i=0;i<n;i++){
            t=in.nextLine();
            for(int j=0;j<m;j++){
                s[i][j]=t.charAt(j);
                if(s[i][j]<='9'&&s[i][j]>='0'){
                    ele[q][0]=i;
                    ele[q][1]=j;
                    k[q]=s[i][j]-'0';
                    q++;
                    count++;
                }
            }
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(s[i][j]!='.'&&isep(i,j,ele,k)==true){
                    s[i][j]='.';
                }
                System.out.print(s[i][j]);
            }
            System.out.println();
        }
    }
    public static boolean isep(int n,int m,int[][] ele,int[] k){
        for(int i=0;i<q;i++){

                if(Math.abs(n-ele[i][0])+Math.abs(m-ele[i][1])<=k[i]){
                    return true;
                }

        }
        return false;
    }
}
",RE
y_naga ,abc295/B,Java,"import java.util.*;





class NumBomb extends Object{
    public int power;
    public int r;
    public int c;
    public NumBomb(int power, int r, int c) {
      this.power = power;
      this.r = r;
      this.c = c;
	}
  }
public class Main {
    public static void main(String[] args) {
      
      Scanner sc = new Scanner(System.in);
      String[] rc = sc.nextLine().split("" "");
      int r = Integer.parseInt(rc[0]);
      int c = Integer.parseInt(rc[1]);
      char[][] grid = new char[r][c];
      List<NumBomb> bombList = new ArrayList<NumBomb>();
      for (int i=0; i<r; i++) {
        grid[i]=sc.nextLine().toCharArray();
        for (int j=0; j<c; j++) {
          char t = grid[i][j];
          if (t=='.'){
          } else if (t=='#') {
          } else {
            NumBomb nb = new NumBomb(t-48,i,j);
            bombList.add(nb);
          }
        }
      }
      for (NumBomb nb : bombList) {
        for(int i=Math.max(0,nb.r-nb.power); i<Math.min(r,nb.r+nb.power);i++) {
          int k=nb.power-Math.abs(i-nb.r);
          for(int j=Math.max(0,nb.c-k); j<Math.min(c,nb.c+k+1);j++) {
            grid[i][j]='.';
          }
        }
        
      }
      for (int i=0; i<r; i++) {
        System.out.println(grid[i]);
      }

    }
}
","import java.util.*;





class NumBomb extends Object{
    public int power;
    public int r;
    public int c;
    public NumBomb(int power, int r, int c) {
      this.power = power;
      this.r = r;
      this.c = c;
	}
  }
public class Main {
    public static void main(String[] args) {
      
      Scanner sc = new Scanner(System.in);
      String[] rc = sc.nextLine().split("" "");
      int r = Integer.parseInt(rc[0]);
      int c = Integer.parseInt(rc[1]);
      char[][] grid = new char[r][c];
      List<NumBomb> bombList = new ArrayList<NumBomb>();
      for (int i=0; i<r; i++) {
        grid[i]=sc.nextLine().toCharArray();
        for (int j=0; j<c; j++) {
          char t = grid[i][j];
          if (t=='.'){
          } else if (t=='#') {
          } else {
            NumBomb nb = new NumBomb(t-48,i,j);
            bombList.add(nb);
          }
        }
      }
      for (NumBomb nb : bombList) {
        for(int i=Math.max(0,nb.r-nb.power); i<Math.min(r,nb.r+nb.power+1);i++) {
          int k=nb.power-Math.abs(i-nb.r);
          for(int j=Math.max(0,nb.c-k); j<Math.min(c,nb.c+k+1);j++) {
            grid[i][j]='.';
          }
        }
        
      }
      for (int i=0; i<r; i++) {
        System.out.println(grid[i]);
      }

    }
}
",WA
mooninsea ,abc295/B,Java,"import java.util.*;
public class Main {
    public static void main(String args[]){
    boolean flag=false;
    Scanner in=new Scanner(System.in);
    int n=in.nextInt(),m=in.nextInt();
    boolean falg1[][]=new boolean[n][m];
    char a[][]=new char [n][m];
        for(int i=0;i<n;i++){
            String S=in.next();
            for(int j=0;j<m;j++) {
                if(a[i][j]!='.'||(S.charAt(j)>'0'&&S.charAt(j)<'9'))a[i][j] = S.charAt(j);
                if (a[i][j] >= '1' && a[i][j] <= '9') {
                    int u = a[i][j] - '0';
                    a[i][j]='.';
                    int w=i-u,x=i+u,y=j-u,z=j+u;
                    if(w<0)w=0;
                    if(x>=n)x=n-1;
                    if(y<0)y=0;
                    if(z>=m)z=m-1;
                    for(int k=w;k<=x;k++){
                        for(int r=y;r<=z;r++){
                            if((Math.abs(i-k)+Math.abs(j-r))<=u)a[k][r]='.';
                        }
                    }
                    }
            }

        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                System.out.print(a[i][j]);
            }
            System.out.println();
        }
    }
}
","import java.util.*;
public class Main {
    public static void main(String args[]){
    boolean flag=false;
    Scanner in=new Scanner(System.in);
    int n=in.nextInt(),m=in.nextInt();
    boolean falg1[][]=new boolean[n][m];
    char a[][]=new char [n][m];
        for(int i=0;i<n;i++){
            String S=in.next();
            for(int j=0;j<m;j++) {
                if(a[i][j]!='.'||(S.charAt(j)>'0'&&S.charAt(j)<='9'))a[i][j] = S.charAt(j);
                if (a[i][j] >= '1' && a[i][j] <= '9') {
                    int u = a[i][j] - '0';
                    a[i][j]='.';
                    int w=i-u,x=i+u,y=j-u,z=j+u;
                    if(w<0)w=0;
                    if(x>=n)x=n-1;
                    if(y<0)y=0;
                    if(z>=m)z=m-1;
                    for(int k=w;k<=x;k++){
                        for(int r=y;r<=z;r++){
                            if((Math.abs(i-k)+Math.abs(j-r))<=u)a[k][r]='.';
                        }
                    }
                    }
            }

        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                System.out.print(a[i][j]);
            }
            System.out.println();
        }
    }
}
",WA
mooninsea ,abc295/B,Java,"import java.util.*;
public class Main {
    public static void main(String args[]){
    boolean flag=false;
    Scanner in=new Scanner(System.in);
    int n=in.nextInt(),m=in.nextInt();
    boolean falg1[][]=new boolean[n][m];
    char a[][]=new char [n][m];
        for(int i=0;i<n;i++){
            String S=in.next();
            for(int j=0;j<m;j++) {
                if(a[i][j]!='.'||(S.charAt(j)>'0'&&S.charAt(j)<'9'))a[i][j] = S.charAt(j);
                if (a[i][j] >= '1' && a[i][j] <= '9') {
                    int u = a[i][j] - '0';
                    a[i][j]='.';
                    int w=i-u,x=i+u,y=j-u,z=j+u;
                    if(w<0)w=0;
                    if(x>=n)x=n-1;
                    if(y<0)y=0;
                    if(z>=m)z=m-1;
                    for(int k=w;k<=x;k++){
                        for(int r=y;r<=z;r++){
                            if((Math.abs(i-k)+Math.abs(j-r))<=u)a[k][r]='.';
                        }
                    }
                    }
            }

        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                System.out.print(a[i][j]+"" "");
            }
            System.out.println();
        }
    }
}
","import java.util.*;
public class Main {
    public static void main(String args[]){
    boolean flag=false;
    Scanner in=new Scanner(System.in);
    int n=in.nextInt(),m=in.nextInt();
    boolean falg1[][]=new boolean[n][m];
    char a[][]=new char [n][m];
        for(int i=0;i<n;i++){
            String S=in.next();
            for(int j=0;j<m;j++) {
                if(a[i][j]!='.'||(S.charAt(j)>'0'&&S.charAt(j)<='9'))a[i][j] = S.charAt(j);
                if (a[i][j] >= '1' && a[i][j] <= '9') {
                    int u = a[i][j] - '0';
                    a[i][j]='.';
                    int w=i-u,x=i+u,y=j-u,z=j+u;
                    if(w<0)w=0;
                    if(x>=n)x=n-1;
                    if(y<0)y=0;
                    if(z>=m)z=m-1;
                    for(int k=w;k<=x;k++){
                        for(int r=y;r<=z;r++){
                            if((Math.abs(i-k)+Math.abs(j-r))<=u)a[k][r]='.';
                        }
                    }
                    }
            }

        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                System.out.print(a[i][j]);
            }
            System.out.println();
        }
    }
}
",WA
mooninsea ,abc295/B,Java,"import java.util.*;
public class Main {
    public static void main(String args[]){
    boolean flag=false;
    Scanner in=new Scanner(System.in);
    int n=in.nextInt(),m=in.nextInt();
    boolean falg1[][]=new boolean[n][m];
    char a[][]=new char [n][m];
        for(int i=0;i<n;i++){
            String S=in.next();
            for(int j=0;j<n;j++) {
                if(a[i][j]!='.')a[i][j] = S.charAt(j);
                if (a[i][j] >= '1' && a[i][j] <= '9') {
                    int u = a[i][j] - '0';
                    a[i][j]='.';
                    int w=i-u,x=i+u,y=j-u,z=j+u;
                    if(w<0)w=0;
                    if(x>=n)x=n-1;
                    if(y<0)y=0;
                    if(z>=m)z=m-1;
                    for(int k=w;k<=x;k++){
                        for(int r=y;r<=z;r++){
                            if((Math.abs(i-k)+Math.abs(j-r))<=u)a[k][r]='.';
                        }
                    }
                    }
            }

        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                System.out.print(a[i][j]+"" "");
            }
            System.out.println();
        }
    }
}
","import java.util.*;
public class Main {
    public static void main(String args[]){
    boolean flag=false;
    Scanner in=new Scanner(System.in);
    int n=in.nextInt(),m=in.nextInt();
    boolean falg1[][]=new boolean[n][m];
    char a[][]=new char [n][m];
        for(int i=0;i<n;i++){
            String S=in.next();
            for(int j=0;j<m;j++) {
                if(a[i][j]!='.'||(S.charAt(j)>'0'&&S.charAt(j)<='9'))a[i][j] = S.charAt(j);
                if (a[i][j] >= '1' && a[i][j] <= '9') {
                    int u = a[i][j] - '0';
                    a[i][j]='.';
                    int w=i-u,x=i+u,y=j-u,z=j+u;
                    if(w<0)w=0;
                    if(x>=n)x=n-1;
                    if(y<0)y=0;
                    if(z>=m)z=m-1;
                    for(int k=w;k<=x;k++){
                        for(int r=y;r<=z;r++){
                            if((Math.abs(i-k)+Math.abs(j-r))<=u)a[k][r]='.';
                        }
                    }
                    }
            }

        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                System.out.print(a[i][j]);
            }
            System.out.println();
        }
    }
}
",WA
mooninsea ,abc295/B,Java,"import java.util.*;
public class IU {
    public static void main(String args[]){
    boolean flag=false;
    Scanner in=new Scanner(System.in);
    int n=in.nextInt(),m=in.nextInt();
    boolean falg1[][]=new boolean[n][m];
    char a[][]=new char [n][m];
        for(int i=0;i<n;i++){
            String S=in.next();
            for(int j=0;j<n;j++) {
                if(a[i][j]!='.')a[i][j] = S.charAt(j);
                if (a[i][j] >= '1' && a[i][j] <= '9') {
                    int u = a[i][j] - '0';
                    a[i][j]='.';
                    int w=i-u,x=i+u,y=j-u,z=j+u;
                    if(w<0)w=0;
                    if(x>=n)x=n-1;
                    if(y<0)y=0;
                    if(z>=m)z=m-1;
                    for(int k=w;k<=x;k++){A
                        for(int r=y;r<=z;r++){
                            if((Math.abs(i-k)+Math.abs(j-r))<=u)a[k][r]='.';
                        }
                    }
                    }
            }

        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                System.out.print(a[i][j]+"" "");
            }
            System.out.println();
        }
    }
}
","import java.util.*;
public class Main {
    public static void main(String args[]){
    boolean flag=false;
    Scanner in=new Scanner(System.in);
    int n=in.nextInt(),m=in.nextInt();
    boolean falg1[][]=new boolean[n][m];
    char a[][]=new char [n][m];
        for(int i=0;i<n;i++){
            String S=in.next();
            for(int j=0;j<m;j++) {
                if(a[i][j]!='.'||(S.charAt(j)>'0'&&S.charAt(j)<='9'))a[i][j] = S.charAt(j);
                if (a[i][j] >= '1' && a[i][j] <= '9') {
                    int u = a[i][j] - '0';
                    a[i][j]='.';
                    int w=i-u,x=i+u,y=j-u,z=j+u;
                    if(w<0)w=0;
                    if(x>=n)x=n-1;
                    if(y<0)y=0;
                    if(z>=m)z=m-1;
                    for(int k=w;k<=x;k++){
                        for(int r=y;r<=z;r++){
                            if((Math.abs(i-k)+Math.abs(j-r))<=u)a[k][r]='.';
                        }
                    }
                    }
            }

        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                System.out.print(a[i][j]);
            }
            System.out.println();
        }
    }
}
",CE
Aika426 ,abc295/B,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
    public static void main(String[] args) {
        FastReader f = new FastReader();
        int x = f.nextInt();
        int y = f.nextInt();
        char[][] board = new char[x][y];

        for (int i = 0; i < x; i++) {
            board[i] = f.next().toCharArray();
        }

        for (int i = 0; i < x; i++) {
            for (int j = 0; j < y; j++) {
                if (board[i][j] == '.' || board[i][j] == '#'){
                    continue;
                } else {
                    int a = Character.getNumericValue(board[i][j]);
                    board[i][j] = '.';

                    for (int k = 0; k < x; k++) {
                        for (int l = 0; l < y; l++) {
                            if (board[k][l] == '#' && (Math.abs(i - k) + Math.abs(j - l)) <= a){
                                board[k][l] = '.';
                            }
                        }
                    }
                }
            }
        }

        for (int q = 0; q < x; q++) {
            for (int r = 0; r < y; r++) {
                System.out.print(board[q][r] + "" "");
            }
            System.out.println();
        }
    }
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader()
        {
            br = new BufferedReader(
                    new InputStreamReader(System.in));
        }

        String next()
        {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                }
                catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() { return Integer.parseInt(next()); }

        long nextLong() { return Long.parseLong(next()); }

        double nextDouble()
        {
            return Double.parseDouble(next());
        }

        String nextLine()
        {
            String str = """";
            try {
                if(st.hasMoreTokens()){
                    str = st.nextToken(""\n"");
                }
                else{
                    str = br.readLine();
                }
            }
            catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }
}
","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
    public static void main(String[] args) {
        FastReader f = new FastReader();
        int x = f.nextInt();
        int y = f.nextInt();
        char[][] board = new char[x][y];

        for (int i = 0; i < x; i++) {
            board[i] = f.next().toCharArray();
        }

        for (int i = 0; i < x; i++) {
            for (int j = 0; j < y; j++) {
                if (board[i][j] == '.' || board[i][j] == '#'){
                    continue;
                } else {
                    int a = Character.getNumericValue(board[i][j]);
                    board[i][j] = '.';

                    for (int k = 0; k < x; k++) {
                        for (int l = 0; l < y; l++) {
                            if (board[k][l] == '#' && (Math.abs(i - k) + Math.abs(j - l)) <= a){
                                board[k][l] = '.';
                            }
                        }
                    }
                }
            }
        }

        for (int q = 0; q < x; q++) {
            for (int r = 0; r < y; r++) {
                System.out.print(board[q][r]);
            }
            System.out.println();
        }
    }
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader()
        {
            br = new BufferedReader(
                    new InputStreamReader(System.in));
        }

        String next()
        {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                }
                catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() { return Integer.parseInt(next()); }

        long nextLong() { return Long.parseLong(next()); }

        double nextDouble()
        {
            return Double.parseDouble(next());
        }

        String nextLine()
        {
            String str = """";
            try {
                if(st.hasMoreTokens()){
                    str = st.nextToken(""\n"");
                }
                else{
                    str = br.readLine();
                }
            }
            catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }
}
",WA
pshantanu ,abc295/B,Java,"import java.util.*;
public class Main
{
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		int r = sc.nextInt();
		int c = sc.nextInt();
		
		char arr[][] = new char[r][c];
		
		for(int i=0;i<r;i++){
		    for(int j=0;j<c;j++){
		        arr[i][j] = sc.next().charAt(0);
		    }
		}
		
		
		
		for(int i=0;i<r;i++){
		    for(int j=0;j<c;j++){
		        if(arr[i][j]>='1' && arr[i][j]<='9'){
		            
		            check(arr,(arr[i][j]-'0'),r,c,i,j);
		            arr[i][j] = '.';
		        }       
		    }
		}
		
		
		for(int i=0;i<r;i++){
		    for(int j=0;j<c;j++){
		        System.out.print(arr[i][j]);
		    }
		    System.out.println();
		}
		
		
	}
	
	public static void check(char arr[][], int power, int r, int c, int trow, int tcol){
	    
	    for(int i=0;i<r;i++){
	        for(int j=0;j<c;j++){
	            
	            if(arr[i][j]=='#'){
	                int dist = Math.abs(trow-i)+Math.abs(tcol-j);
	                if(dist<=power){
	                    arr[i][j] = '.';
	                }
	            }
	        }
	    }
	}
}
","import java.util.*;
public class Main
{
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		int r = sc.nextInt();
		int c = sc.nextInt();
		
		char arr[][] = new char[r][c];
		
		for(int i=0;i<r;i++){
		    String inp = sc.next();
		    for(int j=0;j<c;j++){
		        arr[i][j] = inp.charAt(j);
		    }
		}
		
		
		for(int i=0;i<r;i++){
		    for(int j=0;j<c;j++){
		        if(arr[i][j]>='1' && arr[i][j]<='9'){
		            
		            check(arr,(arr[i][j]-'0'),r,c,i,j);
		            arr[i][j] = '.';
		        }       
		    }
		}
		
		
		for(int i=0;i<r;i++){
		    for(int j=0;j<c;j++){
		        System.out.print(arr[i][j]);
		    }
		    System.out.println();
		}
		
		
	}
	
	public static void check(char arr[][], int power, int r, int c, int trow, int tcol){
	    
	    for(int i=0;i<r;i++){
	        for(int j=0;j<c;j++){
	            
	            if(arr[i][j]=='#'){
	                int dist = Math.abs(trow-i)+Math.abs(tcol-j);
	                if(dist<=power){
	                    arr[i][j] = '.';
	                }
	            }
	        }
	    }
	}
}
",RE
Tejaswini23 ,abc295/B,Java,"import java.util.*;
public class MyClass {
    public static void main(String args[]) {
    Scanner sc = new Scanner(System.in);  
	    int n = sc.nextInt();
	    int m = sc.nextInt();
	    char arr[][] = new char[n][m];
	    
	    for (int i = 0; i < n; i++) {
             String row = sc.next();
            for (int j = 0; j < m; j++) {
                arr[i][j] = row.charAt(j);
            }
        }
	    
	    
	    for (int i=0;i<n;i++) {
	         for (int j=0;j<m;j++) {
	             if (arr[i][j] != '.' && arr[i][j] != '#') {
	                 int bomb = (int)(arr[i][j] - '0'); 
	                 arr[i][j] = '.';
	                 for (int p=0;p<n;p++) {
	                     for (int q=0;q<m;q++) {
	                         int dis = Math.abs(p-i) + Math.abs(q-j);
	                         if (dis<=bomb && arr[p][q] == '#') {
	                             arr[p][q] = '.';
	                         }
	                     }
	                 } 
	             }
	             
	         }
	    } 
	    for (int i=0;i<n;i++) {
	         for (int j=0;j<m;j++) {
	            System.out.print(arr[i][j]);
	        }
	         System.out.println();
	    }
	   
    }
}
","import java.util.*;
public class Main {
    public static void main(String args[]) {
    Scanner sc = new Scanner(System.in);  
	    int n = sc.nextInt();
	    int m = sc.nextInt();
	    char arr[][] = new char[n][m];
	    
	    for (int i = 0; i < n; i++) {
             String row = sc.next();
            for (int j = 0; j < m; j++) {
                arr[i][j] = row.charAt(j);
            }
        }
	    
	    
	    for (int i=0;i<n;i++) {
	         for (int j=0;j<m;j++) {
	             if (arr[i][j] != '.' && arr[i][j] != '#') {
	                 int bomb = (int)(arr[i][j] - '0'); 
	                 arr[i][j] = '.';
	                 for (int p=0;p<n;p++) {
	                     for (int q=0;q<m;q++) {
	                         int dis = Math.abs(p-i) + Math.abs(q-j);
	                         if (dis<=bomb && arr[p][q] == '#') {
	                             arr[p][q] = '.';
	                         }
	                     }
	                 } 
	             }
	             
	         }
	    } 
	    for (int i=0;i<n;i++) {
	         for (int j=0;j<m;j++) {
	            System.out.print(arr[i][j]);
	        }
	         System.out.println();
	    }
	   
    }
}
",CE
Katharsis13 ,abc295/B,Java,"import java.util.*;
import java.io.*;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    static final int N = 100010;
    static int n, m;
    static char g[][] = new char[22][22];
    
    public static void main(String[] args) throws Exception {
        String str[] = br.readLine().split("" "");

        n = Integer.parseInt(str[0]);
        m = Integer.parseInt(str[1]);
        
        for(int i = 0; i < n; i ++ ) {
            g[i] = br.readLine().split("" "")[0].toCharArray();
        }

        for(int i = 0; i < n; i ++ ) {
            for(int j = 0; j < m; j ++ ) {
                if(g[i][j] >= '0' && g[i][j] <= '9') {
                    int p = g[i][j] - '0';
                    for(int x = Math.max(i - p, 0); x <= Math.min(p + i, n - 1); x ++ ) {
                        for(int y = Math.max(j - p, 0); y <= Math.min(p + j, m - 1); y ++ ) {
                            if((i != x || j != y) && Math.abs(i - x) + Math.abs(j - y) <= p) {
                                g[x][y] = '.';
                            }
                        }
                    }
                }
            }
        }

        for(int i = 0; i < n; i ++ ) {
            for(int j = 0; j < m; j ++ ) {
                if(g[i][j] >= '0' && g[i][j] <= '9') bw.write('.');
                else bw.write(g[i][j]);
            }
            bw.write(""\n"");
        }
        bw.flush();
    }
}
","import java.util.*;
import java.io.*;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    static final int N = 100010;
    static int n, m;
    static char g[][] = new char[22][22];
    
    public static void main(String[] args) throws Exception {
        String str[] = br.readLine().split("" "");

        n = Integer.parseInt(str[0]);
        m = Integer.parseInt(str[1]);
        
        for(int i = 0; i < n; i ++ ) {
            g[i] = br.readLine().split("" "")[0].toCharArray();
        }

        for(int i = 0; i < n; i ++ ) {
            for(int j = 0; j < m; j ++ ) {
                if(g[i][j] >= '0' && g[i][j] <= '9') {
                    int p = g[i][j] - '0';
                    for(int x = Math.max(i - p, 0); x <= Math.min(p + i, n - 1); x ++ ) {
                        for(int y = Math.max(j - p, 0); y <= Math.min(p + j, m - 1); y ++ ) {
                            if((g[x][y] < '0' || g[x][y] > '9') && Math.abs(i - x) + Math.abs(j - y) <= p) {
                                g[x][y] = '.';
                            }
                        }
                    }
                }
            }
        }

        for(int i = 0; i < n; i ++ ) {
            for(int j = 0; j < m; j ++ ) {
                if(g[i][j] >= '0' && g[i][j] <= '9') bw.write('.');
                else bw.write(g[i][j]);
            }
            bw.write(""\n"");
        }
        bw.flush();
    }
}
",WA
profchi ,arc158/C,Java,"import java.io.*;
import java.util.*;

public class C2 {
	
	static IOHandler sc = new IOHandler();

	public static void main(String[] args) {
		
		int testCases = 1;
		
		for (int i = 1; i <= testCases; ++i) {
			solve(i);
		}
	}
	
	private static void solve(int t) {
		int n = sc.nextInt();
		
		long [] arr = new long [n];
		
		long result = 0;
		
		for (int i = 0; i < n; ++i) {
			arr[i] = sc.nextLong();
			result += digitSum(arr[i]);
		}
		
		result *= 2 * n;
		
		List<Long> list = new ArrayList<>();
		
		
		
		long div = 1;
		
		for (int i = 0; i < 15; ++i) {
			div *= 10;
		}
		
		while (div > 1) {
			
			list.clear();
			
			for (int i = 0; i < arr.length; ++i) {
				arr[i] %= div;
				list.add(arr[i]);
			}
			
			Collections.sort(list);
			
			int idx = 0;
			
			for (int i = list.size() - 1; i >= 0; --i) {
				while (idx < list.size() && list.get(i) + list.get(idx) < div) {
					++idx;
				}
				
				result -= 9 * (list.size() - idx);
			}
			
			div /= 10;
		}
		
		System.out.println(result);
		
	
	}
	
	private static long digitSum(long val) {
		long result = 0;
		
		while (val > 0) {
			result += val % 10;
			val /= 10;
		}
		
		return result;
	}
	
	
	private static class IOHandler {
      BufferedReader br;
      StringTokenizer st;
 
      public IOHandler() {
         br = new BufferedReader(new InputStreamReader(System.in));
      }
 
      String next() {
          while (st == null || !st.hasMoreElements()) {
              try {
                  st = new StringTokenizer(br.readLine());
              } catch (IOException e) {
                  e.printStackTrace();
              }
          }
          return st.nextToken();
      }
 
      int nextInt() {
          return Integer.parseInt(next());
      }
      
      int [] readArray(int n) {
    	  int [] res = new int [n];
    	  
    	  for (int i = 0; i < n; ++i)
    		  res[i] = nextInt();
    	  
    	  return res;
      }
      
      int [] readArray2(int n) {
    	  int [] res = new int [n + 1];
    	  
    	  for (int i = 1; i <= n; ++i)
    		  res[i] = nextInt();
    	  
    	  return res;
      }
      
      int [][] readGraph(int n, int m, int c) {
    	  int [][] graph = new int [n + 1][];
    	  
    	  int [] count = new int [n + 1];
    	  int [][] arr = new int [m][1 + c];
    	  
    	  int a, b;
    	  
    	  for (int i = 0; i < m; ++i) {
    		  a = sc.nextInt();
    		  b = sc.nextInt();
    		  
    		  arr[i][0] = a;
    		  arr[i][1] = b;
    		  
    		  ++count[a];
    		  ++count[b];
    		  
    		  for (int j = 2; j <= c; ++j) {
    			  arr[i][j] = sc.nextInt();
    		  }
    	  }
    	  
    	  for (int i = 0; i <= n; ++i) {
    		  graph[i] = new int [count[i] * c];
    		  count[i] = 0;
    	  }
    	  int swap;
    	  
    	  for (int [] tArr : arr) {
    		  for (int j = 1; j < tArr.length; ++j) {
    			  graph[tArr[0]][count[tArr[0]]++] = tArr[j]; 
    		  }
    		  
    		  swap = tArr[0];
    		  tArr[0] = tArr[1];
    		  tArr[1] = swap;
    		  
    		  for (int j = 1; j < tArr.length; ++j) {
    			  graph[tArr[0]][count[tArr[0]]++] = tArr[j]; 
    		  }
    	  }
    	  
    	  return graph;
      }
 
      long nextLong() {
          return Long.parseLong(next());
      }
 
      double nextDouble() {
          return Double.parseDouble(next());
      }
 
      String nextLine(){
          String str = """";
		  try {
		     str = br.readLine();
		  } catch (IOException e) {
		     e.printStackTrace();
		  }
		  return str;
      }

   }

}
","import java.io.*;
import java.util.*;

public class Main {
	
	static IOHandler sc = new IOHandler();

	public static void main(String[] args) {
		
		int testCases = 1;
		
		for (int i = 1; i <= testCases; ++i) {
			solve(i);
		}
	}
	
	private static void solve(int t) {
		int n = sc.nextInt();
		
		long [] arr = new long [n];
		
		long result = 0;
		
		for (int i = 0; i < n; ++i) {
			arr[i] = sc.nextLong();
			result += digitSum(arr[i]);
		}
		
		result *= 2 * n;
		
		List<Long> list = new ArrayList<>();
		
		
		
		long div = 1;
		
		for (int i = 0; i < 15; ++i) {
			div *= 10;
		}
		
		while (div > 1) {
			
			list.clear();
			
			for (int i = 0; i < arr.length; ++i) {
				arr[i] %= div;
				list.add(arr[i]);
			}
			
			Collections.sort(list);
			
			int idx = 0;
			
			for (int i = list.size() - 1; i >= 0; --i) {
				while (idx < list.size() && list.get(i) + list.get(idx) < div) {
					++idx;
				}
				
				result -= 9 * (list.size() - idx);
			}
			
			div /= 10;
		}
		
		System.out.println(result);
		
	
	}
	
	private static long digitSum(long val) {
		long result = 0;
		
		while (val > 0) {
			result += val % 10;
			val /= 10;
		}
		
		return result;
	}
	
	
	private static class IOHandler {
      BufferedReader br;
      StringTokenizer st;
 
      public IOHandler() {
         br = new BufferedReader(new InputStreamReader(System.in));
      }
 
      String next() {
          while (st == null || !st.hasMoreElements()) {
              try {
                  st = new StringTokenizer(br.readLine());
              } catch (IOException e) {
                  e.printStackTrace();
              }
          }
          return st.nextToken();
      }
 
      int nextInt() {
          return Integer.parseInt(next());
      }
      
      int [] readArray(int n) {
    	  int [] res = new int [n];
    	  
    	  for (int i = 0; i < n; ++i)
    		  res[i] = nextInt();
    	  
    	  return res;
      }
      
      int [] readArray2(int n) {
    	  int [] res = new int [n + 1];
    	  
    	  for (int i = 1; i <= n; ++i)
    		  res[i] = nextInt();
    	  
    	  return res;
      }
      
      int [][] readGraph(int n, int m, int c) {
    	  int [][] graph = new int [n + 1][];
    	  
    	  int [] count = new int [n + 1];
    	  int [][] arr = new int [m][1 + c];
    	  
    	  int a, b;
    	  
    	  for (int i = 0; i < m; ++i) {
    		  a = sc.nextInt();
    		  b = sc.nextInt();
    		  
    		  arr[i][0] = a;
    		  arr[i][1] = b;
    		  
    		  ++count[a];
    		  ++count[b];
    		  
    		  for (int j = 2; j <= c; ++j) {
    			  arr[i][j] = sc.nextInt();
    		  }
    	  }
    	  
    	  for (int i = 0; i <= n; ++i) {
    		  graph[i] = new int [count[i] * c];
    		  count[i] = 0;
    	  }
    	  int swap;
    	  
    	  for (int [] tArr : arr) {
    		  for (int j = 1; j < tArr.length; ++j) {
    			  graph[tArr[0]][count[tArr[0]]++] = tArr[j]; 
    		  }
    		  
    		  swap = tArr[0];
    		  tArr[0] = tArr[1];
    		  tArr[1] = swap;
    		  
    		  for (int j = 1; j < tArr.length; ++j) {
    			  graph[tArr[0]][count[tArr[0]]++] = tArr[j]; 
    		  }
    	  }
    	  
    	  return graph;
      }
 
      long nextLong() {
          return Long.parseLong(next());
      }
 
      double nextDouble() {
          return Double.parseDouble(next());
      }
 
      String nextLine(){
          String str = """";
		  try {
		     str = br.readLine();
		  } catch (IOException e) {
		     e.printStackTrace();
		  }
		  return str;
      }

   }

}
",CE
Akshit1515 ,abc293/D,Java,"import java.util.Scanner;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.Scanner;
import java.util.StringTokenizer;
import java.util.HashSet;
import java.util.Arrays;

public class MyClass {
    public static void main(String args[]) throws IOException {
        
        FastReader sc = new FastReader();
        StringBuilder sb = new StringBuilder();
        
        
        
        int t = 1;
        
        while(t > 0) {
            int n = sc.nextInt(), m = sc.nextInt();
            
            DSU dsu = new DSU(n);
            HashSet<Integer> s = new HashSet<>();
            
            for(int i=0;i<m;i++) {
                int a = sc.nextInt();
                String b = sc.next();
                int c = sc.nextInt();
                String d = sc.next();
                
                if(dsu.find(a) == dsu.find(c)) {
                    s.add(dsu.find(a));
                }
                
                dsu.union(a, c);
            }
            
            int total = 0;
            
            for(int i=1;i<=n;i++) {
                if(dsu.find(i) == i) total++;
            }
            
            System.out.printf(""%d %d\n"", s.size(), total-s.size());
            t--;
        }
        
    }
    
    static class DSU {
        int n;
        int[] par;
        int[] sz;
        
        DSU(int n) {
            this.n = n;
            par = new int[n+1];
            for(int i=1;i<=n;i++) par[i] = i;
            
            sz = new int[n+1];
            Arrays.fill(sz, 1);
        }
        
        int find(int x) {
            if(par[x] == x) return x;
            par[x] = find(par[x]);
            return par[x];
        }
        
        void union(int x, int y) {
            int a = find(x);
            int b = find(y);
            
            if(a == b) return;
            
            if(sz[a] < sz[b]) {
                int temp = a;
                a = b;
                b = temp;
            }
            
            sz[a] += sz[b];
            par[b] = a;
            return;
        }
    }
    
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;
  
        public FastReader()
        {
            br = new BufferedReader(
                new InputStreamReader(System.in));
        }
  
        String next()
        {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                }
                catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }
  
        int nextInt() { return Integer.parseInt(next()); }
  
        long nextLong() { return Long.parseLong(next()); }
  
        double nextDouble()
        {
            return Double.parseDouble(next());
        }
  
        String nextLine()
        {
            String str = """";
            try {
                if(st.hasMoreTokens()){
                    str = st.nextToken(""\n"");
                }
                else{
                    str = br.readLine();
                }
            }
            catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }
}
","import java.util.Scanner;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.Scanner;
import java.util.StringTokenizer;
import java.util.HashSet;
import java.util.Arrays;

public class Main {
    public static void main(String args[]) throws IOException {
        
        FastReader sc = new FastReader();
        StringBuilder sb = new StringBuilder();
        
        
        
        int t = 1;
        
        while(t > 0) {
            int n = sc.nextInt(), m = sc.nextInt();
            
            DSU dsu = new DSU(n);
            HashSet<Integer> s = new HashSet<>();
            
            for(int i=0;i<m;i++) {
                int a = sc.nextInt();
                String b = sc.next();
                int c = sc.nextInt();
                String d = sc.next();
                
                if(dsu.find(a) == dsu.find(c)) {
                    s.add(dsu.find(a));
                }
                
                dsu.union(a, c);
            }
            
            int total = 0;
            
            for(int i=1;i<=n;i++) {
                if(dsu.find(i) == i) total++;
            }
            
            System.out.printf(""%d %d\n"", s.size(), total-s.size());
            t--;
        }
        
    }
    
    static class DSU {
        int n;
        int[] par;
        int[] sz;
        
        DSU(int n) {
            this.n = n;
            par = new int[n+1];
            for(int i=1;i<=n;i++) par[i] = i;
            
            sz = new int[n+1];
            Arrays.fill(sz, 1);
        }
        
        int find(int x) {
            if(par[x] == x) return x;
            par[x] = find(par[x]);
            return par[x];
        }
        
        void union(int x, int y) {
            int a = find(x);
            int b = find(y);
            
            if(a == b) return;
            
            if(sz[a] < sz[b]) {
                int temp = a;
                a = b;
                b = temp;
            }
            
            sz[a] += sz[b];
            par[b] = a;
            return;
        }
    }
    
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;
  
        public FastReader()
        {
            br = new BufferedReader(
                new InputStreamReader(System.in));
        }
  
        String next()
        {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                }
                catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }
  
        int nextInt() { return Integer.parseInt(next()); }
  
        long nextLong() { return Long.parseLong(next()); }
  
        double nextDouble()
        {
            return Double.parseDouble(next());
        }
  
        String nextLine()
        {
            String str = """";
            try {
                if(st.hasMoreTokens()){
                    str = st.nextToken(""\n"");
                }
                else{
                    str = br.readLine();
                }
            }
            catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }
}
",CE
nevergiveup ,abc293/D,Java,"import java.io.File;
import java.io.FileNotFoundException;
import java.util.*;

public class Main {

    private static int[] degree = new int[200010];
    private static boolean[] vis = new boolean[200010];
    private static List<Integer>[] graph = new ArrayList[200010];

    static {
        for (int i = 0;i < 200010;i ++) {
            graph[i] = new ArrayList<>();
        }
    }

    private static boolean check(int current) {
        Queue<Integer> queue = new LinkedList<>();
        vis[current] = true;
        queue.add(current);
        boolean flag = true;
        while (!queue.isEmpty()) {
            int vertex = queue.poll();
            if (degree[vertex] != 2) {
                flag = false;
            }
            for (int next : graph[current]) {
                if (!vis[next]) {
                    vis[next] = true;
                    queue.add(next);
                }
            }
        }
        return flag;
    }

    public static void main(String[] args) throws FileNotFoundException {
        
        Scanner scan = new Scanner(System.in);
        int n = scan.nextInt() , m = scan.nextInt();
        for (int i = 0;i < m;i ++) {
            int a = scan.nextInt();
            String b = scan.next();
            int c = scan.nextInt();
            String d = scan.next();
            degree[a] ++;
            degree[c] ++;
            graph[a].add(c);
            graph[c].add(a);
        }
        int cycle = 0 , nonCycle = 0;
        for (int i = 1;i <= n;i ++) {
            if (!vis[i]) {
                if (check(i)) {
                    cycle ++;
                } else {
                    nonCycle ++;
                }
            }
        }
        System.out.println(cycle + "" "" + nonCycle);
    }

}
















","import java.io.File;
import java.io.FileNotFoundException;
import java.util.*;

public class Main {

    private static int[] degree = new int[200010];
    private static boolean[] vis = new boolean[200010];
    private static List<Integer>[] graph = new ArrayList[200010];

    static {
        for (int i = 0;i < 200010;i ++) {
            graph[i] = new ArrayList<>();
        }
    }

    private static boolean check(int current) {
        Queue<Integer> queue = new LinkedList<>();
        vis[current] = true;
        queue.add(current);
        boolean flag = true;
        while (!queue.isEmpty()) {
            int vertex = queue.poll();
            if (degree[vertex] != 2) {
                flag = false;
            }
            for (int next : graph[vertex]) {
                if (!vis[next]) {
                    vis[next] = true;
                    queue.add(next);
                }
            }
        }
        return flag;
    }

    public static void main(String[] args) throws FileNotFoundException {
        
        Scanner scan = new Scanner(System.in);
        int n = scan.nextInt() , m = scan.nextInt();
        for (int i = 0;i < m;i ++) {
            int a = scan.nextInt();
            String b = scan.next();
            int c = scan.nextInt();
            String d = scan.next();
            degree[a] ++;
            degree[c] ++;
            graph[a].add(c);
            graph[c].add(a);
        }
        int cycle = 0 , nonCycle = 0;
        for (int i = 1;i <= n;i ++) {
            if (!vis[i]) {
                if (check(i)) {
                    cycle ++;
                } else {
                    nonCycle ++;
                }
            }
        }
        System.out.println(cycle + "" "" + nonCycle);
    }

}
















",WA
nevergiveup ,abc293/D,Java,"import javax.swing.plaf.ListUI;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.*;

public class Main {

    private static int[] degree = new int[200010];
    private static boolean[] vis = new boolean[200010];
    private static Set<Integer>[] graph = new HashSet[200010];

    static {
        for (int i = 0;i < 200010;i ++) {
            graph[i] = new HashSet<>();
        }
    }

    private static boolean check(int current) {
        Queue<Integer> queue = new LinkedList<>();
        vis[current] = true;
        queue.add(current);
        boolean flag = true;
        while (!queue.isEmpty()) {
            int vertex = queue.poll();
            if (degree[vertex] != 2) {
                flag = false;
            }
            for (int next : graph[current]) {
                if (!vis[next]) {
                    vis[next] = true;
                    queue.add(next);
                }
            }
        }
        return flag;
    }

    public static void main(String[] args) throws FileNotFoundException {
        
        Scanner scan = new Scanner(System.in);
        int n = scan.nextInt() , m = scan.nextInt();
        for (int i = 0;i < m;i ++) {
            int a = scan.nextInt();
            String b = scan.next();
            int c = scan.nextInt();
            String d = scan.next();
            degree[a] ++;
            degree[c] ++;
            graph[a].add(c);
            graph[c].add(a);
        }
        int cycle = 0 , nonCycle = 0;
        for (int i = 1;i <= n;i ++) {
            if (!vis[i]) {
                if (check(i)) {
                    cycle ++;
                } else {
                    nonCycle ++;
                }
            }
        }
        System.out.println(cycle + "" "" + nonCycle);
    }

}
















","import java.io.File;
import java.io.FileNotFoundException;
import java.util.*;

public class Main {

    private static int[] degree = new int[200010];
    private static boolean[] vis = new boolean[200010];
    private static List<Integer>[] graph = new ArrayList[200010];

    static {
        for (int i = 0;i < 200010;i ++) {
            graph[i] = new ArrayList<>();
        }
    }

    private static boolean check(int current) {
        Queue<Integer> queue = new LinkedList<>();
        vis[current] = true;
        queue.add(current);
        boolean flag = true;
        while (!queue.isEmpty()) {
            int vertex = queue.poll();
            if (degree[vertex] != 2) {
                flag = false;
            }
            for (int next : graph[vertex]) {
                if (!vis[next]) {
                    vis[next] = true;
                    queue.add(next);
                }
            }
        }
        return flag;
    }

    public static void main(String[] args) throws FileNotFoundException {
        
        Scanner scan = new Scanner(System.in);
        int n = scan.nextInt() , m = scan.nextInt();
        for (int i = 0;i < m;i ++) {
            int a = scan.nextInt();
            String b = scan.next();
            int c = scan.nextInt();
            String d = scan.next();
            degree[a] ++;
            degree[c] ++;
            graph[a].add(c);
            graph[c].add(a);
        }
        int cycle = 0 , nonCycle = 0;
        for (int i = 1;i <= n;i ++) {
            if (!vis[i]) {
                if (check(i)) {
                    cycle ++;
                } else {
                    nonCycle ++;
                }
            }
        }
        System.out.println(cycle + "" "" + nonCycle);
    }

}
















",WA
haru_dotf90 ,abc298/B,Java,"import java.util.*;

public class Main {
    public static void main(String[] args) {

        IOHandler io = new IOHandler();
        int n = io.nextInt();
        int[][] a = io.nextIntArray(n, n);
        int[][] b = io.nextIntArray(n, n);
        io.close();

        if (isMatchAnswer(a, b)) {
            io.output(""Yes"");
            return;
        }

        for (int i = 0; i < 3; i++) {
            if (isMatchAnswer(a, b)) {
                io.output(""Yes"");
                return;
            }

            a = rotate(a);
        }
        io.output(""No"");
    }

    private static boolean isMatchAnswer(int[][] a, int[][] b) {
        for (int i = 0; i < a.length; i++) {
            for (int j = 0; j < a[i].length; j++) {
                if (a[i][j] == 1 && b[i][j] != 1) return false;
            }
        }
        return true;
    }

    private static int[][] rotate(int[][] source) {
        int n = source.length;
        int[][] result = new int[n][n];

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                result[n-1-j][i] = source[i][j];
            }
        }

        return result;
    }

    private static class IOHandler {
        private Scanner sc = new Scanner(System.in);
        private void close() {this.sc.close();}
        private int nextInt() {return this.sc.nextInt();}
        private int[] nextIntArray(int size) {
            int[] array = new int[size];
            for (int i = 0; i < size; i++) array[i] = this.sc.nextInt();
            return array;
        }
        private int[][] nextIntArray(int size1, int size2) {
           int[][] array = new int[size1][size2];
           for (int i = 0; i < size1; i++) array[i] = nextIntArray(size2);
           return array;
        }
        private <T> void output(T result) {System.out.println(result);}
    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args) {

        IOHandler io = new IOHandler();
        int n = io.nextInt();
        int[][] a = io.nextIntArray(n, n);
        int[][] b = io.nextIntArray(n, n);
        io.close();

        if (isMatchAnswer(a, b)) {
            io.output(""Yes"");
            return;
        }

        for (int i = 0; i < 3; i++) {
            a = rotate(a);

            if (isMatchAnswer(a, b)) {
                io.output(""Yes"");
                return;
            }

        }
        io.output(""No"");
    }

    private static boolean isMatchAnswer(int[][] a, int[][] b) {
        for (int i = 0; i < a.length; i++) {
            for (int j = 0; j < a[i].length; j++) {
                if (a[i][j] == 1 && b[i][j] != 1) return false;
            }
        }
        return true;
    }

    private static int[][] rotate(int[][] source) {
        int n = source.length;
        int[][] result = new int[n][n];

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                result[n-1-j][i] = source[i][j];
            }
        }

        return result;
    }

    private static class IOHandler {
        private Scanner sc = new Scanner(System.in);
        private void close() {this.sc.close();}
        private int nextInt() {return this.sc.nextInt();}
        private int[] nextIntArray(int size) {
            int[] array = new int[size];
            for (int i = 0; i < size; i++) array[i] = this.sc.nextInt();
            return array;
        }
        private int[][] nextIntArray(int size1, int size2) {
           int[][] array = new int[size1][size2];
           for (int i = 0; i < size1; i++) array[i] = nextIntArray(size2);
           return array;
        }
        private <T> void output(T result) {System.out.println(result);}
    }
}
",WA
Nacre ,abc298/B,Java,"import java.io.PrintWriter;
import java.util.Scanner;
 
public class Main {
	
	public static void main(String[] args) {
		
		try(Scanner sc = new Scanner(System.in);){
			
			PrintWriter out = new PrintWriter(System.out);
			StringBuilder sb = new StringBuilder();
			
			int n = Integer.parseInt(sc.next());
			int[][] a = new int[n][n];
			int[][] b = new int[n][n];
			
			for(int i = 0; i < n; i++) {
				for(int j = 0; j < n; j++) {
					a[i][j] = Integer.parseInt(sc.next());
				}
			}
			
			for(int i = 0; i < n; i++) {
				for(int j = 0; j < n; j++) {
					b[i][j] = Integer.parseInt(sc.next());
				}
			}
			
			boolean ok = false;
			for(int i = 0; i < 3; i++) {
				ok = check(a, b, n);
				if(ok) break;
				
				int[][] tmp = new int[n][n];
				for(int j = 0; j < n; j++) {
					for(int k = 0; k < n; k++) {
						tmp[n - 1 - k][j] = a[j][k];
					}
				}
				
				a = tmp;
			
			}
			
			if(ok) sb.append(""Yes"");
			else sb.append(""No"");
			
			out.println(sb.toString());
			out.flush();
			
		}
		
	}
	
	static boolean check(int[][] s, int[][] t, int n) {
		boolean isSame = true;
		
		for(int i = 0; i < n; i++) {
			for(int j = 0; j < n; j++) {
				if(s[i][j] != 1) continue;
				else {
					if(t[i][j] == 0) isSame = false;
				}
			}
		}
		
		return isSame;
		
	}

}
","import java.io.PrintWriter;
import java.util.Scanner;
 
public class Main {
	
	public static void main(String[] args) {
		
		try(Scanner sc = new Scanner(System.in);){
			
			PrintWriter out = new PrintWriter(System.out);
			StringBuilder sb = new StringBuilder();
			
			int n = Integer.parseInt(sc.next());
			int[][] a = new int[n][n];
			int[][] b = new int[n][n];
			
			for(int i = 0; i < n; i++) {
				for(int j = 0; j < n; j++) {
					a[i][j] = Integer.parseInt(sc.next());
				}
			}
			
			for(int i = 0; i < n; i++) {
				for(int j = 0; j < n; j++) {
					b[i][j] = Integer.parseInt(sc.next());
				}
			}
			
			boolean ok = false;
			for(int i = 0; i < 4; i++) {
				
				ok = check(a, b, n);
				if(ok) break;
				
				int[][] tmp = new int[n][n];
				for(int j = 0; j < n; j++) {
					for(int k = 0; k < n; k++) {
						tmp[n - 1 - k][j] = a[j][k];
					}
				}
				
				a = tmp;
				
			}
			
			if(ok) sb.append(""Yes"");
			else sb.append(""No"");
			
			out.println(sb.toString());
			out.flush();
			
		}
		
	}
	
	static boolean check(int[][] s, int[][] t, int n) {
		boolean isSame = true;
		
		for(int i = 0; i < n; i++) {
			for(int j = 0; j < n; j++) {
				if(s[i][j] != 1) continue;
				else {
					if(t[i][j] == 0) isSame = false;
				}
			}
		}
		
		return isSame;
		
	}

}
",WA
Uni08 ,abc298/B,Java,"import java.util.*;
public class Main {
  public static void main(String[] args){
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][n];
    int[][] b = new int[n][n];
    boolean flg = false;
    for(int i = 0; i < n; i++){
      for(int j = 0; j < n; j++){
        a[i][j] = sc.nextInt();
      }
    }
    for(int i = 0; i < n; i++){
      for(int j = 0; j < n; j++){
        b[i][j] = sc.nextInt();
      }
    }
    for(int k = 0; k < 4; k++){
      if(flg)
        break;
      for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++){
          if (a[i][j] == 1 && b[i][j] != 1) {
            flg = false;
            break;
          }
        }
      }
      if (currentFlg) {
        flg = true;
      }
      int[][] c = new int[n][n];
      for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++){
          c[i][j] = a[n - 1 - j][i];
        }
      }
      a = c;
    }
    System.out.print(flg? ""Yes"" : ""No"");
  }
}

","import java.util.*;
public class Main {
  public static void main(String[] args){
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][n];
    int[][] b = new int[n][n];
    boolean flg = false;
    for(int i = 0; i < n; i++){
      for(int j = 0; j < n; j++){
        a[i][j] = sc.nextInt();
      }
    }
    for(int i = 0; i < n; i++){
      for(int j = 0; j < n; j++){
        b[i][j] = sc.nextInt();
      }
    }
    for(int k = 0; k < 4; k++){
      boolean flgA = true;
      if(flg)
        break;
      for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++){
          if (a[i][j] == 1 && b[i][j] != 1) {
            flgA = false;
            break;
          }
        }
      }
      if (flgA) {
        flg = true;
      }
      int[][] c = new int[n][n];
      for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++){
          c[i][j] = a[n - 1 - j][i];
        }
      }
      a = c;
    }
    System.out.print(flg? ""Yes"" : ""No"");
  }
}

",CE
keitaro9ml ,abc298/B,Java,"import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Scanner;

public class Main {
    static final int num_max = 200000;
    
    public static boolean ok(boolean[][] A, boolean[][] B, int N) {
        for(int i = 0; i<N; i++) {
            for(int j = 0; j<N; j++) {
                if(A[i][j] && !B[i][j]) {
                    return false;
                }
            }
        }
        return true;
    }
    
    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        int N = scan.nextInt();
        
        boolean[][][] A = new boolean[4][N][N];
        boolean[][] B  = new boolean[N][N];
        
        for(int i = 0; i<N; i++) {
            for(int j = 0; j<N; j++) {
                A[0][i][j] = (scan.nextInt() == 1);
            }
        }
        
        for(int i = 0; i<N; i++) {
            for(int j = 0; j<N; j++) {
                B[i][j] = (scan.nextInt() == 1);
            }
        }
        
        for(int idx = 1; idx<4; idx++) {
            for(int i = 0; i<N; i++) {
                for(int j = 0; j<N; j++) {
                    A[idx][i][j] = A[idx-1][N-1-j][i];


                }

            }
        }
        
        
        boolean is_ok = false;
        
        for(int idx = 1; idx<4; idx++) {
            if(ok(A[idx], B, N)) {
                is_ok = true;
                break;
            }
        }
        
        if(is_ok) {
            System.out.println(""Yes"");
        }else {
            System.out.println(""No"");
        }
        
        scan.close();
        return;
    }
}
","import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Scanner;

public class Main {
    static final int num_max = 200000;
    
    public static boolean ok(boolean[][] A, boolean[][] B, int N) {
        for(int i = 0; i<N; i++) {
            for(int j = 0; j<N; j++) {
                if(A[i][j] && !B[i][j]) {
                    return false;
                }
            }
        }
        return true;
    }
    
    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        int N = scan.nextInt();
        
        boolean[][][] A = new boolean[4][N][N];
        boolean[][] B  = new boolean[N][N];
        
        for(int i = 0; i<N; i++) {
            for(int j = 0; j<N; j++) {
                A[0][i][j] = (scan.nextInt() == 1);
            }
        }
        
        for(int i = 0; i<N; i++) {
            for(int j = 0; j<N; j++) {
                B[i][j] = (scan.nextInt() == 1);
            }
        }
        
        for(int idx = 1; idx<4; idx++) {
            for(int i = 0; i<N; i++) {
                for(int j = 0; j<N; j++) {
                    A[idx][i][j] = A[idx-1][N-1-j][i];
                }
            }
        }
        
        boolean is_ok = false;
        
        for(int idx = 0; idx<4; idx++) {
            if(ok(A[idx], B, N)) {
                is_ok = true;
                break;
            }
        }
        
        if(is_ok) {
            System.out.println(""Yes"");
        }else {
            System.out.println(""No"");
        }
        
        scan.close();
        return;
    }
}
",WA
Yoshi_zen ,abc298/B,Java,"import java.util.*;

public class Main {
    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] A = new int[n][n];
        int[][] B = new int[n][n];
        boolean chker = false;

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                int tmp = sc.nextInt();
                A[i][j] = tmp;
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                B[i][j] = sc.nextInt();
            }
        }
        for (int i = 0; i < 4; i++) {
            boolean chk = true;
            A = circleMat(n, A);
            for (int j = 0; j < n; j++) {
                for (int k = 0; k < n; k++) {
                    if (A[j][k] == 1 && A[j][k] != B[j][k]) {
                        chk = false;                       
                    }
                }
            }
            if (chk) {
                chker = !chker;
            }
        }
        System.out.println(chker ? ""Yes"" : ""No"");
        sc.close();
    }
    
    private static int[][] circleMat(int n, int[][] A) {
        int newA[][] = new int[n][n];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                newA[i][j] = A[j][n-1-i];
            }
        }
        return newA;
    }
}

","import java.util.*;

public class Main {
    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] A = new int[n][n];
        int[][] B = new int[n][n];
        boolean chker = false;

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                int tmp = sc.nextInt();
                A[i][j] = tmp;
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                B[i][j] = sc.nextInt();
            }
        }
        for (int i = 0; i < 4; i++) {
            boolean chk = true;
            A = circleMat(n, A);
            for (int j = 0; j < n; j++) {
                for (int k = 0; k < n; k++) {
                    if (A[j][k] == 1 && A[j][k] != B[j][k]) {
                        chk = false;                       
                    }
                }
            }
            if (chk) {
                chker = true;
            }
        }
        System.out.println(chker ? ""Yes"" : ""No"");
        sc.close();
    }
    
    private static int[][] circleMat(int n, int[][] A) {
        int newA[][] = new int[n][n];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                newA[i][j] = A[j][n-1-i];
            }
        }
        return newA;
    }
}

",WA
izunaaaa ,abc298/B,Java,"import java.util.Scanner;

public class prog {
	public static void main(String[] args) { 
		Scanner get = new Scanner(System.in);
        int N = get.nextInt();
        int[][] A = new int[N][N];
        int[][] B = new int[N][N];        
        
        for(int i = 0; i < N; i++) for(int j = 0; j < N; j++) A[i][j] = get.nextInt();
        for(int i = 0; i < N; i++) for(int j = 0; j < N; j++) B[i][j] = get.nextInt();

        for(int l = 0; l < 4; l++){
            boolean Flag = true;
            for(int i = 0; i < N; i++) for(int j = 0; j < N; j++) if((A[i][j] == 1) && (B[i][j] == 0)) Flag = false;
            if(Flag){
                System.out.println(""Yes"");
                return;
            }
            int[][] temp = new int[N][N];
            for(int i = 0; i < N; i++) for(int j = 0; j < N; j++) temp[j][N-1-i] = A[i][j];
            A = temp;
        }
        System.out.println(""No"");
        return;
	}
}
","import java.util.Scanner;

public class Main {
	public static void main(String[] args) { 
		Scanner get = new Scanner(System.in);
        int N = get.nextInt();
        int[][] A = new int[N][N];
        int[][] B = new int[N][N];        
        
        for(int i = 0; i < N; i++) for(int j = 0; j < N; j++) A[i][j] = get.nextInt();
        for(int i = 0; i < N; i++) for(int j = 0; j < N; j++) B[i][j] = get.nextInt();

        for(int l = 0; l < 4; l++){
            boolean Flag = true;
            for(int i = 0; i < N; i++) for(int j = 0; j < N; j++) if((A[i][j] == 1) && (B[i][j] == 0)) Flag = false;
            if(Flag){
                System.out.println(""Yes"");
                return;
            }
            int[][] temp = new int[N][N];
            for(int i = 0; i < N; i++) for(int j = 0; j < N; j++) temp[j][N-1-i] = A[i][j];
            A = temp;
        }
        System.out.println(""No"");
        return;
	}
}
",CE
Murachiki27 ,abc298/B,Java,"import java.util.Arrays;
import java.util.Scanner;
import java.util.stream.Collectors;

public class Main {













    static final Scanner sc = new Scanner(System.in);
    static void sysout(int[] a) {
        sysout(Arrays.stream(a).mapToObj(e -> e + """").collect(Collectors.joining("" "")));
    }
    static void sysout(int[][] aa) {
        for (int[] a : aa)
            sysout(Arrays.stream(a).mapToObj(e -> e + """").collect(Collectors.joining("" "")));
    }
    static void sysout(Object[] a) {
        sysout(Arrays.stream(a).map(e -> e + """").collect(Collectors.joining("" "")));
    }
    static void sysout(Object o) {
        System.out.println(o);
    }

    static int[] nextAInt() {
        return nextAInt(nextInt());
    }
    static int[] nextAInt(int len) {
        int[] a = new int[len];
        for (int i = 0; i < len; ++i) a[i] = sc.nextInt();
        return a;
    }
    static int[][] nextAAInt(int h, int w) {
        int[][] aa = new int[h][w];
        for (int i = 0; i < h; ++i) aa[i] = nextAInt(w);
        return aa;
    }
    static long[] nextALong() {
        return nextALong(nextInt());
    }
    static long[] nextALong(int len) {
        long[] a = new long[len];
        for (int i = 0; i < len; ++i) a[i] = sc.nextLong();
        return a;
    }
    static double[] nextADouble() {
        return nextADouble(nextInt());
    }
    static double[] nextADouble(int len) {
        double[] a = new double[len];
        for (int i = 0; i < len; ++i) a[i] = sc.nextDouble();
        return a;
    }
    static String[] nextAString() {
        return nextAString(nextInt());
    }
    static String[] nextAString(int len) {
        String[] a = new String[len];
        for (int i = 0; i < len; ++i) a[i] = sc.next();
        return a;
    }

    static int nextInt() {
        return sc.nextInt();
    }
    static long nextLong() {
        return sc.nextLong();
    }
    static double nextDouble() {
        return sc.nextDouble();
    }
    static String nextStr() {
        return sc.next();
    }

    public static void main(String[] args) {
        solve();
    }

    static void solve() {
        int n = nextInt();
        int[][] a = nextAAInt(n, n);
        int[][] b = nextAAInt(n, n);
        boolean flag = false;
        label:
        for (int t = 0; t < 3; ++t) {
            for (int i = 0; i < n; ++i) {
                for (int j = 0; j < n; ++j) {
                    if (a[i][j] == 1 && b[i][j] != 1) {
                        a = rotateCCW90(a, n);
                        continue label;
                    }
                }
            }
            flag = true;
            break label;
        }
        sysout(flag ? ""Yes"" : ""No"");
    }

    static int[][] rotateCCW90(int[][] aa, int n) {
        int[][] ret = new int[n][n];
        for (int i = 0; i < n; ++i) {
            for (int j = 0; j < n; ++j) {
                ret[n - j - 1][i] = aa[i][j];
            }
        }
        return ret;
    }
}
","import java.util.Arrays;
import java.util.Scanner;
import java.util.stream.Collectors;

public class Main {













    static final Scanner sc = new Scanner(System.in);
    static void sysout(int[] a) {
        sysout(Arrays.stream(a).mapToObj(e -> e + """").collect(Collectors.joining("" "")));
    }
    static void sysout(int[][] aa) {
        for (int[] a : aa)
            sysout(Arrays.stream(a).mapToObj(e -> e + """").collect(Collectors.joining("" "")));
    }
    static void sysout(Object[] a) {
        sysout(Arrays.stream(a).map(e -> e + """").collect(Collectors.joining("" "")));
    }
    static void sysout(Object o) {
        System.out.println(o);
    }

    static int[] nextAInt() {
        return nextAInt(nextInt());
    }
    static int[] nextAInt(int len) {
        int[] a = new int[len];
        for (int i = 0; i < len; ++i) a[i] = sc.nextInt();
        return a;
    }
    static int[][] nextAAInt(int h, int w) {
        int[][] aa = new int[h][w];
        for (int i = 0; i < h; ++i) aa[i] = nextAInt(w);
        return aa;
    }
    static long[] nextALong() {
        return nextALong(nextInt());
    }
    static long[] nextALong(int len) {
        long[] a = new long[len];
        for (int i = 0; i < len; ++i) a[i] = sc.nextLong();
        return a;
    }
    static double[] nextADouble() {
        return nextADouble(nextInt());
    }
    static double[] nextADouble(int len) {
        double[] a = new double[len];
        for (int i = 0; i < len; ++i) a[i] = sc.nextDouble();
        return a;
    }
    static String[] nextAString() {
        return nextAString(nextInt());
    }
    static String[] nextAString(int len) {
        String[] a = new String[len];
        for (int i = 0; i < len; ++i) a[i] = sc.next();
        return a;
    }

    static int nextInt() {
        return sc.nextInt();
    }
    static long nextLong() {
        return sc.nextLong();
    }
    static double nextDouble() {
        return sc.nextDouble();
    }
    static String nextStr() {
        return sc.next();
    }

    public static void main(String[] args) {
        solve();
    }

    static void solve() {
        int n = nextInt();
        int[][] a = nextAAInt(n, n);
        int[][] b = nextAAInt(n, n);
        boolean flag = false;
        label:
        for (int t = 0; t < 4; ++t) {
            for (int i = 0; i < n; ++i) {
                for (int j = 0; j < n; ++j) {
                    if (a[i][j] == 1 && b[i][j] != 1) {
                        a = rotateCCW90(a, n);
                        continue label;
                    }
                }
            }
            flag = true;
            break label;
        }
        sysout(flag ? ""Yes"" : ""No"");
    }

    static int[][] rotateCCW90(int[][] aa, int n) {
        int[][] ret = new int[n][n];
        for (int i = 0; i < n; ++i) {
            for (int j = 0; j < n; ++j) {
                ret[n - j - 1][i] = aa[i][j];
            }
        }
        return ret;
    }
}
",WA
CH4R4 ,abc298/B,Java,"import java.util.*;

public class Main {

    public static void rotate(int[][] input) {
        int N = input[0].length;
        int[][] result = new int[N][N];

        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                result[i][j] = input[N - j - 1][i];
            }
        }

        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                input[i][j] = result[i][j];
            }
        }
    }

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int N = scan.nextInt();
        int[][] A = new int[N][N];
        int[][] B = new int[N][N];

        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                A[i][j] = scan.nextInt();
            }
        }

        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                B[i][j] = scan.nextInt();
            }
        }

        for (int k = 0; k < 3; k++) {
            boolean broken = false;
            roop2: for (int i = 0; i < N; i++) {
                for (int j = 0; j < N; j++) {
                    if (A[i][j] == 1) {
                        if (B[i][j] != 1) {
                            broken = true;
                            break roop2;
                        }
                    }
                }
            }
            if (broken) {
                rotate(A);
            } else {
                System.out.println(""Yes"");
                System.exit(0);
            }
        }

        System.out.println(""No"");

        scan.close();

    }
}
","import java.util.*;

public class Main {

    public static void rotate(int[][] input) {
        int N = input[0].length;
        int[][] result = new int[N][N];

        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                result[i][j] = input[N - j - 1][i];
            }
        }

        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                input[i][j] = result[i][j];
            }
        }
    }

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int N = scan.nextInt();
        int[][] A = new int[N][N];
        int[][] B = new int[N][N];

        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                A[i][j] = scan.nextInt();
            }
        }

        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                B[i][j] = scan.nextInt();
            }
        }

        for (int k = 0; k < 4; k++) {
            boolean broken = false;
            roop2: for (int i = 0; i < N; i++) {
                for (int j = 0; j < N; j++) {
                    if (A[i][j] == 1) {
                        if (B[i][j] != 1) {
                            broken = true;
                            break roop2;
                        }
                    }
                }
            }
            if (broken) {
                rotate(A);
            } else {
                System.out.println(""Yes"");
                System.exit(0);
            }
        }

        System.out.println(""No"");

        scan.close();

    }
}
",WA
southgeir ,abc298/B,Java,"import java.util.*;
import java.io.*;
class Main {
  public static void main(String[] arg) {
    FastScanner sc = new FastScanner();
    int n = Integer.parseInt(sc.next());
    int a[][] = new int[n][n];
    int b[][] = new int[n][n];
    int ans0 = 0;
    int ans90 = 0;
    int ans180 = 0;
    int ans270 = 0;
    int all = 0;
    String despAns = ""No"";
    for(int i = 0; i < n; i++) {
      for(int j = 0; j < n; j++) {
        a[i][j] = Integer.parseInt(sc.next());
        if(a[i][j] == 1) all++;
      }
    }
    for(int k = 0; k < n; k++) {
      for(int l = 0; l < n; l++) {
        b[k][l] = Integer.parseInt(sc.next());
      }
    }
    for(int row = 0; row < n; row++) {
      for(int col = 0; col < n; col++) {
        if(a[row][col] == 0) continue;
        if(a[row][col] == b[row][col]) ans0++;
        if(a[row][col] == b[n - col - 1][row]) ans90++;
        if(a[row][col] == b[n - row - 1][n - col - 1]) ans180++;
        if(a[row][col] == b[col][n - row - 1]) ans0++;       
      }
    }
    if(ans0 == all || ans90 == all || ans180 == all || ans270 == all) despAns = ""Yes"";
    System.out.println(despAns);
  }
}


class FastScanner {
  private final InputStream in = System.in;
  private final byte[] buffer = new byte[1024];
  private int ptr = 0;
  private int buflen = 0;
  private boolean hasNextByte() {
    if (ptr < buflen) {
      return true;
    }else{
      ptr = 0;
      try {
        buflen = in.read(buffer);
      } catch (IOException e) {
        e.printStackTrace();
      }
      if (buflen <= 0) {
        return false;
      }
    }
    return true;
  }
  private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
  private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
  private void skipUnprintable() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;}
  public boolean hasNext() { skipUnprintable(); return hasNextByte();}
  public String next() {
    if (!hasNext()) throw new NoSuchElementException();
    StringBuilder sb = new StringBuilder();
    int b = readByte();
    while(isPrintableChar(b)) {
      sb.appendCodePoint(b);
      b = readByte();
    }
    return sb.toString();
  }
  public long nextLong() {
    if (!hasNext()) throw new NoSuchElementException();
    long n = 0;
    boolean minus = false;
    int b = readByte();
    if (b == '-') {
      minus = true;
      b = readByte();
    }
    if (b < '0' || '9' < b) {
      throw new NumberFormatException();
    }
    while(true){
      if ('0' <= b && b <= '9') {
        n *= 10;
        n += b - '0';
      }else if(b == -1 || !isPrintableChar(b)){
        return minus ? -n : n;
      }else{
        throw new NumberFormatException();
      }
      b = readByte();
    }
  }
}
","import java.util.*;
import java.io.*;
class Main {
  public static void main(String[] arg) {
    FastScanner sc = new FastScanner();
    int n = Integer.parseInt(sc.next());
    int a[][] = new int[n][n];
    int b[][] = new int[n][n];
    int ans0 = 0;
    int ans90 = 0;
    int ans180 = 0;
    int ans270 = 0;
    int all = 0;
    String despAns = ""No"";
    for(int i = 0; i < n; i++) {
      for(int j = 0; j < n; j++) {
        a[i][j] = Integer.parseInt(sc.next());
        if(a[i][j] == 1) all++;
      }
    }
    for(int k = 0; k < n; k++) {
      for(int l = 0; l < n; l++) {
        b[k][l] = Integer.parseInt(sc.next());
      }
    }
    for(int row = 0; row < n; row++) {
      for(int col = 0; col < n; col++) {
        if(a[row][col] == 0) continue;
        if(a[row][col] == b[row][col]) ans0++;
        if(a[row][col] == b[n - col - 1][row]) ans90++;
        if(a[row][col] == b[n - row - 1][n - col - 1]) ans180++;
        if(a[row][col] == b[col][n - row - 1]) ans270++;       
      }
    }
    if(ans0 == all || ans90 == all || ans180 == all || ans270 == all) despAns = ""Yes"";
    System.out.println(despAns);
  }
}


class FastScanner {
  private final InputStream in = System.in;
  private final byte[] buffer = new byte[1024];
  private int ptr = 0;
  private int buflen = 0;
  private boolean hasNextByte() {
    if (ptr < buflen) {
      return true;
    }else{
      ptr = 0;
      try {
        buflen = in.read(buffer);
      } catch (IOException e) {
        e.printStackTrace();
      }
      if (buflen <= 0) {
        return false;
      }
    }
    return true;
  }
  private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
  private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
  private void skipUnprintable() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;}
  public boolean hasNext() { skipUnprintable(); return hasNextByte();}
  public String next() {
    if (!hasNext()) throw new NoSuchElementException();
    StringBuilder sb = new StringBuilder();
    int b = readByte();
    while(isPrintableChar(b)) {
      sb.appendCodePoint(b);
      b = readByte();
    }
    return sb.toString();
  }
  public long nextLong() {
    if (!hasNext()) throw new NoSuchElementException();
    long n = 0;
    boolean minus = false;
    int b = readByte();
    if (b == '-') {
      minus = true;
      b = readByte();
    }
    if (b < '0' || '9' < b) {
      throw new NumberFormatException();
    }
    while(true){
      if ('0' <= b && b <= '9') {
        n *= 10;
        n += b - '0';
      }else if(b == -1 || !isPrintableChar(b)){
        return minus ? -n : n;
      }else{
        throw new NumberFormatException();
      }
      b = readByte();
    }
  }
}
",WA
awasinka ,abc298/B,Java,"import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
        int N = Integer.parseInt(sc.next());
        int[][] A = new int[N][N];
        int[][] B = new int[N][N];
        int[][] rollList = new int[N][N];
		
		for(int i = 0; i < N; i++) {
			for(int j = 0;j < N; j++) {
				A[i][j] = sc.nextInt();
			}
		}
		
		for(int i = 0; i < N; i++) {
			for(int j = 0;j < N; j++) {
				B[i][j] = sc.nextInt();
			}
		}
		
		boolean flg;
		for(int k = 0;k < 3;k++) {
			flg = true;
			for(int i = 0; i < N; i++) {
				for(int j = 0;j < N; j++) {
					if(A[i][j] == 1 && A[i][j] != B[i][j]) {
						flg = false;
						break;
					}
				}
			}
			
			if(flg) {
				System.out.println(""Yes"");
				return;
			}

			for(int i = 0; i < N; i++) {
				for(int j = 0;j < N; j++) {
					rollList[i][j] = (int)A[N - 1 - j][i];
				}
			}
			for(int i = 0;i < N; i++) {
				A[i] = rollList[i].clone();
			}
		}
		System.out.println(""No"");
	}
}
","import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
        int N = Integer.parseInt(sc.next());
        int[][] A = new int[N][N];
        int[][] B = new int[N][N];
        int[][] rollList = new int[N][N];
		
		for(int i = 0; i < N; i++) {
			for(int j = 0;j < N; j++) {
				A[i][j] = sc.nextInt();
			}
		}
		
		for(int i = 0; i < N; i++) {
			for(int j = 0;j < N; j++) {
				B[i][j] = sc.nextInt();
			}
		}
		
		boolean flg;
		for(int k = 0;k < 4;k++) {
			flg = true;
			for(int i = 0; i < N; i++) {
				for(int j = 0;j < N; j++) {
					if(A[i][j] == 1 && A[i][j] != B[i][j]) {
						flg = false;
						break;
					}
				}
			}
			
			if(flg) {
				System.out.println(""Yes"");
				return;
			}

			for(int i = 0; i < N; i++) {
				for(int j = 0;j < N; j++) {
					rollList[i][j] = (int)A[N - 1 - j][i];
				}
			}
			for(int i = 0;i < N; i++) {
				A[i] = rollList[i].clone();
			}
		}
		System.out.println(""No"");
	}
}
",WA
hued1 ,abc298/B,Java,"import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws IOException {
        BufferedReader r = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter pw = new PrintWriter(System.out);

        int N = Integer.parseInt(r.readLine());
        boolean[][] A = new boolean[N][N];
        boolean[][] B = new boolean[N][N];

        for (int i=0; i<N; i++) {
            StringTokenizer st = new StringTokenizer(r.readLine());
            for (int j=0; j<N; j++) {
                A[i][j] = st.nextToken().equals(""1"");
            }
        }

        for (int i=0; i<N; i++) {
            StringTokenizer st = new StringTokenizer(r.readLine());
            for (int j=0; j<N; j++) {
                B[i][j] = st.nextToken().equals(""1"");
            }
        }

        boolean[] works = new boolean[]{true, true, true, true};
        for (int i=0; i<N; i++) {
            for (int j=0; j<N; j++) {
                if (A[i][j]){
                    if (!B[i][j]) works[0] = false;
                    if (!B[N-j-1][i]) works[1] = false;
                    if (!B[N-i-1][N-j-1]) works[2] = false;
                    if (!B[j][N-i-1]) works[3] = false;
                }
            }
        }

        pw.println((works[0]||works[1]||works[2]||works[3])?""YES"":""NO"");

        pw.close();
    }
}
","import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws IOException {
        BufferedReader r = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter pw = new PrintWriter(System.out);

        int N = Integer.parseInt(r.readLine());
        boolean[][] A = new boolean[N][N];
        boolean[][] B = new boolean[N][N];

        for (int i=0; i<N; i++) {
            StringTokenizer st = new StringTokenizer(r.readLine());
            for (int j=0; j<N; j++) {
                A[i][j] = st.nextToken().equals(""1"");
            }
        }

        for (int i=0; i<N; i++) {
            StringTokenizer st = new StringTokenizer(r.readLine());
            for (int j=0; j<N; j++) {
                B[i][j] = st.nextToken().equals(""1"");
            }
        }

        boolean[] works = new boolean[]{true, true, true, true};
        for (int i=0; i<N; i++) {
            for (int j=0; j<N; j++) {
                if (A[i][j]){
                    if (!B[i][j]) works[0] = false;
                    if (!B[N-j-1][i]) works[1] = false;
                    if (!B[N-i-1][N-j-1]) works[2] = false;
                    if (!B[j][N-i-1]) works[3] = false;
                }
            }
        }

        pw.println((works[0]||works[1]||works[2]||works[3])?""Yes"":""No"");

        pw.close();
    }
}
",WA
watarimaycry2 ,abc298/B,Java,"import java.util.*; import java.io.*; import java.math.*;
public class Main{
	
	static class InputIterator{
		ArrayList<String> inputLine = new ArrayList<>(1024);
		int index = 0; int max; String read;
		InputIterator(){
			try{
				BufferedReader br = new BufferedReader(new InputStreamReader(System.in, ""UTF-8""));
				while((read = br.readLine()) != null){
					inputLine.addAll(Arrays.asList(read.split("" "")));
				}
			}catch(IOException e){}
			max = inputLine.size();
		}
		boolean hasNext(){return (index < max);}
		String next(){
			if(hasNext()){
				return inputLine.get(index++);
			}else{
				throw new IndexOutOfBoundsException(""There is no more input"");
			}
		}
	}
	static HashMap<Integer, String> CONVSTR = new HashMap<>();
	static InputIterator ii = new InputIterator();
	static PrintWriter out = new PrintWriter(System.out);
	static void flush(){out.flush();}
	static void myout(Object t){out.println(t);}
	static void myerr(Object... t){System.err.print(""debug:"");System.err.println(Arrays.deepToString(t));}
	static String next(){return ii.next();}
	static boolean hasNext(){return ii.hasNext();}
	static int nextInt(){return Integer.parseInt(next());}
	static long nextLong(){return Long.parseLong(next());}
	static double nextDouble(){return Double.parseDouble(next());}
	static ArrayList<String> nextCharArray(){return myconv(next(), 0);}
	static ArrayList<String> nextStrArray(int size){
		ArrayList<String> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(next());
		}
		return ret;
	}
	static ArrayList<Integer> nextIntArray(int size){
		ArrayList<Integer> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(Integer.parseInt(next()));
		}
		return ret;
	}
	static ArrayList<Long> nextLongArray(int size){
		ArrayList<Long> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(Long.parseLong(next()));
		}
		return ret;
	}
	@SuppressWarnings(""unchecked"")
	static String myconv(Object list, int no){
		StringBuilder sb = new StringBuilder("""");
		String joinString = CONVSTR.get(no);
		if(list instanceof String[]){
			return String.join(joinString, (String[])list);
		}else if(list instanceof long[]){
			long[] tmp = (long[])list;
			if(tmp.length == 0){
				return """";
			}
			sb.append(String.valueOf(tmp[0]));
			for(int i = 1; i < tmp.length; i++){
				sb.append(joinString).append(String.valueOf(tmp[i]));
			}
			return sb.toString();
		}else if(list instanceof int[]){
			int[] tmp = (int[])list;
			if(tmp.length == 0){
				return """";
			}
			sb.append(String.valueOf(tmp[0]));
			for(int i = 1; i < tmp.length; i++){
				sb.append(joinString).append(String.valueOf(tmp[i]));
			}
			return sb.toString();
		}else if(list instanceof ArrayList){
			ArrayList tmp = (ArrayList)list;
			if(tmp.size() == 0){
				return """";
			}
			sb.append(tmp.get(0));
			for(int i = 1; i < tmp.size(); i++){
				sb.append(joinString).append(tmp.get(i));
			}
			return sb.toString();
		}else{
			throw new ClassCastException(""Don't join"");
		}
	}
	static ArrayList<String> myconv(String str, int no){
		String splitString = CONVSTR.get(no);
		return new ArrayList<String>(Arrays.asList(str.split(splitString)));
	}
	static ArrayList<String> myconv(String str, String no){
		return new ArrayList<String>(Arrays.asList(str.split(no)));
	}
	public static void main(String[] args){
		CONVSTR.put(8, "" ""); CONVSTR.put(9, ""\n""); CONVSTR.put(0, """");
		solve();flush();
	}
	
	
	static void solve(){
		int N = nextInt();
		int[][] A = new int[N][N];
		for(int i = 0; i < N; i++){
			for(int j = 0; j < N; j++){
				A[i][j] = nextInt();
			}
		}
		int B = new Array(N);
		for(int i = 0; i < N; i++){
			for(int j = 0; j < N; j++){
				B[i][j] = nextInt();
			}
		}
		for(int i = 0; i < 4; i++){
			int[][] tmp = new int[N][N];
			for(int j = 0; j < N; j++){
				for(int k = 0; k < N; k++){
					tmp[j][k] = A[N - 1 - k][j];
				}
			}
			A = tmp;
			boolean ok = true;
			for(int j = 0; j < N; j++){
				for(int k = 0; k < N; k++){
					if(tmp[j][k] == 1){
						if(B[j][k] != 1){
							ok = false;
						}
					}
				}
			}
			if(ok){
				myout(""Yes"");
				return;
			}
			
		}
		myout(""No"");
	}
	



	
}
","import java.util.*; import java.io.*; import java.math.*;
public class Main{
	
	static class InputIterator{
		ArrayList<String> inputLine = new ArrayList<>(1024);
		int index = 0; int max; String read;
		InputIterator(){
			try{
				BufferedReader br = new BufferedReader(new InputStreamReader(System.in, ""UTF-8""));
				while((read = br.readLine()) != null){
					inputLine.addAll(Arrays.asList(read.split("" "")));
				}
			}catch(IOException e){}
			max = inputLine.size();
		}
		boolean hasNext(){return (index < max);}
		String next(){
			if(hasNext()){
				return inputLine.get(index++);
			}else{
				throw new IndexOutOfBoundsException(""There is no more input"");
			}
		}
	}
	static HashMap<Integer, String> CONVSTR = new HashMap<>();
	static InputIterator ii = new InputIterator();
	static PrintWriter out = new PrintWriter(System.out);
	static void flush(){out.flush();}
	static void myout(Object t){out.println(t);}
	static void myerr(Object... t){System.err.print(""debug:"");System.err.println(Arrays.deepToString(t));}
	static String next(){return ii.next();}
	static boolean hasNext(){return ii.hasNext();}
	static int nextInt(){return Integer.parseInt(next());}
	static long nextLong(){return Long.parseLong(next());}
	static double nextDouble(){return Double.parseDouble(next());}
	static ArrayList<String> nextCharArray(){return myconv(next(), 0);}
	static ArrayList<String> nextStrArray(int size){
		ArrayList<String> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(next());
		}
		return ret;
	}
	static ArrayList<Integer> nextIntArray(int size){
		ArrayList<Integer> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(Integer.parseInt(next()));
		}
		return ret;
	}
	static ArrayList<Long> nextLongArray(int size){
		ArrayList<Long> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(Long.parseLong(next()));
		}
		return ret;
	}
	@SuppressWarnings(""unchecked"")
	static String myconv(Object list, int no){
		StringBuilder sb = new StringBuilder("""");
		String joinString = CONVSTR.get(no);
		if(list instanceof String[]){
			return String.join(joinString, (String[])list);
		}else if(list instanceof long[]){
			long[] tmp = (long[])list;
			if(tmp.length == 0){
				return """";
			}
			sb.append(String.valueOf(tmp[0]));
			for(int i = 1; i < tmp.length; i++){
				sb.append(joinString).append(String.valueOf(tmp[i]));
			}
			return sb.toString();
		}else if(list instanceof int[]){
			int[] tmp = (int[])list;
			if(tmp.length == 0){
				return """";
			}
			sb.append(String.valueOf(tmp[0]));
			for(int i = 1; i < tmp.length; i++){
				sb.append(joinString).append(String.valueOf(tmp[i]));
			}
			return sb.toString();
		}else if(list instanceof ArrayList){
			ArrayList tmp = (ArrayList)list;
			if(tmp.size() == 0){
				return """";
			}
			sb.append(tmp.get(0));
			for(int i = 1; i < tmp.size(); i++){
				sb.append(joinString).append(tmp.get(i));
			}
			return sb.toString();
		}else{
			throw new ClassCastException(""Don't join"");
		}
	}
	static ArrayList<String> myconv(String str, int no){
		String splitString = CONVSTR.get(no);
		return new ArrayList<String>(Arrays.asList(str.split(splitString)));
	}
	static ArrayList<String> myconv(String str, String no){
		return new ArrayList<String>(Arrays.asList(str.split(no)));
	}
	public static void main(String[] args){
		CONVSTR.put(8, "" ""); CONVSTR.put(9, ""\n""); CONVSTR.put(0, """");
		solve();flush();
	}
	
	
	static void solve(){
		int N = nextInt();
		int[][] A = new int[N][N];
		for(int i = 0; i < N; i++){
			for(int j = 0; j < N; j++){
				A[i][j] = nextInt();
			}
		}
		int[][] B = new int[N][N];
		for(int i = 0; i < N; i++){
			for(int j = 0; j < N; j++){
				B[i][j] = nextInt();
			}
		}
		for(int i = 0; i < 4; i++){
			int[][] tmp = new int[N][N];
			for(int j = 0; j < N; j++){
				for(int k = 0; k < N; k++){
					tmp[j][k] = A[N - 1 - k][j];
				}
			}
			A = tmp;
			boolean ok = true;
			for(int j = 0; j < N; j++){
				for(int k = 0; k < N; k++){
					if(tmp[j][k] == 1){
						if(B[j][k] != 1){
							ok = false;
						}
					}
				}
			}
			if(ok){
				myout(""Yes"");
				return;
			}
			
		}
		myout(""No"");
	}
	



	
}
",CE
nurda04 ,abc298/B,Java,"import java.io.*;
import java.util.*;

import static java.lang.Math.*;

public class Main {
    static PrintWriter out = new PrintWriter(System.out);
    static FastScanner scanner;
    public static void main(String[] args) throws IOException{
        scanner = new FastScanner();
        int n = scanner.nextInt();
        int[][] a = new int[n][n];
        int[][] b = new int[n][n];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                a[i][j] = scanner.nextInt();
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                b[i][j] = scanner.nextInt();
            }
        }
        out.println(solve(n,a,b));
        out.close();
    }
    public static String solve(int n, int[][] a, int[][] b){
        for (int k = 0; k < 5; k++) {
            boolean b1 = true;
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    if (a[i][j]==1){
                        if (b[i][j]!=1){
                            b1 = false;
                        }
                    }
                }
                if (b1){
                    return ""Yes"";
                }
            }
            int[][] temp = new int[n][n];
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    temp[i][j] = a[n-j-1][i];
                }
            }
            a = temp;
        }
        return ""No"";
    }
    public static boolean checkBit(int n, int i){
        return (n&(1<<i))!=0;
    }
    public static long lcm(long a, long b){
        return (a*b)/gcd(a,b);
    }
    public static long gcd(long a, long b){
        if (a==0){
            return b;
        }else if (b==0){
            return a;
        }
        if (a<b){
            return gcd(a,b%a);
        }else{
            return gcd(a%b,b);
        }
    }
    static class FastScanner {
        BufferedReader br;
        StringTokenizer st = new StringTokenizer("""");

        FastScanner(String s) throws IOException{
            br = new BufferedReader(new InputStreamReader(new FileInputStream(s)));
        }
        FastScanner() throws IOException{
            br = new BufferedReader(new InputStreamReader(System.in));
        }
        String next() {
            while (!st.hasMoreTokens()) try {
                st = new StringTokenizer(br.readLine());
            } catch (IOException e) {
                e.printStackTrace();
            }
            return st.nextToken();
        }
        double nextDouble(){return Double.parseDouble(next());}
        int nextInt() {
            return Integer.parseInt(next());
        }

        int[] readArray(int n) {
            int[] a = new int[n];
            for (int i = 0; i < n; i++) a[i] = nextInt();
            return a;
        }

        long nextLong() {
            return Long.parseLong(next());
        }
    }
}
","import java.io.*;
import java.util.*;

import static java.lang.Math.*;

public class Main {
    static PrintWriter out = new PrintWriter(System.out);
    static FastScanner scanner;
    public static void main(String[] args) throws IOException{
        scanner = new FastScanner();
        int n = scanner.nextInt();
        int[][] a = new int[n][n];
        int[][] b = new int[n][n];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                a[i][j] = scanner.nextInt();
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                b[i][j] = scanner.nextInt();
            }
        }
        out.println(solve(n,a,b));
        out.close();
    }
    public static String solve(int n, int[][] a, int[][] b){
        for (int k = 0; k < 4; k++) {
            boolean b1 = true;
            for (int i = 0; i < n; i++) {

                for (int j = 0; j < n; j++) {
                    if (a[i][j]==1){
                        if (b[i][j]!=1){
                            b1 = false;
                        }
                    }
                }
            }
            if (b1){
                return ""Yes"";
            }

            int[][] temp = new int[n][n];
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    temp[i][j] = a[n-j-1][i];
                }
            }
            a = temp;
        }
        return ""No"";
    }
    public static boolean checkBit(int n, int i){
        return (n&(1<<i))!=0;
    }
    public static long lcm(long a, long b){
        return (a*b)/gcd(a,b);
    }
    public static long gcd(long a, long b){
        if (a==0){
            return b;
        }else if (b==0){
            return a;
        }
        if (a<b){
            return gcd(a,b%a);
        }else{
            return gcd(a%b,b);
        }
    }
    static class FastScanner {
        BufferedReader br;
        StringTokenizer st = new StringTokenizer("""");

        FastScanner(String s) throws IOException{
            br = new BufferedReader(new InputStreamReader(new FileInputStream(s)));
        }
        FastScanner() throws IOException{
            br = new BufferedReader(new InputStreamReader(System.in));
        }
        String next() {
            while (!st.hasMoreTokens()) try {
                st = new StringTokenizer(br.readLine());
            } catch (IOException e) {
                e.printStackTrace();
            }
            return st.nextToken();
        }
        double nextDouble(){return Double.parseDouble(next());}
        int nextInt() {
            return Integer.parseInt(next());
        }

        int[] readArray(int n) {
            int[] a = new int[n];
            for (int i = 0; i < n; i++) a[i] = nextInt();
            return a;
        }

        long nextLong() {
            return Long.parseLong(next());
        }
    }
}
",WA
moeka15 ,abc298/B,Java,"import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int N = 2;
        int[][] A = new int[N+1][N+1];
        for (int i = 1; i <= N; i++) {
            for (int j = 1; j <= N; j++) {
                A[i][j] = sc.nextInt();
            }
        }
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        int[][] B = new int[N+1][N+1];
        for (int i = 1; i <= N; i++) {
            for (int j = 1; j <= N; j++) {
                B[i][j] = sc.nextInt();
            }
        }
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        boolean bool = false;
        for (int n = 0; n < N; n++) {
            boolean tempbool = true;
            loop: for (int i = 1; i <= N; i++) {
                for (int j = 1; j <= N; j++) {
                    if (A[i][j] == 1) {
                        if (B[i][j] != 1) {
                            tempbool = false;
                            break loop;
                        }
                    }
                }
            }
            bool = tempbool;
            if (bool) {
                break;
            }
            int[][] temp = new int[N+1][N+1];
            for (int i = 1; i <= N; i++) {
                for (int j = 1; j <= N; j++) {
                    
                    temp[i][j] = A[N+1-j][i];
                    
                }
                
            }
            
            A = Arrays.copyOf(temp, temp.length);
        }
        if (bool) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }

}
","import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        
        int[][] A = new int[N+1][N+1];
        for (int i = 1; i <= N; i++) {
            for (int j = 1; j <= N; j++) {
                A[i][j] = sc.nextInt();
            }
        }
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        int[][] B = new int[N+1][N+1];
        for (int i = 1; i <= N; i++) {
            for (int j = 1; j <= N; j++) {
                B[i][j] = sc.nextInt();
            }
        }
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        boolean bool = false;
        for (int n = 0; n < N; n++) {
            boolean tempbool = true;
            loop: for (int i = 1; i <= N; i++) {
                for (int j = 1; j <= N; j++) {
                    if (A[i][j] == 1) {
                        if (B[i][j] != 1) {
                            tempbool = false;
                            break loop;
                        }
                    }
                }
            }
            bool = tempbool;
            if (bool) {
                break;
            }
            int[][] temp = new int[N+1][N+1];
            for (int i = 1; i <= N; i++) {
                for (int j = 1; j <= N; j++) {
                    
                    temp[i][j] = A[N+1-j][i];
                    
                }
                
            }
            
            A = Arrays.copyOf(temp, temp.length);
        }
        if (bool) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }

}
",CE
omix222 ,abc298/B,Java,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        boolean result = true;
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] a = new int[n][n];
        int[][] b = new int[n][n];
        for(int i = 0; i < n;i++) {
            for(int j = 0; j < n; j++) {
                a[i][j] = sc.nextInt();
            }
        }
        for(int i = 0; i < n;i++) {
            for(int j = 0; j < n; j++) {
                b[i][j] = sc.nextInt();
            }
        }
        for(int i = 0; i < n;i++) {
            for(int j = 0; j < n; j++) {
                if(a[i][j] == 1 && b[i][j] == 1) {
                    result = true;
                } else if(a[i][j] == 1 && b[i][j] == 0) {
                    result = false;
                    break;
                }
                if(!result) {
                    break;
                }
            }
        }
        if(!result) {
            for(int i = 0; i < n;i++) {
                for(int j = 0; j < n; j++) {
                    if(a[n-1-j][i]== 1 && b[i][j] == 1) {
                        result = true;
                    } else if(a[n-1-j][i]== 1 && b[i][j] == 0) {
                        result = false;
                        break;
                    }
                }
                if(!result) {
                    break;
                }
            }
        }
        if(!result) {
            for(int i = 0; i < n;i++) {
                for(int j = 0; j < n; j++) {
                    if(a[n-1-i][n-1-j]== 1 && b[i][j] == 1) {
                        result = true;
                    } else if(a[n-1-i][n-1-j]== 1 && b[i][j] == 0) {
                        result = false;
                        break;
                    }
                }
                if(!result) {
                    break;
                }
            }
        }
        if(!result) {
            for(int i = 0; i < n;i++) {
                for(int j = 0; j < n; j++) {
                    if(a[j][n-1-i]== 1 && b[i][j] == 1) {
                        result = true;
                    } else if(a[j][n-1-i]== 1 && b[i][j] == 0) {
                        result = false;
                        break;
                    }
                }
                if(!result) {
                    break;
                }
            }
        }
        if(result){
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        boolean result = true;
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] a = new int[n][n];
        int[][] b = new int[n][n];
        for(int i = 0; i < n;i++) {
            for(int j = 0; j < n; j++) {
                a[i][j] = sc.nextInt();
            }
        }
        for(int i = 0; i < n;i++) {
            for(int j = 0; j < n; j++) {
                b[i][j] = sc.nextInt();
            }
        }
        for(int i = 0; i < n;i++) {
            for(int j = 0; j < n; j++) {
                if(a[i][j] == 1 && b[i][j] == 1) {
                    result = true;
                } else if(a[i][j] == 1 && b[i][j] == 0) {
                    result = false;
                    break;
                }
            }
            if(!result) {
                break;
            }
        }
        if(!result) {
            for(int i = 0; i < n;i++) {
                for(int j = 0; j < n; j++) {
                    if(a[n-1-j][i]== 1 && b[i][j] == 1) {
                        result = true;
                    } else if(a[n-1-j][i]== 1 && b[i][j] == 0) {
                        result = false;
                        break;
                    }
                }
                if(!result) {
                    break;
                }
            }
        }
        if(!result) {
            for(int i = 0; i < n;i++) {
                for(int j = 0; j < n; j++) {
                    if(a[n-1-i][n-1-j]== 1 && b[i][j] == 1) {
                        result = true;
                    } else if(a[n-1-i][n-1-j]== 1 && b[i][j] == 0) {
                        result = false;
                        break;
                    }
                }
                if(!result) {
                    break;
                }
            }
            
        }
        if(!result) {
            for(int i = 0; i < n;i++) {
                for(int j = 0; j < n; j++) {
                    if(a[j][n-1-i]== 1 && b[i][j] == 1) {
                        result = true;
                    } else if(a[j][n-1-i]== 1 && b[i][j] == 0) {
                        result = false;
                        break;
                    }
                }
                if(!result) {
                    break;
                }
            }
        }
        if(result){
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}
",WA
omix222 ,abc298/B,Java,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        boolean result = true;
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] a = new int[n][n];
        int[][] b = new int[n][n];
        for(int i = 0; i < n;i++) {
            for(int j = 0; j < n; j++) {
                a[i][j] = sc.nextInt();
            }
        }
        for(int i = 0; i < n;i++) {
            for(int j = 0; j < n; j++) {
                b[i][j] = sc.nextInt();
            }
        }
        for(int i = 0; i < n;i++) {
            for(int j = 0; j < n; j++) {
                if(a[i][j] == 1 && b[i][j] == 1) {
                    result = true;
                } else if(a[i][j] == 1 && b[i][j] == 0) {
                    result = false;
                    break;
                }
                if(!result) {
                    break;
                }
            }
        }

        if(!result) {
            for(int i = 0; i < n;i++) {
                for(int j = 0; j < n; j++) {
                    if(a[n-1-j][i]== 1 && b[i][j] == 1) {
                        result = true;
                    } else if(a[n-1-j][i]== 1 && b[i][j] == 0) {
                        result = false;
                        break;
                    }
                }
                if(!result) {
                    break;
                }
            }
        }
        if(!result) {
            for(int i = 0; i < n;i++) {
                for(int j = 0; j < n; j++) {
                    if(a[n-1-i][n-1-j]== 1 && b[i][j] == 1) {
                        result = true;
                    } else if(a[n-1-i][n-1-j]== 1 && b[i][j] == 0) {
                        result = false;
                        break;
                    }
                }
                if(!result) {
                    break;
                }
            }
        }
        if(!result) {
            for(int i = 0; i < n;i++) {
                for(int j = 0; j < n; j++) {
                    if(a[j][n-1-i]== 1 && b[i][j] == 1) {
                        result = true;
                    } else if(a[j][n-1-i]== 1 && b[i][j] == 0) {
                        result = false;
                        break;
                    }
                }
                if(!result) {
                    break;
                }
            }
        }

        if(result){
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        boolean result = true;
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] a = new int[n][n];
        int[][] b = new int[n][n];
        for(int i = 0; i < n;i++) {
            for(int j = 0; j < n; j++) {
                a[i][j] = sc.nextInt();
            }
        }
        for(int i = 0; i < n;i++) {
            for(int j = 0; j < n; j++) {
                b[i][j] = sc.nextInt();
            }
        }
        for(int i = 0; i < n;i++) {
            for(int j = 0; j < n; j++) {
                if(a[i][j] == 1 && b[i][j] == 1) {
                    result = true;
                } else if(a[i][j] == 1 && b[i][j] == 0) {
                    result = false;
                    break;
                }
            }
            if(!result) {
                break;
            }
        }
        if(!result) {
            for(int i = 0; i < n;i++) {
                for(int j = 0; j < n; j++) {
                    if(a[n-1-j][i]== 1 && b[i][j] == 1) {
                        result = true;
                    } else if(a[n-1-j][i]== 1 && b[i][j] == 0) {
                        result = false;
                        break;
                    }
                }
                if(!result) {
                    break;
                }
            }
        }
        if(!result) {
            for(int i = 0; i < n;i++) {
                for(int j = 0; j < n; j++) {
                    if(a[n-1-i][n-1-j]== 1 && b[i][j] == 1) {
                        result = true;
                    } else if(a[n-1-i][n-1-j]== 1 && b[i][j] == 0) {
                        result = false;
                        break;
                    }
                }
                if(!result) {
                    break;
                }
            }
            
        }
        if(!result) {
            for(int i = 0; i < n;i++) {
                for(int j = 0; j < n; j++) {
                    if(a[j][n-1-i]== 1 && b[i][j] == 1) {
                        result = true;
                    } else if(a[j][n-1-i]== 1 && b[i][j] == 0) {
                        result = false;
                        break;
                    }
                }
                if(!result) {
                    break;
                }
            }
        }
        if(result){
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}
",WA
AraYuusuke ,abc298/B,Java,"import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;
 
 
public class Main {
	
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		
		int n = Integer.parseInt(scanner.next());
		int[][] a = new int[n][n];
		int[][] b = new int[n][n];
		for(int i=0; i<n*2; i++) {
			for(int k=0; k<n; k++) {
				if(i < n) {
					a[i][k] = Integer.parseInt(scanner.next());
				}else {
					b[i-n][k] = Integer.parseInt(scanner.next());
				}
			}
		}
		
		int[][] tmp = new int[n][n];
		
		boolean flag = true;
		for(int kaiten = 0; kaiten<4; kaiten++) {
			
			for(int i=0; i<n; i++) {
				for(int k=0; k<n; k++) {		
					
					tmp[k][i] = a[k][n-1-i];
					
				}
			}
			
			
			for(int i=0; i<n; i++) {
				for(int k=0; k<n; k++) {
					if(tmp[i][k] == 1 &&  b[i][k] == 0) {
						flag = false;
					}
				}
			}
			
			if(!flag) {
				for(int i=0; i<n; i++) {
					a[i] = Arrays.copyOf(tmp[i], n);
				}
				continue;
			}else{
				System.out.println(""Yes"");
				return;
			}
		}
		
		System.out.println(""No"");
	}
}
","import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;
 
 
public class Main {
	
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		
		int n = Integer.parseInt(scanner.next());
		int[][] a = new int[n][n];
		int[][] b = new int[n][n];
		for(int i=0; i<n*2; i++) {
			for(int k=0; k<n; k++) {
				if(i < n) {
					a[i][k] = Integer.parseInt(scanner.next());
				}else {
					b[i-n][k] = Integer.parseInt(scanner.next());
				}
			}
		}
		
		int[][] tmp = new int[n][n];
		
		boolean flag = true;
		for(int kaiten = 0; kaiten<4; kaiten++) {
			
			for(int i=0; i<n; i++) {
				for(int k=0; k<n; k++) {		
					
					tmp[i][k] = a[n-1-k][i];
					
				}
			}
			
			
			for(int i=0; i<n; i++) {
				for(int k=0; k<n; k++) {
					if(tmp[i][k] == 1 &&  b[i][k] == 0) {
						flag = false;
					}
				}
			}
			
			if(!flag) {
				for(int i=0; i<n; i++) {
					a[i] = Arrays.copyOf(tmp[i], n);
				}
				flag=true;
				continue;
			}else{
				System.out.println(""Yes"");
				return;
			}
		}
		
		System.out.println(""No"");
	}
}
",WA
AraYuusuke ,abc298/B,Java,"import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;
 
 
public class Main {
	
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		
		int n = Integer.parseInt(scanner.next());
		int[][] a = new int[n][n];
		int[][] b = new int[n][n];
		for(int i=0; i<n*2; i++) {
			for(int k=0; k<n; k++) {
				if(i < n) {
					a[i][k] = Integer.parseInt(scanner.next());
				}else {
					b[i-n][k] = Integer.parseInt(scanner.next());
				}
			}
		}
		
		int[][] tmp = new int[n][n];
		
		boolean flag = true;
		for(int kaiten = 0; kaiten<4; kaiten++) {
			
			for(int i=0; i<n; i++) {
				for(int k=0; k<n; k++) {		
					
					tmp[k][i] = a[k][n-1-i];
					
				}
			}
			
			
			for(int i=0; i<n; i++) {
				for(int k=0; k<n; k++) {
					if(tmp[i][k] == 1 && tmp[i][k] != b[i][k]) {
						flag = false;
					}
				}
			}
			if(!flag) {
				for(int i=0; i<n; i++) {
					a[i] = Arrays.copyOf(tmp[i], n);
				}
				continue;
			}else{
				System.out.println(""Yes"");
				return;
			}
		}
		
		System.out.println(""No"");
	}
}
","import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;
 
 
public class Main {
	
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		
		int n = Integer.parseInt(scanner.next());
		int[][] a = new int[n][n];
		int[][] b = new int[n][n];
		for(int i=0; i<n*2; i++) {
			for(int k=0; k<n; k++) {
				if(i < n) {
					a[i][k] = Integer.parseInt(scanner.next());
				}else {
					b[i-n][k] = Integer.parseInt(scanner.next());
				}
			}
		}
		
		int[][] tmp = new int[n][n];
		
		boolean flag = true;
		for(int kaiten = 0; kaiten<4; kaiten++) {
			
			for(int i=0; i<n; i++) {
				for(int k=0; k<n; k++) {		
					
					tmp[i][k] = a[n-1-k][i];
					
				}
			}
			
			
			for(int i=0; i<n; i++) {
				for(int k=0; k<n; k++) {
					if(tmp[i][k] == 1 &&  b[i][k] == 0) {
						flag = false;
					}
				}
			}
			
			if(!flag) {
				for(int i=0; i<n; i++) {
					a[i] = Arrays.copyOf(tmp[i], n);
				}
				flag=true;
				continue;
			}else{
				System.out.println(""Yes"");
				return;
			}
		}
		
		System.out.println(""No"");
	}
}
",WA
Nacre ,abc297/E,Java,"import java.io.PrintWriter;
import java.util.HashSet;
import java.util.PriorityQueue;
import java.util.Scanner;
import java.util.Set;

public class Main {

	public static void main(String[] args) {
		
		try(Scanner sc = new Scanner(System.in);){
			
			PrintWriter out = new PrintWriter(System.out);
			StringBuilder sb = new StringBuilder();
			
			
			
			int n = Integer.parseInt(sc.next());
			int k = Integer.parseInt(sc.next());
			long[] a = new long[n];
			
			Set<Long> set = new HashSet<Long>();
			PriorityQueue<Long> que = new PriorityQueue<Long>();
			
			for(int i = 0; i < n; i++) {
				a[i] = Long.parseLong(sc.next());
				set.add(a[i]);
				que.add(a[i]);
			}
			
			long ans = 0;
			for(int i = 0; i < k; i++) {
				ans = que.poll();
				
				for(int j = 0; j < n; j++) {
					if(set.contains(ans + a[j])) continue;
					set.add(ans + a[j]);
					que.add(ans + a[j]);
				}
			}
			
			sb.append(ans);
			out.println(sb.toString());
			out.flush();
			
		}

	}

}
","import java.io.PrintWriter;
import java.util.HashSet;
import java.util.PriorityQueue;
import java.util.Scanner;
import java.util.Set;

public class Main {

	public static void main(String[] args) {
		
		try(Scanner sc = new Scanner(System.in);){
			
			PrintWriter out = new PrintWriter(System.out);
			StringBuilder sb = new StringBuilder();
			
			
			
			int n = Integer.parseInt(sc.next());
			int k = Integer.parseInt(sc.next());
			long[] a = new long[n];
			
			Set<Long> set = new HashSet<Long>();
			PriorityQueue<Long> que = new PriorityQueue<Long>();
			
			for(int i = 0; i < n; i++) {
				a[i] = Long.parseLong(sc.next());
				if(set.contains(a[i])) continue;
				set.add(a[i]);
				que.add(a[i]);
			}
			
			long ans = 0;
			for(int i = 0; i < k; i++) {
				ans = que.poll();
				
				for(int j = 0; j < n; j++) {
					if(set.contains(ans + a[j])) continue;
					set.add(ans + a[j]);
					que.add(ans + a[j]);
				}
			}
			
			sb.append(ans);
			out.println(sb.toString());
			out.flush();
			
		}

	}

}
",WA
kaman ,abc297/E,Java,"import java.util.*;
import java.io.*;
public class Main {
    static final long INF = 1l << 60;
    static final int inf = 1 << 30;
    static final int MOD = 998244353;
    static final double EPS = 1e-9;
    public static void main(String[] args) {
        FastScanner sc = new FastScanner();
        PrintWriter pw = new PrintWriter(System.out);
        solve(sc, pw);
        pw.close();
    }
    static void solve(FastScanner sc, PrintWriter pw) {
        int n = sc.nextInt(), k = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) a[i] = sc.nextInt();
        TreeSet<Long> set = new TreeSet<>(Arrays.asList(0l));
        long ans = 0l;
        for (int i = 0; i <= k; i++) {
            ans = set.first();
            set.remove(ans);
            for (int x : a) set.add(ans+x);
            while (set.size() >= k) set.remove(set.last());
        }
        pw.println(ans);
    }
}
class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        } else {
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while (true) {
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            } else if (b == -1 || !isPrintableChar(b)) {
                return minus ? -n : n;
            } else {
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
","import java.util.*;
import java.io.*;
public class Main {
    static final long INF = 1l << 60;
    static final int inf = 1 << 30;
    static final int MOD = 998244353;
    static final double EPS = 1e-9;
    public static void main(String[] args) {
        FastScanner sc = new FastScanner();
        PrintWriter pw = new PrintWriter(System.out);
        solve(sc, pw);
        pw.close();
    }
    static void solve(FastScanner sc, PrintWriter pw) {
        int n = sc.nextInt(), k = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) a[i] = sc.nextInt();
        TreeSet<Long> set = new TreeSet<>(Arrays.asList(0l));
        long ans = 0l;
        for (int i = 0; i <= k; i++) {
            ans = set.first();
            set.remove(ans);
            for (int x : a) set.add(ans+x);
            while (set.size() > k) set.remove(set.last());
        }
        pw.println(ans);
    }
}
class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        } else {
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while (true) {
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            } else if (b == -1 || !isPrintableChar(b)) {
                return minus ? -n : n;
            } else {
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
",RE
kaman ,abc297/E,Java,"import java.util.*;
import java.io.*;
public class Main {
    static final long INF = 1l << 60;
    static final int inf = 1 << 30;
    static final int MOD = 998244353;
    static final double EPS = 1e-9;
    public static void main(String[] args) {
        FastScanner sc = new FastScanner();
        PrintWriter pw = new PrintWriter(System.out);
        solve(sc, pw);
        pw.close();
    }
    static void solve(FastScanner sc, PrintWriter pw) {
        int n = sc.nextInt(), k = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) a[i] = sc.nextInt();
        TreeSet<Long> set = new TreeSet<>(Arrays.asList(0l));
        long ans = 0l;
        for (int i = 0; i <= k; i++) {
            ans = set.first();
            set.remove(ans);
            for (int x : a) set.add(ans+x);
            while (set.size() >= k) set.remove(set.last());
        }
        pw.println(ans);
    }
}
class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        } else {
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while (true) {
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            } else if (b == -1 || !isPrintableChar(b)) {
                return minus ? -n : n;
            } else {
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
","import java.util.*;
import java.io.*;
public class Main {
    static final long INF = 1l << 60;
    static final int inf = 1 << 30;
    static final int MOD = 998244353;
    static final double EPS = 1e-9;
    public static void main(String[] args) {
        FastScanner sc = new FastScanner();
        PrintWriter pw = new PrintWriter(System.out);
        solve(sc, pw);
        pw.close();
    }
    static void solve(FastScanner sc, PrintWriter pw) {
        int n = sc.nextInt(), k = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) a[i] = sc.nextInt();
        TreeSet<Long> set = new TreeSet<>(Arrays.asList(0l));
        long ans = 0l;
        for (int i = 0; i <= k; i++) {
            ans = set.first();
            set.remove(ans);
            for (int x : a) set.add(ans+x);
        }
        pw.println(ans);
    }
}
class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int buflen = 0;
    private boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        } else {
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }
    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
    public boolean hasNext() { while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
    public String next() {
        if (!hasNext()) throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while(isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }
    public long nextLong() {
        if (!hasNext()) throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while (true) {
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            } else if (b == -1 || !isPrintableChar(b)) {
                return minus ? -n : n;
            } else {
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }
    public int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
        return (int) nl;
    }
    public double nextDouble() { return Double.parseDouble(next());}
}
",RE
yvbf ,abc297/E,Java,"import java.io.*;
import java.util.*;

public class Main {
    void go() {
        int n = nextInt();
        long tot = nextInt();
        long[] f = new long[n];
        for (int i = 0; i < f.length; ++i) f[i] = nextInt();
        Arrays.sort(f);
        if (f[0] == 1) {
            sl(tot);
            return;
        } else if (n == 1) {
            sl(n * f[0]);
            return;
        }
        TreeSet<Long> a = new TreeSet<>();
        for (int i = 0; i < f.length; ++i) a.add(f[i]);
        TreeSet<Long> r = new TreeSet<>();
        while (r.size() < tot) {
            long x = a.first();
            r.add(x);
            a.remove(x);
            for (long t : f) a.add(x + t);
        }
        sl(r.last());
    }

    
    boolean MULTI_CASE = false;
    long M = 998244353L;

    
    InputStream inStream;
    byte[] inBuff = new byte[1024];
    int inBuffCursor = 0;
    int inBuffLen = 0;

    boolean isVisibleChar(int c) {
        return 33 <= c && c <= 126;
    }

    boolean hasNextByte() {
        if (inBuffCursor < inBuffLen) return true;
        inBuffCursor = 0;
        try {
            inBuffLen = inStream.read(inBuff);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return inBuffLen > 0;
    }

    boolean hasNext() {
        while (hasNextByte() && !isVisibleChar(inBuff[inBuffCursor])) inBuffCursor++;
        return hasNextByte();
    }

    int nextByte() {
        return hasNextByte() ? inBuff[inBuffCursor++] : -1;
    }

    String next() {
        if (!hasNext()) throw new RuntimeException(""no next."");
        StringBuilder sb = new StringBuilder();
        int b = nextByte();
        while (isVisibleChar(b)) {
            sb.appendCodePoint(b);
            b = nextByte();
        }
        return sb.toString();
    }

    long nextLong() {
        if (!hasNext()) throw new RuntimeException(""no next."");
        long result = 0;
        boolean negative = false;
        int b = nextByte();
        if (b < '0') {
            if (b == '-') negative = true;
            else if (b != '+') throw new RuntimeException(""long number must start with +/-."");
            b = nextByte();
        }
        while (isVisibleChar(b)) {
            if (b < '0' || b > '9') throw new RuntimeException(""wrong digit in long:"" + (char) b);
            
            result = result * 10 + (b - '0');
            b = nextByte();
        }
        return negative ? -result : result;
    }

    int nextInt() {
        long x = nextLong();
        if (x < Integer.MIN_VALUE || x > Integer.MAX_VALUE)
            throw new RuntimeException(""int overflow:"" + x);
        return (int) x;
    }

    double nextDouble() {
        return Double.parseDouble(next());
    }


    
    PrintWriter printOut = new PrintWriter(System.out);

    void so(Object obj) {
        printOut.print(obj);
    }

    void sl(Object obj) {
        printOut.println(obj);
    }

    void sl() {
        printOut.println();
    }

    
    void mainGo() {
        try {
            inStream = new FileInputStream(""src/main.in"");
        } catch (Exception e) {
            inStream = System.in;
        }
        while (hasNext()) {
            if (MULTI_CASE) {
                int T = nextInt();
                for (int i = 0; i < T; ++i) {
                    go();
                }
            } else {
                go();
            }
        }
        printOut.flush();
    }

    public static void main(String[] args) throws Exception {
        new Main().mainGo();
    }
}
","import java.io.*;
import java.util.*;

public class Main {
    void go() {
        int n = nextInt();
        long tot = nextInt();
        long[] f = new long[n];
        for (int i = 0; i < f.length; ++i) f[i] = nextInt();
        Arrays.sort(f);
        if (f[0] == 1) {
            sl(tot);
            return;
        } else if (n == 1) {
            sl(tot * f[0]);
            return;
        }
        TreeSet<Long> a = new TreeSet<>();
        for (int i = 0; i < f.length; ++i) a.add(f[i]);
        TreeSet<Long> r = new TreeSet<>();
        while (r.size() < tot) {
            long x = a.first();
            r.add(x);
            a.remove(x);
            for (long t : f) a.add(x + t);
        }
        sl(r.last());
    }

    
    boolean MULTI_CASE = false;
    long M = 998244353L;

    
    InputStream inStream;
    byte[] inBuff = new byte[1024];
    int inBuffCursor = 0;
    int inBuffLen = 0;

    boolean isVisibleChar(int c) {
        return 33 <= c && c <= 126;
    }

    boolean hasNextByte() {
        if (inBuffCursor < inBuffLen) return true;
        inBuffCursor = 0;
        try {
            inBuffLen = inStream.read(inBuff);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return inBuffLen > 0;
    }

    boolean hasNext() {
        while (hasNextByte() && !isVisibleChar(inBuff[inBuffCursor])) inBuffCursor++;
        return hasNextByte();
    }

    int nextByte() {
        return hasNextByte() ? inBuff[inBuffCursor++] : -1;
    }

    String next() {
        if (!hasNext()) throw new RuntimeException(""no next."");
        StringBuilder sb = new StringBuilder();
        int b = nextByte();
        while (isVisibleChar(b)) {
            sb.appendCodePoint(b);
            b = nextByte();
        }
        return sb.toString();
    }

    long nextLong() {
        if (!hasNext()) throw new RuntimeException(""no next."");
        long result = 0;
        boolean negative = false;
        int b = nextByte();
        if (b < '0') {
            if (b == '-') negative = true;
            else if (b != '+') throw new RuntimeException(""long number must start with +/-."");
            b = nextByte();
        }
        while (isVisibleChar(b)) {
            if (b < '0' || b > '9') throw new RuntimeException(""wrong digit in long:"" + (char) b);
            
            result = result * 10 + (b - '0');
            b = nextByte();
        }
        return negative ? -result : result;
    }

    int nextInt() {
        long x = nextLong();
        if (x < Integer.MIN_VALUE || x > Integer.MAX_VALUE)
            throw new RuntimeException(""int overflow:"" + x);
        return (int) x;
    }

    double nextDouble() {
        return Double.parseDouble(next());
    }


    
    PrintWriter printOut = new PrintWriter(System.out);

    void so(Object obj) {
        printOut.print(obj);
    }

    void sl(Object obj) {
        printOut.println(obj);
    }

    void sl() {
        printOut.println();
    }

    
    void mainGo() {
        try {
            inStream = new FileInputStream(""src/main.in"");
        } catch (Exception e) {
            inStream = System.in;
        }
        while (hasNext()) {
            if (MULTI_CASE) {
                int T = nextInt();
                for (int i = 0; i < T; ++i) {
                    go();
                }
            } else {
                go();
            }
        }
        printOut.flush();
    }

    public static void main(String[] args) throws Exception {
        new Main().mainGo();
    }
}
",WA
Allen931 ,abc297/E,Java,"import java.util.Arrays;
import java.util.HashSet;
import java.util.PriorityQueue;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        PriorityQueue<Long> q = new PriorityQueue<>();
        HashSet<Long> hashSet = new HashSet<>();
        long[] a = new long[n];
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextLong();
            q.offer(a[i]);
            hashSet.add(a[i]);
        }

        long result = 0;

        for (int i = 0; i < k; i++) {
            if (q.isEmpty()) {
                break;
            }
            result = q.poll();
            for (int j = 0; j < n; j++) {
                long temp = result + a[j];
                if (hashSet.contains(temp)) {
                    continue;
                } else {
                    q.offer(temp);
                    hashSet.add(temp);
                }
            }
        }
        System.out.println(result);

    }
}
","import java.util.Arrays;
import java.util.HashSet;
import java.util.PriorityQueue;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        PriorityQueue<Long> q = new PriorityQueue<>();
        HashSet<Long> hashSet = new HashSet<>();
        long[] a = new long[n];
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextLong();
            if (hashSet.contains(a[i])) {
                continue;
            }
            q.offer(a[i]);
            hashSet.add(a[i]);
        }

        long result = 0;

        for (int i = 0; i < k; i++) {
            if (q.isEmpty()) {
                break;
            }
            result = q.poll();
            for (int j = 0; j < n; j++) {
                long temp = result + a[j];
                if (hashSet.contains(temp)) {
                    continue;
                } else {
                    q.offer(temp);
                    hashSet.add(temp);
                }
            }
        }
        System.out.println(result);

    }
}
",WA
sskills ,abc296/A,Java,"import java.util.Scanner;

public class main {
    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        int a = scan.nextInt();
        String s = scan.next();
            if(s.contains(""FF"") || s.contains(""MM"")){
                System.out.println(""No"");
            }else{
                System.out.println(""Yes"");
            }
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        int a = scan.nextInt();
        String s = scan.next();
            if(s.contains(""FF"") || s.contains(""MM"")){
                System.out.println(""No"");
            }else{
                System.out.println(""Yes"");
            }
    }
}
",CE
sskills ,abc296/A,Java,"package ACM;

import java.util.Scanner;

public class A {
    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        int a = scan.nextInt();
        String s = scan.next();
            if(s.contains(""FF"") || s.contains(""MM"")){
                System.out.println(""No"");
            }else{
                System.out.println(""Yes"");
            }
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        int a = scan.nextInt();
        String s = scan.next();
            if(s.contains(""FF"") || s.contains(""MM"")){
                System.out.println(""No"");
            }else{
                System.out.println(""Yes"");
            }
    }
}
",CE
sskills ,abc296/A,Java,"public class A {
    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        int a = scan.nextInt();
        String s = scan.next();
            if(s.contains(""FF"") || s.contains(""MM"")){
                System.out.println(""No"");
            }else{
                System.out.println(""Yes"");
            }
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        int a = scan.nextInt();
        String s = scan.next();
            if(s.contains(""FF"") || s.contains(""MM"")){
                System.out.println(""No"");
            }else{
                System.out.println(""Yes"");
            }
    }
}
",CE
3096399763 ,abc296/A,Java,"
import sun.nio.cs.ext.EUC_JP_LINUX;

import java.io.*;
import java.util.*;



import java.math.*;

public class Main {
    static StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
    static PrintWriter out = new PrintWriter(new PrintWriter(System.out));
    public static void main(String[] args) throws Exception {
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public static long gcd(long a,long b) {
            return b==0?a:gcd(b, a%b);
        }
        static class Shu{
            int have=0;
            int zhang=0;
        }
        private static long binarySearch(long ci){
            long left = 2;
            long right = n-1;
            long sum = 0;
            while(left <= right){
                long mid = (left + right) / 2;
                long ans = 1;
                sum = 0;
                for (int i = 1; i <= ci; i++) {
                    ans = ans * mid;
                    sum = sum + ans;
                    if (sum>n) {
                        break;
                    }
                }
                if (sum==n|| sum==n-1){
                    return mid;
                }else if(sum<n-1){
                    left = mid - 1;
                }else{
                    right = mid + 1;
                }
            }

            return -1;
        }


        static int n;

        static int math[] = new int[1000];

        static int zhongzhi = 0 ;
        static void dfs(int s) {

        }
        static class Person{
            int name;
            int have;
        }
        public void solve(int testNumber, StreamTokenizer in, PrintWriter out) throws IOException{
            int n = nextInt();
            String s1 = next();
            int f = 0;
            for (int i=1;i<n; i++){
                if (s1.charAt(i) ==s1.charAt(i-1)){
                    f = 1;
                    break;
                }
            }
            if (f==0){
                System.out.println(""Yes"");
            }
            else {
                System.out.println(""No"");
            }
        }
    }
    static int nextInt() throws IOException{
        in.nextToken();
        return (int)in.nval;
    }
    static long nextlong() throws IOException{
        in.nextToken();
        return (long)in.nval;
    }
    static String next() throws IOException{
        in.nextToken();
        return  in.sval;
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}
","

import java.io.*;
import java.util.*;


import java.math.*;

public class Main {
    static StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
    static PrintWriter out = new PrintWriter(new PrintWriter(System.out));
    public static void main(String[] args) throws Exception {
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public static long gcd(long a,long b) {
            return b==0?a:gcd(b, a%b);
        }
        static class Shu{
            int have=0;
            int zhang=0;
        }
        private static long binarySearch(long ci){
            long left = 2;
            long right = n-1;
            long sum = 0;
            while(left <= right){
                long mid = (left + right) / 2;
                long ans = 1;
                sum = 0;
                for (int i = 1; i <= ci; i++) {
                    ans = ans * mid;
                    sum = sum + ans;
                    if (sum>n) {
                        break;
                    }
                }
                if (sum==n|| sum==n-1){
                    return mid;
                }else if(sum<n-1){
                    left = mid - 1;
                }else{
                    right = mid + 1;
                }
            }

            return -1;
        }


        static int n;

        static int math[] = new int[1000];

        static int zhongzhi = 0 ;
        static void dfs(int s) {

        }
        static class Person{
            int name;
            int have;
        }
        public void solve(int testNumber, StreamTokenizer in, PrintWriter out) throws IOException{
            int n = nextInt();
            String s1 = next();
            int f = 0;
            for (int i=1;i<n; i++){
                if (s1.charAt(i) ==s1.charAt(i-1)){
                    f = 1;
                    break;
                }
            }
            if (f==0){
                System.out.println(""Yes"");
            }
            else {
                System.out.println(""No"");
            }
        }
    }
    static int nextInt() throws IOException{
        in.nextToken();
        return (int)in.nval;
    }
    static long nextlong() throws IOException{
        in.nextToken();
        return (long)in.nval;
    }
    static String next() throws IOException{
        in.nextToken();
        return  in.sval;
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}
",CE
ayanam ,abc296/A,Java,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();

        for(int i = 1; i<n; i++){
              if(s.charAt(i) == s.charAt(i-1)){
                  System.out.println(""No"");
                  
              }

        }
        System.out.println(""Yes"");

    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();

        for(int i = 1; i<n; i++){
              if(s.charAt(i) == s.charAt(i-1)){
                  System.out.println(""No"");
                  return;
              }

        }
        System.out.println(""Yes"");

    }
}
",WA
ayanam ,abc296/A,Java,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {


        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();

        String s = sc.next();

        for(int i = 1; i<n; i++){
              if(s.charAt(i) == s.charAt(i-1)){
                  System.out.println(""NO"");
                return;
              }

        }
        System.out.println(""YES"");

    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();

        for(int i = 1; i<n; i++){
              if(s.charAt(i) == s.charAt(i-1)){
                  System.out.println(""No"");
                  return;
              }

        }
        System.out.println(""Yes"");

    }
}
",WA
ayanam ,abc296/A,Java,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {


        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();

        String s = sc.next();

        for(int i = 1; i<n; i++){
              if(s.charAt(i) == s.charAt(i-1)){
                  System.out.println(""NO"");
              }

        }
        System.out.println(""YES"");

    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();

        for(int i = 1; i<n; i++){
              if(s.charAt(i) == s.charAt(i-1)){
                  System.out.println(""No"");
                  return;
              }

        }
        System.out.println(""Yes"");

    }
}
",WA
alted ,abc296/A,Java,"import java.util.Scanner;
public class Main
{
  public static void main(String[] args)
  {
    Scanner sc=new Scanner(System.in);
    
    String s=sc.next();
    int count=0;
    for(int i=1;i<s.length();i++)
    {
      if(s.charAt(i-1)!=s.charAt(i))
         {
           count++;
          
         }
    }
         if(count+1==s.length())
            {
              System.out.println(""Yes"");
              
            }
            else{
              System.out.println(""No"");
            }
            
  }
}
","import java.util.Scanner;
public class Main
{
  public static void main(String[] args)
  {
    Scanner sc=new Scanner(System.in);
    
    int n=sc.nextInt();
    String s=sc.next();
    int count=0;
    for(int i=1;i<n;i++)
    {
      if(s.charAt(i-1)!=s.charAt(i))
         {
           count++;
          
         }
    }
         if(count+1==s.length())
            {
              System.out.println(""Yes"");
              
            }
            else{
              System.out.println(""No"");
            }
            
  }
}
",WA
alted ,abc296/A,Java,"import java.util.Scanner;
public class Main
{
  public static void main(String[] args)
  {
    Scanner sc=new Scanner(System.in);
    
    String s=sc.next();
    int count=0;
    for(int i=1;i<s.length();i++)
    {
      if(s.charAt(i-1)!=s.charAt(i))
         {
           count++;
          
         }
    }
         if(count==s.length())
            {
              System.out.println(""Yes"");
              
            }
            else{
              System.out.println(""No"");
            }
            
  }
}
","import java.util.Scanner;
public class Main
{
  public static void main(String[] args)
  {
    Scanner sc=new Scanner(System.in);
    
    int n=sc.nextInt();
    String s=sc.next();
    int count=0;
    for(int i=1;i<n;i++)
    {
      if(s.charAt(i-1)!=s.charAt(i))
         {
           count++;
          
         }
    }
         if(count+1==s.length())
            {
              System.out.println(""Yes"");
              
            }
            else{
              System.out.println(""No"");
            }
            
  }
}
",WA
alted ,abc296/A,Java,"import java.util.Scanner;
public class Main
{
  public static void main(String[] args)
  {
    Scanner sc=new Scanner(System.in);
    
    String s=sc.next();
    int count=0;
    for(int i=1;i<s.length();i++)
    {
      if(s.charAt(i-1)!=s.charAt(i)
         {
           count++;
          
         }
    }
         if(count==s.length())
            {
              System.out.println(""Yes"");
              
            }
            else{
              System.out.println(""No"");
            }
            
  }
}
","import java.util.Scanner;
public class Main
{
  public static void main(String[] args)
  {
    Scanner sc=new Scanner(System.in);
    
    int n=sc.nextInt();
    String s=sc.next();
    int count=0;
    for(int i=1;i<n;i++)
    {
      if(s.charAt(i-1)!=s.charAt(i))
         {
           count++;
          
         }
    }
         if(count+1==s.length())
            {
              System.out.println(""Yes"");
              
            }
            else{
              System.out.println(""No"");
            }
            
  }
}
",CE
alted ,abc296/A,Java,"import java.util.Scanner;
public class Main
{
  public static void main(String[] args)
  {
    Scanner sc=new Scanner(System.in);
    
    String s=sc.next();
    int count=0;
    for(int i=1;i<s.length();i++)
    {
      if(s.charAt(i-1)!=s.charAt(i))
         {
           count++;
           c=s.charAt(i);
         }
    }
         if(count==s.length())
            {
              System.out.println(""Yes"");
              
            }
            else{
              System.out.println(""No"");
            }
            
  }
}
","import java.util.Scanner;
public class Main
{
  public static void main(String[] args)
  {
    Scanner sc=new Scanner(System.in);
    
    int n=sc.nextInt();
    String s=sc.next();
    int count=0;
    for(int i=1;i<n;i++)
    {
      if(s.charAt(i-1)!=s.charAt(i))
         {
           count++;
          
         }
    }
         if(count+1==s.length())
            {
              System.out.println(""Yes"");
              
            }
            else{
              System.out.println(""No"");
            }
            
  }
}
",CE
alted ,abc296/A,Java,"import java.util.Scanner;
public class Main
{
  public static void main(String[] args)
  {
    Scanner sc=new Scanner(System.in);
    
    String s=sc.next();
    int count=0;
    for(int i=1;i<s.length();i++)
    {
      if(s.charAt(i-1)!=s.charAt(i)
         {
           count++;
           c=s.charAt(i);
         }
    }
         if(count==s.length()
            {
              System.out.println(""Yes"");
              
            }
            else{
              System.out.println(""No"");
            }
            
  }
}
","import java.util.Scanner;
public class Main
{
  public static void main(String[] args)
  {
    Scanner sc=new Scanner(System.in);
    
    int n=sc.nextInt();
    String s=sc.next();
    int count=0;
    for(int i=1;i<n;i++)
    {
      if(s.charAt(i-1)!=s.charAt(i))
         {
           count++;
          
         }
    }
         if(count+1==s.length())
            {
              System.out.println(""Yes"");
              
            }
            else{
              System.out.println(""No"");
            }
            
  }
}
",CE
vlad_os ,abc296/A,Java,"
import java.util.*;
import java.lang.*;
import java.io.*;

public class Solution {
	
	 	public static int psi(String n) {
	 		return Integer.parseInt(n);
	 	}

	    public static long psl(String n) {
	        return Long.parseLong(n);
	    }

	    public static String str_int(int n) {
	       return String.valueOf(n);
	    }

	   public static String str_lg(long n) {
	       return String.valueOf(n);
	   }

	    
	public static void main(String[] args) throws java.lang.Exception {
		BufferedReader rd = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(System.out);



            







      

          	
        	int n = psi(rd.readLine());
        	
        	String s = rd.readLine();
        	
        	boolean flag = true;
        	
        	for (int i = 1; i < n; i++) {
        		if (s.charAt(i) == s.charAt(i - 1)) flag = false;
        	}
        	

        	out.println((flag) ? ""Yes"" : ""No"");
            	
                

        

        out.flush();

	}

}
","import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
	
	 	public static int psi(String n) {
	 		return Integer.parseInt(n);
	 	}

	    public static long psl(String n) {
	        return Long.parseLong(n);
	    }

	    public static String str_int(int n) {
	       return String.valueOf(n);
	    }

	   public static String str_lg(long n) {
	       return String.valueOf(n);
	   }

	    
	public static void main(String[] args) throws java.lang.Exception {
		BufferedReader rd = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(System.out);



            







      

          	
        	int n = psi(rd.readLine());
        	
        	String s = rd.readLine();
        	
        	boolean flag = true;
        	
        	for (int i = 1; i < n; i++) {
        		if (s.charAt(i) == s.charAt(i - 1)) flag = false;
        	}
        	

        	out.println((flag) ? ""Yes"" : ""No"");
            	
                

        

        out.flush();

	}

}
",CE
hiroya54 ,abc296/A,Java,"import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		int n  = sc.nextInt();
		String s  = sc.next();
		
		for(int i=1;i<n;i++) {
			if(s.charAt(i)==s.charAt(i-1)) {
				System.out.println(""No"");
			}
		}
		
		
		System.out.println(""Yes"");
		
	}
}
","import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		int n  = sc.nextInt();
		String s  = sc.next();
		
		for(int i=1;i<n;i++) {
			if(s.charAt(i)==s.charAt(i-1)) {
				System.out.println(""No"");
				return;
			}
		}
		
		
		System.out.println(""Yes"");
		
	}
}
",WA
hiroya54 ,abc296/A,Java,"import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		int n  = sc.nextInt();
		String s  = sc.next();
		
		for(int i=1;i<n;i++) {
			if(s.charAt(i)!=s.charAt(i-1)) {
				System.out.println(""No"");
			}
		}
		
		
		System.out.println(""Yes"");
		
	}
}
","import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		int n  = sc.nextInt();
		String s  = sc.next();
		
		for(int i=1;i<n;i++) {
			if(s.charAt(i)==s.charAt(i-1)) {
				System.out.println(""No"");
				return;
			}
		}
		
		
		System.out.println(""Yes"");
		
	}
}
",WA
hiroya54 ,abc296/A,Java,"public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		int n  = sc.nextInt();
		String s  = sc.next();
		
		for(int i=1;i<n;i++) {
			if(s.charAt(i)!=s.charAt(i-1)) {
				System.out.println(""No"");
			}
		}
		
		
		System.out.println(""Yes"");
		
	}
}
","import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		int n  = sc.nextInt();
		String s  = sc.next();
		
		for(int i=1;i<n;i++) {
			if(s.charAt(i)==s.charAt(i-1)) {
				System.out.println(""No"");
				return;
			}
		}
		
		
		System.out.println(""Yes"");
		
	}
}
",CE
taruton ,abc296/A,Java,"import java.util.Scanner;
public class Project1 {

	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		
		
		int N = scan.nextInt();
		char [] S = scan.next().toCharArray();
		
		
		for(int i=1; i<N; i++) {
			if(S[i-1]==S[i]) {
				System.out.println(""No"");
				return;
			}
		}
		System.out.println(""Yes"");
		
		
		
		

	}

}
","import java.util.Scanner;
public class Main {

	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		
		
		int N = scan.nextInt();
		char [] S = scan.next().toCharArray();
		
		
		for(int i=1; i<N; i++) {
			if(S[i-1]==S[i]) {
				System.out.println(""No"");
				return;
			}
		}
		System.out.println(""Yes"");
		
		
		
		

	}

}
",CE
Karlsooon ,abc296/A,Java,"public class Main {
    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        int a = scan.nextInt();
        String s = scan.next();
            if(s.contains(""FF"") || s.contains(""MM"")){
                System.out.println(""No"");
            }else{
                System.out.println(""Yes"");
            }
    }
}
","import java.util.Scanner;
public class Main {
    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        int a = scan.nextInt();
        String s = scan.next();
            if(s.contains(""FF"") || s.contains(""MM"")){
                System.out.println(""No"");
            }else{
                System.out.println(""Yes"");
            }
    }
}
",CE
Karlsooon ,abc296/A,Java,"public class  Main{
    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        int a = scan.nextInt();
        String s = scan.next();
            if(s.contains(""FF"") || s.contains(""MM"")){
                System.out.println(""No"");
            }else{
                System.out.println(""Yes"");
            }
    }
}
","import java.util.Scanner;
public class Main {
    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        int a = scan.nextInt();
        String s = scan.next();
            if(s.contains(""FF"") || s.contains(""MM"")){
                System.out.println(""No"");
            }else{
                System.out.println(""Yes"");
            }
    }
}
",CE
yyyyMMddT ,abc296/A,Java,"public class Alternately {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        sc.nextLine();
        String[] array = sc.nextLine().split("""");
        String temp = array[0];
        boolean bool = true;
        for (int i = 1; i < array.length; i++) {
            if (temp.equals(array[i])) {
                System.out.println(""No"");
                bool = false;
                break;
            }
            temp = array[i];
        }
        if (bool) {
            System.out.println(""Yes"");
        }
    }
}
","import java.util.*;
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        sc.nextLine();
        String[] array = sc.nextLine().split("""");
        String temp = array[0];
        boolean bool = true;
        for (int i = 1; i < array.length; i++) {
            if (temp.equals(array[i])) {
                System.out.println(""No"");
                bool = false;
                break;
            }
            temp = array[i];
        }
        if (bool) {
            System.out.println(""Yes"");
        }
    }
}
",CE
neo82 ,abc296/A,Java,"public class Main {
  public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int N = scanner.nextInt();
        String s = scanner.next();

        char c = s.charAt(0);

        for (int i = 1; i < N; i++) {
            if (c == s.charAt(i)) {
                System.out.println(""No"");
                return;
            }

            c = s.charAt(i);
        }

        System.out.println(""Yes"");
    }
}
","import java.util.Scanner;


public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int N = scanner.nextInt();
        String s = scanner.next();

        char c = s.charAt(0);

        for (int i = 1; i < N; i++) {
            if (c == s.charAt(i)) {
                System.out.println(""No"");
                return;
            }

            c = s.charAt(i);
        }

        System.out.println(""Yes"");
    }
}
",CE
yamaday0817 ,abc296/A,Java,"import java.util.*;
public class Main {
  public static void main(String[] args){
    Scanner scanner = new Scanner(System.in);
    int amount = scanner.nextInt();
    String answer = ""Yes"";
    String line = s.next();
    char first = line.charAt(0);
    for(int i = 1;i < amount;i++){
      char next = line.charAt(i);
      if(first==next){
        answer = ""No"";
        break;
      }else{
        first = next;
      }
    }
    System.out.print(answer);
  }
}
","import java.util.*;
public class Main {
  public static void main(String[] args){
    Scanner scanner = new Scanner(System.in);
    int amount = scanner.nextInt();
    String answer = ""Yes"";
    String line = scanner.next();
    char first = line.charAt(0);
    for(int i = 1;i < amount;i++){
      char next = line.charAt(i);
      if(first==next){
        answer = ""No"";
        break;
      }else{
        first = next;
      }
    }
    System.out.print(answer);
  }
}
",CE
guanghui ,abc296/A,Java,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        String s=sc.next();
        sc.close();
        if(n==1){
            System.out.println(""Yes"");
        }
        if(s.contains(""MM"")||s.contains(""FF"")){
            System.out.println(""No"");
        }
        else{
            System.out.println(""Yes"");
        }
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        String s=sc.next();
        sc.close();
        if(s.contains(""MM"")||s.contains(""FF"")){
            System.out.println(""No"");
        }
        else{
            System.out.println(""Yes"");
        }
    }
}
",WA
nattoun ,abc296/A,Java,"import java.util.*;

class Main
{
  public static void main(String[] args)
  {
    Scanner sc = new Scanner();
    var N = sc.nextInt();
    var row = sc.next();
    boolean ans = true;
    for(int i=0;i<row.length()-1;i++)
    {
		var s = row.charAt(i);
      	if(s == 'F' &&  row.charAt(i+1) == 'F')
        {
          ans = false;
          break;
        }
      	else if(s == 'M' && row.charAt(i+1) == 'M')
        {
          ans = false;
          break;
        }
      	else
        {
          ans = true;
        }
    }
    if(ans)
    {
      System.out.println(""Yes"");
    }
    else
    {
		System.out.println(""No"");
    }
  }
}
","import java.util.*;

class Main
{
  public static void main(String[] args)
  {
    Scanner sc = new Scanner(System.in);
    var N = sc.nextInt();
    var row = sc.next();
    boolean ans = true;
    for(int i=0;i<row.length()-1;i++)
    {
		var s = row.charAt(i);
      	if(s == 'F' &&  row.charAt(i+1) == 'F')
        {
          ans = false;
          break;
        }
      	else if(s == 'M' && row.charAt(i+1) == 'M')
        {
          ans = false;
          break;
        }
      	else
        {
          ans = true;
        }
    }
    if(ans)
    {
      System.out.println(""Yes"");
    }
    else
    {
		System.out.println(""No"");
    }
  }
}
",CE
nattoun ,abc296/A,Java,"import java.util.*;
 
 
class Main
{
  public static void main(String[] args)
  {
    Scanner sc = new Scanner(System.in);
    var N = sc.nextInt();
    var row = sc.next();
    boolean ans = true;
    for(int i=0;i<row.length()-1;i++)
    {
		var s = row.CharAt(i);
      	if(s == 'F' &&  row.CharAt(i+1) == 'F')
        {
          ans = false;
          break;
        }
      	else if(s == 'M' && row.CharAt(i+1) == 'M')
        {
          ans = false;
          break;
        }
      	else
        {
          ans = true;
        }
    }
    if(ans)
    {
      System.out.println(""Yes"");
    }
    else
    {
		System.out.println(""No"");
    }
  }
}
","import java.util.*;

class Main
{
  public static void main(String[] args)
  {
    Scanner sc = new Scanner(System.in);
    var N = sc.nextInt();
    var row = sc.next();
    boolean ans = true;
    for(int i=0;i<row.length()-1;i++)
    {
		var s = row.charAt(i);
      	if(s == 'F' &&  row.charAt(i+1) == 'F')
        {
          ans = false;
          break;
        }
      	else if(s == 'M' && row.charAt(i+1) == 'M')
        {
          ans = false;
          break;
        }
      	else
        {
          ans = true;
        }
    }
    if(ans)
    {
      System.out.println(""Yes"");
    }
    else
    {
		System.out.println(""No"");
    }
  }
}
",CE
nattoun ,abc296/A,Java,"import java.util.*;


class Main
{
  public static void main(String[] args)
  {
    Scanner sc = new Scanner();
    var N = sc.nextInt();
    var row = sc.next();
    boolean ans = true;
    for(int i=0;i<row.length()-1;i++)
    {
		var s = row.CharAt(i);
      	if(s == 'F' &&  row.CharAt(i+1) == 'F')
        {
          ans = false;
          break;
        }
      	else if(s == 'M' && row.CharAt(i+1) == 'M')
        {
          ans = false;
          break;
        }
      	else
        {
          ans = true;
        }
    }
    if(ans)
    {
      System.out.println(""Yes"");
    }
    else
    {
		System.out.println(""No"");
    }
  }
}
","import java.util.*;

class Main
{
  public static void main(String[] args)
  {
    Scanner sc = new Scanner(System.in);
    var N = sc.nextInt();
    var row = sc.next();
    boolean ans = true;
    for(int i=0;i<row.length()-1;i++)
    {
		var s = row.charAt(i);
      	if(s == 'F' &&  row.charAt(i+1) == 'F')
        {
          ans = false;
          break;
        }
      	else if(s == 'M' && row.charAt(i+1) == 'M')
        {
          ans = false;
          break;
        }
      	else
        {
          ans = true;
        }
    }
    if(ans)
    {
      System.out.println(""Yes"");
    }
    else
    {
		System.out.println(""No"");
    }
  }
}
",CE
Dana03 ,abc296/A,Java,"import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        String s = in.next();
        if(a==1) System.out.println(""Yes"");
        else if(s.contains(""MM"") || s.contains(""FF""))
           System.out.println(""No"");
        else System.out.println(""Yes"");

        }
    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        String s = in.next();
        if(a==1) System.out.println(""Yes"");
        else if(s.contains(""MM"") || s.contains(""FF""))
           System.out.println(""No"");
        else System.out.println(""Yes"");

        
    }
}
",CE
Dana03 ,abc296/A,Java,"import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        String s = in.next();
        if(a==1) System.out.println(""Yes"");
        else if(s.contains(""MM"") || s.contains(""FF""))
           System.out.println(""False"");
        else System.out.println(""Yes"");
    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        String s = in.next();
        if(a==1) System.out.println(""Yes"");
        else if(s.contains(""MM"") || s.contains(""FF""))
           System.out.println(""No"");
        else System.out.println(""Yes"");

        
    }
}
",WA
Dana03 ,abc296/A,Java,"import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        String s = in.next();
        if(a==1)System.out.println(""Yes""); break;
        if(s.contains(""MM"") || s.contains(""FF""))
           System.out.println(""False"");
        else System.out.println(""Yes"");
    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        String s = in.next();
        if(a==1) System.out.println(""Yes"");
        else if(s.contains(""MM"") || s.contains(""FF""))
           System.out.println(""No"");
        else System.out.println(""Yes"");

        
    }
}
",CE
Dana03 ,abc296/A,Java,"import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        String s = in.next();
        if(s.contains(""MM"") || s.contains(""FF""))
           System.out.println(""False"");
        else System.out.println(""Yes"");
    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int a = in.nextInt();
        String s = in.next();
        if(a==1) System.out.println(""Yes"");
        else if(s.contains(""MM"") || s.contains(""FF""))
           System.out.println(""No"");
        else System.out.println(""Yes"");

        
    }
}
",WA
paina11510 ,abc296/A,Java,"import java.util.Scanner;
public class Main {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    
    int n = sc.nextInt();
    String s = sc.next();
    
    for(int i=0; i<n-1; i++) {
      char a = s.charAt(i);
      char b = s.charAt(i+1);
      if(a == b) {
       System.out.println(""No"");
         break;
      }
      if(i == n-2) System.out.println(""Yes"");
      if(n == 1) System.out.println(""Yes"");
    }
  }
}
      
","import java.util.Scanner;
public class Main {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    
    int n = sc.nextInt();
    String s = sc.next();
    
    for(int i=0; i<n-1; i++) {
      char a = s.charAt(i);
      char b = s.charAt(i+1);
      if(a == b) {
       System.out.println(""No"");
         break;
      }
      if(i == n-2) System.out.println(""Yes"");   
    }
    if(n == 1) System.out.println(""Yes"");
  }
}
      
",WA
paina11510 ,abc296/A,Java,"import java.util.Scanner;
public class Main {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    
    int n = sc.nextInt();
    String s = sc.next();
    
    for(int i=0; i<n-1; i++) {
      char a = s.charAt(i);
      char b = s.charAt(i+1);
      if(a == b) {
       System.out.println(""No"");
         break;
      }
      if(i == n-2)
        System.out.println(""Yes"");
    }
  }
}
      
","import java.util.Scanner;
public class Main {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    
    int n = sc.nextInt();
    String s = sc.next();
    
    for(int i=0; i<n-1; i++) {
      char a = s.charAt(i);
      char b = s.charAt(i+1);
      if(a == b) {
       System.out.println(""No"");
         break;
      }
      if(i == n-2) System.out.println(""Yes"");   
    }
    if(n == 1) System.out.println(""Yes"");
  }
}
      
",WA
AnoopNegi ,abc296/A,Java,"import java.util.*; 
class Main{
  public static String solve(int n, char s[]) {
		for(int i = 0; i<n-1; i++){
	        if(s[i] == s[i+1]){
	           return ""No"";
	        }
	    }
	    return ""Yes"";
	}
	
	public static void main(String[] args) {
		 Scanner sc = new Scanner(System.in); 
		 int N = sc.nextInt(); 
		 String S = sc.next(); 
		 s.solve(N,S.toCharArray()); 
		 sc.close();
	}
}
","import java.util.*; 
class Main{
  public static String solve(int n, char s[]) {
		for(int i = 0; i<n-1; i++){
	        if(s[i] == s[i+1]){
	           return ""No"";
	        }
	    }
	    return ""Yes"";
	}
	
	public static void main(String[] args) {
		 Scanner sc = new Scanner(System.in); 
		 int N = sc.nextInt(); 
		 String S = sc.next(); 
		 System.out.println(solve(N,S.toCharArray())); 
		 sc.close();
	}
}
",CE
ai310 ,abc296/A,Java,"package atcoder.abc;

import java.util.*;

public class Main {
	public static void main(String[] args){
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		String S = sc.next();
		
        Boolean result = true;
        for (int i=0;i<S.length()-1;i++){
            if (S.charAt(i) == S.charAt(i+1)) {
                result = false;
                break;
            }
        }
        System.out.println(result ? ""Yes"" : ""No"");
	}
}
","import java.util.*;

public class Main {
	public static void main(String[] args){
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		String S = sc.next();
		
        Boolean result = true;
        for (int i=0;i<S.length()-1;i++){
            if (S.charAt(i) == S.charAt(i+1)) {
                result = false;
                break;
            }
        }
        System.out.println(result ? ""Yes"" : ""No"");
	}
}
",RE
asuka_shiren ,abc296/A,Java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.util.StringTokenizer;


public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        FastScanner in = new FastScanner(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        A_Alternately solver = new A_Alternately();
        solver.solve(1, in, out);
        out.close();
    }

    static class A_Alternately {
        public void solve(int testNumber, FastScanner in, PrintWriter out) {
            
            char[] s = in.next().toCharArray();
            for (int i = 0; i + 1 < s.length; i++) {
                if (s[i] == s[i + 1]) {
                    out.println(""No"");
                    return;
                }
            }
            out.println(""Yes"");
        }

    }

    static class FastScanner {
        private BufferedReader in;
        private StringTokenizer st;

        public FastScanner(InputStream stream) {
            in = new BufferedReader(new InputStreamReader(stream));
        }

        public String next() {
            while (st == null || !st.hasMoreTokens()) {
                try {
                    st = new StringTokenizer(in.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

    }
}

","import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.util.StringTokenizer;


public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        FastScanner in = new FastScanner(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        A_Alternately solver = new A_Alternately();
        solver.solve(1, in, out);
        out.close();
    }

    static class A_Alternately {
        public void solve(int testNumber, FastScanner in, PrintWriter out) {
            in.nextInt();
            char[] s = in.next().toCharArray();
            for (int i = 0; i + 1 < s.length; i++) {
                if (s[i] == s[i + 1]) {
                    out.println(""No"");
                    return;
                }
            }
            out.println(""Yes"");
        }

    }

    static class FastScanner {
        private BufferedReader in;
        private StringTokenizer st;

        public FastScanner(InputStream stream) {
            in = new BufferedReader(new InputStreamReader(stream));
        }

        public String next() {
            while (st == null || !st.hasMoreTokens()) {
                try {
                    st = new StringTokenizer(in.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

    }
}

",WA
snrvtabe ,abc296/A,Java,"import java.util.Scanner;
 public class Main {
     public static void main(String args[]) {
         Scanner s = new Scanner(System.in);
         int n = s.nextInt();
         String str1 = s.nextLine();
         if (str1.contains(""MM"") || str1.contains(""FF"")) {
             System.out.println(""No"");
         } else {
             System.out.println(""Yes"");
         }
     }
 }
","import java.util.Scanner;
public class Main {
    public static void main(String args[]) {
        Scanner s = new Scanner(System.in);
        int n = s.nextInt();
        String str1 = s.next();
        if (str1.contains(""MM"") || str1.contains(""FF"")) {
            System.out.println(""No"");
        } else {
            System.out.println(""Yes"");
        }
    }
}
",WA
jatin_0308 ,abc296/A,Java,"package com.company;

import java.util.*;
final public class Main{

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        sc.nextLine();
        String s = sc.nextLine();
        boolean ok = false;
        for(int i=0;i+1<n;i++) {
            if (s.charAt(i) == s.charAt(i+1)) {
                ok = true;
                break;
            }
        }
        if(!ok){
            System.out.println(""Yes"");
        }
        else{
            System.out.println(""No"");
        }
    }
}
","import java.util.*;
final public class Main{

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        sc.nextLine();
        String s = sc.nextLine();
        boolean ok = false;
        for(int i=0;i+1<n;i++) {
            if (s.charAt(i) == s.charAt(i+1)) {
                ok = true;
                break;
            }
        }
        if(!ok){
            System.out.println(""Yes"");
        }
        else{
            System.out.println(""No"");
        }
    }
}
",RE
umr1225 ,abc296/A,Java,"import java.util.*;

public class Main {
    public static void main(String[] args) throws Exception {
        
        Scanner scanner = new Scanner(System.in);
        
        int count = scanner.nextInt();
        String moji = scanner.next();
        String hikaku = ""Yes"";
        
        for (int i = 1; i < count; i++) {
            if (moji.charAt(i) == moji.charAt(i-1)) {
                System.out.println(i);
                hikaku = ""No"";
                break;
            }
        }
        System.out.println(hikaku);
    }
}
","import java.util.*;

public class Main {
    public static void main(String[] args) throws Exception {
        
        Scanner scanner = new Scanner(System.in);
        
        int count = scanner.nextInt();
        String moji = scanner.next();
        String hikaku = ""Yes"";
        
        for (int i = 1; i < count; i++) {
            if (moji.charAt(i) == moji.charAt(i-1)) {
                hikaku = ""No"";
                break;
            }
        }
        System.out.println(hikaku);
    }
}
",WA
devendra01012002 ,abc296/A,Java,"import java.util.*;
public class Main{
  public static void main(){
    Scanner scn=new Scanner(System.in);
    int n=scn.nextInt();
    String s=scn.next();
    for(int i=0;i<s.length();i++)
    {
      if(s.charAt(i)==s.charAt(i-1))
      {
        System.out.print(""No"");
        return ;
      }
    }
    System.out.print(""Yes"");
  }
}
","import java.util.*;
public class Main{
  public static void main(String []arg){
    Scanner scn=new Scanner(System.in);
    int n=scn.nextInt();
    String s=scn.next();
    for(int i=1;i<s.length();i++)
    {
      if(s.charAt(i)==s.charAt(i-1))
      {
        System.out.print(""No"");
        return ;
      }
    }
    System.out.print(""Yes"");
  }
}
",RE
mohammed34 ,abc296/A,Java,"import java.util.*;
public class Main{
  public static void main (String args[]){
   Scanner sc =new Scanner(System. in);
    int n=sc.nextInt ();
    String str=sc.next();
    for(int i=0;i<n-1;i++){
    if (str.charAt(i)==str.charAt(i+1)){
    
      System. out. println(""No"");
      retirn;
      }
    }
    System. out. println(""Yes"");
    }
  }
","import java.util.*;

public class Main{

  public static void main (String args[]){

   Scanner sc =new Scanner(System. in);

    int n=sc.nextInt ();

    String str=sc.next();

    for(int i=0;i<n-1;i++){

    if (str.charAt(i)==str.charAt(i+1)){

    

      System. out. println(""No"");

      return;

      }

    }

    System. out. println(""Yes"");

    }

  }
",CE
Rock111 ,abc297/F,Java,"import java.io.*;
import java.math.BigInteger;
import java.util.*;
import java.util.stream.Collectors;
class Comb {

    long[] p;
    long[] pi;
    long mod;

    public Comb(int n, long mod) {
        this.mod=mod;
        p=new long[n+1];
        pi=new long[n+1];
        p[0] = 1;
        pi[0] = 1;
        for (int i = 1; i <= n; i++) {
            p[i] = p[i - 1] * i % mod;
        }
        pi[n] = modinv(p[n], (int) mod);
        for (int i = n; i > 1; i--) {
            pi[i-1] = pi[i] * (long) i % mod;
        }
    }

    public long comb(int n, int r) {
        if (n < r) return 0;
        return p[n] * pi[r] % mod * pi[n - r] % mod;
    }

    public long perm(int n, int r) {
        if (n < r) return 0;
        return p[n] * pi[n - r] % mod;
    }

    long modinv(long a, long m) {
        long b = m;
        long u = 1;
        long v = 0;
        long tmp = 0;

        while (b > 0) {
            long t = a / b;
            a -= t * b;
            tmp = a;
            a = b;
            b = tmp;

            u -= t * v;
            tmp = u;
            u = v;
            v = tmp;
        }

        u %= m;
        if (u < 0) u += m;
        return u;
    }
}

public class Main {

    static long M=998244353;

    public void solve() throws Exception {
        int h=nextInt(),w=nextInt(),k=nextInt();
        long res=0;

        int hw = h * w;
        Comb c=new Comb(hw, M);

        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                res+=c.comb(h*w,k);
                res-=c.comb(j*h,k);
                res-=c.comb((w-j-1)*h,k);
                res-=c.comb(i*w,k);
                res-=c.comb((h-i-1)*w,k);
                res+=c.comb(i*j,k);
                res+=c.comb(i*(w-j-1),k);
                res+=c.comb((h-i-1)*(w-j-1),k);
                res+=c.comb((h-i-1)*j,k);

                res%=M;
            }
        }
        long modinv = c.modinv(c.comb(h*w,k), M);
        out.println(((res*modinv+M)%M));
    }

    public static void main(String[] args) throws Exception {
        new Main().solve();
    }

    static PrintWriter out = new PrintWriter(System.out, true);
    static InputReader in = new InputReader(System.in);
    static String next() { return in.next(); }
    static int nextInt() { return Integer.parseInt(in.next()); }
    static long nextLong() { return Long.parseLong(in.next()); }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
    }
}

","import java.io.*;
import java.math.BigInteger;
import java.util.*;
import java.util.stream.Collectors;
class Comb {

    long[] p;
    long[] pi;
    long mod;

    public Comb(int n, long mod) {
        this.mod=mod;
        p=new long[n+1];
        pi=new long[n+1];
        p[0] = 1;
        pi[0] = 1;
        for (int i = 1; i <= n; i++) {
            p[i] = p[i - 1] * i % mod;
        }
        pi[n] = modinv(p[n], (int) mod);
        for (int i = n; i > 1; i--) {
            pi[i-1] = pi[i] * (long) i % mod;
        }
    }

    public long comb(int n, int r) {
        if (n < r) return 0;
        return p[n] * pi[r] % mod * pi[n - r] % mod;
    }

    public long perm(int n, int r) {
        if (n < r) return 0;
        return p[n] * pi[n - r] % mod;
    }

    long modinv(long a, long m) {
        long b = m;
        long u = 1;
        long v = 0;
        long tmp = 0;

        while (b > 0) {
            long t = a / b;
            a -= t * b;
            tmp = a;
            a = b;
            b = tmp;

            u -= t * v;
            tmp = u;
            u = v;
            v = tmp;
        }

        u %= m;
        if (u < 0) u += m;
        return u;
    }
}

public class Main {

    static long M=998244353;

    public void solve() throws Exception {
        int h=nextInt(),w=nextInt(),k=nextInt();
        long res=0;

        int hw = h * w;
        Comb c=new Comb(hw, M);

        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                res+=c.comb(h*w,k);
                res-=c.comb(j*h,k);
                res-=c.comb((w-j-1)*h,k);
                res-=c.comb(i*w,k);
                res-=c.comb((h-i-1)*w,k);
                res+=c.comb(i*j,k);
                res+=c.comb(i*(w-j-1),k);
                res+=c.comb((h-i-1)*(w-j-1),k);
                res+=c.comb((h-i-1)*j,k);

                res%=M;
            }
        }
        long modinv = c.modinv(c.comb(h*w,k), M);
        out.println((((res+M)*modinv)%M));
    }

    public static void main(String[] args) throws Exception {
        new Main().solve();
    }

    static PrintWriter out = new PrintWriter(System.out, true);
    static InputReader in = new InputReader(System.in);
    static String next() { return in.next(); }
    static int nextInt() { return Integer.parseInt(in.next()); }
    static long nextLong() { return Long.parseLong(in.next()); }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
    }
}

",WA
Rock111 ,abc297/F,Java,"import java.io.*;
import java.math.BigInteger;
import java.util.*;
import java.util.stream.Collectors;
class Comb {

    long[] p;
    long[] pi;
    long mod;

    public Comb(int n, long mod) {
        this.mod=mod;
        p=new long[n+1];
        pi=new long[n+1];
        p[0] = 1;
        pi[0] = 1;
        for (int i = 1; i <= n; i++) {
            p[i] = p[i - 1] * i % mod;
        }
        pi[n] = modinv(p[n], (int) mod);
        for (int i = n; i > 1; i--) {
            pi[i-1] = pi[i] * (long) i % mod;
        }
    }

    public long comb(int n, int r) {
        if (n < r) return 0;
        return p[n] * pi[r] % mod * pi[n - r] % mod;
    }

    public long perm(int n, int r) {
        if (n < r) return 0;
        return p[n] * pi[n - r] % mod;
    }

    long modinv(long a, long m) {
        long b = m;
        long u = 1;
        long v = 0;
        long tmp = 0;

        while (b > 0) {
            long t = a / b;
            a -= t * b;
            tmp = a;
            a = b;
            b = tmp;

            u -= t * v;
            tmp = u;
            u = v;
            v = tmp;
        }

        u %= m;
        if (u < 0) u += m;
        return u;
    }
}

public class Main {

    static long M=998244353;

    public void solve() throws Exception {
        int h=nextInt(),w=nextInt(),k=nextInt();
        long res=0;

        int hw = h * w;
        Comb c=new Comb(hw, M);

        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                res+=c.comb(h*w,k);
                res-=c.comb(j*h,k);
                res-=c.comb((w-j-1)*h,k);
                res-=c.comb(i*w,k);
                res-=c.comb((h-i-1)*w,k);
                res+=c.comb(i*j,k);
                res+=c.comb(i*(w-j-1),k);
                res+=c.comb((h-i-1)*(w-j-1),k);
                res+=c.comb((h-i-1)*j,k);
                res%=M;
            }
        }
        long modinv = c.modinv(c.comb(h*w,k), M);
        out.println((res*modinv%M));
    }

    public static void main(String[] args) throws Exception {
        new Main().solve();
    }

    static PrintWriter out = new PrintWriter(System.out, true);
    static InputReader in = new InputReader(System.in);
    static String next() { return in.next(); }
    static int nextInt() { return Integer.parseInt(in.next()); }
    static long nextLong() { return Long.parseLong(in.next()); }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
    }
}

","import java.io.*;
import java.math.BigInteger;
import java.util.*;
import java.util.stream.Collectors;
class Comb {

    long[] p;
    long[] pi;
    long mod;

    public Comb(int n, long mod) {
        this.mod=mod;
        p=new long[n+1];
        pi=new long[n+1];
        p[0] = 1;
        pi[0] = 1;
        for (int i = 1; i <= n; i++) {
            p[i] = p[i - 1] * i % mod;
        }
        pi[n] = modinv(p[n], (int) mod);
        for (int i = n; i > 1; i--) {
            pi[i-1] = pi[i] * (long) i % mod;
        }
    }

    public long comb(int n, int r) {
        if (n < r) return 0;
        return p[n] * pi[r] % mod * pi[n - r] % mod;
    }

    public long perm(int n, int r) {
        if (n < r) return 0;
        return p[n] * pi[n - r] % mod;
    }

    long modinv(long a, long m) {
        long b = m;
        long u = 1;
        long v = 0;
        long tmp = 0;

        while (b > 0) {
            long t = a / b;
            a -= t * b;
            tmp = a;
            a = b;
            b = tmp;

            u -= t * v;
            tmp = u;
            u = v;
            v = tmp;
        }

        u %= m;
        if (u < 0) u += m;
        return u;
    }
}

public class Main {

    static long M=998244353;

    public void solve() throws Exception {
        int h=nextInt(),w=nextInt(),k=nextInt();
        long res=0;

        int hw = h * w;
        Comb c=new Comb(hw, M);

        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                res+=c.comb(h*w,k);
                res-=c.comb(j*h,k);
                res-=c.comb((w-j-1)*h,k);
                res-=c.comb(i*w,k);
                res-=c.comb((h-i-1)*w,k);
                res+=c.comb(i*j,k);
                res+=c.comb(i*(w-j-1),k);
                res+=c.comb((h-i-1)*(w-j-1),k);
                res+=c.comb((h-i-1)*j,k);

                res%=M;
            }
        }
        long modinv = c.modinv(c.comb(h*w,k), M);
        out.println((((res+M)*modinv)%M));
    }

    public static void main(String[] args) throws Exception {
        new Main().solve();
    }

    static PrintWriter out = new PrintWriter(System.out, true);
    static InputReader in = new InputReader(System.in);
    static String next() { return in.next(); }
    static int nextInt() { return Integer.parseInt(in.next()); }
    static long nextLong() { return Long.parseLong(in.next()); }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
    }
}

",WA
fune3 ,abc292/C,Java,"import java.util.*;
import java.io.*;

public class Main{

	public static void main(String[] args) {
		FastScanner str=new FastScanner(System.in);
	  PrintWriter out=new PrintWriter(System.out);
    
	  int n=str.nextInt();
		long[] ya=new long[200010];
		ya[1]=1;
		for(int i=2;i<=200009;i++){
			int cou=0;
			boolean an=false;
			for(int j=1;j*j<=i;j++){
        if(i%j==0)cou++;
				if(j*j==i)an=true;
			}
			ya[i]=cou*2;
			if(an)ya[i]--;
		}

		


		long ans=0;
		if(n%2==0){
			for(int i=1;i<n/2;i++){
        ans+=(ya[i]*ya[n-i]);
			}
			ans*=2;
			ans+=(ya[n/2]*ya[n/2]);
		}else if(n%2==1){
      for(int i=1;i<n/2;i++){
				ans+=(ya[i]*ya[n-i]);
			}
		}
		out.println(ans);
		out.flush();
	}
}






	class FastScanner implements Closeable {
	private final InputStream in;
	private final byte[] buffer = new byte[1024];
	private int ptr = 0;
	private int buflen = 0;
	public FastScanner(InputStream in) {
		this.in = in;
	}
	private boolean hasNextByte() {
		if (ptr < buflen) {
			return true;
		}else{
			ptr = 0;
			try {
				buflen = in.read(buffer);
			} catch (IOException e) {
				e.printStackTrace();
			}
			if (buflen <= 0) {
				return false;
			}
		}
		return true;
	}
	private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
	private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
	public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
	public String next() {
		if (!hasNext()) throw new NoSuchElementException();
		StringBuilder sb = new StringBuilder();
		int b = readByte();
		while(isPrintableChar(b)) {
			sb.appendCodePoint(b);
			b = readByte();
		}
		return sb.toString();
	}
	public long nextLong() {
		if (!hasNext()) throw new NoSuchElementException();
		long n = 0;
		boolean minus = false;
		int b = readByte();
		if (b == '-') {
			minus = true;
			b = readByte();
		}
		if (b < '0' || '9' < b) {
			throw new NumberFormatException();
		}
		while(true){
			if ('0' <= b && b <= '9') {
				n *= 10;
				n += b - '0';
			}else if(b == -1 || !isPrintableChar(b)){
				return minus ? -n : n;
			}else{
				throw new NumberFormatException();
			}
			b = readByte();
		}
	}
	public int nextInt() {
		long nl = nextLong();
		if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
		return (int) nl;
	}
	public double nextDouble() { return Double.parseDouble(next());}
	public void close() {
		try {
			in.close();
		} catch (IOException e) {
		}
	}

		}
","import java.util.*;
import java.io.*;

public class Main{

	public static void main(String[] args) {
		FastScanner str=new FastScanner(System.in);
	  PrintWriter out=new PrintWriter(System.out);
    
	  int n=str.nextInt();
		long[] ya=new long[200010];
		ya[1]=1;
		for(int i=2;i<=200009;i++){
			int cou=0;
			boolean an=false;
			for(int j=1;j*j<=i;j++){
        if(i%j==0)cou++;
				if(j*j==i)an=true;
			}
			ya[i]=cou*2;
			if(an)ya[i]--;
		}

		


		long ans=0;
		if(n%2==0){
			for(int i=1;i<n/2;i++){
        ans+=(ya[i]*ya[n-i]);
			}
			ans*=2;
			ans+=(ya[n/2]*ya[n/2]);
		}else if(n%2==1){
      for(int i=1;i<n/2+1;i++){
				ans+=(ya[i]*ya[n-i]);
			}
			ans*=2;
		}
		out.println(ans);
		out.flush();
	}
}






	class FastScanner implements Closeable {
	private final InputStream in;
	private final byte[] buffer = new byte[1024];
	private int ptr = 0;
	private int buflen = 0;
	public FastScanner(InputStream in) {
		this.in = in;
	}
	private boolean hasNextByte() {
		if (ptr < buflen) {
			return true;
		}else{
			ptr = 0;
			try {
				buflen = in.read(buffer);
			} catch (IOException e) {
				e.printStackTrace();
			}
			if (buflen <= 0) {
				return false;
			}
		}
		return true;
	}
	private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}
	private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}
	public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}
	public String next() {
		if (!hasNext()) throw new NoSuchElementException();
		StringBuilder sb = new StringBuilder();
		int b = readByte();
		while(isPrintableChar(b)) {
			sb.appendCodePoint(b);
			b = readByte();
		}
		return sb.toString();
	}
	public long nextLong() {
		if (!hasNext()) throw new NoSuchElementException();
		long n = 0;
		boolean minus = false;
		int b = readByte();
		if (b == '-') {
			minus = true;
			b = readByte();
		}
		if (b < '0' || '9' < b) {
			throw new NumberFormatException();
		}
		while(true){
			if ('0' <= b && b <= '9') {
				n *= 10;
				n += b - '0';
			}else if(b == -1 || !isPrintableChar(b)){
				return minus ? -n : n;
			}else{
				throw new NumberFormatException();
			}
			b = readByte();
		}
	}
	public int nextInt() {
		long nl = nextLong();
		if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
		return (int) nl;
	}
	public double nextDouble() { return Double.parseDouble(next());}
	public void close() {
		try {
			in.close();
		} catch (IOException e) {
		}
	}

		}
",WA
sousu ,abc292/C,Java,"import java.util.Scanner;

public class Main {
	public static void main(String args[]) {
		Scanner sc = new Scanner(System.in);
		int N=sc.nextInt();
		long ans=0;
		for(int i=1;i<N;i++) {
			int X=i;
			int Y=N-i;
			long x=0;
			long y=0;
			for(int j=1;j<=X;j++) {
				if(X%j==0) {
					x++;
				}
			}
			for(int j=1;j<=Y;j++) {
				if(Y%j==0) {
					y++;
				}
			}
			ans+=x*y;
		}
		System.out.println(ans);
	}

}
","import java.util.Scanner;

public class Main {
	public static void main(String args[]) {
		Scanner sc = new Scanner(System.in);
		int N=sc.nextInt();
		long ans=0;
		for(int i=1;i<N;i++) {
			int X=i;
			int Y=N-i;
			long x=0;
			long y=0;
			for(int j=1;j*j<=X;j++) {
				if(X%j==0) {
					x++;
					if(X!=j*j)x++;
				}
			}
			for(int j=1;j*j<=Y;j++) {
				if(Y%j==0) {
					y++;
					if(Y!=j*j)y++;
				}
			}
			ans+=x*y;
		}
		System.out.println(ans);
	}

}
",TLE
azidantuiren ,abc292/C,Java,"import java.util.Scanner;


public class C_Four_Variables {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long res = 0;
        long[] cnt = new long[n];
        
        for (long i = 1; i < n; i++) {
            for (long k = 1; i * k < n; k++) {
                
                cnt[(int)(i * k)]++;
            }
        }
        for (int i = 1; i < n; i++) {
            res += cnt[i] * cnt[n - i];
        }
        System.out.println(res);
    }
}
","import java.util.Scanner;


public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long res = 0;
        long[] cnt = new long[n];
        
        for (long i = 1; i < n; i++) {
            for (long k = 1; i * k < n; k++) {
                
                cnt[(int)(i * k)]++;
            }
        }
        for (int i = 1; i < n; i++) {
            res += cnt[i] * cnt[n - i];
        }
        System.out.println(res);
    }
}
",CE
tommypang ,abc292/C,Java,"import java.io.*;
import java.util.*;

public class B {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static StringTokenizer st;

    public static void main(String[] args) throws IOException{
        int n = readInt();
        long ans = 0;
        for (int i = 1; i < n; i++) {
            int j = n - i;
            long cnt1 = f(i), cnt2 = f(j);
            ans += cnt1 * cnt2;
        }
        System.out.println(ans);
    }
    public static long f(int v) {
        Set<Integer> set = new HashSet<>();
        for (int i = 1; i <= Math.sqrt(v); i++) {
            if (v % i == 0) {
                set.add(i); set.add(v / i);
            }
        }
        return set.size();
    }

    static String next() throws IOException {
        while (st == null || !st.hasMoreTokens())
            st = new StringTokenizer(br.readLine().trim());
        return st.nextToken();
    }
    static long readLong() throws IOException {
        return Long.parseLong(next());
    }
    static int readInt() throws IOException {
        return Integer.parseInt(next());
    }
    static double readDouble() throws IOException {
        return Double.parseDouble(next());
    }
    static char readCharacter() throws IOException {
        return next().charAt(0);
    }
    static String readLine() throws IOException {
        return br.readLine().trim();
    }
    static int readLongLineInt() throws IOException{
        int x = 0, c;
        while((c = br.read()) != ' ' && c != '\n')
            x = x * 10 + (c - '0');
        return x;
    }
}
","import java.io.*;
import java.util.*;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static StringTokenizer st;

    public static void main(String[] args) throws IOException{
        int n = readInt();
        long ans = 0;
        for (int i = 1; i < n; i++) {
            int j = n - i;
            long cnt1 = f(i), cnt2 = f(j);
            ans += cnt1 * cnt2;
        }
        System.out.println(ans);
    }
    public static long f(int v) {
        Set<Integer> set = new HashSet<>();
        for (int i = 1; i <= Math.sqrt(v); i++) {
            if (v % i == 0) {
                set.add(i); set.add(v / i);
            }
        }
        return set.size();
    }

    static String next() throws IOException {
        while (st == null || !st.hasMoreTokens())
            st = new StringTokenizer(br.readLine().trim());
        return st.nextToken();
    }
    static long readLong() throws IOException {
        return Long.parseLong(next());
    }
    static int readInt() throws IOException {
        return Integer.parseInt(next());
    }
    static double readDouble() throws IOException {
        return Double.parseDouble(next());
    }
    static char readCharacter() throws IOException {
        return next().charAt(0);
    }
    static String readLine() throws IOException {
        return br.readLine().trim();
    }
    static int readLongLineInt() throws IOException{
        int x = 0, c;
        while((c = br.read()) != ' ' && c != '\n')
            x = x * 10 + (c - '0');
        return x;
    }
}
",CE
yuct ,abc292/C,Java,"import java.util.*;
public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] x = new int[N+1];
        for(int i = 1; i < x.length; i++){
            for(int j = i; j < x.length; j++){
                if(j % i == 0){
                    x[j]++;
                } 
            }
        }
        long ans = 0;
        int i;
        for(i = 1; i < x.length / 2; i++){
            ans += x[i] * x[x.length - i - 1] * 2;
        }
        if(N % 2 == 0){
            ans += x[i] * x[i];
        }
        System.out.println(ans);
    }
}
","import java.util.*;
public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] x = new int[N+1];
        for(int i = 1; i < x.length; i++){
            for(int j = i; j < x.length; j+=i){
                if(j % i == 0){
                    x[j]++;
                } 
            }
        }
        long ans = 0;
        int i;
        for(i = 1; i < x.length / 2; i++){
            ans += x[i] * x[x.length - i - 1] * 2;
        }
        if(N % 2 == 0){
            ans += x[i] * x[i];
        }
        System.out.println(ans);
    }
}
",TLE
hiropon1011 ,abc292/C,Java,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
	public static final long mod = 1000000007L;

	public static void main(String[] args){
		Scanner sc = new Scanner(System.in);
		PrintWriter out = new PrintWriter(System.out);

		int N = Integer.parseInt(sc.next());
		
		int[] factor = new int[N + 1];
		long ans = 0;
		for (int x = i; x <= N; x++) {
			for (int i = 1; i * x <= N; i++) {
				factor[i * x]++;
			}
		}
		for (int i = 1; i < N; i++) {
			int X = i;
			int Y = N - i;
			ans += factor[X] * factor[Y];
		}
		out.println(ans);
		out.flush();
	}
}
","import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
	public static final long mod = 1000000007L;

	public static void main(String[] args){
		Scanner sc = new Scanner(System.in);
		PrintWriter out = new PrintWriter(System.out);

		int N = Integer.parseInt(sc.next());
		
		int[] factor = new int[N + 1];
		long ans = 0;
		for (int x = 1; x <= N; x++) {
			for (int i = 1; i * x <= N; i++) {
				factor[i * x]++;
			}
		}
		for (int i = 1; i < N; i++) {
			int X = i;
			int Y = N - i;
			ans += factor[X] * factor[Y];
		}
		out.println(ans);
		out.flush();
	}
}
",CE
codela ,abc292/C,Java,"import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        var line = scanner.nextLine();
        int N = Integer.parseInt(line);
        if(N==2){
            System.out.println(4);
            return;
        }

        long sum = 0;
        Map<Integer, Integer>[] arr = new Map[N+1];
        Map<Integer, Long> counts = new HashMap<>();
        
        counts.put(1, 1L);
        for(int n=2; n<N; n++){ 
            arr[n] = find(n, arr, N);
            var count = count(arr[n]);
            counts.put(n, count) ;

            var otherCount = counts.get(N-n);

            
            if(otherCount != null){
                int m = n << 1 == N ? 1 : 2;
                sum += otherCount * count * m;
            }
        }
        System.out.println(sum);
    }

    static long count(Map<Integer, Integer> map){
         return map.values().stream()
                .mapToLong(i -> i + 1L)
                .reduce(1, (a, b) -> a * b);
    }

    static Map<Integer, Integer> find(int n, Map<Integer, Integer>[] arr, int N){
        int sqrt = (int) (Math.sqrt(n));
        for(int i=2; i<=sqrt; i++){
            if(n % i == 0){
                var target = new HashMap<>(arr[n/i]);
                target.put(i ,target.getOrDefault(i, 0) + 1);
                return target;
            }
        }
        var map = new HashMap<Integer, Integer>();
        map.put(n, 1);
        return map;
    }
}
","import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        var line = scanner.nextLine();
        int N = Integer.parseInt(line);
        if(N==2){
            System.out.println(1);
            return;
        }

        long sum = 0;
        Map<Integer, Integer>[] arr = new Map[N+1];
        Map<Integer, Long> counts = new HashMap<>();
        
        counts.put(1, 1L);
        for(int n=2; n<N; n++){ 
            arr[n] = find(n, arr, N);
            var count = count(arr[n]);
            counts.put(n, count) ;

            var otherCount = counts.get(N-n);

            
            if(otherCount != null){
                int m = n << 1 == N ? 1 : 2;
                sum += otherCount * count * m;
            }
        }
        System.out.println(sum);
    }

    static long count(Map<Integer, Integer> map){
         return map.values().stream()
                .mapToLong(i -> i + 1L)
                .reduce(1, (a, b) -> a * b);
    }

    static Map<Integer, Integer> find(int n, Map<Integer, Integer>[] arr, int N){
        int sqrt = (int) (Math.sqrt(n));
        for(int i=2; i<=sqrt; i++){
            if(n % i == 0){
                var target = new HashMap<>(arr[n/i]);
                target.put(i ,target.getOrDefault(i, 0) + 1);
                return target;
            }
        }
        var map = new HashMap<Integer, Integer>();
        map.put(n, 1);
        return map;
    }
}
",WA
yaaka ,abc292/C,Java,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        final Scanner sc = new Scanner(System.in);

        final var n = sc.nextInt();

        var result = 0;

        for (int i = 1; i < n; i++) {
            
            var abCount = i != 1 ? 2 : 0;
            final var sqrI = Math.sqrt(i);
            if (Math.floor(sqrI) == sqrI) {
                abCount++;
            }
            for (int j = 2; j < sqrI; j++) {
                if (i % j == 0) {
                    abCount++;
                }
            }
            
            var cdCount = n - i != 1 ? 2 : 0;
            final var sqrN = Math.sqrt(n - i);
            if (Math.floor(sqrN) == sqrN) {
                cdCount++;
            }
            for (int j = 2; j < sqrN; j++) {
                if ((n - i) % j == 0) {
                    cdCount++;
                }
            }
            
            
            result += abCount * cdCount;

        }

        System.out.println(result);

        sc.close();
    }
}
","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        final Scanner sc = new Scanner(System.in);

        final var n = sc.nextInt();

        var result = 0;

        for (int i = 1; i < n; i++) {
            
            var abCount = i != 1 ? 2 : 0;
            final var sqrI = Math.sqrt(i);
            if (Math.floor(sqrI) == sqrI) {
                abCount++;
            }
            for (int j = 2; j < sqrI; j++) {
                if (i % j == 0) {
                    abCount += 2;
                }
            }
            
            var cdCount = n - i != 1 ? 2 : 0;
            final var sqrN = Math.sqrt(n - i);
            if (Math.floor(sqrN) == sqrN) {
                cdCount++;
            }
            for (int j = 2; j < sqrN; j++) {
                if ((n - i) % j == 0) {
                    cdCount += 2;
                }
            }
            result += abCount * cdCount;
        }

        System.out.println(result);

        sc.close();
    }
}
",WA
jasonpogi ,abc292/C,Java,"import java.util.Scanner;



public class Solution {

	public static void main(String[] args) {
		Scanner fs = new Scanner(System.in);
		
		int N = fs.nextInt();
		
		long ans = 0;
		for (int i = 1; i < N; i++) {
			int X = i, Y = N - i;
			long x = 0, y = 0;
			
			for (int j = 1; j * j <= X; j++) {
				if (X % j == 0) {
					x++;
					if (j * j != X) {
						x++;
					}
				}
			}
			
			for (int j = 1; j * j <= Y; j++) {
				if (Y % j == 0) {
					y++;
					if (j * j != Y) {
						y++;
					}
				}
			}
			
			ans += (x * y);
		}
		System.out.println(ans);
		
		fs.close();
	}
}
","import java.util.Scanner;



public class Main {

	public static void main(String[] args) {
		Scanner fs = new Scanner(System.in);
		
		int N = fs.nextInt();
		
		long ans = 0;
		for (int i = 1; i < N; i++) {
			int X = i, Y = N - i;
			long x = 0, y = 0;
			
			for (int j = 1; j * j <= X; j++) {
				if (X % j == 0) {
					x++;
					if (j * j != X) {
						x++;
					}
				}
			}
			
			for (int j = 1; j * j <= Y; j++) {
				if (Y % j == 0) {
					y++;
					if (j * j != Y) {
						y++;
					}
				}
			}
			
			ans += (x * y);
		}
		System.out.println(ans);
		
		fs.close();
	}
}
",CE
Virendra ,abc292/C,Java,"

import java.util.*;
import java.io.*;

public class Main {
    static void solve() {
        StringBuilder res = new StringBuilder();
        int n = sc.nextInt();
        long[] dp = new long[n+1];
        dp[1] =1;
        for (int i = 2; i < n; i++) {
            for (int j = 1; j*j <= i; j++) {
                if(i%j!=0) continue;
                if(j*j==i) dp[i]++;
                else dp[i]+=2;
            }
            if(n-i<i) dp[n]+=2L*(dp[i]*dp[n-i]);
            else if(n-i==i) dp[n]+=dp[i]*dp[i];
        }
        print(dp[n]);
    }

    static int gcd(int a, int b) {
        if (b == 0)
            return a;
        return gcd(b, a % b);
    }

    static FastReader sc;
    static PrintWriter out;
    public static void main(String[] args) throws IOException {
        sc = new FastReader();
        out = new PrintWriter(System.out);
        int tt = 1;
        for (int t = 1; t <= tt; t++) {
            solve();
        }
        out.close();
    }

    static <E> void print(E res) {
        out.println(res);
    }

    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = """";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        int[] readIntArray(int n) {
            int[] res = new int[n];
            for (int i = 0; i < n; i++)
                res[i] = nextInt();
            return res;
        }

        long[] readLongArray(int n) {
            long[] res = new long[n];
            for (int i = 0; i < n; i++)
                res[i] = nextLong();
            return res;
        }
    }

}
","

import java.util.*;
import java.io.*;

public class Main {
    static void solve() {
        StringBuilder res = new StringBuilder();
        int n = sc.nextInt();
        if(n==2){
            print(1);
            return;
        }
        long[] dp = new long[n+1];
        dp[1] =1;
        for (int i = 2; i < n; i++) {
            for (int j = 1; j*j <= i; j++) {
                if(i%j!=0) continue;
                if(j*j==i) dp[i]++;
                else dp[i]+=2;
            }
            if(n-i<i) dp[n]+=2L*(dp[i]*dp[n-i]);
            else if(n-i==i) dp[n]+=dp[i]*dp[i];
        }
        print(dp[n]);
    }

    static int gcd(int a, int b) {
        if (b == 0)
            return a;
        return gcd(b, a % b);
    }

    static FastReader sc;
    static PrintWriter out;
    public static void main(String[] args) throws IOException {
        sc = new FastReader();
        out = new PrintWriter(System.out);
        int tt = 1;
        for (int t = 1; t <= tt; t++) {
            solve();
        }
        out.close();
    }

    static <E> void print(E res) {
        out.println(res);
    }

    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = """";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        int[] readIntArray(int n) {
            int[] res = new int[n];
            for (int i = 0; i < n; i++)
                res[i] = nextInt();
            return res;
        }

        long[] readLongArray(int n) {
            long[] res = new long[n];
            for (int i = 0; i < n; i++)
                res[i] = nextLong();
            return res;
        }
    }

}
",WA
Fusor ,abc292/C,Java,"
import java.util.Scanner;

class Main{
    static int[] a;
    static void Init(int n){
        for (int i=1;i<=n;i++){
            for (int j=1;j<i;j++){
                if(j>i) break;
                if((long)i * (long) j > n) break;
                a[i*j] +=2;
            }
            if((long ) i* (long)i <=n) a[i*i] ++;
        }
    }
    public static void main(String[] args) throws Exception {
        Scanner scan = new Scanner(System.in);
        int n=scan.nextInt();
        scan.close();
        a = new int[n + 1];
        Init(n);
        long ans=0;
        for (int i=1 ;i< n/2 ;i++  ){
            ans+= ((long)a[i] * a[n-i]);
            ans+= ((long)a[i] * a[n-i]); 
        }
        if(n%2==0){
            ans+= ((long)a[n/2] * a[n/2]);
        }
        System.out.println(ans);
    }
}
","import java.util.Scanner;

class Main{
    static int[] a;
    static void Init(int n){
        for (int i=1;i<=n;i++){
            for (int j=1;j<i;j++){
                if(j>i) break;
                if((long)i * (long) j > n) break;
                a[i*j] +=2;
            }
            if((long ) i* (long)i <=n) a[i*i] ++;
        }
    }
    public static void main(String[] args) throws Exception {
        Scanner scan = new Scanner(System.in);
        int n=scan.nextInt();
        scan.close();
        a = new int[n + 1];
        Init(n);
        long ans=0;
        for (int i=1 ;i<= n/2 ;i++  ){
            ans+= ((long)a[i] * a[n-i]);
            ans+= ((long)a[i] * a[n-i]); 
        }
        if(n%2==0){
            ans-= ((long)a[n/2] * a[n/2]);
        }
        System.out.println(ans);
    }
}
",WA
wdasddsa ,arc158/A,Java,"import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Scanner;
import java.util.Set;
import java.util.Stack;


 
 
 
 
 
public class Main {
	static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	private static StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static Scanner sc = new Scanner(System.in);
 
	private static int Int() {
		try {
			st.nextToken();
			
		} catch (IOException e) {
 
			e.printStackTrace();
		}
		return (int) st.nval;
	}
 
	private static long Long() {
		try {
			st.nextToken();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return (long) st.nval;
	}
 
	private static String str() {
		try {
			st.nextToken();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return (String) st.sval;
	}
 
	static long gcd(long a, long b) {
		return b == 0 ? a : gcd(b, a % b);
	}
 
	static int[][] arr,dp;
	static int ans1,n,m,chen,jia;
	static int[]color,bj,down,pr,c,du;
	static Map<Integer, List<int[]>>map,ziyinziweiz;
	static Map<Integer, Set<Integer>>fu;
	
	static long ans;
	static List<Long>list;
	static long []lul,dpl;
	static Set<Integer>set;
	public static void main(String[] args) {
		
		int t =Int();
		long mod=(long) (998244353);
		
		while (t-->0) {
			int[]arr=new int[3];
			for (int i = 0; i < arr.length; i++) {
				arr[i]=Int();
			}
			Arrays.sort(arr);
			int ans=0;
			if (arr[0]==arr[1]||arr[1]==arr[2]) {
				int cha=Math.max(arr[1]-arr[0], arr[2]-arr[1]);
				if (cha%6!=0) {
					out.println(-1);
				}else {
					out.println(cha/3);
				}
			}else {
				int max=Math.max(arr[1]-arr[0], arr[2]-arr[1]);
				int min=Math.min(arr[1]-arr[0], arr[2]-arr[1]);
				if ((max-min)%2!=0) {
					out.println(-1);
				}else {
					
					ans+=((min)/2);
					max-=min;
					if (max%6!=0) {
						out.println(-1);
					}else {
						
						out.println(ans+max/3);
					}
				}
			}
		}
		out.close();
	}
	
}
","import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Scanner;
import java.util.Set;
import java.util.Stack;


 
 
 
 
 
public class Main {
	static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	private static StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static Scanner sc = new Scanner(System.in);
 
	private static int Int() {
		try {
			st.nextToken();
			
		} catch (IOException e) {
 
			e.printStackTrace();
		}
		return (int) st.nval;
	}
 
	private static long Long() {
		try {
			st.nextToken();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return (long) st.nval;
	}
 
	private static String str() {
		try {
			st.nextToken();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return (String) st.sval;
	}
 
	static long gcd(long a, long b) {
		return b == 0 ? a : gcd(b, a % b);
	}
 
	static int[][] arr,dp;
	static int ans1,n,m,chen,jia;
	static int[]color,bj,down,pr,c,du;
	static Map<Integer, List<int[]>>map,ziyinziweiz;
	static Map<Integer, Set<Integer>>fu;
	
	static long ans;
	static List<Long>list;
	static long []lul,dpl;
	static Set<Integer>set;
	public static void main(String[] args) {
		
		int t =Int();
		long mod=(long) (998244353);
		
		while (t-->0) {
			int[]arr=new int[3];
			for (int i = 0; i < arr.length; i++) {
				arr[i]=Int();
			}
			Arrays.sort(arr);
			int ans=0;
			if (arr[0]==arr[1]||arr[1]==arr[2]) {
				int cha=Math.max(arr[1]-arr[0], arr[2]-arr[1]);
				if (cha%6!=0) {
					out.println(-1);
				}else {
					out.println(cha/3);
				}
			}else {
				int max=Math.max(arr[1]-arr[0], arr[2]-arr[1]);
				int min=Math.min(arr[1]-arr[0], arr[2]-arr[1]);
				if ((min)%2!=0) {
					out.println(-1);
				}else {
					
					ans+=((min)/2);
					max-=min;
					if (max%6!=0) {
						out.println(-1);
					}else {
						
						out.println(ans+max/3);
					}
				}
			}
		}
		out.close();
	}
	
}
",WA
sakata1222 ,arc158/A,Java,"import java.io.InputStream;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.function.Function;

public class Main {

  public static void main(String[] args) {
    resolve(System.in, System.out);
  }

  static void resolve(InputStream is, PrintStream pw) {
    FastScanner sc = new FastScanner(new Scanner(is));
    int t = sc.nextInt();
    for (int i = 0; i < t; i++) {
      long x = sc.nextInt();
      long y = sc.nextInt();
      long z = sc.nextInt();
      long[] xyz = new long[]{x, y, z};
      Arrays.sort(xyz);
      x = xyz[0];
      y = xyz[1];
      z = xyz[2];

      if ((y - x) % 2 != 0) {
        pw.println(-1);
        continue;
      }
      if ((z - y) % 2 != 0) {
        pw.println(-1);
        continue;
      }
      if ((z - x) % 2 != 0) {
        pw.println(-1);
        continue;
      }
      if (x == y && y == z) {
        pw.println(0);
        continue;
      }
      long ans = 0;
      long a = y - x;
      long b = z - y;
      long minAB = Math.min(a, b);
      x += minAB;
      z -= minAB;
      ans += minAB / 2;
      if (x == y && y == z) {
        pw.println(0);
        continue;
      }
      if (x == y) {
        if ((z - y) % 6 != 0) {
          pw.println(-1);
          continue;
        }
        ans += ((z - y) / 6) * 2;
        pw.println(ans);
      } else {
        if ((y - x) % 6 != 0) {
          pw.println(-1);
          continue;
        }
        ans += ((y - x) / 6) * 2;
        pw.println(ans);
      }
    }
  }

  static class Pair {

    final int a;
    final int b;

    public Pair(int a, int b) {
      this.a = a;
      this.b = b;
    }
  }

  private static class FastScanner {

    private final Scanner scanner;

    public FastScanner(Scanner scanner) {
      this.scanner = scanner;
    }

    int nextInt() {
      return Integer.parseInt(scanner.next());
    }

    int[] nextNInt(int n) {
      int[] array = new int[n];
      for (int i = 0; i < n; i++) {
        array[i] = nextInt();
      }
      return array;
    }

    <T> List<T> nextNT(int n, Function<FastScanner, T> tScanner) {
      List<T> tList = new ArrayList<>();
      for (int i = 0; i < n; i++) {
        tList.add(tScanner.apply(this));
      }
      return tList;
    }

    int[][] nextNMInt(int n, int m) {
      int[][] a = new int[n][m];
      for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
          a[i][j] = nextInt();
        }
      }
      return a;
    }

    long nextLong() {
      return Long.parseLong(scanner.next());
    }

    double nextDouble() {
      return Double.parseDouble(scanner.next());
    }

    String nextString() {
      return scanner.next();
    }
  }
}
","import java.io.InputStream;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.function.Function;

public class Main {

  public static void main(String[] args) {
    resolve(System.in, System.out);
  }

  static void resolve(InputStream is, PrintStream pw) {
    FastScanner sc = new FastScanner(new Scanner(is));
    int t = sc.nextInt();
    for (int i = 0; i < t; i++) {
      long x = sc.nextInt();
      long y = sc.nextInt();
      long z = sc.nextInt();
      long[] xyz = new long[]{x, y, z};
      Arrays.sort(xyz);
      x = xyz[0];
      y = xyz[1];
      z = xyz[2];

      if ((y - x) % 2 != 0) {
        pw.println(-1);
        continue;
      }
      if ((z - y) % 2 != 0) {
        pw.println(-1);
        continue;
      }
      if ((z - x) % 2 != 0) {
        pw.println(-1);
        continue;
      }
      if (x == y && y == z) {
        pw.println(0);
        continue;
      }
      long ans = 0;
      long a = y - x;
      long b = z - y;
      long minAB = Math.min(a, b);
      x += minAB;
      z -= minAB;
      ans += minAB / 2;
      if (x == y && y == z) {
        pw.println(ans);
        continue;
      }
      if (x == y) {
        if ((z - y) % 6 != 0) {
          pw.println(-1);
          continue;
        }
        ans += ((z - y) / 6) * 2;
        pw.println(ans);
      } else {
        if ((y - x) % 6 != 0) {
          pw.println(-1);
          continue;
        }
        ans += ((y - x) / 6) * 2;
        pw.println(ans);
      }
    }
  }

  static class Pair {

    final int a;
    final int b;

    public Pair(int a, int b) {
      this.a = a;
      this.b = b;
    }
  }

  private static class FastScanner {

    private final Scanner scanner;

    public FastScanner(Scanner scanner) {
      this.scanner = scanner;
    }

    int nextInt() {
      return Integer.parseInt(scanner.next());
    }

    int[] nextNInt(int n) {
      int[] array = new int[n];
      for (int i = 0; i < n; i++) {
        array[i] = nextInt();
      }
      return array;
    }

    <T> List<T> nextNT(int n, Function<FastScanner, T> tScanner) {
      List<T> tList = new ArrayList<>();
      for (int i = 0; i < n; i++) {
        tList.add(tScanner.apply(this));
      }
      return tList;
    }

    int[][] nextNMInt(int n, int m) {
      int[][] a = new int[n][m];
      for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
          a[i][j] = nextInt();
        }
      }
      return a;
    }

    long nextLong() {
      return Long.parseLong(scanner.next());
    }

    double nextDouble() {
      return Double.parseDouble(scanner.next());
    }

    String nextString() {
      return scanner.next();
    }
  }
}
",WA
sugimoto3207 ,arc158/A,Java,"import java.util.Scanner;

public class Main {
	
	public static void main(String[] args)  {
		Scanner sc = new Scanner(System.in);
		
		int n=sc.nextInt();
		
		for(int i=0;i<n;i++) {
			int x1=sc.nextInt();
			int x2=sc.nextInt();
			int x3=sc.nextInt();
			
			int a=(x1+x2+x3)/3;
			int cnt=0;


			
			
			
			if((x1+x2+x3)%3!=0 || a%2!=x1%2 || a%2!=x2%2 ||  a%2!=x3%2) {
				System.out.println(-1);
				continue;
			}




			
			cnt=(Math.abs(x1-a)+Math.abs(x2-a)+Math.abs(x3-a))/4;
			
			System.out.println(cnt);
			
		}		
		
		
	}
}
","import java.util.Scanner;

public class Main {
	
	public static void main(String[] args)  {
		Scanner sc = new Scanner(System.in);
		
		int n=sc.nextInt();
		
		for(int i=0;i<n;i++) {
			long x1=sc.nextInt();
			long x2=sc.nextInt();
			long x3=sc.nextInt();
			
			long a=(x1+x2+x3)/3;
			long cnt=0;


			
			
			
			if((x1+x2+x3)%3!=0 || a%2!=x1%2 || a%2!=x2%2 ||  a%2!=x3%2) {
				System.out.println(-1);
				continue;
			}




			
			cnt=(Math.abs(x1-a)+Math.abs(x2-a)+Math.abs(x3-a))/4;
			
			System.out.println(cnt);
			
		}		
		
		
	}
}
",WA
viral ,arc158/A,Java,"import java.util.Scanner;
class Main{
	public static void main(String[] args){
		Scanner sc = new Scanner(System.in);
		int T = sc.nextInt();
		while(T-->0){
			int x1 = sc.nextInt();
			int x2 = sc.nextInt();
			int x3 = sc.nextInt();
			if(((long)x1+x2+x3)%3!=0||x1%2!=x2%2||x1%2!=x3%2){
				System.out.println(-1);
				continue;
			}
			int a = (int)((long)(x1+x2+x3)/3);
			System.out.println(((long)Math.abs(x1-a)+Math.abs(x2-a)+Math.abs(x3-a)+2)/4);
		}
	}
}
","import java.util.Scanner;
class Main{
	public static void main(String[] args){
		Scanner sc = new Scanner(System.in);
		int T = sc.nextInt();
		while(T-->0){
			int x1 = sc.nextInt();
			int x2 = sc.nextInt();
			int x3 = sc.nextInt();
			if(((long)x1+x2+x3)%3!=0||x1%2!=x2%2||x1%2!=x3%2){
				System.out.println(-1);
				continue;
			}
			int a = (int)(((long)x1+x2+x3)/3);
			System.out.println(((long)Math.abs(x1-a)+Math.abs(x2-a)+Math.abs(x3-a)+2)/4);
		}
	}
}
",WA
viral ,arc158/A,Java,"import java.util.Scanner;
class Main{
	public static void main(String[] args){
		Scanner sc = new Scanner(System.in);
		int T = sc.nextInt();
		while(T-->0){
			int x1 = sc.nextInt();
			int x2 = sc.nextInt();
			int x3 = sc.nextInt();
			if(((long)x1+x2+x3)%3!=0||x1%2!=x2%2||x1%2!=x3%2){
				System.out.println(-1);
				continue;
			}
			int a = (int)((long)(x1+x2+x3)/3);
			System.out.println(((long)Math.abs(x1-a)+Math.abs(x2-a)+Math.abs(x3-a))/4);
		}
	}
}
","import java.util.Scanner;
class Main{
	public static void main(String[] args){
		Scanner sc = new Scanner(System.in);
		int T = sc.nextInt();
		while(T-->0){
			int x1 = sc.nextInt();
			int x2 = sc.nextInt();
			int x3 = sc.nextInt();
			if(((long)x1+x2+x3)%3!=0||x1%2!=x2%2||x1%2!=x3%2){
				System.out.println(-1);
				continue;
			}
			int a = (int)(((long)x1+x2+x3)/3);
			System.out.println(((long)Math.abs(x1-a)+Math.abs(x2-a)+Math.abs(x3-a)+2)/4);
		}
	}
}
",WA
junkpiano ,arc158/A,Java,"import java.io.*;
import java.util.StringTokenizer;

public class Template {

    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while(st == null || !st.hasMoreTokens()) {
                try { st = new StringTokenizer(br.readLine()); }
                catch (IOException e){ e.printStackTrace(); }
            }
            return st.nextToken();
        }

        int nextInt() { return Integer.parseInt(next()); }
        long nextLong() { return Long.parseLong(next()); }
        double nextDouble() { return Double.parseDouble(next()); }
        String nextLine() {
            String str = """";
            try {
                if (st.hasMoreTokens()) { str = st.nextToken(""\n""); }
                else { str = br.readLine(); }
            } catch (IOException e) { e.printStackTrace(); }
            return str;
        }
    }

    static int gcd(int a, int b) {
        if(a == 0) { return b; }
        return gcd(b % a, a);
    }

    static FastReader sc;
    static PrintWriter out;

    public static void main(String[] args) {
        sc = new FastReader();
        out = new PrintWriter(new BufferedOutputStream(System.out));

        int t = sc.nextInt();
        while(t-- > 0) {
            long a = sc.nextInt(), b = sc.nextInt(), c = sc.nextInt();
            if((a % 2 != b % 2 || b % 2 != c % 2) || (a + b + c) % 3 != 0) {
                out.println(-1);
            } else {
                long m = (a + b + c)/3;
                long d = Math.abs(a - m) +  Math.abs(b - m) + Math.abs(c - m);
                if(d % 4 != 0) {
                    out.println(-1);
                } else {
                    out.println(d/4);
                }
            }
        }
        out.close();
    }
}
","import java.io.*;
import java.util.StringTokenizer;

public class Main {

    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while(st == null || !st.hasMoreTokens()) {
                try { st = new StringTokenizer(br.readLine()); }
                catch (IOException e){ e.printStackTrace(); }
            }
            return st.nextToken();
        }

        int nextInt() { return Integer.parseInt(next()); }
        long nextLong() { return Long.parseLong(next()); }
        double nextDouble() { return Double.parseDouble(next()); }
        String nextLine() {
            String str = """";
            try {
                if (st.hasMoreTokens()) { str = st.nextToken(""\n""); }
                else { str = br.readLine(); }
            } catch (IOException e) { e.printStackTrace(); }
            return str;
        }
    }

    static int gcd(int a, int b) {
        if(a == 0) { return b; }
        return gcd(b % a, a);
    }

    static FastReader sc;
    static PrintWriter out;

    public static void main(String[] args) {
        sc = new FastReader();
        out = new PrintWriter(new BufferedOutputStream(System.out));

        int t = sc.nextInt();
        while(t-- > 0) {
            long a = sc.nextInt(), b = sc.nextInt(), c = sc.nextInt();
            if((a % 2 != b % 2 || b % 2 != c % 2) || (a + b + c) % 3 != 0) {
                out.println(-1);
            } else {
                long m = (a + b + c)/3;
                long d = Math.abs(a - m) +  Math.abs(b - m) + Math.abs(c - m);
                if(d % 4 != 0) {
                    out.println(-1);
                } else {
                    out.println(d/4);
                }
            }
        }
        out.close();
    }
}
",CE
junkpiano ,arc158/A,Java,"

import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {

    
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(
                    new InputStreamReader(System.in)
            );
        }

        String next() {
            while(st == null || !st.hasMoreTokens()) {
                try {
                    st = new StringTokenizer(br.readLine());
                }
                catch (IOException e){
                    e.printStackTrace();
                }
            }


            return st.nextToken();
        }

        int nextInt() { return Integer.parseInt(next()); }
        long nextLong() { return Long.parseLong(next()); }
        double nextDouble() { return Double.parseDouble(next()); }
        String nextLine() {
            String str = """";
            try {
                if(st.hasMoreTokens()) {
                    str = st.nextToken(""\n"");
                } else {
                    str = br.readLine();
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }

    public static void main(String[] args) {
        FastReader s = new FastReader();
        int n = s.nextInt();
        while(n-- > 0) {
            long a = s.nextInt(), b = s.nextInt(), c = s.nextInt();
            if((a % 2 != b % 2 || b % 2 || c % 2) || (a + b + c) % 3 != 0) {
                System.out.println(-1);
            } else {
                long m = (a + b + c)/3;
                long d = Math.abs(a - m) +  Math.abs(b - m) + Math.abs(c - m);
                if(d % 4 != 0) {
                    System.out.println(-1);
                } else {
                    System.out.println(d/4);
                }
            }
        }
    }
}
","

import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {

    
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(
                    new InputStreamReader(System.in)
            );
        }

        String next() {
            while(st == null || !st.hasMoreTokens()) {
                try {
                    st = new StringTokenizer(br.readLine());
                }
                catch (IOException e){
                    e.printStackTrace();
                }
            }


            return st.nextToken();
        }

        int nextInt() { return Integer.parseInt(next()); }
        long nextLong() { return Long.parseLong(next()); }
        double nextDouble() { return Double.parseDouble(next()); }
        String nextLine() {
            String str = """";
            try {
                if(st.hasMoreTokens()) {
                    str = st.nextToken(""\n"");
                } else {
                    str = br.readLine();
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }

    public static void main(String[] args) {
        FastReader s = new FastReader();
        int n = s.nextInt();
        while(n-- > 0) {
            long a = s.nextInt(), b = s.nextInt(), c = s.nextInt();
            if((a % 2 != b % 2 || b % 2 != c % 2) || (a + b + c) % 3 != 0) {
                System.out.println(-1);
            } else {
                long m = (a + b + c)/3;
                long d = Math.abs(a - m) +  Math.abs(b - m) + Math.abs(c - m);
                if(d % 4 != 0) {
                    System.out.println(-1);
                } else {
                    System.out.println(d/4);
                }
            }
        }
    }
}
",CE
junkpiano ,arc158/A,Java,"import java.io.*;
import java.util.StringTokenizer;

public class Template {

    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while(st == null || !st.hasMoreTokens()) {
                try { st = new StringTokenizer(br.readLine()); }
                catch (IOException e){ e.printStackTrace(); }
            }
            return st.nextToken();
        }

        int nextInt() { return Integer.parseInt(next()); }
        long nextLong() { return Long.parseLong(next()); }
        double nextDouble() { return Double.parseDouble(next()); }
        String nextLine() {
            String str = """";
            try {
                if (st.hasMoreTokens()) { str = st.nextToken(""\n""); }
                else { str = br.readLine(); }
            } catch (IOException e) { e.printStackTrace(); }
            return str;
        }
    }

    static int gcd(int a, int b) {
        if(a == 0) { return b; }
        return gcd(b % a, a);
    }

    static FastReader sc;
    static PrintWriter out;

    public static void main(String[] args) {
        sc = new FastReader();
        out = new PrintWriter(new BufferedOutputStream(System.out));

        int t = sc.nextInt();
        while(t-- > 0) {
            long a = s.nextInt(), b = s.nextInt(), c = s.nextInt();
            if((a % 2 != b % 2 || b % 2 != c % 2) || (a + b + c) % 3 != 0) {
                out.println(-1);
            } else {
                long m = (a + b + c)/3;
                long d = Math.abs(a - m) +  Math.abs(b - m) + Math.abs(c - m);
                if(d % 4 != 0) {
                    out.println(-1);
                } else {
                    out.println(d/4);
                }
            }
        }
        out.close();
    }
}
","import java.io.*;
import java.util.StringTokenizer;

public class Main {

    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while(st == null || !st.hasMoreTokens()) {
                try { st = new StringTokenizer(br.readLine()); }
                catch (IOException e){ e.printStackTrace(); }
            }
            return st.nextToken();
        }

        int nextInt() { return Integer.parseInt(next()); }
        long nextLong() { return Long.parseLong(next()); }
        double nextDouble() { return Double.parseDouble(next()); }
        String nextLine() {
            String str = """";
            try {
                if (st.hasMoreTokens()) { str = st.nextToken(""\n""); }
                else { str = br.readLine(); }
            } catch (IOException e) { e.printStackTrace(); }
            return str;
        }
    }

    static int gcd(int a, int b) {
        if(a == 0) { return b; }
        return gcd(b % a, a);
    }

    static FastReader sc;
    static PrintWriter out;

    public static void main(String[] args) {
        sc = new FastReader();
        out = new PrintWriter(new BufferedOutputStream(System.out));

        int t = sc.nextInt();
        while(t-- > 0) {
            long a = sc.nextInt(), b = sc.nextInt(), c = sc.nextInt();
            if((a % 2 != b % 2 || b % 2 != c % 2) || (a + b + c) % 3 != 0) {
                out.println(-1);
            } else {
                long m = (a + b + c)/3;
                long d = Math.abs(a - m) +  Math.abs(b - m) + Math.abs(c - m);
                if(d % 4 != 0) {
                    out.println(-1);
                } else {
                    out.println(d/4);
                }
            }
        }
        out.close();
    }
}
",CE
guchi5 ,arc159/A,Java,"import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner scan =  new Scanner(System.in);
        int N = scan.nextInt();
        int K = scan.nextInt();
        int[][] a = new int [N][N];
        int Q;
        long[] s,t;
        
        List<List<Long>> _Q = new ArrayList<>();
        int[] _C = new int[N];
        int[] _InQ = new int[N];        

        for(int i=0;i<N;i++){
            for(int j=0;j<N;j++){
                a[i][j] = scan.nextInt();
            }
        }

        Q = scan.nextInt();
        s = new long[Q];
        t = new long[Q];

        for(int i=0;i<Q;i++){
            s[i] = scan.nextLong()-1;
            t[i] = scan.nextLong()-1;
        }

        for(int qn=0;qn<Q;qn++){
            int ans = -1;

            if(s[qn]%N == t[qn]%N){
                if(a[(int)s[qn]%N][(int)s[qn]%N] == 1){
                    ans = 1;
                    System.out.println(ans);
                    continue;
                }    
            }
            Boolean isFirst=true;

            
            for(int init=0;init<N;init++){
                _C[init] = 0;
                _InQ[init] = 0;
            }

            _Q.clear();

            _Q.add(Arrays.asList(s[qn], 0L));

            while(!_Q.isEmpty()){
                long v = _Q.get(0).get(0);
                long position = _Q.get(0).get(1);
                _Q.remove(0);
                if(!isFirst){
                    _C[(int)v%N] = 1;
                }

                if(v%N==t[qn]%N&&!isFirst){
                    ans = (int)position;
                    break;
                }


                for(int an=0;an<N;an++){
                    if(a[(int)(v%N)][an]==1){

                        if(_InQ[(int)(an%N)]==0&&_C[(int)(an%N)]==0){

                            if(an == (int)(v%N) && isFirst) continue;
                            
                            
                            _Q.add(Arrays.asList((long)an, position+1L));
                            _InQ[an] = 1;

                        }
                    }
                }
                if(isFirst){
                    isFirst = false;
                    
                }

            }
            System.out.println(ans);
        }


    }
}

","import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner scan =  new Scanner(System.in);
        int N = scan.nextInt();
        int K = scan.nextInt();
        int[][] a = new int [N][N];
        int Q;
        long[] s,t;
        List<List<Long>> _Q = new ArrayList<>();
        int[] _C = new int[N];
        int[] _InQ = new int[N];        

        for(int i=0;i<N;i++){
            for(int j=0;j<N;j++){
                a[i][j] = scan.nextInt();
            }
        }

        Q = scan.nextInt();
        s = new long[Q];
        t = new long[Q];

        for(int i=0;i<Q;i++){
            s[i] = scan.nextLong()-1;
            t[i] = scan.nextLong()-1;
        }

        for(int qn=0;qn<Q;qn++){
            int ans = -1;

            if(s[qn]%N == t[qn]%N){
                if(a[(int)(s[qn]%N)][(int)(s[qn]%N)] == 1){
                    ans = 1;
                    System.out.println(ans);
                    continue;
                }    
            }
            Boolean isFirst=true;

            
            for(int init=0;init<N;init++){
                _C[init] = 0;
                _InQ[init] = 0;
            }

            _Q.clear();

            _Q.add(Arrays.asList(s[qn], 0L));

            while(!_Q.isEmpty()){
                long v = _Q.get(0).get(0);
                long position = _Q.get(0).get(1);
                _Q.remove(0);
                if(!isFirst){
                    _C[(int)v%N] = 1;
                }

                if(v%N==t[qn]%N&&!isFirst){
                    ans = (int)position;
                    break;
                }


                for(int an=0;an<N;an++){
                    if(a[(int)(v%N)][an]==1){

                        if(_InQ[(int)(an%N)]==0&&_C[(int)(an%N)]==0){

                            if(an == (int)(v%N) && isFirst) continue;
                            
                            
                            _Q.add(Arrays.asList((long)an, position+1L));
                            _InQ[an] = 1;

                        }
                    }
                }
                if(isFirst){
                    isFirst = false;
                    
                }

            }
            System.out.println(ans);
        }


    }
}

",RE
BucketOfNubbins ,arc159/A,Java,"import java.io.*;

public class CopyPasteGraph {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        String[] input = br.readLine().split("" "");
        int n = Integer.parseInt(input[0]);
        int k = Integer.parseInt(input[1]);
        int[][] matrix = new int[n][n];
        for (int i = 0; i < n; i++) {
            input = br.readLine().split("" "");
            for (int j = 0; j < n; j++) {
                matrix[i][j] = Integer.parseInt(input[j]);
            }
        }

        int[][][] cache = new int[n + 1][][];
        cache[0] = matrix;
        for (int i = 1; i <= n; i++) {
            cache[i] = multiply(cache[i - 1], cache[0]);
        }
        int q = Integer.parseInt(br.readLine());
        for (int i = 0; i < q; i++) {
            input = br.readLine().split("" "");
            long u = Long.parseLong(input[0]) - 1;
            long v = Long.parseLong(input[1]) - 1;
            u %= n;
            v %= n;
            int steps = -1;
            for (int s = 0; s <= n; s++) {
                if (cache[s][(int) u][(int) v] != 0) {
                    steps = s + 1;
                    break;
                }
            }
            bw.write(steps + ""\n"");
        }
        br.close();
        bw.close();
    }

    public static int[][] multiply(int[][] a, int[][] b) {
        int[][] x = new int[a.length][b[0].length];
        for (int i = 0; i < a.length; i++) {
            for (int k = 0; k < b[0].length; k++) {
                x[i][k] = 0;
                for (int j = 0; j < a.length; j++) {
                    x[i][k] |= a[i][j] & b[j][k];
                }
            }
        }
        return x;
    }

}
","import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        String[] input = br.readLine().split("" "");
        int n = Integer.parseInt(input[0]);
        int k = Integer.parseInt(input[1]);
        int[][] matrix = new int[n][n];
        for (int i = 0; i < n; i++) {
            input = br.readLine().split("" "");
            for (int j = 0; j < n; j++) {
                matrix[i][j] = Integer.parseInt(input[j]);
            }
        }

        int[][][] cache = new int[n + 1][][];
        cache[0] = matrix;
        for (int i = 1; i <= n; i++) {
            cache[i] = multiply(cache[i - 1], cache[0]);
        }
        int q = Integer.parseInt(br.readLine());
        for (int i = 0; i < q; i++) {
            input = br.readLine().split("" "");
            long u = Long.parseLong(input[0]) - 1;
            long v = Long.parseLong(input[1]) - 1;
            u %= n;
            v %= n;
            int steps = -1;
            for (int s = 0; s <= n; s++) {
                if (cache[s][(int) u][(int) v] != 0) {
                    steps = s + 1;
                    break;
                }
            }
            bw.write(steps + ""\n"");
        }
        br.close();
        bw.close();
    }

    public static int[][] multiply(int[][] a, int[][] b) {
        int[][] x = new int[a.length][b[0].length];
        for (int i = 0; i < a.length; i++) {
            for (int k = 0; k < b[0].length; k++) {
                x[i][k] = 0;
                for (int j = 0; j < a.length; j++) {
                    x[i][k] |= a[i][j] & b[j][k];
                }
            }
        }
        return x;
    }

}
",CE
watarimaycry2 ,arc159/A,Java,"import java.util.*; import java.io.*; import java.math.*;
public class Main{
	
	static class InputIterator{
		ArrayList<String> inputLine = new ArrayList<>(1024);
		int index = 0; int max; String read;
		InputIterator(){
			try{
				BufferedReader br = new BufferedReader(new InputStreamReader(System.in, ""UTF-8""));
				while((read = br.readLine()) != null){
					inputLine.addAll(Arrays.asList(read.split("" "")));
				}
			}catch(IOException e){}
			max = inputLine.size();
		}
		boolean hasNext(){return (index < max);}
		String next(){
			if(hasNext()){
				return inputLine.get(index++);
			}else{
				throw new IndexOutOfBoundsException(""There is no more input"");
			}
		}
	}
	static HashMap<Integer, String> CONVSTR = new HashMap<>();
	static InputIterator ii = new InputIterator();
	static PrintWriter out = new PrintWriter(System.out);
	static void flush(){out.flush();}
	static void myout(Object t){out.println(t);}
	static void myerr(Object... t){System.err.print(""debug:"");System.err.println(Arrays.deepToString(t));}
	static String next(){return ii.next();}
	static boolean hasNext(){return ii.hasNext();}
	static int nextInt(){return Integer.parseInt(next());}
	static long nextLong(){return Long.parseLong(next());}
	static double nextDouble(){return Double.parseDouble(next());}
	static ArrayList<String> nextCharArray(){return myconv(next(), 0);}
	static ArrayList<String> nextStrArray(int size){
		ArrayList<String> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(next());
		}
		return ret;
	}
	static ArrayList<Integer> nextIntArray(int size){
		ArrayList<Integer> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(Integer.parseInt(next()));
		}
		return ret;
	}
	static ArrayList<Long> nextLongArray(int size){
		ArrayList<Long> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(Long.parseLong(next()));
		}
		return ret;
	}
	@SuppressWarnings(""unchecked"")
	static String myconv(Object list, int no){
		StringBuilder sb = new StringBuilder("""");
		String joinString = CONVSTR.get(no);
		if(list instanceof String[]){
			return String.join(joinString, (String[])list);
		}else if(list instanceof long[]){
			long[] tmp = (long[])list;
			if(tmp.length == 0){
				return """";
			}
			sb.append(String.valueOf(tmp[0]));
			for(int i = 1; i < tmp.length; i++){
				sb.append(joinString).append(String.valueOf(tmp[i]));
			}
			return sb.toString();
		}else if(list instanceof int[]){
			int[] tmp = (int[])list;
			if(tmp.length == 0){
				return """";
			}
			sb.append(String.valueOf(tmp[0]));
			for(int i = 1; i < tmp.length; i++){
				sb.append(joinString).append(String.valueOf(tmp[i]));
			}
			return sb.toString();
		}else if(list instanceof ArrayList){
			ArrayList tmp = (ArrayList)list;
			if(tmp.size() == 0){
				return """";
			}
			sb.append(tmp.get(0));
			for(int i = 1; i < tmp.size(); i++){
				sb.append(joinString).append(tmp.get(i));
			}
			return sb.toString();
		}else{
			throw new ClassCastException(""Don't join"");
		}
	}
	static ArrayList<String> myconv(String str, int no){
		String splitString = CONVSTR.get(no);
		return new ArrayList<String>(Arrays.asList(str.split(splitString)));
	}
	static ArrayList<String> myconv(String str, String no){
		return new ArrayList<String>(Arrays.asList(str.split(no)));
	}
	public static void main(String[] args){
		CONVSTR.put(8, "" ""); CONVSTR.put(9, ""\n""); CONVSTR.put(0, """");
		solve();flush();
	}
	
	
	static void solve(){
		int N = nextInt();
		int K = nextInt();
		int[][] list = new int[N][N];
		int max = (int)Math.pow(10, 9);
		boolean[][] vec = new boolean[N][N];
		for(int i = 0; i < N; i++){
			Arrays.fill(list[i], max);
		}
		for(int i = 0; i < N; i++){
			for(int j = 0; j < N; j++){
				int A = nextInt();
				if(A == 1){
					list[i][j] = A;
					vec[i][j] = true;
				}
				
			}
		}
		for(int k = 0; k < N; k++){
			for(int i = 0; i < N; i++){
				for(int j = 0; j < N; j++){
					if(vec[i][k] || vec[k][j]){
						list[i][j] = Math.min(list[i][j], list[i][k] + list[k][j]);
					}
				}
			}
		}
		
		int Q = nextInt();
		for(int i = 0; i < Q; i++){
			int L = (int)((nextLong() - 1) % N);
			int R = (int)((nextLong() - 1) % N);
			if(list[L][R] == max){
				myout(-1);
			}else{
				myout(list[L][R]);
			}
		}
	}
	



	
}
","import java.util.*; import java.io.*; import java.math.*;
public class Main{
	
	static class InputIterator{
		ArrayList<String> inputLine = new ArrayList<>(1024);
		int index = 0; int max; String read;
		InputIterator(){
			try{
				BufferedReader br = new BufferedReader(new InputStreamReader(System.in, ""UTF-8""));
				while((read = br.readLine()) != null){
					inputLine.addAll(Arrays.asList(read.split("" "")));
				}
			}catch(IOException e){}
			max = inputLine.size();
		}
		boolean hasNext(){return (index < max);}
		String next(){
			if(hasNext()){
				return inputLine.get(index++);
			}else{
				throw new IndexOutOfBoundsException(""There is no more input"");
			}
		}
	}
	static HashMap<Integer, String> CONVSTR = new HashMap<>();
	static InputIterator ii = new InputIterator();
	static PrintWriter out = new PrintWriter(System.out);
	static void flush(){out.flush();}
	static void myout(Object t){out.println(t);}
	static void myerr(Object... t){System.err.print(""debug:"");System.err.println(Arrays.deepToString(t));}
	static String next(){return ii.next();}
	static boolean hasNext(){return ii.hasNext();}
	static int nextInt(){return Integer.parseInt(next());}
	static long nextLong(){return Long.parseLong(next());}
	static double nextDouble(){return Double.parseDouble(next());}
	static ArrayList<String> nextCharArray(){return myconv(next(), 0);}
	static ArrayList<String> nextStrArray(int size){
		ArrayList<String> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(next());
		}
		return ret;
	}
	static ArrayList<Integer> nextIntArray(int size){
		ArrayList<Integer> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(Integer.parseInt(next()));
		}
		return ret;
	}
	static ArrayList<Long> nextLongArray(int size){
		ArrayList<Long> ret = new ArrayList<>(size);
		for(int i = 0; i < size; i++){
			ret.add(Long.parseLong(next()));
		}
		return ret;
	}
	@SuppressWarnings(""unchecked"")
	static String myconv(Object list, int no){
		StringBuilder sb = new StringBuilder("""");
		String joinString = CONVSTR.get(no);
		if(list instanceof String[]){
			return String.join(joinString, (String[])list);
		}else if(list instanceof long[]){
			long[] tmp = (long[])list;
			if(tmp.length == 0){
				return """";
			}
			sb.append(String.valueOf(tmp[0]));
			for(int i = 1; i < tmp.length; i++){
				sb.append(joinString).append(String.valueOf(tmp[i]));
			}
			return sb.toString();
		}else if(list instanceof int[]){
			int[] tmp = (int[])list;
			if(tmp.length == 0){
				return """";
			}
			sb.append(String.valueOf(tmp[0]));
			for(int i = 1; i < tmp.length; i++){
				sb.append(joinString).append(String.valueOf(tmp[i]));
			}
			return sb.toString();
		}else if(list instanceof ArrayList){
			ArrayList tmp = (ArrayList)list;
			if(tmp.size() == 0){
				return """";
			}
			sb.append(tmp.get(0));
			for(int i = 1; i < tmp.size(); i++){
				sb.append(joinString).append(tmp.get(i));
			}
			return sb.toString();
		}else{
			throw new ClassCastException(""Don't join"");
		}
	}
	static ArrayList<String> myconv(String str, int no){
		String splitString = CONVSTR.get(no);
		return new ArrayList<String>(Arrays.asList(str.split(splitString)));
	}
	static ArrayList<String> myconv(String str, String no){
		return new ArrayList<String>(Arrays.asList(str.split(no)));
	}
	public static void main(String[] args){
		CONVSTR.put(8, "" ""); CONVSTR.put(9, ""\n""); CONVSTR.put(0, """");
		solve();flush();
	}
	
	
	static void solve(){
		int N = nextInt();
		int K = nextInt();
		int[][] list = new int[N][N];
		int max = (int)Math.pow(10, 9);
		boolean[][] vec = new boolean[N][N];
		for(int i = 0; i < N; i++){
			Arrays.fill(list[i], max);
		}
		for(int i = 0; i < N; i++){
			for(int j = 0; j < N; j++){
				int A = nextInt();
				if(A == 1){
					list[i][j] = A;
					vec[i][j] = true;
				}
				
			}
		}
		for(int k = 0; k < N; k++){
			for(int i = 0; i < N; i++){
				for(int j = 0; j < N; j++){
					list[i][j] = Math.min(list[i][j], list[i][k] + list[k][j]);
				}
			}
		}
		
		int Q = nextInt();
		for(int i = 0; i < Q; i++){
			int L = (int)((nextLong() - 1) % N);
			int R = (int)((nextLong() - 1) % N);
			if(list[L][R] == max){
				myout(-1);
			}else{
				myout(list[L][R]);
			}
		}
	}
	



	
}
",WA
BurnEtz ,arc159/A,Java,"import java.util.Scanner;

public class Main {

	public static void main(String[] args)  {
		Scanner sc = new Scanner(System.in);

		int n = sc.nextInt();
		long k = sc.nextLong();

		int matrix[][] = new int[n*2][n*2];
		for(int i = 0; i < n; i++) {
			for(int j = 0; j < n; j++) {
				matrix[i][j] = sc.nextInt() == 1 ? 1 : INF;
				matrix[n + i][j] = matrix[i][j];
				matrix[i][n + j] = matrix[i][j];
				matrix[n + i][n + j] = matrix[i][j];
			}
		}

		long[][] dist = warshallFloyd(matrix);
		int q = sc.nextInt();
		for(int i = 0; i < q; i++) {
			int from = (int)((sc.nextLong() - 1)%n);
			int to = (int)((sc.nextLong() - 1)%n);
			
			if(dist[from][to] != INF) {
				System.out.println(dist[from][to]);
			}
			else {
				System.out.println(-1);
			}
		}
	}

	static int INF = Integer.MAX_VALUE;
	static long[][] warshallFloyd(int[][] matrix){
		int n = matrix.length;

		long[][] dist = new long[n][n];

		for(int i = 0; i < n; i++){
			for(int j = 0; j < n; j++){
				if(i == j){
					dist[i][j] = 0;
				}
				else {
					dist[i][j] = matrix[i][j];
				}
			}
		}

		for(int k = 0; k < n; k++){
			for(int i = 0; i < n; i++){
				for(int j = 0; j < n; j++){
					if(dist[i][k] == INF || dist[k][j] == INF){
						continue;
					}
					dist[i][j] = Math.min(dist[i][j], dist[i][k] + dist[k][j]);
				}
			}
		}

		return dist;
	}
}
","import java.util.Scanner;

public class Main {

	public static void main(String[] args)  {
		Scanner sc = new Scanner(System.in);

		int n = sc.nextInt();
		long k = sc.nextLong();

		int matrix[][] = new int[n*2][n*2];
		for(int i = 0; i < n; i++) {
			for(int j = 0; j < n; j++) {
				matrix[i][j] = sc.nextInt() == 1 ? 1 : INF;
				matrix[n + i][j] = matrix[i][j];
				matrix[i][n + j] = matrix[i][j];
				matrix[n + i][n + j] = matrix[i][j];
			}
		}

		long[][] dist = warshallFloyd(matrix);
		int q = sc.nextInt();
		for(int i = 0; i < q; i++) {
			int from = (int)((sc.nextLong() - 1)%n);
			int to = (int)((sc.nextLong() - 1)%n + n);
			
			if(dist[from][to] != INF) {
				System.out.println(dist[from][to]);
			}
			else {
				System.out.println(-1);
			}
		}
	}

	static int INF = Integer.MAX_VALUE;
	static long[][] warshallFloyd(int[][] matrix){
		int n = matrix.length;

		long[][] dist = new long[n][n];

		for(int i = 0; i < n; i++){
			for(int j = 0; j < n; j++){
				if(i == j){
					dist[i][j] = 0;
				}
				else {
					dist[i][j] = matrix[i][j];
				}
			}
		}

		for(int k = 0; k < n; k++){
			for(int i = 0; i < n; i++){
				for(int j = 0; j < n; j++){
					if(dist[i][k] == INF || dist[k][j] == INF){
						continue;
					}
					dist[i][j] = Math.min(dist[i][j], dist[i][k] + dist[k][j]);
				}
			}
		}

		return dist;
	}
}
",WA
XBX_2 ,arc159/A,Java,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Deque;
import java.util.LinkedList;
import java.util.StringTokenizer;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(System.out);
    public static void main(String[] args) throws Exception{
        StringTokenizer stringTokenizer = new StringTokenizer(br.readLine());
        int n = Integer.valueOf(stringTokenizer.nextToken());
        int k = Integer.valueOf(stringTokenizer.nextToken());
        int[][] graph = new int[n][n];
        for (int i = 0; i < n; i++) {
            stringTokenizer = new StringTokenizer(br.readLine());
            for (int j = 0; j < n; j++) {
                graph[i][j] = Integer.valueOf(stringTokenizer.nextToken());
            }
        }
        int q = Integer.valueOf(br.readLine());
        for (int i = 0; i < q; i++) {
            stringTokenizer = new StringTokenizer(br.readLine());
            long s = Long.valueOf(stringTokenizer.nextToken());
            long t = Long.valueOf(stringTokenizer.nextToken());
            boolean[] visited = new boolean[n];
            Deque<Integer> deque = new LinkedList<>();
            deque.add((int) ((s - 1) % n));
            boolean ok = false;
            int step = 0;
            while (!ok && !deque.isEmpty()){
                int size = deque.size();
                step++;
                for (int j = 0; !ok && j < size; j++) {
                    int poll = deque.poll();
                    if (visited[poll]){
                        continue;
                    }
                    visited[poll] = true;
                    for (int l = 0; !ok && l < graph[0].length; l++) {
                        if (graph[poll][l] == 1){
                            if (l == (t-1)%n){
                                ok = true;
                            }
                            deque.add(graph[poll][l]);
                        }
                    }
                }
            }
            if (ok) {
                out.println(step);
            }else {
                out.println(-1);
            }
        }
        out.close();
    }
}
","import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Deque;
import java.util.LinkedList;
import java.util.StringTokenizer;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(System.out);
    public static void main(String[] args) throws Exception{
        StringTokenizer stringTokenizer = new StringTokenizer(br.readLine());
        int n = Integer.valueOf(stringTokenizer.nextToken());
        int k = Integer.valueOf(stringTokenizer.nextToken());
        int[][] graph = new int[n][n];
        for (int i = 0; i < n; i++) {
            stringTokenizer = new StringTokenizer(br.readLine());
            for (int j = 0; j < n; j++) {
                graph[i][j] = Integer.valueOf(stringTokenizer.nextToken());
            }
        }
        int q = Integer.valueOf(br.readLine());
        for (int i = 0; i < q; i++) {
            stringTokenizer = new StringTokenizer(br.readLine());
            long s = Long.valueOf(stringTokenizer.nextToken());
            long t = Long.valueOf(stringTokenizer.nextToken());
            boolean[] visited = new boolean[n];
            Deque<Integer> deque = new LinkedList<>();
            deque.add((int) ((s - 1) % n));
            boolean ok = false;
            int step = 0;
            while (!ok && !deque.isEmpty()){
                int size = deque.size();
                step++;
                for (int j = 0; !ok && j < size; j++) {
                    int poll = deque.poll();
                    if (visited[poll]){
                        continue;
                    }
                    visited[poll] = true;
                    for (int l = 0; !ok && l < graph[0].length; l++) {
                        if (graph[poll][l] == 1){
                            if (l == (t-1)%n){
                                ok = true;
                            }
                            deque.add(l);
                        }
                    }
                }
            }
            if (ok) {
                out.println(step);
            }else {
                out.println(-1);
            }
        }
        out.close();
    }
}
",WA
dajeff ,arc159/A,Java,"import java.io.*;
import java.util.*;

public class CopyAndPasteGraph {
    static final BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static final PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));

    static class State {
        final int i, dist;

        public State(final int i, final int dist) {
            this.i = i;
            this.dist = dist;
        }
    }

    static void solve() throws IOException {
        StringTokenizer input = new StringTokenizer(br.readLine());
        int n = Integer.parseInt(input.nextToken());
        int k = Integer.parseInt(input.nextToken());









        List<List<Integer>> adjList = new ArrayList<>();
        for (int i = 0; i < n; ++i) {
            input = new StringTokenizer(br.readLine());
            adjList.add(new ArrayList<>());
            for (int j = 0; j < n; ++j) {
                if (Integer.parseInt(input.nextToken()) == 1) {
                    adjList.get(i).add(j);
                }
            }
        }

        
        int[][] dist = new int[n][n];
        for (int i = 0; i < n; ++i) {
            boolean[] visited = new boolean[n];

            Queue<State> q = new ArrayDeque<>();
            q.add(new State(i, 0));
            while (!q.isEmpty()) {
                State p = q.remove();

                for (int to : adjList.get(p.i)) {
                    if (visited[to]) {
                        continue;
                    }
                    visited[to] = true;
                    dist[i][to] = p.dist + 1;

                    q.add(new State(to, p.dist + 1));
                }
            }
        }



        int q = Integer.parseInt(br.readLine());

        for (int i = 0; i < q; ++i) {
            input = new StringTokenizer(br.readLine());
            long s = Long.parseLong(input.nextToken()) - 1;
            long t = Long.parseLong(input.nextToken()) - 1;

            int d = dist[(int) (s % n)][(int) (t % n)];
            pw.println(d != 0 ? d : -1);
        }
    }

    public static void main(String[] args) throws IOException {
        solve();

        br.close();
        pw.close();
    }
}
","import java.io.*;
import java.util.*;

class Main {
    static final BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static final PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));

    static class State {
        final int i, dist;

        public State(final int i, final int dist) {
            this.i = i;
            this.dist = dist;
        }
    }

    static void solve() throws IOException {
        StringTokenizer input = new StringTokenizer(br.readLine());
        int n = Integer.parseInt(input.nextToken());
        int k = Integer.parseInt(input.nextToken());









        List<List<Integer>> adjList = new ArrayList<>();
        for (int i = 0; i < n; ++i) {
            input = new StringTokenizer(br.readLine());
            adjList.add(new ArrayList<>());
            for (int j = 0; j < n; ++j) {
                if (Integer.parseInt(input.nextToken()) == 1) {
                    adjList.get(i).add(j);
                }
            }
        }

        
        int[][] dist = new int[n][n];
        for (int i = 0; i < n; ++i) {
            boolean[] visited = new boolean[n];

            Queue<State> q = new ArrayDeque<>();
            q.add(new State(i, 0));
            while (!q.isEmpty()) {
                State p = q.remove();

                for (int to : adjList.get(p.i)) {
                    if (visited[to]) {
                        continue;
                    }
                    visited[to] = true;
                    dist[i][to] = p.dist + 1;

                    q.add(new State(to, p.dist + 1));
                }
            }
        }



        int q = Integer.parseInt(br.readLine());

        for (int i = 0; i < q; ++i) {
            input = new StringTokenizer(br.readLine());
            long s = Long.parseLong(input.nextToken()) - 1;
            long t = Long.parseLong(input.nextToken()) - 1;

            int d = dist[(int) (s % n)][(int) (t % n)];
            pw.println(d != 0 ? d : -1);
        }
    }

    public static void main(String[] args) throws IOException {
        solve();

        br.close();
        pw.close();
    }
}
",CE
